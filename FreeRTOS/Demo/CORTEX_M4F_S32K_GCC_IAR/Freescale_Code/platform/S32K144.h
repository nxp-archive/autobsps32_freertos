/*
** ###################################################################
**     Processor:           S32K144_100
**     Compilers:           Keil ARM C/C++ Compiler
**                          GNU C Compiler
**                          IAR ANSI C/C++ Compiler for ARM
**
**     Reference manual:    KE1xP100M150SF0RM Rev. 0, Mar. 2015
**     Version:             rev. 1.0, 2015-04-09
**     Build:               b150423
**
**     Abstract:
**         CMSIS Peripheral Access Layer for S32K144
**
**     Copyright (c) 1997 - 2015 Freescale Semiconductor, Inc.
**     All rights reserved.
**
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**     http:                 www.freescale.com
**     mail:                 support@freescale.com
**
**     Revisions:
**     - rev. 1.0 (2015-04-09)
**         Initial version.
**
** ###################################################################
*/

/*!
 * @file S32K144.h
 * @version 1.0
 * @date 2015-04-09
 * @brief CMSIS Peripheral Access Layer for S32K144
 *
 * CMSIS Peripheral Access Layer for S32K144
 */


/* ----------------------------------------------------------------------------
   -- MCU activation
   ---------------------------------------------------------------------------- */

/* Prevention from multiple including the same memory map */
#if !defined(S32K144_H_)  /* Check if memory map has not been already included */
#define S32K144_H_
#define MCU_S32K144

/* Check if another memory map has not been also included */
#if (defined(MCU_ACTIVE))
  #error S32K144 memory map: There is already included another memory map. Only one memory map can be included.
#endif /* (defined(MCU_ACTIVE)) */
#define MCU_ACTIVE

#include <Platform_Types.h>

/** Memory map major version (memory maps with equal major version number are
 * compatible) */
#define MCU_MEM_MAP_VERSION 0x0100u
/** Memory map minor version */
#define MCU_MEM_MAP_VERSION_MINOR 0x0000u


/* ----------------------------------------------------------------------------
   -- Interrupt vector numbers
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Interrupt_vector_numbers Interrupt vector numbers
 * @{
 */

/** Interrupt Number Definitions */
#define NUMBER_OF_INT_VECTORS 115                /**< Number of interrupts in the Vector table */

typedef enum IRQn {
  /* Auxiliary constants */
  NotAvail_IRQn                = -128,             /**< Not available device specific interrupt */

  /* Core interrupts */
  NonMaskableInt_IRQn          = -14,              /**< Non Maskable Interrupt */
  HardFault_IRQn               = -13,              /**< Cortex-M4 SV Hard Fault Interrupt */
  MemoryManagement_IRQn        = -12,              /**< Cortex-M4 Memory Management Interrupt */
  BusFault_IRQn                = -11,              /**< Cortex-M4 Bus Fault Interrupt */
  UsageFault_IRQn              = -10,              /**< Cortex-M4 Usage Fault Interrupt */
  SVCall_IRQn                  = -5,               /**< Cortex-M4 SV Call Interrupt */
  DebugMonitor_IRQn            = -4,               /**< Cortex-M4 Debug Monitor Interrupt */
  PendSV_IRQn                  = -2,               /**< Cortex-M4 Pend SV Interrupt */
  SysTick_IRQn                 = -1,               /**< Cortex-M4 System Tick Interrupt */

  /* Device specific interrupts */
  DMA0_IRQn                    = 0,                /**< DMA channel 0 transfer complete */
  DMA1_IRQn                    = 1,                /**< DMA channel 1 transfer complete */
  DMA2_IRQn                    = 2,                /**< DMA channel 2 transfer complete */
  DMA3_IRQn                    = 3,                /**< DMA channel 3 transfer complete */
  DMA4_IRQn                    = 4,                /**< DMA channel 4 transfer complete */
  DMA5_IRQn                    = 5,                /**< DMA channel 5 transfer complete */
  DMA6_IRQn                    = 6,                /**< DMA channel 6 transfer complete */
  DMA7_IRQn                    = 7,                /**< DMA channel 7 transfer complete */
  DMA8_IRQn                    = 8,                /**< DMA channel 8 transfer complete */
  DMA9_IRQn                    = 9,                /**< DMA channel 9 transfer complete */
  DMA10_IRQn                   = 10,               /**< DMA channel 10 transfer complete */
  DMA11_IRQn                   = 11,               /**< DMA channel 11 transfer complete */
  DMA12_IRQn                   = 12,               /**< DMA channel 12 transfer complete */
  DMA13_IRQn                   = 13,               /**< DMA channel 13 transfer complete */
  DMA14_IRQn                   = 14,               /**< DMA channel 14 transfer complete */
  DMA15_IRQn                   = 15,               /**< DMA channel 15 transfer complete */
  DMA_Error_IRQn               = 16,               /**< DMA error interrupt channels 0-15 */
  MCM_IRQn                     = 17,               /**< FPU sources */
  FTFE_IRQn                    = 18,               /**< FTFE command complete */
  Read_Collision_IRQn          = 19,               /**< FTFE read collision */
  LVD_LVW_IRQn                 = 20,               /**< PMC controller low-voltage detect, low-voltage warning */
  Reserved37_IRQn              = 21,               /**< Reserved interrupt */
  Watchdog_IRQn                = 22,               /**< Single interrupt vector for  WDOG and EWM */
  Reserved39_IRQn              = 23,               /**< Reserved interrupt */
  LPI2C0_IRQn                  = 24,               /**< Inter-integrated circuit 0 */
  LPI2C1_IRQn                  = 25,               /**< Inter-integrated circuit 1 */
  LPSPI0_IRQn                  = 26,               /**< Serial peripheral Interface 0 */
  LPSPI1_IRQn                  = 27,               /**< Serial peripheral Interface 1 */
  LPSPI2_IRQn                  = 28,               /**< Serial peripheral Interface 2 */
  Reserved45_IRQn              = 29,               /**< Reserved interrupt */
  Reserved46_IRQn              = 30,               /**< Reserved interrupt */
  LPUART0_RxTx_IRQn            = 31,               /**< LPUART0 receive/transmit interrupt */
  LPUART0_Error_IRQn           = 32,               /**< LPUART0 receive/transmit/error interrupt */
  LPUART1_RxTx_IRQn            = 33,               /**< LPUART1 receive/transmit interrupt */
  LPUART1_Error_IRQn           = 34,               /**< LPUART1 receive/transmit/error interrupt */
  LPUART2_RxTx_IRQn            = 35,               /**< LPUART2 receive/transmit interrupt */
  LPUART2_Error_IRQn           = 36,               /**< LPUART2 receive/transmit/error interrupt */
  LPUART3_RxTx_IRQn            = 37,               /**< LPUART3 receive/transmit interrupt */
  LPUART3_Error_IRQn           = 38,               /**< LPUART3 receive/transmit/error interrupt */
  ADC0_IRQn                    = 39,               /**< ADC conversion complete interrupt */
  ACMP0_IRQn                   = 40,               /**< ACMP0 interrupt */
  ACMP1_IRQn                   = 41,               /**< ACMP1 interrupt */
  FTM0_IRQn                    = 42,               /**< FTM0 single interrupt vector for all sources */
  FTM1_IRQn                    = 43,               /**< FTM1 single interrupt vector for all sources */
  FTM2_IRQn                    = 44,               /**< FTM2 single interrupt vector for all sources */
  Reserved61_IRQn              = 45,               /**< Reserved interrupt */
  RTC_IRQn                     = 46,               /**< RTC overflow */
  RTC_Seconds_IRQn             = 47,               /**< RTC overflow */
  LPIT0_Ch0_IRQn               = 48,               /**< LPIT CH0 overflow */
  LPIT0_Ch1_IRQn               = 49,               /**< LPIT CH1 overflow */
  LPIT0_Ch2_IRQn               = 50,               /**< LPIT CH2 overflow */
  LPIT0_Ch3_IRQn               = 51,               /**< LPIT CH3 overflow */
  PDB0_IRQn                    = 52,               /**< Programmable delay block */
  Reserved69_IRQn              = 53,               /**< Reserved interrupt */
  Reserved70_IRQn              = 54,               /**< Reserved interrupt */
  Reserved71_IRQn              = 55,               /**< Reserved interrupt */
  DAC0_IRQn                    = 56,               /**< Digital-to-analog converter 0 */
  SCG_IRQn                     = 57,               /**< Multipurpose clock generator */
  LPTMR0_IRQn                  = 58,               /**< Single interrupt vector for  Low Power Timer 0 */
  PORTA_IRQn                   = 59,               /**< Port A pin detect interrupt */
  PORTB_IRQn                   = 60,               /**< Port B pin detect interrupt */
  PORTC_IRQn                   = 61,               /**< Port C pin detect interrupt */
  PORTD_IRQn                   = 62,               /**< Port D pin detect interrupt */
  PORTE_IRQn                   = 63,               /**< Port E pin detect interrupt */
  SWI_IRQn                     = 64,               /**< Software interrupt */
  Reserved81_IRQn              = 65,               /**< Reserved interrupt */
  Reserved82_IRQn              = 66,               /**< Reserved interrupt */
  Reserved83_IRQn              = 67,               /**< Reserved interrupt */
  PDB1_IRQn                    = 68,               /**< Programmable delay block */
  FLEXIO_IRQn                  = 69,               /**< FLEXIO */
  ACMP2_IRQn                   = 70,               /**< Comparator 2 */
  FTM3_IRQn                    = 71,               /**< FlexTimer module 3 fault, overflow and channels interrupt */
  Reserved88_IRQn              = 72,               /**< Reserved interrupt */
  ADC1_IRQn                    = 73,               /**< ADC conversion complete interrupt */
  ADC2_IRQn                    = 74,               /**< ADC conversion complete interrupt */
  EMVSIM_IRQn                  = 75,               /**< EMVSIM common interrupt */
  TSI_IRQn                     = 76,               /**< Touch Sensing Input Interrupt */
  PDB2_IRQn                    = 77,               /**< Programmable delay block */
  CAN0_Ored_IRQn               = 78,               /**< can */
  CAN0_Error_IRQn              = 79,               /**< can */
  CAN0_Wakeup_IRQn             = 80,               /**< can */
  CAN0_Oredbuf_IRQn            = 81,               /**< can */
  CAN0_Reserved1_IRQn          = 82,               /**< can */
  CAN0_Reserved2_IRQn          = 83,               /**< can */
  CAN0_Reserved3_IRQn          = 84,               /**< can */
  CAN1_Ored_IRQn               = 85,               /**< can */
  CAN1_Error_IRQn              = 86,               /**< can */
  CAN1_Wakeup_IRQn             = 87,               /**< can */
  CAN1_Oredbuf_IRQn            = 88,               /**< can */
  CAN1_Reserved1_IRQn          = 89,               /**< can */
  CAN1_Reserved2_IRQn          = 90,               /**< can */
  CAN1_Reserved3_IRQn          = 91,               /**< can */
  CAN2_Ored_IRQn               = 92,               /**< can */
  CAN2_Error_IRQn              = 93,               /**< can */
  CAN2_Wakeup_IRQn             = 94,               /**< can */
  CAN2_Oredbuf_IRQn            = 95,               /**< can */
  CAN2_Reserved1_IRQn          = 96,               /**< can */
  CAN2_Reserved2_IRQn          = 97,               /**< can */
  CAN2_Reserved3_IRQn          = 98                /**< can */
} IRQn_Type;

/*!
 * @}
 */ /* end of group Interrupt_vector_numbers */


/* ----------------------------------------------------------------------------
   -- Device Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Peripheral_access_layer Device Peripheral Access Layer
 * @{
 */


/* ----------------------------------------------------------------------------
   -- ADC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Peripheral_Access_Layer ADC Peripheral Access Layer
 * @{
 */

/** ADC - Register Layout Typedef */
typedef struct {
  __IO uint32 SC1[16];                             /**< ADC Status and Control Registers 1, array offset: 0x0, array step: 0x4 */
  __IO uint32 CFG1;                                /**< ADC Configuration Register 1, offset: 0x40 */
  __IO uint32 CFG2;                                /**< ADC Configuration Register 2, offset: 0x44 */
  __I  uint32 R[16];                               /**< ADC Data Result Register, array offset: 0x48, array step: 0x4 */
  __IO uint32 CV[2];                               /**< Compare Value Registers, array offset: 0x88, array step: 0x4 */
  __IO uint32 SC2;                                 /**< Status and Control Register 2, offset: 0x90 */
  __IO uint32 SC3;                                 /**< Status and Control Register 3, offset: 0x94 */
  __IO uint32 BASE_OFS;                            /**< ADC Offset Correction Register, offset: 0x98 */
  __IO uint32 OFS;                                 /**< ADC Offset Correction Register, offset: 0x9C */
  __IO uint32 USR_OFS;                             /**< ADC USER Offset Correction Register, offset: 0xA0 */
  __IO uint32 XOFS;                                /**< ADC X Offset Correction Register, offset: 0xA4 */
  __IO uint32 YOFS;                                /**< ADC Y Offset Correction Register, offset: 0xA8 */
  __IO uint32 G;                                   /**< ADC Gain Register, offset: 0xAC */
  __IO uint32 UG;                                  /**< ADC User Gain Register, offset: 0xB0 */
  __IO uint32 CLPS;                                /**< ADC General Calibration Value Register, offset: 0xB4 */
  __IO uint32 CLP3;                                /**< ADC Plus-Side General Calibration Value Register, offset: 0xB8 */
  __IO uint32 CLP2;                                /**< ADC Plus-Side General Calibration Value Register, offset: 0xBC */
  __IO uint32 CLP1;                                /**< ADC Plus-Side General Calibration Value Register, offset: 0xC0 */
  __IO uint32 CLP0;                                /**< ADC Plus-Side General Calibration Value Register, offset: 0xC4 */
  __IO uint32 CLPX;                                /**< ADC Plus-Side General Calibration Value Register, offset: 0xC8 */
  __IO uint32 CLP9;                                /**< ADC Plus-Side General Calibration Value Register, offset: 0xCC */
  __IO uint32 CLPS_OFS;                            /**< ADC General Calibration Value Register, offset: 0xD0 */
  __IO uint32 CLP3_OFS;                            /**< ADC Plus-Side General Calibration Value Register, offset: 0xD4 */
  __IO uint32 CLP2_OFS;                            /**< ADC Plus-Side General Calibration Value Register, offset: 0xD8 */
  __IO uint32 CLP1_OFS;                            /**< ADC Plus-Side General Calibration Value Register, offset: 0xDC */
  __IO uint32 CLP0_OFS;                            /**< ADC Plus-Side General Calibration Value Register, offset: 0xE0 */
  __IO uint32 CLPX_OFS;                            /**< ADC Plus-Side General Calibration Value Register, offset: 0xE4 */
  __IO uint32 CLP9_OFS;                            /**< ADC Plus-Side General Calibration Value Register, offset: 0xE8 */
} ADC_Type, *ADC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- ADC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Register_Accessor_Macros ADC - Register accessor macros
 * @{
 */


/* ADC - Register accessors */
#define ADC_SC1_REG(base,index)                  ((base)->SC1[index])
#define ADC_SC1_COUNT                            16
#define ADC_CFG1_REG(base)                       ((base)->CFG1)
#define ADC_CFG2_REG(base)                       ((base)->CFG2)
#define ADC_R_REG(base,index)                    ((base)->R[index])
#define ADC_R_COUNT                              16
#define ADC_CV_REG(base,index)                   ((base)->CV[index])
#define ADC_CV_COUNT                             2
#define ADC_SC2_REG(base)                        ((base)->SC2)
#define ADC_SC3_REG(base)                        ((base)->SC3)
#define ADC_BASE_OFS_REG(base)                   ((base)->BASE_OFS)
#define ADC_OFS_REG(base)                        ((base)->OFS)
#define ADC_USR_OFS_REG(base)                    ((base)->USR_OFS)
#define ADC_XOFS_REG(base)                       ((base)->XOFS)
#define ADC_YOFS_REG(base)                       ((base)->YOFS)
#define ADC_G_REG(base)                          ((base)->G)
#define ADC_UG_REG(base)                         ((base)->UG)
#define ADC_CLPS_REG(base)                       ((base)->CLPS)
#define ADC_CLP3_REG(base)                       ((base)->CLP3)
#define ADC_CLP2_REG(base)                       ((base)->CLP2)
#define ADC_CLP1_REG(base)                       ((base)->CLP1)
#define ADC_CLP0_REG(base)                       ((base)->CLP0)
#define ADC_CLPX_REG(base)                       ((base)->CLPX)
#define ADC_CLP9_REG(base)                       ((base)->CLP9)
#define ADC_CLPS_OFS_REG(base)                   ((base)->CLPS_OFS)
#define ADC_CLP3_OFS_REG(base)                   ((base)->CLP3_OFS)
#define ADC_CLP2_OFS_REG(base)                   ((base)->CLP2_OFS)
#define ADC_CLP1_OFS_REG(base)                   ((base)->CLP1_OFS)
#define ADC_CLP0_OFS_REG(base)                   ((base)->CLP0_OFS)
#define ADC_CLPX_OFS_REG(base)                   ((base)->CLPX_OFS)
#define ADC_CLP9_OFS_REG(base)                   ((base)->CLP9_OFS)

/*!
 * @}
 */ /* end of group ADC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- ADC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Register_Masks ADC Register Masks
 * @{
 */

/* SC1 Bit Fields */
#define ADC_SC1_ADCH_MASK                        0xFu
#define ADC_SC1_ADCH_SHIFT                       0
#define ADC_SC1_ADCH_WIDTH                       4
#define ADC_SC1_ADCH(x)                          (((uint32)(((uint32)(x))<<ADC_SC1_ADCH_SHIFT))&ADC_SC1_ADCH_MASK)
#define ADC_SC1_AIEN_MASK                        0x40u
#define ADC_SC1_AIEN_SHIFT                       6
#define ADC_SC1_AIEN_WIDTH                       1
#define ADC_SC1_AIEN(x)                          (((uint32)(((uint32)(x))<<ADC_SC1_AIEN_SHIFT))&ADC_SC1_AIEN_MASK)
#define ADC_SC1_COCO_MASK                        0x80u
#define ADC_SC1_COCO_SHIFT                       7
#define ADC_SC1_COCO_WIDTH                       1
#define ADC_SC1_COCO(x)                          (((uint32)(((uint32)(x))<<ADC_SC1_COCO_SHIFT))&ADC_SC1_COCO_MASK)
/* CFG1 Bit Fields */
#define ADC_CFG1_ADICLK_MASK                     0x3u
#define ADC_CFG1_ADICLK_SHIFT                    0
#define ADC_CFG1_ADICLK_WIDTH                    2
#define ADC_CFG1_ADICLK(x)                       (((uint32)(((uint32)(x))<<ADC_CFG1_ADICLK_SHIFT))&ADC_CFG1_ADICLK_MASK)
#define ADC_CFG1_MODE_MASK                       0xCu
#define ADC_CFG1_MODE_SHIFT                      2
#define ADC_CFG1_MODE_WIDTH                      2
#define ADC_CFG1_MODE(x)                         (((uint32)(((uint32)(x))<<ADC_CFG1_MODE_SHIFT))&ADC_CFG1_MODE_MASK)
#define ADC_CFG1_ADIV_MASK                       0x60u
#define ADC_CFG1_ADIV_SHIFT                      5
#define ADC_CFG1_ADIV_WIDTH                      2
#define ADC_CFG1_ADIV(x)                         (((uint32)(((uint32)(x))<<ADC_CFG1_ADIV_SHIFT))&ADC_CFG1_ADIV_MASK)
/* CFG2 Bit Fields */
#define ADC_CFG2_SMPLTS_MASK                     0xFFu
#define ADC_CFG2_SMPLTS_SHIFT                    0
#define ADC_CFG2_SMPLTS_WIDTH                    8
#define ADC_CFG2_SMPLTS(x)                       (((uint32)(((uint32)(x))<<ADC_CFG2_SMPLTS_SHIFT))&ADC_CFG2_SMPLTS_MASK)
/* R Bit Fields */
#define ADC_R_D_MASK                             0xFFFu
#define ADC_R_D_SHIFT                            0
#define ADC_R_D_WIDTH                            12
#define ADC_R_D(x)                               (((uint32)(((uint32)(x))<<ADC_R_D_SHIFT))&ADC_R_D_MASK)
/* CV Bit Fields */
#define ADC_CV_CV_MASK                           0xFFFu
#define ADC_CV_CV_SHIFT                          0
#define ADC_CV_CV_WIDTH                          12
#define ADC_CV_CV(x)                             (((uint32)(((uint32)(x))<<ADC_CV_CV_SHIFT))&ADC_CV_CV_MASK)
/* SC2 Bit Fields */
#define ADC_SC2_REFSEL_MASK                      0x3u
#define ADC_SC2_REFSEL_SHIFT                     0
#define ADC_SC2_REFSEL_WIDTH                     2
#define ADC_SC2_REFSEL(x)                        (((uint32)(((uint32)(x))<<ADC_SC2_REFSEL_SHIFT))&ADC_SC2_REFSEL_MASK)
#define ADC_SC2_DMAEN_MASK                       0x4u
#define ADC_SC2_DMAEN_SHIFT                      2
#define ADC_SC2_DMAEN_WIDTH                      1
#define ADC_SC2_DMAEN(x)                         (((uint32)(((uint32)(x))<<ADC_SC2_DMAEN_SHIFT))&ADC_SC2_DMAEN_MASK)
#define ADC_SC2_ACREN_MASK                       0x8u
#define ADC_SC2_ACREN_SHIFT                      3
#define ADC_SC2_ACREN_WIDTH                      1
#define ADC_SC2_ACREN(x)                         (((uint32)(((uint32)(x))<<ADC_SC2_ACREN_SHIFT))&ADC_SC2_ACREN_MASK)
#define ADC_SC2_ACFGT_MASK                       0x10u
#define ADC_SC2_ACFGT_SHIFT                      4
#define ADC_SC2_ACFGT_WIDTH                      1
#define ADC_SC2_ACFGT(x)                         (((uint32)(((uint32)(x))<<ADC_SC2_ACFGT_SHIFT))&ADC_SC2_ACFGT_MASK)
#define ADC_SC2_ACFE_MASK                        0x20u
#define ADC_SC2_ACFE_SHIFT                       5
#define ADC_SC2_ACFE_WIDTH                       1
#define ADC_SC2_ACFE(x)                          (((uint32)(((uint32)(x))<<ADC_SC2_ACFE_SHIFT))&ADC_SC2_ACFE_MASK)
#define ADC_SC2_ADTRG_MASK                       0x40u
#define ADC_SC2_ADTRG_SHIFT                      6
#define ADC_SC2_ADTRG_WIDTH                      1
#define ADC_SC2_ADTRG(x)                         (((uint32)(((uint32)(x))<<ADC_SC2_ADTRG_SHIFT))&ADC_SC2_ADTRG_MASK)
#define ADC_SC2_ADACT_MASK                       0x80u
#define ADC_SC2_ADACT_SHIFT                      7
#define ADC_SC2_ADACT_WIDTH                      1
#define ADC_SC2_ADACT(x)                         (((uint32)(((uint32)(x))<<ADC_SC2_ADACT_SHIFT))&ADC_SC2_ADACT_MASK)
/* SC3 Bit Fields */
#define ADC_SC3_AVGS_MASK                        0x3u
#define ADC_SC3_AVGS_SHIFT                       0
#define ADC_SC3_AVGS_WIDTH                       2
#define ADC_SC3_AVGS(x)                          (((uint32)(((uint32)(x))<<ADC_SC3_AVGS_SHIFT))&ADC_SC3_AVGS_MASK)
#define ADC_SC3_AVGE_MASK                        0x4u
#define ADC_SC3_AVGE_SHIFT                       2
#define ADC_SC3_AVGE_WIDTH                       1
#define ADC_SC3_AVGE(x)                          (((uint32)(((uint32)(x))<<ADC_SC3_AVGE_SHIFT))&ADC_SC3_AVGE_MASK)
#define ADC_SC3_ADCO_MASK                        0x8u
#define ADC_SC3_ADCO_SHIFT                       3
#define ADC_SC3_ADCO_WIDTH                       1
#define ADC_SC3_ADCO(x)                          (((uint32)(((uint32)(x))<<ADC_SC3_ADCO_SHIFT))&ADC_SC3_ADCO_MASK)
#define ADC_SC3_CALF_MASK                        0x40u
#define ADC_SC3_CALF_SHIFT                       6
#define ADC_SC3_CALF_WIDTH                       1
#define ADC_SC3_CALF(x)                          (((uint32)(((uint32)(x))<<ADC_SC3_CALF_SHIFT))&ADC_SC3_CALF_MASK)
#define ADC_SC3_CAL_MASK                         0x80u
#define ADC_SC3_CAL_SHIFT                        7
#define ADC_SC3_CAL_WIDTH                        1
#define ADC_SC3_CAL(x)                           (((uint32)(((uint32)(x))<<ADC_SC3_CAL_SHIFT))&ADC_SC3_CAL_MASK)
/* BASE_OFS Bit Fields */
#define ADC_BASE_OFS_BA_OFS_MASK                 0xFFu
#define ADC_BASE_OFS_BA_OFS_SHIFT                0
#define ADC_BASE_OFS_BA_OFS_WIDTH                8
#define ADC_BASE_OFS_BA_OFS(x)                   (((uint32)(((uint32)(x))<<ADC_BASE_OFS_BA_OFS_SHIFT))&ADC_BASE_OFS_BA_OFS_MASK)
/* OFS Bit Fields */
#define ADC_OFS_OFS_MASK                         0xFFFu
#define ADC_OFS_OFS_SHIFT                        0
#define ADC_OFS_OFS_WIDTH                        12
#define ADC_OFS_OFS(x)                           (((uint32)(((uint32)(x))<<ADC_OFS_OFS_SHIFT))&ADC_OFS_OFS_MASK)
/* USR_OFS Bit Fields */
#define ADC_USR_OFS_USR_OFS_MASK                 0xFFu
#define ADC_USR_OFS_USR_OFS_SHIFT                0
#define ADC_USR_OFS_USR_OFS_WIDTH                8
#define ADC_USR_OFS_USR_OFS(x)                   (((uint32)(((uint32)(x))<<ADC_USR_OFS_USR_OFS_SHIFT))&ADC_USR_OFS_USR_OFS_MASK)
/* XOFS Bit Fields */
#define ADC_XOFS_OFS_MASK                        0x3Fu
#define ADC_XOFS_OFS_SHIFT                       0
#define ADC_XOFS_OFS_WIDTH                       6
#define ADC_XOFS_OFS(x)                          (((uint32)(((uint32)(x))<<ADC_XOFS_OFS_SHIFT))&ADC_XOFS_OFS_MASK)
/* YOFS Bit Fields */
#define ADC_YOFS_YOFS_MASK                       0xFFu
#define ADC_YOFS_YOFS_SHIFT                      0
#define ADC_YOFS_YOFS_WIDTH                      8
#define ADC_YOFS_YOFS(x)                         (((uint32)(((uint32)(x))<<ADC_YOFS_YOFS_SHIFT))&ADC_YOFS_YOFS_MASK)
/* G Bit Fields */
#define ADC_G_G_MASK                             0xFFFu
#define ADC_G_G_SHIFT                            0
#define ADC_G_G_WIDTH                            12
#define ADC_G_G(x)                               (((uint32)(((uint32)(x))<<ADC_G_G_SHIFT))&ADC_G_G_MASK)
/* UG Bit Fields */
#define ADC_UG_UG_MASK                           0x3FFu
#define ADC_UG_UG_SHIFT                          0
#define ADC_UG_UG_WIDTH                          10
#define ADC_UG_UG(x)                             (((uint32)(((uint32)(x))<<ADC_UG_UG_SHIFT))&ADC_UG_UG_MASK)
/* CLPS Bit Fields */
#define ADC_CLPS_CLPS_MASK                       0x7Fu
#define ADC_CLPS_CLPS_SHIFT                      0
#define ADC_CLPS_CLPS_WIDTH                      7
#define ADC_CLPS_CLPS(x)                         (((uint32)(((uint32)(x))<<ADC_CLPS_CLPS_SHIFT))&ADC_CLPS_CLPS_MASK)
/* CLP3 Bit Fields */
#define ADC_CLP3_CLP3_MASK                       0x3FFu
#define ADC_CLP3_CLP3_SHIFT                      0
#define ADC_CLP3_CLP3_WIDTH                      10
#define ADC_CLP3_CLP3(x)                         (((uint32)(((uint32)(x))<<ADC_CLP3_CLP3_SHIFT))&ADC_CLP3_CLP3_MASK)
/* CLP2 Bit Fields */
#define ADC_CLP2_CLP2_MASK                       0x1FFu
#define ADC_CLP2_CLP2_SHIFT                      0
#define ADC_CLP2_CLP2_WIDTH                      9
#define ADC_CLP2_CLP2(x)                         (((uint32)(((uint32)(x))<<ADC_CLP2_CLP2_SHIFT))&ADC_CLP2_CLP2_MASK)
/* CLP1 Bit Fields */
#define ADC_CLP1_CLP1_MASK                       0x1FFu
#define ADC_CLP1_CLP1_SHIFT                      0
#define ADC_CLP1_CLP1_WIDTH                      9
#define ADC_CLP1_CLP1(x)                         (((uint32)(((uint32)(x))<<ADC_CLP1_CLP1_SHIFT))&ADC_CLP1_CLP1_MASK)
/* CLP0 Bit Fields */
#define ADC_CLP0_CLP0_MASK                       0xFFu
#define ADC_CLP0_CLP0_SHIFT                      0
#define ADC_CLP0_CLP0_WIDTH                      8
#define ADC_CLP0_CLP0(x)                         (((uint32)(((uint32)(x))<<ADC_CLP0_CLP0_SHIFT))&ADC_CLP0_CLP0_MASK)
/* CLPX Bit Fields */
#define ADC_CLPX_CLPX_MASK                       0x7Fu
#define ADC_CLPX_CLPX_SHIFT                      0
#define ADC_CLPX_CLPX_WIDTH                      7
#define ADC_CLPX_CLPX(x)                         (((uint32)(((uint32)(x))<<ADC_CLPX_CLPX_SHIFT))&ADC_CLPX_CLPX_MASK)
#define ADC_CLPX_CLPXEN_MASK                     0x80u
#define ADC_CLPX_CLPXEN_SHIFT                    7
#define ADC_CLPX_CLPXEN_WIDTH                    1
#define ADC_CLPX_CLPXEN(x)                       (((uint32)(((uint32)(x))<<ADC_CLPX_CLPXEN_SHIFT))&ADC_CLPX_CLPXEN_MASK)
/* CLP9 Bit Fields */
#define ADC_CLP9_CLP9_MASK                       0x7Fu
#define ADC_CLP9_CLP9_SHIFT                      0
#define ADC_CLP9_CLP9_WIDTH                      7
#define ADC_CLP9_CLP9(x)                         (((uint32)(((uint32)(x))<<ADC_CLP9_CLP9_SHIFT))&ADC_CLP9_CLP9_MASK)
#define ADC_CLP9_CLP9EN_MASK                     0x80u
#define ADC_CLP9_CLP9EN_SHIFT                    7
#define ADC_CLP9_CLP9EN_WIDTH                    1
#define ADC_CLP9_CLP9EN(x)                       (((uint32)(((uint32)(x))<<ADC_CLP9_CLP9EN_SHIFT))&ADC_CLP9_CLP9EN_MASK)
/* CLPS_OFS Bit Fields */
#define ADC_CLPS_OFS_CLPS_OFS_MASK               0xFu
#define ADC_CLPS_OFS_CLPS_OFS_SHIFT              0
#define ADC_CLPS_OFS_CLPS_OFS_WIDTH              4
#define ADC_CLPS_OFS_CLPS_OFS(x)                 (((uint32)(((uint32)(x))<<ADC_CLPS_OFS_CLPS_OFS_SHIFT))&ADC_CLPS_OFS_CLPS_OFS_MASK)
/* CLP3_OFS Bit Fields */
#define ADC_CLP3_OFS_CLP3_OFS_MASK               0xFu
#define ADC_CLP3_OFS_CLP3_OFS_SHIFT              0
#define ADC_CLP3_OFS_CLP3_OFS_WIDTH              4
#define ADC_CLP3_OFS_CLP3_OFS(x)                 (((uint32)(((uint32)(x))<<ADC_CLP3_OFS_CLP3_OFS_SHIFT))&ADC_CLP3_OFS_CLP3_OFS_MASK)
/* CLP2_OFS Bit Fields */
#define ADC_CLP2_OFS_CLP2_OFS_MASK               0xFu
#define ADC_CLP2_OFS_CLP2_OFS_SHIFT              0
#define ADC_CLP2_OFS_CLP2_OFS_WIDTH              4
#define ADC_CLP2_OFS_CLP2_OFS(x)                 (((uint32)(((uint32)(x))<<ADC_CLP2_OFS_CLP2_OFS_SHIFT))&ADC_CLP2_OFS_CLP2_OFS_MASK)
/* CLP1_OFS Bit Fields */
#define ADC_CLP1_OFS_CLP1_OFS_MASK               0xFu
#define ADC_CLP1_OFS_CLP1_OFS_SHIFT              0
#define ADC_CLP1_OFS_CLP1_OFS_WIDTH              4
#define ADC_CLP1_OFS_CLP1_OFS(x)                 (((uint32)(((uint32)(x))<<ADC_CLP1_OFS_CLP1_OFS_SHIFT))&ADC_CLP1_OFS_CLP1_OFS_MASK)
/* CLP0_OFS Bit Fields */
#define ADC_CLP0_OFS_CLP0_OFS_MASK               0xFu
#define ADC_CLP0_OFS_CLP0_OFS_SHIFT              0
#define ADC_CLP0_OFS_CLP0_OFS_WIDTH              4
#define ADC_CLP0_OFS_CLP0_OFS(x)                 (((uint32)(((uint32)(x))<<ADC_CLP0_OFS_CLP0_OFS_SHIFT))&ADC_CLP0_OFS_CLP0_OFS_MASK)
/* CLPX_OFS Bit Fields */
#define ADC_CLPX_OFS_CLPX_OFS_MASK               0xFFFu
#define ADC_CLPX_OFS_CLPX_OFS_SHIFT              0
#define ADC_CLPX_OFS_CLPX_OFS_WIDTH              12
#define ADC_CLPX_OFS_CLPX_OFS(x)                 (((uint32)(((uint32)(x))<<ADC_CLPX_OFS_CLPX_OFS_SHIFT))&ADC_CLPX_OFS_CLPX_OFS_MASK)
/* CLP9_OFS Bit Fields */
#define ADC_CLP9_OFS_CLP9_OFS_MASK               0xFFFu
#define ADC_CLP9_OFS_CLP9_OFS_SHIFT              0
#define ADC_CLP9_OFS_CLP9_OFS_WIDTH              12
#define ADC_CLP9_OFS_CLP9_OFS(x)                 (((uint32)(((uint32)(x))<<ADC_CLP9_OFS_CLP9_OFS_SHIFT))&ADC_CLP9_OFS_CLP9_OFS_MASK)

/*!
 * @}
 */ /* end of group ADC_Register_Masks */


/* ADC - Peripheral instance base addresses */
/** Peripheral ADC0 base address */
#define ADC0_BASE                                (0x4003B000u)
/** Peripheral ADC0 base pointer */
#define ADC0                                     ((ADC_Type *)ADC0_BASE)
#define ADC0_BASE_PTR                            (ADC0)
/** Peripheral ADC1 base address */
#define ADC1_BASE                                (0x40027000u)
/** Peripheral ADC1 base pointer */
#define ADC1                                     ((ADC_Type *)ADC1_BASE)
#define ADC1_BASE_PTR                            (ADC1)
/** Array initializer of ADC peripheral base addresses */
#define ADC_BASE_ADDRS                           { ADC0_BASE, ADC1_BASE }
/** Array initializer of ADC peripheral base pointers */
#define ADC_BASE_PTRS                            { ADC0, ADC1 }

/* ----------------------------------------------------------------------------
   -- ADC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Register_Accessor_Macros ADC - Register accessor macros
 * @{
 */


/* ADC - Register instance definitions */
/* ADC0 */
#define ADC0_SC1A                                ADC_SC1_REG(ADC0,0)
#define ADC0_SC1B                                ADC_SC1_REG(ADC0,1)
#define ADC0_SC1C                                ADC_SC1_REG(ADC0,2)
#define ADC0_SC1D                                ADC_SC1_REG(ADC0,3)
#define ADC0_SC1E                                ADC_SC1_REG(ADC0,4)
#define ADC0_SC1F                                ADC_SC1_REG(ADC0,5)
#define ADC0_SC1G                                ADC_SC1_REG(ADC0,6)
#define ADC0_SC1H                                ADC_SC1_REG(ADC0,7)
#define ADC0_SC1I                                ADC_SC1_REG(ADC0,8)
#define ADC0_SC1J                                ADC_SC1_REG(ADC0,9)
#define ADC0_SC1K                                ADC_SC1_REG(ADC0,10)
#define ADC0_SC1L                                ADC_SC1_REG(ADC0,11)
#define ADC0_SC1M                                ADC_SC1_REG(ADC0,12)
#define ADC0_SC1N                                ADC_SC1_REG(ADC0,13)
#define ADC0_SC1O                                ADC_SC1_REG(ADC0,14)
#define ADC0_SC1P                                ADC_SC1_REG(ADC0,15)
#define ADC0_CFG1                                ADC_CFG1_REG(ADC0)
#define ADC0_CFG2                                ADC_CFG2_REG(ADC0)
#define ADC0_RA                                  ADC_R_REG(ADC0,0)
#define ADC0_RB                                  ADC_R_REG(ADC0,1)
#define ADC0_RC                                  ADC_R_REG(ADC0,2)
#define ADC0_RD                                  ADC_R_REG(ADC0,3)
#define ADC0_RE                                  ADC_R_REG(ADC0,4)
#define ADC0_RF                                  ADC_R_REG(ADC0,5)
#define ADC0_RG                                  ADC_R_REG(ADC0,6)
#define ADC0_RH                                  ADC_R_REG(ADC0,7)
#define ADC0_RI                                  ADC_R_REG(ADC0,8)
#define ADC0_RJ                                  ADC_R_REG(ADC0,9)
#define ADC0_RK                                  ADC_R_REG(ADC0,10)
#define ADC0_RL                                  ADC_R_REG(ADC0,11)
#define ADC0_RM                                  ADC_R_REG(ADC0,12)
#define ADC0_RN                                  ADC_R_REG(ADC0,13)
#define ADC0_RO                                  ADC_R_REG(ADC0,14)
#define ADC0_RP                                  ADC_R_REG(ADC0,15)
#define ADC0_CV1                                 ADC_CV_REG(ADC0,0)
#define ADC0_CV2                                 ADC_CV_REG(ADC0,1)
#define ADC0_SC2                                 ADC_SC2_REG(ADC0)
#define ADC0_SC3                                 ADC_SC3_REG(ADC0)
#define ADC0_BASE_OFS                            ADC_BASE_OFS_REG(ADC0)
#define ADC0_OFS                                 ADC_OFS_REG(ADC0)
#define ADC0_USR_OFS                             ADC_USR_OFS_REG(ADC0)
#define ADC0_XOFS                                ADC_XOFS_REG(ADC0)
#define ADC0_YOFS                                ADC_YOFS_REG(ADC0)
#define ADC0_G                                   ADC_G_REG(ADC0)
#define ADC0_UG                                  ADC_UG_REG(ADC0)
#define ADC0_CLPS                                ADC_CLPS_REG(ADC0)
#define ADC0_CLP3                                ADC_CLP3_REG(ADC0)
#define ADC0_CLP2                                ADC_CLP2_REG(ADC0)
#define ADC0_CLP1                                ADC_CLP1_REG(ADC0)
#define ADC0_CLP0                                ADC_CLP0_REG(ADC0)
#define ADC0_CLPX                                ADC_CLPX_REG(ADC0)
#define ADC0_CLP9                                ADC_CLP9_REG(ADC0)
#define ADC0_CLPS_OFS                            ADC_CLPS_OFS_REG(ADC0)
#define ADC0_CLP3_OFS                            ADC_CLP3_OFS_REG(ADC0)
#define ADC0_CLP2_OFS                            ADC_CLP2_OFS_REG(ADC0)
#define ADC0_CLP1_OFS                            ADC_CLP1_OFS_REG(ADC0)
#define ADC0_CLP0_OFS                            ADC_CLP0_OFS_REG(ADC0)
#define ADC0_CLPX_OFS                            ADC_CLPX_OFS_REG(ADC0)
#define ADC0_CLP9_OFS                            ADC_CLP9_OFS_REG(ADC0)
/* ADC1 */
#define ADC1_SC1A                                ADC_SC1_REG(ADC1,0)
#define ADC1_SC1B                                ADC_SC1_REG(ADC1,1)
#define ADC1_SC1C                                ADC_SC1_REG(ADC1,2)
#define ADC1_SC1D                                ADC_SC1_REG(ADC1,3)
#define ADC1_SC1E                                ADC_SC1_REG(ADC1,4)
#define ADC1_SC1F                                ADC_SC1_REG(ADC1,5)
#define ADC1_SC1G                                ADC_SC1_REG(ADC1,6)
#define ADC1_SC1H                                ADC_SC1_REG(ADC1,7)
#define ADC1_SC1I                                ADC_SC1_REG(ADC1,8)
#define ADC1_SC1J                                ADC_SC1_REG(ADC1,9)
#define ADC1_SC1K                                ADC_SC1_REG(ADC1,10)
#define ADC1_SC1L                                ADC_SC1_REG(ADC1,11)
#define ADC1_SC1M                                ADC_SC1_REG(ADC1,12)
#define ADC1_SC1N                                ADC_SC1_REG(ADC1,13)
#define ADC1_SC1O                                ADC_SC1_REG(ADC1,14)
#define ADC1_SC1P                                ADC_SC1_REG(ADC1,15)
#define ADC1_CFG1                                ADC_CFG1_REG(ADC1)
#define ADC1_CFG2                                ADC_CFG2_REG(ADC1)
#define ADC1_RA                                  ADC_R_REG(ADC1,0)
#define ADC1_RB                                  ADC_R_REG(ADC1,1)
#define ADC1_RC                                  ADC_R_REG(ADC1,2)
#define ADC1_RD                                  ADC_R_REG(ADC1,3)
#define ADC1_RE                                  ADC_R_REG(ADC1,4)
#define ADC1_RF                                  ADC_R_REG(ADC1,5)
#define ADC1_RG                                  ADC_R_REG(ADC1,6)
#define ADC1_RH                                  ADC_R_REG(ADC1,7)
#define ADC1_RI                                  ADC_R_REG(ADC1,8)
#define ADC1_RJ                                  ADC_R_REG(ADC1,9)
#define ADC1_RK                                  ADC_R_REG(ADC1,10)
#define ADC1_RL                                  ADC_R_REG(ADC1,11)
#define ADC1_RM                                  ADC_R_REG(ADC1,12)
#define ADC1_RN                                  ADC_R_REG(ADC1,13)
#define ADC1_RO                                  ADC_R_REG(ADC1,14)
#define ADC1_RP                                  ADC_R_REG(ADC1,15)
#define ADC1_CV1                                 ADC_CV_REG(ADC1,0)
#define ADC1_CV2                                 ADC_CV_REG(ADC1,1)
#define ADC1_SC2                                 ADC_SC2_REG(ADC1)
#define ADC1_SC3                                 ADC_SC3_REG(ADC1)
#define ADC1_BASE_OFS                            ADC_BASE_OFS_REG(ADC1)
#define ADC1_OFS                                 ADC_OFS_REG(ADC1)
#define ADC1_USR_OFS                             ADC_USR_OFS_REG(ADC1)
#define ADC1_XOFS                                ADC_XOFS_REG(ADC1)
#define ADC1_YOFS                                ADC_YOFS_REG(ADC1)
#define ADC1_G                                   ADC_G_REG(ADC1)
#define ADC1_UG                                  ADC_UG_REG(ADC1)
#define ADC1_CLPS                                ADC_CLPS_REG(ADC1)
#define ADC1_CLP3                                ADC_CLP3_REG(ADC1)
#define ADC1_CLP2                                ADC_CLP2_REG(ADC1)
#define ADC1_CLP1                                ADC_CLP1_REG(ADC1)
#define ADC1_CLP0                                ADC_CLP0_REG(ADC1)
#define ADC1_CLPX                                ADC_CLPX_REG(ADC1)
#define ADC1_CLP9                                ADC_CLP9_REG(ADC1)
#define ADC1_CLPS_OFS                            ADC_CLPS_OFS_REG(ADC1)
#define ADC1_CLP3_OFS                            ADC_CLP3_OFS_REG(ADC1)
#define ADC1_CLP2_OFS                            ADC_CLP2_OFS_REG(ADC1)
#define ADC1_CLP1_OFS                            ADC_CLP1_OFS_REG(ADC1)
#define ADC1_CLP0_OFS                            ADC_CLP0_OFS_REG(ADC1)
#define ADC1_CLPX_OFS                            ADC_CLPX_OFS_REG(ADC1)
#define ADC1_CLP9_OFS                            ADC_CLP9_OFS_REG(ADC1)

/* ADC - Register array accessors */
#define ADC0_SC1(index)                          ADC_SC1_REG(ADC0,index)
#define ADC1_SC1(index)                          ADC_SC1_REG(ADC1,index)
#define ADC0_R(index)                            ADC_R_REG(ADC0,index)
#define ADC1_R(index)                            ADC_R_REG(ADC1,index)
#define ADC0_CV(index)                           ADC_CV_REG(ADC0,index)
#define ADC1_CV(index)                           ADC_CV_REG(ADC1,index)

/*!
 * @}
 */ /* end of group ADC_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group ADC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- AIPS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Peripheral_Access_Layer AIPS Peripheral Access Layer
 * @{
 */

/** AIPS - Register Layout Typedef */
typedef struct {
  __IO uint32 MPRA;                                /**< Master Privilege Register A, offset: 0x0 */
       uint8 RESERVED_0[28];
  __IO uint32 PACR[4];                             /**< Peripheral Access Control Register, array offset: 0x20, array step: 0x4 */
       uint8 RESERVED_1[16];
  __IO uint32 OPACR[16];                           /**< Off-Platform Peripheral Access Control Register, array offset: 0x40, array step: 0x4 */
  __IO uint32 PACRU;                               /**< Peripheral Access Control Register, offset: 0x80 */
} AIPS_Type, *AIPS_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- AIPS - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Register_Accessor_Macros AIPS - Register accessor macros
 * @{
 */


/* AIPS - Register accessors */
#define AIPS_MPRA_REG(base)                      ((base)->MPRA)
#define AIPS_PACR_REG(base,index)                ((base)->PACR[index])
#define AIPS_PACR_COUNT                          4
#define AIPS_OPACR_REG(base,index)               ((base)->OPACR[index])
#define AIPS_OPACR_COUNT                         16
#define AIPS_PACRU_REG(base)                     ((base)->PACRU)

/*!
 * @}
 */ /* end of group AIPS_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- AIPS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Register_Masks AIPS Register Masks
 * @{
 */

/* PACR Bit Fields */
#define AIPS_PACR_TP7_MASK                       0x1u
#define AIPS_PACR_TP7_SHIFT                      0
#define AIPS_PACR_TP7_WIDTH                      1
#define AIPS_PACR_TP7(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP7_SHIFT))&AIPS_PACR_TP7_MASK)
#define AIPS_PACR_WP7_MASK                       0x2u
#define AIPS_PACR_WP7_SHIFT                      1
#define AIPS_PACR_WP7_WIDTH                      1
#define AIPS_PACR_WP7(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP7_SHIFT))&AIPS_PACR_WP7_MASK)
#define AIPS_PACR_SP7_MASK                       0x4u
#define AIPS_PACR_SP7_SHIFT                      2
#define AIPS_PACR_SP7_WIDTH                      1
#define AIPS_PACR_SP7(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP7_SHIFT))&AIPS_PACR_SP7_MASK)
#define AIPS_PACR_TP6_MASK                       0x10u
#define AIPS_PACR_TP6_SHIFT                      4
#define AIPS_PACR_TP6_WIDTH                      1
#define AIPS_PACR_TP6(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP6_SHIFT))&AIPS_PACR_TP6_MASK)
#define AIPS_PACR_WP6_MASK                       0x20u
#define AIPS_PACR_WP6_SHIFT                      5
#define AIPS_PACR_WP6_WIDTH                      1
#define AIPS_PACR_WP6(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP6_SHIFT))&AIPS_PACR_WP6_MASK)
#define AIPS_PACR_SP6_MASK                       0x40u
#define AIPS_PACR_SP6_SHIFT                      6
#define AIPS_PACR_SP6_WIDTH                      1
#define AIPS_PACR_SP6(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP6_SHIFT))&AIPS_PACR_SP6_MASK)
#define AIPS_PACR_TP5_MASK                       0x100u
#define AIPS_PACR_TP5_SHIFT                      8
#define AIPS_PACR_TP5_WIDTH                      1
#define AIPS_PACR_TP5(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP5_SHIFT))&AIPS_PACR_TP5_MASK)
#define AIPS_PACR_WP5_MASK                       0x200u
#define AIPS_PACR_WP5_SHIFT                      9
#define AIPS_PACR_WP5_WIDTH                      1
#define AIPS_PACR_WP5(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP5_SHIFT))&AIPS_PACR_WP5_MASK)
#define AIPS_PACR_SP5_MASK                       0x400u
#define AIPS_PACR_SP5_SHIFT                      10
#define AIPS_PACR_SP5_WIDTH                      1
#define AIPS_PACR_SP5(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP5_SHIFT))&AIPS_PACR_SP5_MASK)
#define AIPS_PACR_TP4_MASK                       0x1000u
#define AIPS_PACR_TP4_SHIFT                      12
#define AIPS_PACR_TP4_WIDTH                      1
#define AIPS_PACR_TP4(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP4_SHIFT))&AIPS_PACR_TP4_MASK)
#define AIPS_PACR_WP4_MASK                       0x2000u
#define AIPS_PACR_WP4_SHIFT                      13
#define AIPS_PACR_WP4_WIDTH                      1
#define AIPS_PACR_WP4(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP4_SHIFT))&AIPS_PACR_WP4_MASK)
#define AIPS_PACR_SP4_MASK                       0x4000u
#define AIPS_PACR_SP4_SHIFT                      14
#define AIPS_PACR_SP4_WIDTH                      1
#define AIPS_PACR_SP4(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP4_SHIFT))&AIPS_PACR_SP4_MASK)
#define AIPS_PACR_TP3_MASK                       0x10000u
#define AIPS_PACR_TP3_SHIFT                      16
#define AIPS_PACR_TP3_WIDTH                      1
#define AIPS_PACR_TP3(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP3_SHIFT))&AIPS_PACR_TP3_MASK)
#define AIPS_PACR_WP3_MASK                       0x20000u
#define AIPS_PACR_WP3_SHIFT                      17
#define AIPS_PACR_WP3_WIDTH                      1
#define AIPS_PACR_WP3(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP3_SHIFT))&AIPS_PACR_WP3_MASK)
#define AIPS_PACR_SP3_MASK                       0x40000u
#define AIPS_PACR_SP3_SHIFT                      18
#define AIPS_PACR_SP3_WIDTH                      1
#define AIPS_PACR_SP3(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP3_SHIFT))&AIPS_PACR_SP3_MASK)
#define AIPS_PACR_TP2_MASK                       0x100000u
#define AIPS_PACR_TP2_SHIFT                      20
#define AIPS_PACR_TP2_WIDTH                      1
#define AIPS_PACR_TP2(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP2_SHIFT))&AIPS_PACR_TP2_MASK)
#define AIPS_PACR_WP2_MASK                       0x200000u
#define AIPS_PACR_WP2_SHIFT                      21
#define AIPS_PACR_WP2_WIDTH                      1
#define AIPS_PACR_WP2(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP2_SHIFT))&AIPS_PACR_WP2_MASK)
#define AIPS_PACR_SP2_MASK                       0x400000u
#define AIPS_PACR_SP2_SHIFT                      22
#define AIPS_PACR_SP2_WIDTH                      1
#define AIPS_PACR_SP2(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP2_SHIFT))&AIPS_PACR_SP2_MASK)
#define AIPS_PACR_TP1_MASK                       0x1000000u
#define AIPS_PACR_TP1_SHIFT                      24
#define AIPS_PACR_TP1_WIDTH                      1
#define AIPS_PACR_TP1(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP1_SHIFT))&AIPS_PACR_TP1_MASK)
#define AIPS_PACR_WP1_MASK                       0x2000000u
#define AIPS_PACR_WP1_SHIFT                      25
#define AIPS_PACR_WP1_WIDTH                      1
#define AIPS_PACR_WP1(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP1_SHIFT))&AIPS_PACR_WP1_MASK)
#define AIPS_PACR_SP1_MASK                       0x4000000u
#define AIPS_PACR_SP1_SHIFT                      26
#define AIPS_PACR_SP1_WIDTH                      1
#define AIPS_PACR_SP1(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP1_SHIFT))&AIPS_PACR_SP1_MASK)
#define AIPS_PACR_TP0_MASK                       0x10000000u
#define AIPS_PACR_TP0_SHIFT                      28
#define AIPS_PACR_TP0_WIDTH                      1
#define AIPS_PACR_TP0(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_TP0_SHIFT))&AIPS_PACR_TP0_MASK)
#define AIPS_PACR_WP0_MASK                       0x20000000u
#define AIPS_PACR_WP0_SHIFT                      29
#define AIPS_PACR_WP0_WIDTH                      1
#define AIPS_PACR_WP0(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_WP0_SHIFT))&AIPS_PACR_WP0_MASK)
#define AIPS_PACR_SP0_MASK                       0x40000000u
#define AIPS_PACR_SP0_SHIFT                      30
#define AIPS_PACR_SP0_WIDTH                      1
#define AIPS_PACR_SP0(x)                         (((uint32)(((uint32)(x))<<AIPS_PACR_SP0_SHIFT))&AIPS_PACR_SP0_MASK)
/* OPACR Bit Fields */
#define AIPS_OPACR_TP7_MASK                      0x1u
#define AIPS_OPACR_TP7_SHIFT                     0
#define AIPS_OPACR_TP7_WIDTH                     1
#define AIPS_OPACR_TP7(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP7_SHIFT))&AIPS_OPACR_TP7_MASK)
#define AIPS_OPACR_WP7_MASK                      0x2u
#define AIPS_OPACR_WP7_SHIFT                     1
#define AIPS_OPACR_WP7_WIDTH                     1
#define AIPS_OPACR_WP7(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP7_SHIFT))&AIPS_OPACR_WP7_MASK)
#define AIPS_OPACR_SP7_MASK                      0x4u
#define AIPS_OPACR_SP7_SHIFT                     2
#define AIPS_OPACR_SP7_WIDTH                     1
#define AIPS_OPACR_SP7(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP7_SHIFT))&AIPS_OPACR_SP7_MASK)
#define AIPS_OPACR_TP6_MASK                      0x10u
#define AIPS_OPACR_TP6_SHIFT                     4
#define AIPS_OPACR_TP6_WIDTH                     1
#define AIPS_OPACR_TP6(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP6_SHIFT))&AIPS_OPACR_TP6_MASK)
#define AIPS_OPACR_WP6_MASK                      0x20u
#define AIPS_OPACR_WP6_SHIFT                     5
#define AIPS_OPACR_WP6_WIDTH                     1
#define AIPS_OPACR_WP6(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP6_SHIFT))&AIPS_OPACR_WP6_MASK)
#define AIPS_OPACR_SP6_MASK                      0x40u
#define AIPS_OPACR_SP6_SHIFT                     6
#define AIPS_OPACR_SP6_WIDTH                     1
#define AIPS_OPACR_SP6(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP6_SHIFT))&AIPS_OPACR_SP6_MASK)
#define AIPS_OPACR_TP5_MASK                      0x100u
#define AIPS_OPACR_TP5_SHIFT                     8
#define AIPS_OPACR_TP5_WIDTH                     1
#define AIPS_OPACR_TP5(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP5_SHIFT))&AIPS_OPACR_TP5_MASK)
#define AIPS_OPACR_WP5_MASK                      0x200u
#define AIPS_OPACR_WP5_SHIFT                     9
#define AIPS_OPACR_WP5_WIDTH                     1
#define AIPS_OPACR_WP5(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP5_SHIFT))&AIPS_OPACR_WP5_MASK)
#define AIPS_OPACR_SP5_MASK                      0x400u
#define AIPS_OPACR_SP5_SHIFT                     10
#define AIPS_OPACR_SP5_WIDTH                     1
#define AIPS_OPACR_SP5(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP5_SHIFT))&AIPS_OPACR_SP5_MASK)
#define AIPS_OPACR_TP4_MASK                      0x1000u
#define AIPS_OPACR_TP4_SHIFT                     12
#define AIPS_OPACR_TP4_WIDTH                     1
#define AIPS_OPACR_TP4(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP4_SHIFT))&AIPS_OPACR_TP4_MASK)
#define AIPS_OPACR_WP4_MASK                      0x2000u
#define AIPS_OPACR_WP4_SHIFT                     13
#define AIPS_OPACR_WP4_WIDTH                     1
#define AIPS_OPACR_WP4(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP4_SHIFT))&AIPS_OPACR_WP4_MASK)
#define AIPS_OPACR_SP4_MASK                      0x4000u
#define AIPS_OPACR_SP4_SHIFT                     14
#define AIPS_OPACR_SP4_WIDTH                     1
#define AIPS_OPACR_SP4(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP4_SHIFT))&AIPS_OPACR_SP4_MASK)
#define AIPS_OPACR_TP3_MASK                      0x10000u
#define AIPS_OPACR_TP3_SHIFT                     16
#define AIPS_OPACR_TP3_WIDTH                     1
#define AIPS_OPACR_TP3(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP3_SHIFT))&AIPS_OPACR_TP3_MASK)
#define AIPS_OPACR_WP3_MASK                      0x20000u
#define AIPS_OPACR_WP3_SHIFT                     17
#define AIPS_OPACR_WP3_WIDTH                     1
#define AIPS_OPACR_WP3(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP3_SHIFT))&AIPS_OPACR_WP3_MASK)
#define AIPS_OPACR_SP3_MASK                      0x40000u
#define AIPS_OPACR_SP3_SHIFT                     18
#define AIPS_OPACR_SP3_WIDTH                     1
#define AIPS_OPACR_SP3(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP3_SHIFT))&AIPS_OPACR_SP3_MASK)
#define AIPS_OPACR_TP2_MASK                      0x100000u
#define AIPS_OPACR_TP2_SHIFT                     20
#define AIPS_OPACR_TP2_WIDTH                     1
#define AIPS_OPACR_TP2(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP2_SHIFT))&AIPS_OPACR_TP2_MASK)
#define AIPS_OPACR_WP2_MASK                      0x200000u
#define AIPS_OPACR_WP2_SHIFT                     21
#define AIPS_OPACR_WP2_WIDTH                     1
#define AIPS_OPACR_WP2(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP2_SHIFT))&AIPS_OPACR_WP2_MASK)
#define AIPS_OPACR_SP2_MASK                      0x400000u
#define AIPS_OPACR_SP2_SHIFT                     22
#define AIPS_OPACR_SP2_WIDTH                     1
#define AIPS_OPACR_SP2(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP2_SHIFT))&AIPS_OPACR_SP2_MASK)
#define AIPS_OPACR_TP1_MASK                      0x1000000u
#define AIPS_OPACR_TP1_SHIFT                     24
#define AIPS_OPACR_TP1_WIDTH                     1
#define AIPS_OPACR_TP1(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP1_SHIFT))&AIPS_OPACR_TP1_MASK)
#define AIPS_OPACR_WP1_MASK                      0x2000000u
#define AIPS_OPACR_WP1_SHIFT                     25
#define AIPS_OPACR_WP1_WIDTH                     1
#define AIPS_OPACR_WP1(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP1_SHIFT))&AIPS_OPACR_WP1_MASK)
#define AIPS_OPACR_SP1_MASK                      0x4000000u
#define AIPS_OPACR_SP1_SHIFT                     26
#define AIPS_OPACR_SP1_WIDTH                     1
#define AIPS_OPACR_SP1(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP1_SHIFT))&AIPS_OPACR_SP1_MASK)
#define AIPS_OPACR_TP0_MASK                      0x10000000u
#define AIPS_OPACR_TP0_SHIFT                     28
#define AIPS_OPACR_TP0_WIDTH                     1
#define AIPS_OPACR_TP0(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_TP0_SHIFT))&AIPS_OPACR_TP0_MASK)
#define AIPS_OPACR_WP0_MASK                      0x20000000u
#define AIPS_OPACR_WP0_SHIFT                     29
#define AIPS_OPACR_WP0_WIDTH                     1
#define AIPS_OPACR_WP0(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_WP0_SHIFT))&AIPS_OPACR_WP0_MASK)
#define AIPS_OPACR_SP0_MASK                      0x40000000u
#define AIPS_OPACR_SP0_SHIFT                     30
#define AIPS_OPACR_SP0_WIDTH                     1
#define AIPS_OPACR_SP0(x)                        (((uint32)(((uint32)(x))<<AIPS_OPACR_SP0_SHIFT))&AIPS_OPACR_SP0_MASK)
/* PACRU Bit Fields */
#define AIPS_PACRU_TP1_MASK                      0x1000000u
#define AIPS_PACRU_TP1_SHIFT                     24
#define AIPS_PACRU_TP1_WIDTH                     1
#define AIPS_PACRU_TP1(x)                        (((uint32)(((uint32)(x))<<AIPS_PACRU_TP1_SHIFT))&AIPS_PACRU_TP1_MASK)
#define AIPS_PACRU_WP1_MASK                      0x2000000u
#define AIPS_PACRU_WP1_SHIFT                     25
#define AIPS_PACRU_WP1_WIDTH                     1
#define AIPS_PACRU_WP1(x)                        (((uint32)(((uint32)(x))<<AIPS_PACRU_WP1_SHIFT))&AIPS_PACRU_WP1_MASK)
#define AIPS_PACRU_SP1_MASK                      0x4000000u
#define AIPS_PACRU_SP1_SHIFT                     26
#define AIPS_PACRU_SP1_WIDTH                     1
#define AIPS_PACRU_SP1(x)                        (((uint32)(((uint32)(x))<<AIPS_PACRU_SP1_SHIFT))&AIPS_PACRU_SP1_MASK)
#define AIPS_PACRU_TP0_MASK                      0x10000000u
#define AIPS_PACRU_TP0_SHIFT                     28
#define AIPS_PACRU_TP0_WIDTH                     1
#define AIPS_PACRU_TP0(x)                        (((uint32)(((uint32)(x))<<AIPS_PACRU_TP0_SHIFT))&AIPS_PACRU_TP0_MASK)
#define AIPS_PACRU_WP0_MASK                      0x20000000u
#define AIPS_PACRU_WP0_SHIFT                     29
#define AIPS_PACRU_WP0_WIDTH                     1
#define AIPS_PACRU_WP0(x)                        (((uint32)(((uint32)(x))<<AIPS_PACRU_WP0_SHIFT))&AIPS_PACRU_WP0_MASK)
#define AIPS_PACRU_SP0_MASK                      0x40000000u
#define AIPS_PACRU_SP0_SHIFT                     30
#define AIPS_PACRU_SP0_WIDTH                     1
#define AIPS_PACRU_SP0(x)                        (((uint32)(((uint32)(x))<<AIPS_PACRU_SP0_SHIFT))&AIPS_PACRU_SP0_MASK)

/*!
 * @}
 */ /* end of group AIPS_Register_Masks */


/* AIPS - Peripheral instance base addresses */
/** Peripheral AIPS base address */
#define AIPS_BASE                                (0x40000000u)
/** Peripheral AIPS base pointer */
#define AIPS                                     ((AIPS_Type *)AIPS_BASE)
#define AIPS_BASE_PTR                            (AIPS)
/** Array initializer of AIPS peripheral base addresses */
#define AIPS_BASE_ADDRS                          { AIPS_BASE }
/** Array initializer of AIPS peripheral base pointers */
#define AIPS_BASE_PTRS                           { AIPS }

/* ----------------------------------------------------------------------------
   -- AIPS - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Register_Accessor_Macros AIPS - Register accessor macros
 * @{
 */


/* AIPS - Register instance definitions */
/* AIPS */
#define AIPS_MPRA                                AIPS_MPRA_REG(AIPS)
#define AIPS_PACRA                               AIPS_PACR_REG(AIPS,0)
#define AIPS_PACRB                               AIPS_PACR_REG(AIPS,1)
#define AIPS_PACRC                               AIPS_PACR_REG(AIPS,2)
#define AIPS_PACRD                               AIPS_PACR_REG(AIPS,3)
#define AIPS_OPACRA                              AIPS_OPACR_REG(AIPS,0)
#define AIPS_OPACRB                              AIPS_OPACR_REG(AIPS,1)
#define AIPS_OPACRC                              AIPS_OPACR_REG(AIPS,2)
#define AIPS_OPACRD                              AIPS_OPACR_REG(AIPS,3)
#define AIPS_OPACRE                              AIPS_OPACR_REG(AIPS,4)
#define AIPS_OPACRF                              AIPS_OPACR_REG(AIPS,5)
#define AIPS_OPACRG                              AIPS_OPACR_REG(AIPS,6)
#define AIPS_OPACRH                              AIPS_OPACR_REG(AIPS,7)
#define AIPS_OPACRI                              AIPS_OPACR_REG(AIPS,8)
#define AIPS_OPACRJ                              AIPS_OPACR_REG(AIPS,9)
#define AIPS_OPACRK                              AIPS_OPACR_REG(AIPS,10)
#define AIPS_OPACRL                              AIPS_OPACR_REG(AIPS,11)
#define AIPS_OPACRM                              AIPS_OPACR_REG(AIPS,12)
#define AIPS_OPACRN                              AIPS_OPACR_REG(AIPS,13)
#define AIPS_OPACRO                              AIPS_OPACR_REG(AIPS,14)
#define AIPS_OPACRP                              AIPS_OPACR_REG(AIPS,15)
#define AIPS_PACRU                               AIPS_PACRU_REG(AIPS)

/* AIPS - Register array accessors */
#define AIPS_PACR(index)                         AIPS_PACR_REG(AIPS,index)
#define AIPS_OPACR(index)                        AIPS_OPACR_REG(AIPS,index)

/*!
 * @}
 */ /* end of group AIPS_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group AIPS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CAN Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Peripheral_Access_Layer CAN Peripheral Access Layer
 * @{
 */

/** CAN - Register Layout Typedef */
typedef struct {
  __IO uint32 MCR;                                 /**< Module Configuration Register, offset: 0x0 */
  __IO uint32 CTRL1;                               /**< Control 1 register, offset: 0x4 */
  __IO uint32 TIMER;                               /**< Free Running Timer, offset: 0x8 */
       uint8 RESERVED_0[4];
  __IO uint32 RXMGMASK;                            /**< Rx Mailboxes Global Mask Register, offset: 0x10 */
  __IO uint32 RX14MASK;                            /**< Rx 14 Mask register, offset: 0x14 */
  __IO uint32 RX15MASK;                            /**< Rx 15 Mask register, offset: 0x18 */
  __IO uint32 ECR;                                 /**< Error Counter, offset: 0x1C */
  __IO uint32 ESR1;                                /**< Error and Status 1 register, offset: 0x20 */
       uint8 RESERVED_1[4];
  __IO uint32 IMASK1;                              /**< Interrupt Masks 1 register, offset: 0x28 */
       uint8 RESERVED_2[4];
  __IO uint32 IFLAG1;                              /**< Interrupt Flags 1 register, offset: 0x30 */
  __IO uint32 CTRL2;                               /**< Control 2 register, offset: 0x34 */
  __I  uint32 ESR2;                                /**< Error and Status 2 register, offset: 0x38 */
       uint8 RESERVED_3[8];
  __I  uint32 CRCR;                                /**< CRC Register, offset: 0x44 */
  __IO uint32 RXFGMASK;                            /**< Rx FIFO Global Mask register, offset: 0x48 */
  __I  uint32 RXFIR;                               /**< Rx FIFO Information Register, offset: 0x4C */
  __IO uint32 CBT;                                 /**< CAN Bit Timing Register, offset: 0x50 */
       uint8 RESERVED_4[2092];
  __IO uint32 RXIMR[16];                           /**< Rx Individual Mask Registers, array offset: 0x880, array step: 0x4 */
       uint8 RESERVED_5[576];
  __IO uint32 CTRL1_PN;                            /**< Pretended Networking Control 1 Register, offset: 0xB00 */
  __IO uint32 CTRL2_PN;                            /**< Pretended Networking Control 2 Register, offset: 0xB04 */
  __IO uint32 WU_MTC;                              /**< Pretended Networking Wake Up Match Register, offset: 0xB08 */
  __IO uint32 FLT_ID1;                             /**< Pretended Networking ID Filter 1 Register, offset: 0xB0C */
  __IO uint32 FLT_DLC;                             /**< Pretended Networking DLC Filter Register, offset: 0xB10 */
  __IO uint32 PL1_LO;                              /**< Pretended Networking Payload Low Filter 1 Register, offset: 0xB14 */
  __IO uint32 PL1_HI;                              /**< Pretended Networking Payload High Filter 1 Register, offset: 0xB18 */
  __IO uint32 FLT_ID2_IDMASK;                      /**< Pretended Networking ID Filter 2 Register / ID Mask Register, offset: 0xB1C */
  __IO uint32 PL2_PLMASK_LO;                       /**< Pretended Networking Payload Low Filter 2 Register / Payload Low Mask Register, offset: 0xB20 */
  __IO uint32 PL2_PLMASK_HI;                       /**< Pretended Networking Payload High Filter 2 low order bits / Payload High Mask Register, offset: 0xB24 */
       uint8 RESERVED_6[24];
  __I  uint32 WMB0_CS;                             /**< Wake Up Message Buffer Register for C/S, offset: 0xB40 */
  __I  uint32 WMB0_ID;                             /**< Wake Up Message Buffer Register for ID, offset: 0xB44 */
  __I  uint32 WMB0_D03;                            /**< Wake Up Message Buffer Register for Data 0-3, offset: 0xB48 */
  __I  uint32 WMB0_D47;                            /**< Wake Up Message Buffer Register Data 4-7, offset: 0xB4C */
  __I  uint32 WMB1_CS;                             /**< Wake Up Message Buffer Register for C/S, offset: 0xB50 */
  __I  uint32 WMB1_ID;                             /**< Wake Up Message Buffer Register for ID, offset: 0xB54 */
  __I  uint32 WMB1_D03;                            /**< Wake Up Message Buffer Register for Data 0-3, offset: 0xB58 */
  __I  uint32 WMB1_D47;                            /**< Wake Up Message Buffer Register Data 4-7, offset: 0xB5C */
  __I  uint32 WMB2_CS;                             /**< Wake Up Message Buffer Register for C/S, offset: 0xB60 */
  __I  uint32 WMB2_ID;                             /**< Wake Up Message Buffer Register for ID, offset: 0xB64 */
  __I  uint32 WMB2_D03;                            /**< Wake Up Message Buffer Register for Data 0-3, offset: 0xB68 */
  __I  uint32 WMB2_D47;                            /**< Wake Up Message Buffer Register Data 4-7, offset: 0xB6C */
  __I  uint32 WMB3_CS;                             /**< Wake Up Message Buffer Register for C/S, offset: 0xB70 */
  __I  uint32 WMB3_ID;                             /**< Wake Up Message Buffer Register for ID, offset: 0xB74 */
  __I  uint32 WMB3_D03;                            /**< Wake Up Message Buffer Register for Data 0-3, offset: 0xB78 */
  __I  uint32 WMB3_D47;                            /**< Wake Up Message Buffer Register Data 4-7, offset: 0xB7C */
       uint8 RESERVED_7[128];
  __IO uint32 FDCTRL;                              /**< CAN FD Control Register, offset: 0xC00 */
  __IO uint32 FDCBT;                               /**< CAN FD Bit Timing Register, offset: 0xC04 */
  __I  uint32 FDCRC;                               /**< CAN FD CRC Register, offset: 0xC08 */
} CAN_Type, *CAN_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CAN - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Register_Accessor_Macros CAN - Register accessor macros
 * @{
 */


/* CAN - Register accessors */
#define CAN_MCR_REG(base)                        ((base)->MCR)
#define CAN_CTRL1_REG(base)                      ((base)->CTRL1)
#define CAN_TIMER_REG(base)                      ((base)->TIMER)
#define CAN_RXMGMASK_REG(base)                   ((base)->RXMGMASK)
#define CAN_RX14MASK_REG(base)                   ((base)->RX14MASK)
#define CAN_RX15MASK_REG(base)                   ((base)->RX15MASK)
#define CAN_ECR_REG(base)                        ((base)->ECR)
#define CAN_ESR1_REG(base)                       ((base)->ESR1)
#define CAN_IMASK1_REG(base)                     ((base)->IMASK1)
#define CAN_IFLAG1_REG(base)                     ((base)->IFLAG1)
#define CAN_CTRL2_REG(base)                      ((base)->CTRL2)
#define CAN_ESR2_REG(base)                       ((base)->ESR2)
#define CAN_CRCR_REG(base)                       ((base)->CRCR)
#define CAN_RXFGMASK_REG(base)                   ((base)->RXFGMASK)
#define CAN_RXFIR_REG(base)                      ((base)->RXFIR)
#define CAN_CBT_REG(base)                        ((base)->CBT)
#define CAN_RXIMR_REG(base,index)                ((base)->RXIMR[index])
#define CAN_RXIMR_COUNT                          16
#define CAN_CTRL1_PN_REG(base)                   ((base)->CTRL1_PN)
#define CAN_CTRL2_PN_REG(base)                   ((base)->CTRL2_PN)
#define CAN_WU_MTC_REG(base)                     ((base)->WU_MTC)
#define CAN_FLT_ID1_REG(base)                    ((base)->FLT_ID1)
#define CAN_FLT_DLC_REG(base)                    ((base)->FLT_DLC)
#define CAN_PL1_LO_REG(base)                     ((base)->PL1_LO)
#define CAN_PL1_HI_REG(base)                     ((base)->PL1_HI)
#define CAN_FLT_ID2_IDMASK_REG(base)             ((base)->FLT_ID2_IDMASK)
#define CAN_PL2_PLMASK_LO_REG(base)              ((base)->PL2_PLMASK_LO)
#define CAN_PL2_PLMASK_HI_REG(base)              ((base)->PL2_PLMASK_HI)
#define CAN_WMB0_CS_REG(base)                    ((base)->WMB0_CS)
#define CAN_WMB0_ID_REG(base)                    ((base)->WMB0_ID)
#define CAN_WMB0_D03_REG(base)                   ((base)->WMB0_D03)
#define CAN_WMB0_D47_REG(base)                   ((base)->WMB0_D47)
#define CAN_WMB1_CS_REG(base)                    ((base)->WMB1_CS)
#define CAN_WMB1_ID_REG(base)                    ((base)->WMB1_ID)
#define CAN_WMB1_D03_REG(base)                   ((base)->WMB1_D03)
#define CAN_WMB1_D47_REG(base)                   ((base)->WMB1_D47)
#define CAN_WMB2_CS_REG(base)                    ((base)->WMB2_CS)
#define CAN_WMB2_ID_REG(base)                    ((base)->WMB2_ID)
#define CAN_WMB2_D03_REG(base)                   ((base)->WMB2_D03)
#define CAN_WMB2_D47_REG(base)                   ((base)->WMB2_D47)
#define CAN_WMB3_CS_REG(base)                    ((base)->WMB3_CS)
#define CAN_WMB3_ID_REG(base)                    ((base)->WMB3_ID)
#define CAN_WMB3_D03_REG(base)                   ((base)->WMB3_D03)
#define CAN_WMB3_D47_REG(base)                   ((base)->WMB3_D47)
#define CAN_FDCTRL_REG(base)                     ((base)->FDCTRL)
#define CAN_FDCBT_REG(base)                      ((base)->FDCBT)
#define CAN_FDCRC_REG(base)                      ((base)->FDCRC)

/*!
 * @}
 */ /* end of group CAN_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CAN Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Register_Masks CAN Register Masks
 * @{
 */

/* MCR Bit Fields */
#define CAN_MCR_MAXMB_MASK                       0x7Fu
#define CAN_MCR_MAXMB_SHIFT                      0
#define CAN_MCR_MAXMB_WIDTH                      7
#define CAN_MCR_MAXMB(x)                         (((uint32)(((uint32)(x))<<CAN_MCR_MAXMB_SHIFT))&CAN_MCR_MAXMB_MASK)
#define CAN_MCR_IDAM_MASK                        0x300u
#define CAN_MCR_IDAM_SHIFT                       8
#define CAN_MCR_IDAM_WIDTH                       2
#define CAN_MCR_IDAM(x)                          (((uint32)(((uint32)(x))<<CAN_MCR_IDAM_SHIFT))&CAN_MCR_IDAM_MASK)
#define CAN_MCR_FDEN_MASK                        0x800u
#define CAN_MCR_FDEN_SHIFT                       11
#define CAN_MCR_FDEN_WIDTH                       1
#define CAN_MCR_FDEN(x)                          (((uint32)(((uint32)(x))<<CAN_MCR_FDEN_SHIFT))&CAN_MCR_FDEN_MASK)
#define CAN_MCR_AEN_MASK                         0x1000u
#define CAN_MCR_AEN_SHIFT                        12
#define CAN_MCR_AEN_WIDTH                        1
#define CAN_MCR_AEN(x)                           (((uint32)(((uint32)(x))<<CAN_MCR_AEN_SHIFT))&CAN_MCR_AEN_MASK)
#define CAN_MCR_LPRIOEN_MASK                     0x2000u
#define CAN_MCR_LPRIOEN_SHIFT                    13
#define CAN_MCR_LPRIOEN_WIDTH                    1
#define CAN_MCR_LPRIOEN(x)                       (((uint32)(((uint32)(x))<<CAN_MCR_LPRIOEN_SHIFT))&CAN_MCR_LPRIOEN_MASK)
#define CAN_MCR_PNET_EN_MASK                     0x4000u
#define CAN_MCR_PNET_EN_SHIFT                    14
#define CAN_MCR_PNET_EN_WIDTH                    1
#define CAN_MCR_PNET_EN(x)                       (((uint32)(((uint32)(x))<<CAN_MCR_PNET_EN_SHIFT))&CAN_MCR_PNET_EN_MASK)
#define CAN_MCR_DMA_MASK                         0x8000u
#define CAN_MCR_DMA_SHIFT                        15
#define CAN_MCR_DMA_WIDTH                        1
#define CAN_MCR_DMA(x)                           (((uint32)(((uint32)(x))<<CAN_MCR_DMA_SHIFT))&CAN_MCR_DMA_MASK)
#define CAN_MCR_IRMQ_MASK                        0x10000u
#define CAN_MCR_IRMQ_SHIFT                       16
#define CAN_MCR_IRMQ_WIDTH                       1
#define CAN_MCR_IRMQ(x)                          (((uint32)(((uint32)(x))<<CAN_MCR_IRMQ_SHIFT))&CAN_MCR_IRMQ_MASK)
#define CAN_MCR_SRXDIS_MASK                      0x20000u
#define CAN_MCR_SRXDIS_SHIFT                     17
#define CAN_MCR_SRXDIS_WIDTH                     1
#define CAN_MCR_SRXDIS(x)                        (((uint32)(((uint32)(x))<<CAN_MCR_SRXDIS_SHIFT))&CAN_MCR_SRXDIS_MASK)
#define CAN_MCR_WAKSRC_MASK                      0x80000u
#define CAN_MCR_WAKSRC_SHIFT                     19
#define CAN_MCR_WAKSRC_WIDTH                     1
#define CAN_MCR_WAKSRC(x)                        (((uint32)(((uint32)(x))<<CAN_MCR_WAKSRC_SHIFT))&CAN_MCR_WAKSRC_MASK)
#define CAN_MCR_LPMACK_MASK                      0x100000u
#define CAN_MCR_LPMACK_SHIFT                     20
#define CAN_MCR_LPMACK_WIDTH                     1
#define CAN_MCR_LPMACK(x)                        (((uint32)(((uint32)(x))<<CAN_MCR_LPMACK_SHIFT))&CAN_MCR_LPMACK_MASK)
#define CAN_MCR_WRNEN_MASK                       0x200000u
#define CAN_MCR_WRNEN_SHIFT                      21
#define CAN_MCR_WRNEN_WIDTH                      1
#define CAN_MCR_WRNEN(x)                         (((uint32)(((uint32)(x))<<CAN_MCR_WRNEN_SHIFT))&CAN_MCR_WRNEN_MASK)
#define CAN_MCR_SLFWAK_MASK                      0x400000u
#define CAN_MCR_SLFWAK_SHIFT                     22
#define CAN_MCR_SLFWAK_WIDTH                     1
#define CAN_MCR_SLFWAK(x)                        (((uint32)(((uint32)(x))<<CAN_MCR_SLFWAK_SHIFT))&CAN_MCR_SLFWAK_MASK)
#define CAN_MCR_SUPV_MASK                        0x800000u
#define CAN_MCR_SUPV_SHIFT                       23
#define CAN_MCR_SUPV_WIDTH                       1
#define CAN_MCR_SUPV(x)                          (((uint32)(((uint32)(x))<<CAN_MCR_SUPV_SHIFT))&CAN_MCR_SUPV_MASK)
#define CAN_MCR_FRZACK_MASK                      0x1000000u
#define CAN_MCR_FRZACK_SHIFT                     24
#define CAN_MCR_FRZACK_WIDTH                     1
#define CAN_MCR_FRZACK(x)                        (((uint32)(((uint32)(x))<<CAN_MCR_FRZACK_SHIFT))&CAN_MCR_FRZACK_MASK)
#define CAN_MCR_SOFTRST_MASK                     0x2000000u
#define CAN_MCR_SOFTRST_SHIFT                    25
#define CAN_MCR_SOFTRST_WIDTH                    1
#define CAN_MCR_SOFTRST(x)                       (((uint32)(((uint32)(x))<<CAN_MCR_SOFTRST_SHIFT))&CAN_MCR_SOFTRST_MASK)
#define CAN_MCR_WAKMSK_MASK                      0x4000000u
#define CAN_MCR_WAKMSK_SHIFT                     26
#define CAN_MCR_WAKMSK_WIDTH                     1
#define CAN_MCR_WAKMSK(x)                        (((uint32)(((uint32)(x))<<CAN_MCR_WAKMSK_SHIFT))&CAN_MCR_WAKMSK_MASK)
#define CAN_MCR_NOTRDY_MASK                      0x8000000u
#define CAN_MCR_NOTRDY_SHIFT                     27
#define CAN_MCR_NOTRDY_WIDTH                     1
#define CAN_MCR_NOTRDY(x)                        (((uint32)(((uint32)(x))<<CAN_MCR_NOTRDY_SHIFT))&CAN_MCR_NOTRDY_MASK)
#define CAN_MCR_HALT_MASK                        0x10000000u
#define CAN_MCR_HALT_SHIFT                       28
#define CAN_MCR_HALT_WIDTH                       1
#define CAN_MCR_HALT(x)                          (((uint32)(((uint32)(x))<<CAN_MCR_HALT_SHIFT))&CAN_MCR_HALT_MASK)
#define CAN_MCR_RFEN_MASK                        0x20000000u
#define CAN_MCR_RFEN_SHIFT                       29
#define CAN_MCR_RFEN_WIDTH                       1
#define CAN_MCR_RFEN(x)                          (((uint32)(((uint32)(x))<<CAN_MCR_RFEN_SHIFT))&CAN_MCR_RFEN_MASK)
#define CAN_MCR_FRZ_MASK                         0x40000000u
#define CAN_MCR_FRZ_SHIFT                        30
#define CAN_MCR_FRZ_WIDTH                        1
#define CAN_MCR_FRZ(x)                           (((uint32)(((uint32)(x))<<CAN_MCR_FRZ_SHIFT))&CAN_MCR_FRZ_MASK)
#define CAN_MCR_MDIS_MASK                        0x80000000u
#define CAN_MCR_MDIS_SHIFT                       31
#define CAN_MCR_MDIS_WIDTH                       1
#define CAN_MCR_MDIS(x)                          (((uint32)(((uint32)(x))<<CAN_MCR_MDIS_SHIFT))&CAN_MCR_MDIS_MASK)
/* CTRL1 Bit Fields */
#define CAN_CTRL1_PROPSEG_MASK                   0x7u
#define CAN_CTRL1_PROPSEG_SHIFT                  0
#define CAN_CTRL1_PROPSEG_WIDTH                  3
#define CAN_CTRL1_PROPSEG(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_PROPSEG_SHIFT))&CAN_CTRL1_PROPSEG_MASK)
#define CAN_CTRL1_LOM_MASK                       0x8u
#define CAN_CTRL1_LOM_SHIFT                      3
#define CAN_CTRL1_LOM_WIDTH                      1
#define CAN_CTRL1_LOM(x)                         (((uint32)(((uint32)(x))<<CAN_CTRL1_LOM_SHIFT))&CAN_CTRL1_LOM_MASK)
#define CAN_CTRL1_LBUF_MASK                      0x10u
#define CAN_CTRL1_LBUF_SHIFT                     4
#define CAN_CTRL1_LBUF_WIDTH                     1
#define CAN_CTRL1_LBUF(x)                        (((uint32)(((uint32)(x))<<CAN_CTRL1_LBUF_SHIFT))&CAN_CTRL1_LBUF_MASK)
#define CAN_CTRL1_TSYN_MASK                      0x20u
#define CAN_CTRL1_TSYN_SHIFT                     5
#define CAN_CTRL1_TSYN_WIDTH                     1
#define CAN_CTRL1_TSYN(x)                        (((uint32)(((uint32)(x))<<CAN_CTRL1_TSYN_SHIFT))&CAN_CTRL1_TSYN_MASK)
#define CAN_CTRL1_BOFFREC_MASK                   0x40u
#define CAN_CTRL1_BOFFREC_SHIFT                  6
#define CAN_CTRL1_BOFFREC_WIDTH                  1
#define CAN_CTRL1_BOFFREC(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_BOFFREC_SHIFT))&CAN_CTRL1_BOFFREC_MASK)
#define CAN_CTRL1_SMP_MASK                       0x80u
#define CAN_CTRL1_SMP_SHIFT                      7
#define CAN_CTRL1_SMP_WIDTH                      1
#define CAN_CTRL1_SMP(x)                         (((uint32)(((uint32)(x))<<CAN_CTRL1_SMP_SHIFT))&CAN_CTRL1_SMP_MASK)
#define CAN_CTRL1_RWRNMSK_MASK                   0x400u
#define CAN_CTRL1_RWRNMSK_SHIFT                  10
#define CAN_CTRL1_RWRNMSK_WIDTH                  1
#define CAN_CTRL1_RWRNMSK(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_RWRNMSK_SHIFT))&CAN_CTRL1_RWRNMSK_MASK)
#define CAN_CTRL1_TWRNMSK_MASK                   0x800u
#define CAN_CTRL1_TWRNMSK_SHIFT                  11
#define CAN_CTRL1_TWRNMSK_WIDTH                  1
#define CAN_CTRL1_TWRNMSK(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_TWRNMSK_SHIFT))&CAN_CTRL1_TWRNMSK_MASK)
#define CAN_CTRL1_LPB_MASK                       0x1000u
#define CAN_CTRL1_LPB_SHIFT                      12
#define CAN_CTRL1_LPB_WIDTH                      1
#define CAN_CTRL1_LPB(x)                         (((uint32)(((uint32)(x))<<CAN_CTRL1_LPB_SHIFT))&CAN_CTRL1_LPB_MASK)
#define CAN_CTRL1_CLKSRC_MASK                    0x2000u
#define CAN_CTRL1_CLKSRC_SHIFT                   13
#define CAN_CTRL1_CLKSRC_WIDTH                   1
#define CAN_CTRL1_CLKSRC(x)                      (((uint32)(((uint32)(x))<<CAN_CTRL1_CLKSRC_SHIFT))&CAN_CTRL1_CLKSRC_MASK)
#define CAN_CTRL1_ERRMSK_MASK                    0x4000u
#define CAN_CTRL1_ERRMSK_SHIFT                   14
#define CAN_CTRL1_ERRMSK_WIDTH                   1
#define CAN_CTRL1_ERRMSK(x)                      (((uint32)(((uint32)(x))<<CAN_CTRL1_ERRMSK_SHIFT))&CAN_CTRL1_ERRMSK_MASK)
#define CAN_CTRL1_BOFFMSK_MASK                   0x8000u
#define CAN_CTRL1_BOFFMSK_SHIFT                  15
#define CAN_CTRL1_BOFFMSK_WIDTH                  1
#define CAN_CTRL1_BOFFMSK(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_BOFFMSK_SHIFT))&CAN_CTRL1_BOFFMSK_MASK)
#define CAN_CTRL1_PSEG2_MASK                     0x70000u
#define CAN_CTRL1_PSEG2_SHIFT                    16
#define CAN_CTRL1_PSEG2_WIDTH                    3
#define CAN_CTRL1_PSEG2(x)                       (((uint32)(((uint32)(x))<<CAN_CTRL1_PSEG2_SHIFT))&CAN_CTRL1_PSEG2_MASK)
#define CAN_CTRL1_PSEG1_MASK                     0x380000u
#define CAN_CTRL1_PSEG1_SHIFT                    19
#define CAN_CTRL1_PSEG1_WIDTH                    3
#define CAN_CTRL1_PSEG1(x)                       (((uint32)(((uint32)(x))<<CAN_CTRL1_PSEG1_SHIFT))&CAN_CTRL1_PSEG1_MASK)
#define CAN_CTRL1_RJW_MASK                       0xC00000u
#define CAN_CTRL1_RJW_SHIFT                      22
#define CAN_CTRL1_RJW_WIDTH                      2
#define CAN_CTRL1_RJW(x)                         (((uint32)(((uint32)(x))<<CAN_CTRL1_RJW_SHIFT))&CAN_CTRL1_RJW_MASK)
#define CAN_CTRL1_PRESDIV_MASK                   0xFF000000u
#define CAN_CTRL1_PRESDIV_SHIFT                  24
#define CAN_CTRL1_PRESDIV_WIDTH                  8
#define CAN_CTRL1_PRESDIV(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_PRESDIV_SHIFT))&CAN_CTRL1_PRESDIV_MASK)
/* TIMER Bit Fields */
#define CAN_TIMER_TIMER_MASK                     0xFFFFu
#define CAN_TIMER_TIMER_SHIFT                    0
#define CAN_TIMER_TIMER_WIDTH                    16
#define CAN_TIMER_TIMER(x)                       (((uint32)(((uint32)(x))<<CAN_TIMER_TIMER_SHIFT))&CAN_TIMER_TIMER_MASK)
/* RXMGMASK Bit Fields */
#define CAN_RXMGMASK_MG_MASK                     0xFFFFFFFFu
#define CAN_RXMGMASK_MG_SHIFT                    0
#define CAN_RXMGMASK_MG_WIDTH                    32
#define CAN_RXMGMASK_MG(x)                       (((uint32)(((uint32)(x))<<CAN_RXMGMASK_MG_SHIFT))&CAN_RXMGMASK_MG_MASK)
/* RX14MASK Bit Fields */
#define CAN_RX14MASK_RX14M_MASK                  0xFFFFFFFFu
#define CAN_RX14MASK_RX14M_SHIFT                 0
#define CAN_RX14MASK_RX14M_WIDTH                 32
#define CAN_RX14MASK_RX14M(x)                    (((uint32)(((uint32)(x))<<CAN_RX14MASK_RX14M_SHIFT))&CAN_RX14MASK_RX14M_MASK)
/* RX15MASK Bit Fields */
#define CAN_RX15MASK_RX15M_MASK                  0xFFFFFFFFu
#define CAN_RX15MASK_RX15M_SHIFT                 0
#define CAN_RX15MASK_RX15M_WIDTH                 32
#define CAN_RX15MASK_RX15M(x)                    (((uint32)(((uint32)(x))<<CAN_RX15MASK_RX15M_SHIFT))&CAN_RX15MASK_RX15M_MASK)
/* ECR Bit Fields */
#define CAN_ECR_TXERRCNT_MASK                    0xFFu
#define CAN_ECR_TXERRCNT_SHIFT                   0
#define CAN_ECR_TXERRCNT_WIDTH                   8
#define CAN_ECR_TXERRCNT(x)                      (((uint32)(((uint32)(x))<<CAN_ECR_TXERRCNT_SHIFT))&CAN_ECR_TXERRCNT_MASK)
#define CAN_ECR_RXERRCNT_MASK                    0xFF00u
#define CAN_ECR_RXERRCNT_SHIFT                   8
#define CAN_ECR_RXERRCNT_WIDTH                   8
#define CAN_ECR_RXERRCNT(x)                      (((uint32)(((uint32)(x))<<CAN_ECR_RXERRCNT_SHIFT))&CAN_ECR_RXERRCNT_MASK)
#define CAN_ECR_TXERRCNT_FAST_MASK               0xFF0000u
#define CAN_ECR_TXERRCNT_FAST_SHIFT              16
#define CAN_ECR_TXERRCNT_FAST_WIDTH              8
#define CAN_ECR_TXERRCNT_FAST(x)                 (((uint32)(((uint32)(x))<<CAN_ECR_TXERRCNT_FAST_SHIFT))&CAN_ECR_TXERRCNT_FAST_MASK)
#define CAN_ECR_RXERRCNT_FAST_MASK               0xFF000000u
#define CAN_ECR_RXERRCNT_FAST_SHIFT              24
#define CAN_ECR_RXERRCNT_FAST_WIDTH              8
#define CAN_ECR_RXERRCNT_FAST(x)                 (((uint32)(((uint32)(x))<<CAN_ECR_RXERRCNT_FAST_SHIFT))&CAN_ECR_RXERRCNT_FAST_MASK)
/* ESR1 Bit Fields */
#define CAN_ESR1_WAKINT_MASK                     0x1u
#define CAN_ESR1_WAKINT_SHIFT                    0
#define CAN_ESR1_WAKINT_WIDTH                    1
#define CAN_ESR1_WAKINT(x)                       (((uint32)(((uint32)(x))<<CAN_ESR1_WAKINT_SHIFT))&CAN_ESR1_WAKINT_MASK)
#define CAN_ESR1_ERRINT_MASK                     0x2u
#define CAN_ESR1_ERRINT_SHIFT                    1
#define CAN_ESR1_ERRINT_WIDTH                    1
#define CAN_ESR1_ERRINT(x)                       (((uint32)(((uint32)(x))<<CAN_ESR1_ERRINT_SHIFT))&CAN_ESR1_ERRINT_MASK)
#define CAN_ESR1_BOFFINT_MASK                    0x4u
#define CAN_ESR1_BOFFINT_SHIFT                   2
#define CAN_ESR1_BOFFINT_WIDTH                   1
#define CAN_ESR1_BOFFINT(x)                      (((uint32)(((uint32)(x))<<CAN_ESR1_BOFFINT_SHIFT))&CAN_ESR1_BOFFINT_MASK)
#define CAN_ESR1_RX_MASK                         0x8u
#define CAN_ESR1_RX_SHIFT                        3
#define CAN_ESR1_RX_WIDTH                        1
#define CAN_ESR1_RX(x)                           (((uint32)(((uint32)(x))<<CAN_ESR1_RX_SHIFT))&CAN_ESR1_RX_MASK)
#define CAN_ESR1_FLTCONF_MASK                    0x30u
#define CAN_ESR1_FLTCONF_SHIFT                   4
#define CAN_ESR1_FLTCONF_WIDTH                   2
#define CAN_ESR1_FLTCONF(x)                      (((uint32)(((uint32)(x))<<CAN_ESR1_FLTCONF_SHIFT))&CAN_ESR1_FLTCONF_MASK)
#define CAN_ESR1_TX_MASK                         0x40u
#define CAN_ESR1_TX_SHIFT                        6
#define CAN_ESR1_TX_WIDTH                        1
#define CAN_ESR1_TX(x)                           (((uint32)(((uint32)(x))<<CAN_ESR1_TX_SHIFT))&CAN_ESR1_TX_MASK)
#define CAN_ESR1_IDLE_MASK                       0x80u
#define CAN_ESR1_IDLE_SHIFT                      7
#define CAN_ESR1_IDLE_WIDTH                      1
#define CAN_ESR1_IDLE(x)                         (((uint32)(((uint32)(x))<<CAN_ESR1_IDLE_SHIFT))&CAN_ESR1_IDLE_MASK)
#define CAN_ESR1_RXWRN_MASK                      0x100u
#define CAN_ESR1_RXWRN_SHIFT                     8
#define CAN_ESR1_RXWRN_WIDTH                     1
#define CAN_ESR1_RXWRN(x)                        (((uint32)(((uint32)(x))<<CAN_ESR1_RXWRN_SHIFT))&CAN_ESR1_RXWRN_MASK)
#define CAN_ESR1_TXWRN_MASK                      0x200u
#define CAN_ESR1_TXWRN_SHIFT                     9
#define CAN_ESR1_TXWRN_WIDTH                     1
#define CAN_ESR1_TXWRN(x)                        (((uint32)(((uint32)(x))<<CAN_ESR1_TXWRN_SHIFT))&CAN_ESR1_TXWRN_MASK)
#define CAN_ESR1_STFERR_MASK                     0x400u
#define CAN_ESR1_STFERR_SHIFT                    10
#define CAN_ESR1_STFERR_WIDTH                    1
#define CAN_ESR1_STFERR(x)                       (((uint32)(((uint32)(x))<<CAN_ESR1_STFERR_SHIFT))&CAN_ESR1_STFERR_MASK)
#define CAN_ESR1_FRMERR_MASK                     0x800u
#define CAN_ESR1_FRMERR_SHIFT                    11
#define CAN_ESR1_FRMERR_WIDTH                    1
#define CAN_ESR1_FRMERR(x)                       (((uint32)(((uint32)(x))<<CAN_ESR1_FRMERR_SHIFT))&CAN_ESR1_FRMERR_MASK)
#define CAN_ESR1_CRCERR_MASK                     0x1000u
#define CAN_ESR1_CRCERR_SHIFT                    12
#define CAN_ESR1_CRCERR_WIDTH                    1
#define CAN_ESR1_CRCERR(x)                       (((uint32)(((uint32)(x))<<CAN_ESR1_CRCERR_SHIFT))&CAN_ESR1_CRCERR_MASK)
#define CAN_ESR1_ACKERR_MASK                     0x2000u
#define CAN_ESR1_ACKERR_SHIFT                    13
#define CAN_ESR1_ACKERR_WIDTH                    1
#define CAN_ESR1_ACKERR(x)                       (((uint32)(((uint32)(x))<<CAN_ESR1_ACKERR_SHIFT))&CAN_ESR1_ACKERR_MASK)
#define CAN_ESR1_BIT0ERR_MASK                    0x4000u
#define CAN_ESR1_BIT0ERR_SHIFT                   14
#define CAN_ESR1_BIT0ERR_WIDTH                   1
#define CAN_ESR1_BIT0ERR(x)                      (((uint32)(((uint32)(x))<<CAN_ESR1_BIT0ERR_SHIFT))&CAN_ESR1_BIT0ERR_MASK)
#define CAN_ESR1_BIT1ERR_MASK                    0x8000u
#define CAN_ESR1_BIT1ERR_SHIFT                   15
#define CAN_ESR1_BIT1ERR_WIDTH                   1
#define CAN_ESR1_BIT1ERR(x)                      (((uint32)(((uint32)(x))<<CAN_ESR1_BIT1ERR_SHIFT))&CAN_ESR1_BIT1ERR_MASK)
#define CAN_ESR1_RWRNINT_MASK                    0x10000u
#define CAN_ESR1_RWRNINT_SHIFT                   16
#define CAN_ESR1_RWRNINT_WIDTH                   1
#define CAN_ESR1_RWRNINT(x)                      (((uint32)(((uint32)(x))<<CAN_ESR1_RWRNINT_SHIFT))&CAN_ESR1_RWRNINT_MASK)
#define CAN_ESR1_TWRNINT_MASK                    0x20000u
#define CAN_ESR1_TWRNINT_SHIFT                   17
#define CAN_ESR1_TWRNINT_WIDTH                   1
#define CAN_ESR1_TWRNINT(x)                      (((uint32)(((uint32)(x))<<CAN_ESR1_TWRNINT_SHIFT))&CAN_ESR1_TWRNINT_MASK)
#define CAN_ESR1_SYNCH_MASK                      0x40000u
#define CAN_ESR1_SYNCH_SHIFT                     18
#define CAN_ESR1_SYNCH_WIDTH                     1
#define CAN_ESR1_SYNCH(x)                        (((uint32)(((uint32)(x))<<CAN_ESR1_SYNCH_SHIFT))&CAN_ESR1_SYNCH_MASK)
#define CAN_ESR1_BOFFDONEINT_MASK                0x80000u
#define CAN_ESR1_BOFFDONEINT_SHIFT               19
#define CAN_ESR1_BOFFDONEINT_WIDTH               1
#define CAN_ESR1_BOFFDONEINT(x)                  (((uint32)(((uint32)(x))<<CAN_ESR1_BOFFDONEINT_SHIFT))&CAN_ESR1_BOFFDONEINT_MASK)
#define CAN_ESR1_ERRINT_FAST_MASK                0x100000u
#define CAN_ESR1_ERRINT_FAST_SHIFT               20
#define CAN_ESR1_ERRINT_FAST_WIDTH               1
#define CAN_ESR1_ERRINT_FAST(x)                  (((uint32)(((uint32)(x))<<CAN_ESR1_ERRINT_FAST_SHIFT))&CAN_ESR1_ERRINT_FAST_MASK)
#define CAN_ESR1_ERROVR_MASK                     0x200000u
#define CAN_ESR1_ERROVR_SHIFT                    21
#define CAN_ESR1_ERROVR_WIDTH                    1
#define CAN_ESR1_ERROVR(x)                       (((uint32)(((uint32)(x))<<CAN_ESR1_ERROVR_SHIFT))&CAN_ESR1_ERROVR_MASK)
#define CAN_ESR1_STFERR_FAST_MASK                0x4000000u
#define CAN_ESR1_STFERR_FAST_SHIFT               26
#define CAN_ESR1_STFERR_FAST_WIDTH               1
#define CAN_ESR1_STFERR_FAST(x)                  (((uint32)(((uint32)(x))<<CAN_ESR1_STFERR_FAST_SHIFT))&CAN_ESR1_STFERR_FAST_MASK)
#define CAN_ESR1_FRMERR_FAST_MASK                0x8000000u
#define CAN_ESR1_FRMERR_FAST_SHIFT               27
#define CAN_ESR1_FRMERR_FAST_WIDTH               1
#define CAN_ESR1_FRMERR_FAST(x)                  (((uint32)(((uint32)(x))<<CAN_ESR1_FRMERR_FAST_SHIFT))&CAN_ESR1_FRMERR_FAST_MASK)
#define CAN_ESR1_CRCERR_FAST_MASK                0x10000000u
#define CAN_ESR1_CRCERR_FAST_SHIFT               28
#define CAN_ESR1_CRCERR_FAST_WIDTH               1
#define CAN_ESR1_CRCERR_FAST(x)                  (((uint32)(((uint32)(x))<<CAN_ESR1_CRCERR_FAST_SHIFT))&CAN_ESR1_CRCERR_FAST_MASK)
#define CAN_ESR1_BIT0ERR_FAST_MASK               0x40000000u
#define CAN_ESR1_BIT0ERR_FAST_SHIFT              30
#define CAN_ESR1_BIT0ERR_FAST_WIDTH              1
#define CAN_ESR1_BIT0ERR_FAST(x)                 (((uint32)(((uint32)(x))<<CAN_ESR1_BIT0ERR_FAST_SHIFT))&CAN_ESR1_BIT0ERR_FAST_MASK)
#define CAN_ESR1_BIT1ERR_FAST_MASK               0x80000000u
#define CAN_ESR1_BIT1ERR_FAST_SHIFT              31
#define CAN_ESR1_BIT1ERR_FAST_WIDTH              1
#define CAN_ESR1_BIT1ERR_FAST(x)                 (((uint32)(((uint32)(x))<<CAN_ESR1_BIT1ERR_FAST_SHIFT))&CAN_ESR1_BIT1ERR_FAST_MASK)
/* IMASK1 Bit Fields */
#define CAN_IMASK1_BUF31TO0M_MASK                0xFFFFFFFFu
#define CAN_IMASK1_BUF31TO0M_SHIFT               0
#define CAN_IMASK1_BUF31TO0M_WIDTH               32
#define CAN_IMASK1_BUF31TO0M(x)                  (((uint32)(((uint32)(x))<<CAN_IMASK1_BUF31TO0M_SHIFT))&CAN_IMASK1_BUF31TO0M_MASK)
/* IFLAG1 Bit Fields */
#define CAN_IFLAG1_BUF0I_MASK                    0x1u
#define CAN_IFLAG1_BUF0I_SHIFT                   0
#define CAN_IFLAG1_BUF0I_WIDTH                   1
#define CAN_IFLAG1_BUF0I(x)                      (((uint32)(((uint32)(x))<<CAN_IFLAG1_BUF0I_SHIFT))&CAN_IFLAG1_BUF0I_MASK)
#define CAN_IFLAG1_BUF4TO1I_MASK                 0x1Eu
#define CAN_IFLAG1_BUF4TO1I_SHIFT                1
#define CAN_IFLAG1_BUF4TO1I_WIDTH                4
#define CAN_IFLAG1_BUF4TO1I(x)                   (((uint32)(((uint32)(x))<<CAN_IFLAG1_BUF4TO1I_SHIFT))&CAN_IFLAG1_BUF4TO1I_MASK)
#define CAN_IFLAG1_BUF5I_MASK                    0x20u
#define CAN_IFLAG1_BUF5I_SHIFT                   5
#define CAN_IFLAG1_BUF5I_WIDTH                   1
#define CAN_IFLAG1_BUF5I(x)                      (((uint32)(((uint32)(x))<<CAN_IFLAG1_BUF5I_SHIFT))&CAN_IFLAG1_BUF5I_MASK)
#define CAN_IFLAG1_BUF6I_MASK                    0x40u
#define CAN_IFLAG1_BUF6I_SHIFT                   6
#define CAN_IFLAG1_BUF6I_WIDTH                   1
#define CAN_IFLAG1_BUF6I(x)                      (((uint32)(((uint32)(x))<<CAN_IFLAG1_BUF6I_SHIFT))&CAN_IFLAG1_BUF6I_MASK)
#define CAN_IFLAG1_BUF7I_MASK                    0x80u
#define CAN_IFLAG1_BUF7I_SHIFT                   7
#define CAN_IFLAG1_BUF7I_WIDTH                   1
#define CAN_IFLAG1_BUF7I(x)                      (((uint32)(((uint32)(x))<<CAN_IFLAG1_BUF7I_SHIFT))&CAN_IFLAG1_BUF7I_MASK)
#define CAN_IFLAG1_BUF31TO8I_MASK                0xFFFFFF00u
#define CAN_IFLAG1_BUF31TO8I_SHIFT               8
#define CAN_IFLAG1_BUF31TO8I_WIDTH               24
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32)(((uint32)(x))<<CAN_IFLAG1_BUF31TO8I_SHIFT))&CAN_IFLAG1_BUF31TO8I_MASK)
/* CTRL2 Bit Fields */
#define CAN_CTRL2_EDFLTDIS_MASK                  0x800u
#define CAN_CTRL2_EDFLTDIS_SHIFT                 11
#define CAN_CTRL2_EDFLTDIS_WIDTH                 1
#define CAN_CTRL2_EDFLTDIS(x)                    (((uint32)(((uint32)(x))<<CAN_CTRL2_EDFLTDIS_SHIFT))&CAN_CTRL2_EDFLTDIS_MASK)
#define CAN_CTRL2_STFCNTEN_MASK                  0x1000u
#define CAN_CTRL2_STFCNTEN_SHIFT                 12
#define CAN_CTRL2_STFCNTEN_WIDTH                 1
#define CAN_CTRL2_STFCNTEN(x)                    (((uint32)(((uint32)(x))<<CAN_CTRL2_STFCNTEN_SHIFT))&CAN_CTRL2_STFCNTEN_MASK)
#define CAN_CTRL2_PREXCEN_MASK                   0x4000u
#define CAN_CTRL2_PREXCEN_SHIFT                  14
#define CAN_CTRL2_PREXCEN_WIDTH                  1
#define CAN_CTRL2_PREXCEN(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL2_PREXCEN_SHIFT))&CAN_CTRL2_PREXCEN_MASK)
#define CAN_CTRL2_TIMER_SRC_MASK                 0x8000u
#define CAN_CTRL2_TIMER_SRC_SHIFT                15
#define CAN_CTRL2_TIMER_SRC_WIDTH                1
#define CAN_CTRL2_TIMER_SRC(x)                   (((uint32)(((uint32)(x))<<CAN_CTRL2_TIMER_SRC_SHIFT))&CAN_CTRL2_TIMER_SRC_MASK)
#define CAN_CTRL2_EACEN_MASK                     0x10000u
#define CAN_CTRL2_EACEN_SHIFT                    16
#define CAN_CTRL2_EACEN_WIDTH                    1
#define CAN_CTRL2_EACEN(x)                       (((uint32)(((uint32)(x))<<CAN_CTRL2_EACEN_SHIFT))&CAN_CTRL2_EACEN_MASK)
#define CAN_CTRL2_RRS_MASK                       0x20000u
#define CAN_CTRL2_RRS_SHIFT                      17
#define CAN_CTRL2_RRS_WIDTH                      1
#define CAN_CTRL2_RRS(x)                         (((uint32)(((uint32)(x))<<CAN_CTRL2_RRS_SHIFT))&CAN_CTRL2_RRS_MASK)
#define CAN_CTRL2_MRP_MASK                       0x40000u
#define CAN_CTRL2_MRP_SHIFT                      18
#define CAN_CTRL2_MRP_WIDTH                      1
#define CAN_CTRL2_MRP(x)                         (((uint32)(((uint32)(x))<<CAN_CTRL2_MRP_SHIFT))&CAN_CTRL2_MRP_MASK)
#define CAN_CTRL2_TASD_MASK                      0xF80000u
#define CAN_CTRL2_TASD_SHIFT                     19
#define CAN_CTRL2_TASD_WIDTH                     5
#define CAN_CTRL2_TASD(x)                        (((uint32)(((uint32)(x))<<CAN_CTRL2_TASD_SHIFT))&CAN_CTRL2_TASD_MASK)
#define CAN_CTRL2_RFFN_MASK                      0xF000000u
#define CAN_CTRL2_RFFN_SHIFT                     24
#define CAN_CTRL2_RFFN_WIDTH                     4
#define CAN_CTRL2_RFFN(x)                        (((uint32)(((uint32)(x))<<CAN_CTRL2_RFFN_SHIFT))&CAN_CTRL2_RFFN_MASK)
#define CAN_CTRL2_BOFFDONEMSK_MASK               0x40000000u
#define CAN_CTRL2_BOFFDONEMSK_SHIFT              30
#define CAN_CTRL2_BOFFDONEMSK_WIDTH              1
#define CAN_CTRL2_BOFFDONEMSK(x)                 (((uint32)(((uint32)(x))<<CAN_CTRL2_BOFFDONEMSK_SHIFT))&CAN_CTRL2_BOFFDONEMSK_MASK)
#define CAN_CTRL2_ERRMSK_FAST_MASK               0x80000000u
#define CAN_CTRL2_ERRMSK_FAST_SHIFT              31
#define CAN_CTRL2_ERRMSK_FAST_WIDTH              1
#define CAN_CTRL2_ERRMSK_FAST(x)                 (((uint32)(((uint32)(x))<<CAN_CTRL2_ERRMSK_FAST_SHIFT))&CAN_CTRL2_ERRMSK_FAST_MASK)
/* ESR2 Bit Fields */
#define CAN_ESR2_IMB_MASK                        0x2000u
#define CAN_ESR2_IMB_SHIFT                       13
#define CAN_ESR2_IMB_WIDTH                       1
#define CAN_ESR2_IMB(x)                          (((uint32)(((uint32)(x))<<CAN_ESR2_IMB_SHIFT))&CAN_ESR2_IMB_MASK)
#define CAN_ESR2_VPS_MASK                        0x4000u
#define CAN_ESR2_VPS_SHIFT                       14
#define CAN_ESR2_VPS_WIDTH                       1
#define CAN_ESR2_VPS(x)                          (((uint32)(((uint32)(x))<<CAN_ESR2_VPS_SHIFT))&CAN_ESR2_VPS_MASK)
#define CAN_ESR2_LPTM_MASK                       0x7F0000u
#define CAN_ESR2_LPTM_SHIFT                      16
#define CAN_ESR2_LPTM_WIDTH                      7
#define CAN_ESR2_LPTM(x)                         (((uint32)(((uint32)(x))<<CAN_ESR2_LPTM_SHIFT))&CAN_ESR2_LPTM_MASK)
/* CRCR Bit Fields */
#define CAN_CRCR_TXCRC_MASK                      0x7FFFu
#define CAN_CRCR_TXCRC_SHIFT                     0
#define CAN_CRCR_TXCRC_WIDTH                     15
#define CAN_CRCR_TXCRC(x)                        (((uint32)(((uint32)(x))<<CAN_CRCR_TXCRC_SHIFT))&CAN_CRCR_TXCRC_MASK)
#define CAN_CRCR_MBCRC_MASK                      0x7F0000u
#define CAN_CRCR_MBCRC_SHIFT                     16
#define CAN_CRCR_MBCRC_WIDTH                     7
#define CAN_CRCR_MBCRC(x)                        (((uint32)(((uint32)(x))<<CAN_CRCR_MBCRC_SHIFT))&CAN_CRCR_MBCRC_MASK)
/* RXFGMASK Bit Fields */
#define CAN_RXFGMASK_FGM_MASK                    0xFFFFFFFFu
#define CAN_RXFGMASK_FGM_SHIFT                   0
#define CAN_RXFGMASK_FGM_WIDTH                   32
#define CAN_RXFGMASK_FGM(x)                      (((uint32)(((uint32)(x))<<CAN_RXFGMASK_FGM_SHIFT))&CAN_RXFGMASK_FGM_MASK)
/* RXFIR Bit Fields */
#define CAN_RXFIR_IDHIT_MASK                     0x1FFu
#define CAN_RXFIR_IDHIT_SHIFT                    0
#define CAN_RXFIR_IDHIT_WIDTH                    9
#define CAN_RXFIR_IDHIT(x)                       (((uint32)(((uint32)(x))<<CAN_RXFIR_IDHIT_SHIFT))&CAN_RXFIR_IDHIT_MASK)
/* CBT Bit Fields */
#define CAN_CBT_EPSEG2_MASK                      0x1Fu
#define CAN_CBT_EPSEG2_SHIFT                     0
#define CAN_CBT_EPSEG2_WIDTH                     5
#define CAN_CBT_EPSEG2(x)                        (((uint32)(((uint32)(x))<<CAN_CBT_EPSEG2_SHIFT))&CAN_CBT_EPSEG2_MASK)
#define CAN_CBT_EPSEG1_MASK                      0x3E0u
#define CAN_CBT_EPSEG1_SHIFT                     5
#define CAN_CBT_EPSEG1_WIDTH                     5
#define CAN_CBT_EPSEG1(x)                        (((uint32)(((uint32)(x))<<CAN_CBT_EPSEG1_SHIFT))&CAN_CBT_EPSEG1_MASK)
#define CAN_CBT_EPROPSEG_MASK                    0xFC00u
#define CAN_CBT_EPROPSEG_SHIFT                   10
#define CAN_CBT_EPROPSEG_WIDTH                   6
#define CAN_CBT_EPROPSEG(x)                      (((uint32)(((uint32)(x))<<CAN_CBT_EPROPSEG_SHIFT))&CAN_CBT_EPROPSEG_MASK)
#define CAN_CBT_ERJW_MASK                        0x1F0000u
#define CAN_CBT_ERJW_SHIFT                       16
#define CAN_CBT_ERJW_WIDTH                       5
#define CAN_CBT_ERJW(x)                          (((uint32)(((uint32)(x))<<CAN_CBT_ERJW_SHIFT))&CAN_CBT_ERJW_MASK)
#define CAN_CBT_EPRESDIV_MASK                    0x7FE00000u
#define CAN_CBT_EPRESDIV_SHIFT                   21
#define CAN_CBT_EPRESDIV_WIDTH                   10
#define CAN_CBT_EPRESDIV(x)                      (((uint32)(((uint32)(x))<<CAN_CBT_EPRESDIV_SHIFT))&CAN_CBT_EPRESDIV_MASK)
#define CAN_CBT_BTF_MASK                         0x80000000u
#define CAN_CBT_BTF_SHIFT                        31
#define CAN_CBT_BTF_WIDTH                        1
#define CAN_CBT_BTF(x)                           (((uint32)(((uint32)(x))<<CAN_CBT_BTF_SHIFT))&CAN_CBT_BTF_MASK)
/* RXIMR Bit Fields */
#define CAN_RXIMR_MI_MASK                        0xFFFFFFFFu
#define CAN_RXIMR_MI_SHIFT                       0
#define CAN_RXIMR_MI_WIDTH                       32
#define CAN_RXIMR_MI(x)                          (((uint32)(((uint32)(x))<<CAN_RXIMR_MI_SHIFT))&CAN_RXIMR_MI_MASK)
/* CTRL1_PN Bit Fields */
#define CAN_CTRL1_PN_FCS_MASK                    0x3u
#define CAN_CTRL1_PN_FCS_SHIFT                   0
#define CAN_CTRL1_PN_FCS_WIDTH                   2
#define CAN_CTRL1_PN_FCS(x)                      (((uint32)(((uint32)(x))<<CAN_CTRL1_PN_FCS_SHIFT))&CAN_CTRL1_PN_FCS_MASK)
#define CAN_CTRL1_PN_IDFS_MASK                   0xCu
#define CAN_CTRL1_PN_IDFS_SHIFT                  2
#define CAN_CTRL1_PN_IDFS_WIDTH                  2
#define CAN_CTRL1_PN_IDFS(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_PN_IDFS_SHIFT))&CAN_CTRL1_PN_IDFS_MASK)
#define CAN_CTRL1_PN_PLFS_MASK                   0x30u
#define CAN_CTRL1_PN_PLFS_SHIFT                  4
#define CAN_CTRL1_PN_PLFS_WIDTH                  2
#define CAN_CTRL1_PN_PLFS(x)                     (((uint32)(((uint32)(x))<<CAN_CTRL1_PN_PLFS_SHIFT))&CAN_CTRL1_PN_PLFS_MASK)
#define CAN_CTRL1_PN_NMATCH_MASK                 0xFF00u
#define CAN_CTRL1_PN_NMATCH_SHIFT                8
#define CAN_CTRL1_PN_NMATCH_WIDTH                8
#define CAN_CTRL1_PN_NMATCH(x)                   (((uint32)(((uint32)(x))<<CAN_CTRL1_PN_NMATCH_SHIFT))&CAN_CTRL1_PN_NMATCH_MASK)
#define CAN_CTRL1_PN_WUMF_MSK_MASK               0x10000u
#define CAN_CTRL1_PN_WUMF_MSK_SHIFT              16
#define CAN_CTRL1_PN_WUMF_MSK_WIDTH              1
#define CAN_CTRL1_PN_WUMF_MSK(x)                 (((uint32)(((uint32)(x))<<CAN_CTRL1_PN_WUMF_MSK_SHIFT))&CAN_CTRL1_PN_WUMF_MSK_MASK)
#define CAN_CTRL1_PN_WTOF_MSK_MASK               0x20000u
#define CAN_CTRL1_PN_WTOF_MSK_SHIFT              17
#define CAN_CTRL1_PN_WTOF_MSK_WIDTH              1
#define CAN_CTRL1_PN_WTOF_MSK(x)                 (((uint32)(((uint32)(x))<<CAN_CTRL1_PN_WTOF_MSK_SHIFT))&CAN_CTRL1_PN_WTOF_MSK_MASK)
/* CTRL2_PN Bit Fields */
#define CAN_CTRL2_PN_MATCHTO_MASK                0xFFFFu
#define CAN_CTRL2_PN_MATCHTO_SHIFT               0
#define CAN_CTRL2_PN_MATCHTO_WIDTH               16
#define CAN_CTRL2_PN_MATCHTO(x)                  (((uint32)(((uint32)(x))<<CAN_CTRL2_PN_MATCHTO_SHIFT))&CAN_CTRL2_PN_MATCHTO_MASK)
/* WU_MTC Bit Fields */
#define CAN_WU_MTC_MCOUNTER_MASK                 0xFF00u
#define CAN_WU_MTC_MCOUNTER_SHIFT                8
#define CAN_WU_MTC_MCOUNTER_WIDTH                8
#define CAN_WU_MTC_MCOUNTER(x)                   (((uint32)(((uint32)(x))<<CAN_WU_MTC_MCOUNTER_SHIFT))&CAN_WU_MTC_MCOUNTER_MASK)
#define CAN_WU_MTC_WUMF_MASK                     0x10000u
#define CAN_WU_MTC_WUMF_SHIFT                    16
#define CAN_WU_MTC_WUMF_WIDTH                    1
#define CAN_WU_MTC_WUMF(x)                       (((uint32)(((uint32)(x))<<CAN_WU_MTC_WUMF_SHIFT))&CAN_WU_MTC_WUMF_MASK)
#define CAN_WU_MTC_WTOF_MASK                     0x20000u
#define CAN_WU_MTC_WTOF_SHIFT                    17
#define CAN_WU_MTC_WTOF_WIDTH                    1
#define CAN_WU_MTC_WTOF(x)                       (((uint32)(((uint32)(x))<<CAN_WU_MTC_WTOF_SHIFT))&CAN_WU_MTC_WTOF_MASK)
/* FLT_ID1 Bit Fields */
#define CAN_FLT_ID1_FLT_ID1_MASK                 0x1FFFFFFFu
#define CAN_FLT_ID1_FLT_ID1_SHIFT                0
#define CAN_FLT_ID1_FLT_ID1_WIDTH                29
#define CAN_FLT_ID1_FLT_ID1(x)                   (((uint32)(((uint32)(x))<<CAN_FLT_ID1_FLT_ID1_SHIFT))&CAN_FLT_ID1_FLT_ID1_MASK)
#define CAN_FLT_ID1_FLT_RTR_MASK                 0x20000000u
#define CAN_FLT_ID1_FLT_RTR_SHIFT                29
#define CAN_FLT_ID1_FLT_RTR_WIDTH                1
#define CAN_FLT_ID1_FLT_RTR(x)                   (((uint32)(((uint32)(x))<<CAN_FLT_ID1_FLT_RTR_SHIFT))&CAN_FLT_ID1_FLT_RTR_MASK)
#define CAN_FLT_ID1_FLT_IDE_MASK                 0x40000000u
#define CAN_FLT_ID1_FLT_IDE_SHIFT                30
#define CAN_FLT_ID1_FLT_IDE_WIDTH                1
#define CAN_FLT_ID1_FLT_IDE(x)                   (((uint32)(((uint32)(x))<<CAN_FLT_ID1_FLT_IDE_SHIFT))&CAN_FLT_ID1_FLT_IDE_MASK)
/* FLT_DLC Bit Fields */
#define CAN_FLT_DLC_FLT_DLC_HI_MASK              0xFu
#define CAN_FLT_DLC_FLT_DLC_HI_SHIFT             0
#define CAN_FLT_DLC_FLT_DLC_HI_WIDTH             4
#define CAN_FLT_DLC_FLT_DLC_HI(x)                (((uint32)(((uint32)(x))<<CAN_FLT_DLC_FLT_DLC_HI_SHIFT))&CAN_FLT_DLC_FLT_DLC_HI_MASK)
#define CAN_FLT_DLC_FLT_DLC_LO_MASK              0xF0000u
#define CAN_FLT_DLC_FLT_DLC_LO_SHIFT             16
#define CAN_FLT_DLC_FLT_DLC_LO_WIDTH             4
#define CAN_FLT_DLC_FLT_DLC_LO(x)                (((uint32)(((uint32)(x))<<CAN_FLT_DLC_FLT_DLC_LO_SHIFT))&CAN_FLT_DLC_FLT_DLC_LO_MASK)
/* PL1_LO Bit Fields */
#define CAN_PL1_LO_Data_byte_3_MASK              0xFFu
#define CAN_PL1_LO_Data_byte_3_SHIFT             0
#define CAN_PL1_LO_Data_byte_3_WIDTH             8
#define CAN_PL1_LO_Data_byte_3(x)                (((uint32)(((uint32)(x))<<CAN_PL1_LO_Data_byte_3_SHIFT))&CAN_PL1_LO_Data_byte_3_MASK)
#define CAN_PL1_LO_Data_byte_2_MASK              0xFF00u
#define CAN_PL1_LO_Data_byte_2_SHIFT             8
#define CAN_PL1_LO_Data_byte_2_WIDTH             8
#define CAN_PL1_LO_Data_byte_2(x)                (((uint32)(((uint32)(x))<<CAN_PL1_LO_Data_byte_2_SHIFT))&CAN_PL1_LO_Data_byte_2_MASK)
#define CAN_PL1_LO_Data_byte_1_MASK              0xFF0000u
#define CAN_PL1_LO_Data_byte_1_SHIFT             16
#define CAN_PL1_LO_Data_byte_1_WIDTH             8
#define CAN_PL1_LO_Data_byte_1(x)                (((uint32)(((uint32)(x))<<CAN_PL1_LO_Data_byte_1_SHIFT))&CAN_PL1_LO_Data_byte_1_MASK)
#define CAN_PL1_LO_Data_byte_0_MASK              0xFF000000u
#define CAN_PL1_LO_Data_byte_0_SHIFT             24
#define CAN_PL1_LO_Data_byte_0_WIDTH             8
#define CAN_PL1_LO_Data_byte_0(x)                (((uint32)(((uint32)(x))<<CAN_PL1_LO_Data_byte_0_SHIFT))&CAN_PL1_LO_Data_byte_0_MASK)
/* PL1_HI Bit Fields */
#define CAN_PL1_HI_Data_byte_7_MASK              0xFFu
#define CAN_PL1_HI_Data_byte_7_SHIFT             0
#define CAN_PL1_HI_Data_byte_7_WIDTH             8
#define CAN_PL1_HI_Data_byte_7(x)                (((uint32)(((uint32)(x))<<CAN_PL1_HI_Data_byte_7_SHIFT))&CAN_PL1_HI_Data_byte_7_MASK)
#define CAN_PL1_HI_Data_byte_6_MASK              0xFF00u
#define CAN_PL1_HI_Data_byte_6_SHIFT             8
#define CAN_PL1_HI_Data_byte_6_WIDTH             8
#define CAN_PL1_HI_Data_byte_6(x)                (((uint32)(((uint32)(x))<<CAN_PL1_HI_Data_byte_6_SHIFT))&CAN_PL1_HI_Data_byte_6_MASK)
#define CAN_PL1_HI_Data_byte_5_MASK              0xFF0000u
#define CAN_PL1_HI_Data_byte_5_SHIFT             16
#define CAN_PL1_HI_Data_byte_5_WIDTH             8
#define CAN_PL1_HI_Data_byte_5(x)                (((uint32)(((uint32)(x))<<CAN_PL1_HI_Data_byte_5_SHIFT))&CAN_PL1_HI_Data_byte_5_MASK)
#define CAN_PL1_HI_Data_byte_4_MASK              0xFF000000u
#define CAN_PL1_HI_Data_byte_4_SHIFT             24
#define CAN_PL1_HI_Data_byte_4_WIDTH             8
#define CAN_PL1_HI_Data_byte_4(x)                (((uint32)(((uint32)(x))<<CAN_PL1_HI_Data_byte_4_SHIFT))&CAN_PL1_HI_Data_byte_4_MASK)
/* FLT_ID2_IDMASK Bit Fields */
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_MASK   0x1FFFFFFFu
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_SHIFT  0
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_WIDTH  29
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK(x)     (((uint32)(((uint32)(x))<<CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_SHIFT))&CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_MASK)
#define CAN_FLT_ID2_IDMASK_RTR_MSK_MASK          0x20000000u
#define CAN_FLT_ID2_IDMASK_RTR_MSK_SHIFT         29
#define CAN_FLT_ID2_IDMASK_RTR_MSK_WIDTH         1
#define CAN_FLT_ID2_IDMASK_RTR_MSK(x)            (((uint32)(((uint32)(x))<<CAN_FLT_ID2_IDMASK_RTR_MSK_SHIFT))&CAN_FLT_ID2_IDMASK_RTR_MSK_MASK)
#define CAN_FLT_ID2_IDMASK_IDE_MSK_MASK          0x40000000u
#define CAN_FLT_ID2_IDMASK_IDE_MSK_SHIFT         30
#define CAN_FLT_ID2_IDMASK_IDE_MSK_WIDTH         1
#define CAN_FLT_ID2_IDMASK_IDE_MSK(x)            (((uint32)(((uint32)(x))<<CAN_FLT_ID2_IDMASK_IDE_MSK_SHIFT))&CAN_FLT_ID2_IDMASK_IDE_MSK_MASK)
/* PL2_PLMASK_LO Bit Fields */
#define CAN_PL2_PLMASK_LO_Data_byte_3_MASK       0xFFu
#define CAN_PL2_PLMASK_LO_Data_byte_3_SHIFT      0
#define CAN_PL2_PLMASK_LO_Data_byte_3_WIDTH      8
#define CAN_PL2_PLMASK_LO_Data_byte_3(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_LO_Data_byte_3_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_3_MASK)
#define CAN_PL2_PLMASK_LO_Data_byte_2_MASK       0xFF00u
#define CAN_PL2_PLMASK_LO_Data_byte_2_SHIFT      8
#define CAN_PL2_PLMASK_LO_Data_byte_2_WIDTH      8
#define CAN_PL2_PLMASK_LO_Data_byte_2(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_LO_Data_byte_2_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_2_MASK)
#define CAN_PL2_PLMASK_LO_Data_byte_1_MASK       0xFF0000u
#define CAN_PL2_PLMASK_LO_Data_byte_1_SHIFT      16
#define CAN_PL2_PLMASK_LO_Data_byte_1_WIDTH      8
#define CAN_PL2_PLMASK_LO_Data_byte_1(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_LO_Data_byte_1_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_1_MASK)
#define CAN_PL2_PLMASK_LO_Data_byte_0_MASK       0xFF000000u
#define CAN_PL2_PLMASK_LO_Data_byte_0_SHIFT      24
#define CAN_PL2_PLMASK_LO_Data_byte_0_WIDTH      8
#define CAN_PL2_PLMASK_LO_Data_byte_0(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_LO_Data_byte_0_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_0_MASK)
/* PL2_PLMASK_HI Bit Fields */
#define CAN_PL2_PLMASK_HI_Data_byte_7_MASK       0xFFu
#define CAN_PL2_PLMASK_HI_Data_byte_7_SHIFT      0
#define CAN_PL2_PLMASK_HI_Data_byte_7_WIDTH      8
#define CAN_PL2_PLMASK_HI_Data_byte_7(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_HI_Data_byte_7_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_7_MASK)
#define CAN_PL2_PLMASK_HI_Data_byte_6_MASK       0xFF00u
#define CAN_PL2_PLMASK_HI_Data_byte_6_SHIFT      8
#define CAN_PL2_PLMASK_HI_Data_byte_6_WIDTH      8
#define CAN_PL2_PLMASK_HI_Data_byte_6(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_HI_Data_byte_6_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_6_MASK)
#define CAN_PL2_PLMASK_HI_Data_byte_5_MASK       0xFF0000u
#define CAN_PL2_PLMASK_HI_Data_byte_5_SHIFT      16
#define CAN_PL2_PLMASK_HI_Data_byte_5_WIDTH      8
#define CAN_PL2_PLMASK_HI_Data_byte_5(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_HI_Data_byte_5_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_5_MASK)
#define CAN_PL2_PLMASK_HI_Data_byte_4_MASK       0xFF000000u
#define CAN_PL2_PLMASK_HI_Data_byte_4_SHIFT      24
#define CAN_PL2_PLMASK_HI_Data_byte_4_WIDTH      8
#define CAN_PL2_PLMASK_HI_Data_byte_4(x)         (((uint32)(((uint32)(x))<<CAN_PL2_PLMASK_HI_Data_byte_4_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_4_MASK)
/* WMB0_CS Bit Fields */
#define CAN_WMB0_CS_DLC_MASK                     0xF0000u
#define CAN_WMB0_CS_DLC_SHIFT                    16
#define CAN_WMB0_CS_DLC_WIDTH                    4
#define CAN_WMB0_CS_DLC(x)                       (((uint32)(((uint32)(x))<<CAN_WMB0_CS_DLC_SHIFT))&CAN_WMB0_CS_DLC_MASK)
#define CAN_WMB0_CS_RTR_MASK                     0x100000u
#define CAN_WMB0_CS_RTR_SHIFT                    20
#define CAN_WMB0_CS_RTR_WIDTH                    1
#define CAN_WMB0_CS_RTR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB0_CS_RTR_SHIFT))&CAN_WMB0_CS_RTR_MASK)
#define CAN_WMB0_CS_IDE_MASK                     0x200000u
#define CAN_WMB0_CS_IDE_SHIFT                    21
#define CAN_WMB0_CS_IDE_WIDTH                    1
#define CAN_WMB0_CS_IDE(x)                       (((uint32)(((uint32)(x))<<CAN_WMB0_CS_IDE_SHIFT))&CAN_WMB0_CS_IDE_MASK)
#define CAN_WMB0_CS_SRR_MASK                     0x400000u
#define CAN_WMB0_CS_SRR_SHIFT                    22
#define CAN_WMB0_CS_SRR_WIDTH                    1
#define CAN_WMB0_CS_SRR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB0_CS_SRR_SHIFT))&CAN_WMB0_CS_SRR_MASK)
/* WMB0_ID Bit Fields */
#define CAN_WMB0_ID_ID_MASK                      0x1FFFFFFFu
#define CAN_WMB0_ID_ID_SHIFT                     0
#define CAN_WMB0_ID_ID_WIDTH                     29
#define CAN_WMB0_ID_ID(x)                        (((uint32)(((uint32)(x))<<CAN_WMB0_ID_ID_SHIFT))&CAN_WMB0_ID_ID_MASK)
/* WMB0_D03 Bit Fields */
#define CAN_WMB0_D03_Data_byte_3_MASK            0xFFu
#define CAN_WMB0_D03_Data_byte_3_SHIFT           0
#define CAN_WMB0_D03_Data_byte_3_WIDTH           8
#define CAN_WMB0_D03_Data_byte_3(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D03_Data_byte_3_SHIFT))&CAN_WMB0_D03_Data_byte_3_MASK)
#define CAN_WMB0_D03_Data_byte_2_MASK            0xFF00u
#define CAN_WMB0_D03_Data_byte_2_SHIFT           8
#define CAN_WMB0_D03_Data_byte_2_WIDTH           8
#define CAN_WMB0_D03_Data_byte_2(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D03_Data_byte_2_SHIFT))&CAN_WMB0_D03_Data_byte_2_MASK)
#define CAN_WMB0_D03_Data_byte_1_MASK            0xFF0000u
#define CAN_WMB0_D03_Data_byte_1_SHIFT           16
#define CAN_WMB0_D03_Data_byte_1_WIDTH           8
#define CAN_WMB0_D03_Data_byte_1(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D03_Data_byte_1_SHIFT))&CAN_WMB0_D03_Data_byte_1_MASK)
#define CAN_WMB0_D03_Data_byte_0_MASK            0xFF000000u
#define CAN_WMB0_D03_Data_byte_0_SHIFT           24
#define CAN_WMB0_D03_Data_byte_0_WIDTH           8
#define CAN_WMB0_D03_Data_byte_0(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D03_Data_byte_0_SHIFT))&CAN_WMB0_D03_Data_byte_0_MASK)
/* WMB0_D47 Bit Fields */
#define CAN_WMB0_D47_Data_byte_7_MASK            0xFFu
#define CAN_WMB0_D47_Data_byte_7_SHIFT           0
#define CAN_WMB0_D47_Data_byte_7_WIDTH           8
#define CAN_WMB0_D47_Data_byte_7(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D47_Data_byte_7_SHIFT))&CAN_WMB0_D47_Data_byte_7_MASK)
#define CAN_WMB0_D47_Data_byte_6_MASK            0xFF00u
#define CAN_WMB0_D47_Data_byte_6_SHIFT           8
#define CAN_WMB0_D47_Data_byte_6_WIDTH           8
#define CAN_WMB0_D47_Data_byte_6(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D47_Data_byte_6_SHIFT))&CAN_WMB0_D47_Data_byte_6_MASK)
#define CAN_WMB0_D47_Data_byte_5_MASK            0xFF0000u
#define CAN_WMB0_D47_Data_byte_5_SHIFT           16
#define CAN_WMB0_D47_Data_byte_5_WIDTH           8
#define CAN_WMB0_D47_Data_byte_5(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D47_Data_byte_5_SHIFT))&CAN_WMB0_D47_Data_byte_5_MASK)
#define CAN_WMB0_D47_Data_byte_4_MASK            0xFF000000u
#define CAN_WMB0_D47_Data_byte_4_SHIFT           24
#define CAN_WMB0_D47_Data_byte_4_WIDTH           8
#define CAN_WMB0_D47_Data_byte_4(x)              (((uint32)(((uint32)(x))<<CAN_WMB0_D47_Data_byte_4_SHIFT))&CAN_WMB0_D47_Data_byte_4_MASK)
/* WMB1_CS Bit Fields */
#define CAN_WMB1_CS_DLC_MASK                     0xF0000u
#define CAN_WMB1_CS_DLC_SHIFT                    16
#define CAN_WMB1_CS_DLC_WIDTH                    4
#define CAN_WMB1_CS_DLC(x)                       (((uint32)(((uint32)(x))<<CAN_WMB1_CS_DLC_SHIFT))&CAN_WMB1_CS_DLC_MASK)
#define CAN_WMB1_CS_RTR_MASK                     0x100000u
#define CAN_WMB1_CS_RTR_SHIFT                    20
#define CAN_WMB1_CS_RTR_WIDTH                    1
#define CAN_WMB1_CS_RTR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB1_CS_RTR_SHIFT))&CAN_WMB1_CS_RTR_MASK)
#define CAN_WMB1_CS_IDE_MASK                     0x200000u
#define CAN_WMB1_CS_IDE_SHIFT                    21
#define CAN_WMB1_CS_IDE_WIDTH                    1
#define CAN_WMB1_CS_IDE(x)                       (((uint32)(((uint32)(x))<<CAN_WMB1_CS_IDE_SHIFT))&CAN_WMB1_CS_IDE_MASK)
#define CAN_WMB1_CS_SRR_MASK                     0x400000u
#define CAN_WMB1_CS_SRR_SHIFT                    22
#define CAN_WMB1_CS_SRR_WIDTH                    1
#define CAN_WMB1_CS_SRR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB1_CS_SRR_SHIFT))&CAN_WMB1_CS_SRR_MASK)
/* WMB1_ID Bit Fields */
#define CAN_WMB1_ID_ID_MASK                      0x1FFFFFFFu
#define CAN_WMB1_ID_ID_SHIFT                     0
#define CAN_WMB1_ID_ID_WIDTH                     29
#define CAN_WMB1_ID_ID(x)                        (((uint32)(((uint32)(x))<<CAN_WMB1_ID_ID_SHIFT))&CAN_WMB1_ID_ID_MASK)
/* WMB1_D03 Bit Fields */
#define CAN_WMB1_D03_Data_byte_3_MASK            0xFFu
#define CAN_WMB1_D03_Data_byte_3_SHIFT           0
#define CAN_WMB1_D03_Data_byte_3_WIDTH           8
#define CAN_WMB1_D03_Data_byte_3(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D03_Data_byte_3_SHIFT))&CAN_WMB1_D03_Data_byte_3_MASK)
#define CAN_WMB1_D03_Data_byte_2_MASK            0xFF00u
#define CAN_WMB1_D03_Data_byte_2_SHIFT           8
#define CAN_WMB1_D03_Data_byte_2_WIDTH           8
#define CAN_WMB1_D03_Data_byte_2(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D03_Data_byte_2_SHIFT))&CAN_WMB1_D03_Data_byte_2_MASK)
#define CAN_WMB1_D03_Data_byte_1_MASK            0xFF0000u
#define CAN_WMB1_D03_Data_byte_1_SHIFT           16
#define CAN_WMB1_D03_Data_byte_1_WIDTH           8
#define CAN_WMB1_D03_Data_byte_1(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D03_Data_byte_1_SHIFT))&CAN_WMB1_D03_Data_byte_1_MASK)
#define CAN_WMB1_D03_Data_byte_0_MASK            0xFF000000u
#define CAN_WMB1_D03_Data_byte_0_SHIFT           24
#define CAN_WMB1_D03_Data_byte_0_WIDTH           8
#define CAN_WMB1_D03_Data_byte_0(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D03_Data_byte_0_SHIFT))&CAN_WMB1_D03_Data_byte_0_MASK)
/* WMB1_D47 Bit Fields */
#define CAN_WMB1_D47_Data_byte_7_MASK            0xFFu
#define CAN_WMB1_D47_Data_byte_7_SHIFT           0
#define CAN_WMB1_D47_Data_byte_7_WIDTH           8
#define CAN_WMB1_D47_Data_byte_7(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D47_Data_byte_7_SHIFT))&CAN_WMB1_D47_Data_byte_7_MASK)
#define CAN_WMB1_D47_Data_byte_6_MASK            0xFF00u
#define CAN_WMB1_D47_Data_byte_6_SHIFT           8
#define CAN_WMB1_D47_Data_byte_6_WIDTH           8
#define CAN_WMB1_D47_Data_byte_6(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D47_Data_byte_6_SHIFT))&CAN_WMB1_D47_Data_byte_6_MASK)
#define CAN_WMB1_D47_Data_byte_5_MASK            0xFF0000u
#define CAN_WMB1_D47_Data_byte_5_SHIFT           16
#define CAN_WMB1_D47_Data_byte_5_WIDTH           8
#define CAN_WMB1_D47_Data_byte_5(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D47_Data_byte_5_SHIFT))&CAN_WMB1_D47_Data_byte_5_MASK)
#define CAN_WMB1_D47_Data_byte_4_MASK            0xFF000000u
#define CAN_WMB1_D47_Data_byte_4_SHIFT           24
#define CAN_WMB1_D47_Data_byte_4_WIDTH           8
#define CAN_WMB1_D47_Data_byte_4(x)              (((uint32)(((uint32)(x))<<CAN_WMB1_D47_Data_byte_4_SHIFT))&CAN_WMB1_D47_Data_byte_4_MASK)
/* WMB2_CS Bit Fields */
#define CAN_WMB2_CS_DLC_MASK                     0xF0000u
#define CAN_WMB2_CS_DLC_SHIFT                    16
#define CAN_WMB2_CS_DLC_WIDTH                    4
#define CAN_WMB2_CS_DLC(x)                       (((uint32)(((uint32)(x))<<CAN_WMB2_CS_DLC_SHIFT))&CAN_WMB2_CS_DLC_MASK)
#define CAN_WMB2_CS_RTR_MASK                     0x100000u
#define CAN_WMB2_CS_RTR_SHIFT                    20
#define CAN_WMB2_CS_RTR_WIDTH                    1
#define CAN_WMB2_CS_RTR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB2_CS_RTR_SHIFT))&CAN_WMB2_CS_RTR_MASK)
#define CAN_WMB2_CS_IDE_MASK                     0x200000u
#define CAN_WMB2_CS_IDE_SHIFT                    21
#define CAN_WMB2_CS_IDE_WIDTH                    1
#define CAN_WMB2_CS_IDE(x)                       (((uint32)(((uint32)(x))<<CAN_WMB2_CS_IDE_SHIFT))&CAN_WMB2_CS_IDE_MASK)
#define CAN_WMB2_CS_SRR_MASK                     0x400000u
#define CAN_WMB2_CS_SRR_SHIFT                    22
#define CAN_WMB2_CS_SRR_WIDTH                    1
#define CAN_WMB2_CS_SRR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB2_CS_SRR_SHIFT))&CAN_WMB2_CS_SRR_MASK)
/* WMB2_ID Bit Fields */
#define CAN_WMB2_ID_ID_MASK                      0x1FFFFFFFu
#define CAN_WMB2_ID_ID_SHIFT                     0
#define CAN_WMB2_ID_ID_WIDTH                     29
#define CAN_WMB2_ID_ID(x)                        (((uint32)(((uint32)(x))<<CAN_WMB2_ID_ID_SHIFT))&CAN_WMB2_ID_ID_MASK)
/* WMB2_D03 Bit Fields */
#define CAN_WMB2_D03_Data_byte_3_MASK            0xFFu
#define CAN_WMB2_D03_Data_byte_3_SHIFT           0
#define CAN_WMB2_D03_Data_byte_3_WIDTH           8
#define CAN_WMB2_D03_Data_byte_3(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D03_Data_byte_3_SHIFT))&CAN_WMB2_D03_Data_byte_3_MASK)
#define CAN_WMB2_D03_Data_byte_2_MASK            0xFF00u
#define CAN_WMB2_D03_Data_byte_2_SHIFT           8
#define CAN_WMB2_D03_Data_byte_2_WIDTH           8
#define CAN_WMB2_D03_Data_byte_2(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D03_Data_byte_2_SHIFT))&CAN_WMB2_D03_Data_byte_2_MASK)
#define CAN_WMB2_D03_Data_byte_1_MASK            0xFF0000u
#define CAN_WMB2_D03_Data_byte_1_SHIFT           16
#define CAN_WMB2_D03_Data_byte_1_WIDTH           8
#define CAN_WMB2_D03_Data_byte_1(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D03_Data_byte_1_SHIFT))&CAN_WMB2_D03_Data_byte_1_MASK)
#define CAN_WMB2_D03_Data_byte_0_MASK            0xFF000000u
#define CAN_WMB2_D03_Data_byte_0_SHIFT           24
#define CAN_WMB2_D03_Data_byte_0_WIDTH           8
#define CAN_WMB2_D03_Data_byte_0(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D03_Data_byte_0_SHIFT))&CAN_WMB2_D03_Data_byte_0_MASK)
/* WMB2_D47 Bit Fields */
#define CAN_WMB2_D47_Data_byte_7_MASK            0xFFu
#define CAN_WMB2_D47_Data_byte_7_SHIFT           0
#define CAN_WMB2_D47_Data_byte_7_WIDTH           8
#define CAN_WMB2_D47_Data_byte_7(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D47_Data_byte_7_SHIFT))&CAN_WMB2_D47_Data_byte_7_MASK)
#define CAN_WMB2_D47_Data_byte_6_MASK            0xFF00u
#define CAN_WMB2_D47_Data_byte_6_SHIFT           8
#define CAN_WMB2_D47_Data_byte_6_WIDTH           8
#define CAN_WMB2_D47_Data_byte_6(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D47_Data_byte_6_SHIFT))&CAN_WMB2_D47_Data_byte_6_MASK)
#define CAN_WMB2_D47_Data_byte_5_MASK            0xFF0000u
#define CAN_WMB2_D47_Data_byte_5_SHIFT           16
#define CAN_WMB2_D47_Data_byte_5_WIDTH           8
#define CAN_WMB2_D47_Data_byte_5(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D47_Data_byte_5_SHIFT))&CAN_WMB2_D47_Data_byte_5_MASK)
#define CAN_WMB2_D47_Data_byte_4_MASK            0xFF000000u
#define CAN_WMB2_D47_Data_byte_4_SHIFT           24
#define CAN_WMB2_D47_Data_byte_4_WIDTH           8
#define CAN_WMB2_D47_Data_byte_4(x)              (((uint32)(((uint32)(x))<<CAN_WMB2_D47_Data_byte_4_SHIFT))&CAN_WMB2_D47_Data_byte_4_MASK)
/* WMB3_CS Bit Fields */
#define CAN_WMB3_CS_DLC_MASK                     0xF0000u
#define CAN_WMB3_CS_DLC_SHIFT                    16
#define CAN_WMB3_CS_DLC_WIDTH                    4
#define CAN_WMB3_CS_DLC(x)                       (((uint32)(((uint32)(x))<<CAN_WMB3_CS_DLC_SHIFT))&CAN_WMB3_CS_DLC_MASK)
#define CAN_WMB3_CS_RTR_MASK                     0x100000u
#define CAN_WMB3_CS_RTR_SHIFT                    20
#define CAN_WMB3_CS_RTR_WIDTH                    1
#define CAN_WMB3_CS_RTR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB3_CS_RTR_SHIFT))&CAN_WMB3_CS_RTR_MASK)
#define CAN_WMB3_CS_IDE_MASK                     0x200000u
#define CAN_WMB3_CS_IDE_SHIFT                    21
#define CAN_WMB3_CS_IDE_WIDTH                    1
#define CAN_WMB3_CS_IDE(x)                       (((uint32)(((uint32)(x))<<CAN_WMB3_CS_IDE_SHIFT))&CAN_WMB3_CS_IDE_MASK)
#define CAN_WMB3_CS_SRR_MASK                     0x400000u
#define CAN_WMB3_CS_SRR_SHIFT                    22
#define CAN_WMB3_CS_SRR_WIDTH                    1
#define CAN_WMB3_CS_SRR(x)                       (((uint32)(((uint32)(x))<<CAN_WMB3_CS_SRR_SHIFT))&CAN_WMB3_CS_SRR_MASK)
/* WMB3_ID Bit Fields */
#define CAN_WMB3_ID_ID_MASK                      0x1FFFFFFFu
#define CAN_WMB3_ID_ID_SHIFT                     0
#define CAN_WMB3_ID_ID_WIDTH                     29
#define CAN_WMB3_ID_ID(x)                        (((uint32)(((uint32)(x))<<CAN_WMB3_ID_ID_SHIFT))&CAN_WMB3_ID_ID_MASK)
/* WMB3_D03 Bit Fields */
#define CAN_WMB3_D03_Data_byte_3_MASK            0xFFu
#define CAN_WMB3_D03_Data_byte_3_SHIFT           0
#define CAN_WMB3_D03_Data_byte_3_WIDTH           8
#define CAN_WMB3_D03_Data_byte_3(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D03_Data_byte_3_SHIFT))&CAN_WMB3_D03_Data_byte_3_MASK)
#define CAN_WMB3_D03_Data_byte_2_MASK            0xFF00u
#define CAN_WMB3_D03_Data_byte_2_SHIFT           8
#define CAN_WMB3_D03_Data_byte_2_WIDTH           8
#define CAN_WMB3_D03_Data_byte_2(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D03_Data_byte_2_SHIFT))&CAN_WMB3_D03_Data_byte_2_MASK)
#define CAN_WMB3_D03_Data_byte_1_MASK            0xFF0000u
#define CAN_WMB3_D03_Data_byte_1_SHIFT           16
#define CAN_WMB3_D03_Data_byte_1_WIDTH           8
#define CAN_WMB3_D03_Data_byte_1(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D03_Data_byte_1_SHIFT))&CAN_WMB3_D03_Data_byte_1_MASK)
#define CAN_WMB3_D03_Data_byte_0_MASK            0xFF000000u
#define CAN_WMB3_D03_Data_byte_0_SHIFT           24
#define CAN_WMB3_D03_Data_byte_0_WIDTH           8
#define CAN_WMB3_D03_Data_byte_0(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D03_Data_byte_0_SHIFT))&CAN_WMB3_D03_Data_byte_0_MASK)
/* WMB3_D47 Bit Fields */
#define CAN_WMB3_D47_Data_byte_7_MASK            0xFFu
#define CAN_WMB3_D47_Data_byte_7_SHIFT           0
#define CAN_WMB3_D47_Data_byte_7_WIDTH           8
#define CAN_WMB3_D47_Data_byte_7(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D47_Data_byte_7_SHIFT))&CAN_WMB3_D47_Data_byte_7_MASK)
#define CAN_WMB3_D47_Data_byte_6_MASK            0xFF00u
#define CAN_WMB3_D47_Data_byte_6_SHIFT           8
#define CAN_WMB3_D47_Data_byte_6_WIDTH           8
#define CAN_WMB3_D47_Data_byte_6(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D47_Data_byte_6_SHIFT))&CAN_WMB3_D47_Data_byte_6_MASK)
#define CAN_WMB3_D47_Data_byte_5_MASK            0xFF0000u
#define CAN_WMB3_D47_Data_byte_5_SHIFT           16
#define CAN_WMB3_D47_Data_byte_5_WIDTH           8
#define CAN_WMB3_D47_Data_byte_5(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D47_Data_byte_5_SHIFT))&CAN_WMB3_D47_Data_byte_5_MASK)
#define CAN_WMB3_D47_Data_byte_4_MASK            0xFF000000u
#define CAN_WMB3_D47_Data_byte_4_SHIFT           24
#define CAN_WMB3_D47_Data_byte_4_WIDTH           8
#define CAN_WMB3_D47_Data_byte_4(x)              (((uint32)(((uint32)(x))<<CAN_WMB3_D47_Data_byte_4_SHIFT))&CAN_WMB3_D47_Data_byte_4_MASK)
/* FDCTRL Bit Fields */
#define CAN_FDCTRL_TDCVAL_MASK                   0x3Fu
#define CAN_FDCTRL_TDCVAL_SHIFT                  0
#define CAN_FDCTRL_TDCVAL_WIDTH                  6
#define CAN_FDCTRL_TDCVAL(x)                     (((uint32)(((uint32)(x))<<CAN_FDCTRL_TDCVAL_SHIFT))&CAN_FDCTRL_TDCVAL_MASK)
#define CAN_FDCTRL_TDCOFF_MASK                   0x1F00u
#define CAN_FDCTRL_TDCOFF_SHIFT                  8
#define CAN_FDCTRL_TDCOFF_WIDTH                  5
#define CAN_FDCTRL_TDCOFF(x)                     (((uint32)(((uint32)(x))<<CAN_FDCTRL_TDCOFF_SHIFT))&CAN_FDCTRL_TDCOFF_MASK)
#define CAN_FDCTRL_TDCFAIL_MASK                  0x4000u
#define CAN_FDCTRL_TDCFAIL_SHIFT                 14
#define CAN_FDCTRL_TDCFAIL_WIDTH                 1
#define CAN_FDCTRL_TDCFAIL(x)                    (((uint32)(((uint32)(x))<<CAN_FDCTRL_TDCFAIL_SHIFT))&CAN_FDCTRL_TDCFAIL_MASK)
#define CAN_FDCTRL_TDCEN_MASK                    0x8000u
#define CAN_FDCTRL_TDCEN_SHIFT                   15
#define CAN_FDCTRL_TDCEN_WIDTH                   1
#define CAN_FDCTRL_TDCEN(x)                      (((uint32)(((uint32)(x))<<CAN_FDCTRL_TDCEN_SHIFT))&CAN_FDCTRL_TDCEN_MASK)
#define CAN_FDCTRL_MBDSR0_MASK                   0x30000u
#define CAN_FDCTRL_MBDSR0_SHIFT                  16
#define CAN_FDCTRL_MBDSR0_WIDTH                  2
#define CAN_FDCTRL_MBDSR0(x)                     (((uint32)(((uint32)(x))<<CAN_FDCTRL_MBDSR0_SHIFT))&CAN_FDCTRL_MBDSR0_MASK)
#define CAN_FDCTRL_MBDSR1_MASK                   0x180000u
#define CAN_FDCTRL_MBDSR1_SHIFT                  19
#define CAN_FDCTRL_MBDSR1_WIDTH                  2
#define CAN_FDCTRL_MBDSR1(x)                     (((uint32)(((uint32)(x))<<CAN_FDCTRL_MBDSR1_SHIFT))&CAN_FDCTRL_MBDSR1_MASK)
#define CAN_FDCTRL_FDRATE_MASK                   0x80000000u
#define CAN_FDCTRL_FDRATE_SHIFT                  31
#define CAN_FDCTRL_FDRATE_WIDTH                  1
#define CAN_FDCTRL_FDRATE(x)                     (((uint32)(((uint32)(x))<<CAN_FDCTRL_FDRATE_SHIFT))&CAN_FDCTRL_FDRATE_MASK)
/* FDCBT Bit Fields */
#define CAN_FDCBT_FPSEG2_MASK                    0x7u
#define CAN_FDCBT_FPSEG2_SHIFT                   0
#define CAN_FDCBT_FPSEG2_WIDTH                   3
#define CAN_FDCBT_FPSEG2(x)                      (((uint32)(((uint32)(x))<<CAN_FDCBT_FPSEG2_SHIFT))&CAN_FDCBT_FPSEG2_MASK)
#define CAN_FDCBT_FPSEG1_MASK                    0xE0u
#define CAN_FDCBT_FPSEG1_SHIFT                   5
#define CAN_FDCBT_FPSEG1_WIDTH                   3
#define CAN_FDCBT_FPSEG1(x)                      (((uint32)(((uint32)(x))<<CAN_FDCBT_FPSEG1_SHIFT))&CAN_FDCBT_FPSEG1_MASK)
#define CAN_FDCBT_FPROPSEG_MASK                  0x7C00u
#define CAN_FDCBT_FPROPSEG_SHIFT                 10
#define CAN_FDCBT_FPROPSEG_WIDTH                 5
#define CAN_FDCBT_FPROPSEG(x)                    (((uint32)(((uint32)(x))<<CAN_FDCBT_FPROPSEG_SHIFT))&CAN_FDCBT_FPROPSEG_MASK)
#define CAN_FDCBT_FRJW_MASK                      0x70000u
#define CAN_FDCBT_FRJW_SHIFT                     16
#define CAN_FDCBT_FRJW_WIDTH                     3
#define CAN_FDCBT_FRJW(x)                        (((uint32)(((uint32)(x))<<CAN_FDCBT_FRJW_SHIFT))&CAN_FDCBT_FRJW_MASK)
#define CAN_FDCBT_FPRESDIV_MASK                  0x3FF00000u
#define CAN_FDCBT_FPRESDIV_SHIFT                 20
#define CAN_FDCBT_FPRESDIV_WIDTH                 10
#define CAN_FDCBT_FPRESDIV(x)                    (((uint32)(((uint32)(x))<<CAN_FDCBT_FPRESDIV_SHIFT))&CAN_FDCBT_FPRESDIV_MASK)
/* FDCRC Bit Fields */
#define CAN_FDCRC_FD_TXCRC_MASK                  0x1FFFFFu
#define CAN_FDCRC_FD_TXCRC_SHIFT                 0
#define CAN_FDCRC_FD_TXCRC_WIDTH                 21
#define CAN_FDCRC_FD_TXCRC(x)                    (((uint32)(((uint32)(x))<<CAN_FDCRC_FD_TXCRC_SHIFT))&CAN_FDCRC_FD_TXCRC_MASK)
#define CAN_FDCRC_FD_MBCRC_MASK                  0x7F000000u
#define CAN_FDCRC_FD_MBCRC_SHIFT                 24
#define CAN_FDCRC_FD_MBCRC_WIDTH                 7
#define CAN_FDCRC_FD_MBCRC(x)                    (((uint32)(((uint32)(x))<<CAN_FDCRC_FD_MBCRC_SHIFT))&CAN_FDCRC_FD_MBCRC_MASK)

/*!
 * @}
 */ /* end of group CAN_Register_Masks */


/* CAN - Peripheral instance base addresses */
/** Peripheral CAN0 base address */
#define CAN0_BASE                                (0x40024000u)
/** Peripheral CAN0 base pointer */
#define CAN0                                     ((CAN_Type *)CAN0_BASE)
#define CAN0_BASE_PTR                            (CAN0)
/** Peripheral CAN1 base address */
#define CAN1_BASE                                (0x40025000u)
/** Peripheral CAN1 base pointer */
#define CAN1                                     ((CAN_Type *)CAN1_BASE)
#define CAN1_BASE_PTR                            (CAN1)
/** Peripheral CAN2 base address */
#define CAN2_BASE                                (0x4002B000u)
/** Peripheral CAN2 base pointer */
#define CAN2                                     ((CAN_Type *)CAN2_BASE)
#define CAN2_BASE_PTR                            (CAN2)
/** Array initializer of CAN peripheral base addresses */
#define CAN_BASE_ADDRS                           { CAN0_BASE, CAN1_BASE, CAN2_BASE }
/** Array initializer of CAN peripheral base pointers */
#define CAN_BASE_PTRS                            { CAN0, CAN1, CAN2 }

/* ----------------------------------------------------------------------------
   -- CAN - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Register_Accessor_Macros CAN - Register accessor macros
 * @{
 */


/* CAN - Register instance definitions */
/* CAN0 */
#define CAN0_MCR                                 CAN_MCR_REG(CAN0)
#define CAN0_CTRL1                               CAN_CTRL1_REG(CAN0)
#define CAN0_TIMER                               CAN_TIMER_REG(CAN0)
#define CAN0_RXMGMASK                            CAN_RXMGMASK_REG(CAN0)
#define CAN0_RX14MASK                            CAN_RX14MASK_REG(CAN0)
#define CAN0_RX15MASK                            CAN_RX15MASK_REG(CAN0)
#define CAN0_ECR                                 CAN_ECR_REG(CAN0)
#define CAN0_ESR1                                CAN_ESR1_REG(CAN0)
#define CAN0_IMASK1                              CAN_IMASK1_REG(CAN0)
#define CAN0_IFLAG1                              CAN_IFLAG1_REG(CAN0)
#define CAN0_CTRL2                               CAN_CTRL2_REG(CAN0)
#define CAN0_ESR2                                CAN_ESR2_REG(CAN0)
#define CAN0_CRCR                                CAN_CRCR_REG(CAN0)
#define CAN0_RXFGMASK                            CAN_RXFGMASK_REG(CAN0)
#define CAN0_RXFIR                               CAN_RXFIR_REG(CAN0)
#define CAN0_CBT                                 CAN_CBT_REG(CAN0)
#define CAN0_RXIMR0                              CAN_RXIMR_REG(CAN0,0)
#define CAN0_RXIMR1                              CAN_RXIMR_REG(CAN0,1)
#define CAN0_RXIMR2                              CAN_RXIMR_REG(CAN0,2)
#define CAN0_RXIMR3                              CAN_RXIMR_REG(CAN0,3)
#define CAN0_RXIMR4                              CAN_RXIMR_REG(CAN0,4)
#define CAN0_RXIMR5                              CAN_RXIMR_REG(CAN0,5)
#define CAN0_RXIMR6                              CAN_RXIMR_REG(CAN0,6)
#define CAN0_RXIMR7                              CAN_RXIMR_REG(CAN0,7)
#define CAN0_RXIMR8                              CAN_RXIMR_REG(CAN0,8)
#define CAN0_RXIMR9                              CAN_RXIMR_REG(CAN0,9)
#define CAN0_RXIMR10                             CAN_RXIMR_REG(CAN0,10)
#define CAN0_RXIMR11                             CAN_RXIMR_REG(CAN0,11)
#define CAN0_RXIMR12                             CAN_RXIMR_REG(CAN0,12)
#define CAN0_RXIMR13                             CAN_RXIMR_REG(CAN0,13)
#define CAN0_RXIMR14                             CAN_RXIMR_REG(CAN0,14)
#define CAN0_RXIMR15                             CAN_RXIMR_REG(CAN0,15)
#define CAN0_CTRL1_PN                            CAN_CTRL1_PN_REG(CAN0)
#define CAN0_CTRL2_PN                            CAN_CTRL2_PN_REG(CAN0)
#define CAN0_WU_MTC                              CAN_WU_MTC_REG(CAN0)
#define CAN0_FLT_ID1                             CAN_FLT_ID1_REG(CAN0)
#define CAN0_FLT_DLC                             CAN_FLT_DLC_REG(CAN0)
#define CAN0_PL1_LO                              CAN_PL1_LO_REG(CAN0)
#define CAN0_PL1_HI                              CAN_PL1_HI_REG(CAN0)
#define CAN0_FLT_ID2_IDMASK                      CAN_FLT_ID2_IDMASK_REG(CAN0)
#define CAN0_PL2_PLMASK_LO                       CAN_PL2_PLMASK_LO_REG(CAN0)
#define CAN0_PL2_PLMASK_HI                       CAN_PL2_PLMASK_HI_REG(CAN0)
#define CAN0_WMB0_CS                             CAN_WMB0_CS_REG(CAN0)
#define CAN0_WMB0_ID                             CAN_WMB0_ID_REG(CAN0)
#define CAN0_WMB0_D03                            CAN_WMB0_D03_REG(CAN0)
#define CAN0_WMB0_D47                            CAN_WMB0_D47_REG(CAN0)
#define CAN0_WMB1_CS                             CAN_WMB1_CS_REG(CAN0)
#define CAN0_WMB1_ID                             CAN_WMB1_ID_REG(CAN0)
#define CAN0_WMB1_D03                            CAN_WMB1_D03_REG(CAN0)
#define CAN0_WMB1_D47                            CAN_WMB1_D47_REG(CAN0)
#define CAN0_WMB2_CS                             CAN_WMB2_CS_REG(CAN0)
#define CAN0_WMB2_ID                             CAN_WMB2_ID_REG(CAN0)
#define CAN0_WMB2_D03                            CAN_WMB2_D03_REG(CAN0)
#define CAN0_WMB2_D47                            CAN_WMB2_D47_REG(CAN0)
#define CAN0_WMB3_CS                             CAN_WMB3_CS_REG(CAN0)
#define CAN0_WMB3_ID                             CAN_WMB3_ID_REG(CAN0)
#define CAN0_WMB3_D03                            CAN_WMB3_D03_REG(CAN0)
#define CAN0_WMB3_D47                            CAN_WMB3_D47_REG(CAN0)
#define CAN0_FDCTRL                              CAN_FDCTRL_REG(CAN0)
#define CAN0_FDCBT                               CAN_FDCBT_REG(CAN0)
#define CAN0_FDCRC                               CAN_FDCRC_REG(CAN0)
/* CAN1 */
#define CAN1_MCR                                 CAN_MCR_REG(CAN1)
#define CAN1_CTRL1                               CAN_CTRL1_REG(CAN1)
#define CAN1_TIMER                               CAN_TIMER_REG(CAN1)
#define CAN1_RXMGMASK                            CAN_RXMGMASK_REG(CAN1)
#define CAN1_RX14MASK                            CAN_RX14MASK_REG(CAN1)
#define CAN1_RX15MASK                            CAN_RX15MASK_REG(CAN1)
#define CAN1_ECR                                 CAN_ECR_REG(CAN1)
#define CAN1_ESR1                                CAN_ESR1_REG(CAN1)
#define CAN1_IMASK1                              CAN_IMASK1_REG(CAN1)
#define CAN1_IFLAG1                              CAN_IFLAG1_REG(CAN1)
#define CAN1_CTRL2                               CAN_CTRL2_REG(CAN1)
#define CAN1_ESR2                                CAN_ESR2_REG(CAN1)
#define CAN1_CRCR                                CAN_CRCR_REG(CAN1)
#define CAN1_RXFGMASK                            CAN_RXFGMASK_REG(CAN1)
#define CAN1_RXFIR                               CAN_RXFIR_REG(CAN1)
#define CAN1_CBT                                 CAN_CBT_REG(CAN1)
#define CAN1_RXIMR0                              CAN_RXIMR_REG(CAN1,0)
#define CAN1_RXIMR1                              CAN_RXIMR_REG(CAN1,1)
#define CAN1_RXIMR2                              CAN_RXIMR_REG(CAN1,2)
#define CAN1_RXIMR3                              CAN_RXIMR_REG(CAN1,3)
#define CAN1_RXIMR4                              CAN_RXIMR_REG(CAN1,4)
#define CAN1_RXIMR5                              CAN_RXIMR_REG(CAN1,5)
#define CAN1_RXIMR6                              CAN_RXIMR_REG(CAN1,6)
#define CAN1_RXIMR7                              CAN_RXIMR_REG(CAN1,7)
#define CAN1_RXIMR8                              CAN_RXIMR_REG(CAN1,8)
#define CAN1_RXIMR9                              CAN_RXIMR_REG(CAN1,9)
#define CAN1_RXIMR10                             CAN_RXIMR_REG(CAN1,10)
#define CAN1_RXIMR11                             CAN_RXIMR_REG(CAN1,11)
#define CAN1_RXIMR12                             CAN_RXIMR_REG(CAN1,12)
#define CAN1_RXIMR13                             CAN_RXIMR_REG(CAN1,13)
#define CAN1_RXIMR14                             CAN_RXIMR_REG(CAN1,14)
#define CAN1_RXIMR15                             CAN_RXIMR_REG(CAN1,15)
#define CAN1_CTRL1_PN                            CAN_CTRL1_PN_REG(CAN1)
#define CAN1_CTRL2_PN                            CAN_CTRL2_PN_REG(CAN1)
#define CAN1_WU_MTC                              CAN_WU_MTC_REG(CAN1)
#define CAN1_FLT_ID1                             CAN_FLT_ID1_REG(CAN1)
#define CAN1_FLT_DLC                             CAN_FLT_DLC_REG(CAN1)
#define CAN1_PL1_LO                              CAN_PL1_LO_REG(CAN1)
#define CAN1_PL1_HI                              CAN_PL1_HI_REG(CAN1)
#define CAN1_FLT_ID2_IDMASK                      CAN_FLT_ID2_IDMASK_REG(CAN1)
#define CAN1_PL2_PLMASK_LO                       CAN_PL2_PLMASK_LO_REG(CAN1)
#define CAN1_PL2_PLMASK_HI                       CAN_PL2_PLMASK_HI_REG(CAN1)
#define CAN1_WMB0_CS                             CAN_WMB0_CS_REG(CAN1)
#define CAN1_WMB0_ID                             CAN_WMB0_ID_REG(CAN1)
#define CAN1_WMB0_D03                            CAN_WMB0_D03_REG(CAN1)
#define CAN1_WMB0_D47                            CAN_WMB0_D47_REG(CAN1)
#define CAN1_WMB1_CS                             CAN_WMB1_CS_REG(CAN1)
#define CAN1_WMB1_ID                             CAN_WMB1_ID_REG(CAN1)
#define CAN1_WMB1_D03                            CAN_WMB1_D03_REG(CAN1)
#define CAN1_WMB1_D47                            CAN_WMB1_D47_REG(CAN1)
#define CAN1_WMB2_CS                             CAN_WMB2_CS_REG(CAN1)
#define CAN1_WMB2_ID                             CAN_WMB2_ID_REG(CAN1)
#define CAN1_WMB2_D03                            CAN_WMB2_D03_REG(CAN1)
#define CAN1_WMB2_D47                            CAN_WMB2_D47_REG(CAN1)
#define CAN1_WMB3_CS                             CAN_WMB3_CS_REG(CAN1)
#define CAN1_WMB3_ID                             CAN_WMB3_ID_REG(CAN1)
#define CAN1_WMB3_D03                            CAN_WMB3_D03_REG(CAN1)
#define CAN1_WMB3_D47                            CAN_WMB3_D47_REG(CAN1)
#define CAN1_FDCTRL                              CAN_FDCTRL_REG(CAN1)
#define CAN1_FDCBT                               CAN_FDCBT_REG(CAN1)
#define CAN1_FDCRC                               CAN_FDCRC_REG(CAN1)
/* CAN2 */
#define CAN2_MCR                                 CAN_MCR_REG(CAN2)
#define CAN2_CTRL1                               CAN_CTRL1_REG(CAN2)
#define CAN2_TIMER                               CAN_TIMER_REG(CAN2)
#define CAN2_RXMGMASK                            CAN_RXMGMASK_REG(CAN2)
#define CAN2_RX14MASK                            CAN_RX14MASK_REG(CAN2)
#define CAN2_RX15MASK                            CAN_RX15MASK_REG(CAN2)
#define CAN2_ECR                                 CAN_ECR_REG(CAN2)
#define CAN2_ESR1                                CAN_ESR1_REG(CAN2)
#define CAN2_IMASK1                              CAN_IMASK1_REG(CAN2)
#define CAN2_IFLAG1                              CAN_IFLAG1_REG(CAN2)
#define CAN2_CTRL2                               CAN_CTRL2_REG(CAN2)
#define CAN2_ESR2                                CAN_ESR2_REG(CAN2)
#define CAN2_CRCR                                CAN_CRCR_REG(CAN2)
#define CAN2_RXFGMASK                            CAN_RXFGMASK_REG(CAN2)
#define CAN2_RXFIR                               CAN_RXFIR_REG(CAN2)
#define CAN2_CBT                                 CAN_CBT_REG(CAN2)
#define CAN2_RXIMR0                              CAN_RXIMR_REG(CAN2,0)
#define CAN2_RXIMR1                              CAN_RXIMR_REG(CAN2,1)
#define CAN2_RXIMR2                              CAN_RXIMR_REG(CAN2,2)
#define CAN2_RXIMR3                              CAN_RXIMR_REG(CAN2,3)
#define CAN2_RXIMR4                              CAN_RXIMR_REG(CAN2,4)
#define CAN2_RXIMR5                              CAN_RXIMR_REG(CAN2,5)
#define CAN2_RXIMR6                              CAN_RXIMR_REG(CAN2,6)
#define CAN2_RXIMR7                              CAN_RXIMR_REG(CAN2,7)
#define CAN2_RXIMR8                              CAN_RXIMR_REG(CAN2,8)
#define CAN2_RXIMR9                              CAN_RXIMR_REG(CAN2,9)
#define CAN2_RXIMR10                             CAN_RXIMR_REG(CAN2,10)
#define CAN2_RXIMR11                             CAN_RXIMR_REG(CAN2,11)
#define CAN2_RXIMR12                             CAN_RXIMR_REG(CAN2,12)
#define CAN2_RXIMR13                             CAN_RXIMR_REG(CAN2,13)
#define CAN2_RXIMR14                             CAN_RXIMR_REG(CAN2,14)
#define CAN2_RXIMR15                             CAN_RXIMR_REG(CAN2,15)
#define CAN2_CTRL1_PN                            CAN_CTRL1_PN_REG(CAN2)
#define CAN2_CTRL2_PN                            CAN_CTRL2_PN_REG(CAN2)
#define CAN2_WU_MTC                              CAN_WU_MTC_REG(CAN2)
#define CAN2_FLT_ID1                             CAN_FLT_ID1_REG(CAN2)
#define CAN2_FLT_DLC                             CAN_FLT_DLC_REG(CAN2)
#define CAN2_PL1_LO                              CAN_PL1_LO_REG(CAN2)
#define CAN2_PL1_HI                              CAN_PL1_HI_REG(CAN2)
#define CAN2_FLT_ID2_IDMASK                      CAN_FLT_ID2_IDMASK_REG(CAN2)
#define CAN2_PL2_PLMASK_LO                       CAN_PL2_PLMASK_LO_REG(CAN2)
#define CAN2_PL2_PLMASK_HI                       CAN_PL2_PLMASK_HI_REG(CAN2)
#define CAN2_WMB0_CS                             CAN_WMB0_CS_REG(CAN2)
#define CAN2_WMB0_ID                             CAN_WMB0_ID_REG(CAN2)
#define CAN2_WMB0_D03                            CAN_WMB0_D03_REG(CAN2)
#define CAN2_WMB0_D47                            CAN_WMB0_D47_REG(CAN2)
#define CAN2_WMB1_CS                             CAN_WMB1_CS_REG(CAN2)
#define CAN2_WMB1_ID                             CAN_WMB1_ID_REG(CAN2)
#define CAN2_WMB1_D03                            CAN_WMB1_D03_REG(CAN2)
#define CAN2_WMB1_D47                            CAN_WMB1_D47_REG(CAN2)
#define CAN2_WMB2_CS                             CAN_WMB2_CS_REG(CAN2)
#define CAN2_WMB2_ID                             CAN_WMB2_ID_REG(CAN2)
#define CAN2_WMB2_D03                            CAN_WMB2_D03_REG(CAN2)
#define CAN2_WMB2_D47                            CAN_WMB2_D47_REG(CAN2)
#define CAN2_WMB3_CS                             CAN_WMB3_CS_REG(CAN2)
#define CAN2_WMB3_ID                             CAN_WMB3_ID_REG(CAN2)
#define CAN2_WMB3_D03                            CAN_WMB3_D03_REG(CAN2)
#define CAN2_WMB3_D47                            CAN_WMB3_D47_REG(CAN2)
#define CAN2_FDCTRL                              CAN_FDCTRL_REG(CAN2)
#define CAN2_FDCBT                               CAN_FDCBT_REG(CAN2)
#define CAN2_FDCRC                               CAN_FDCRC_REG(CAN2)

/* CAN - Register array accessors */
#define CAN0_RXIMR(index)                        CAN_RXIMR_REG(CAN0,index)
#define CAN1_RXIMR(index)                        CAN_RXIMR_REG(CAN1,index)
#define CAN2_RXIMR(index)                        CAN_RXIMR_REG(CAN2,index)

/*!
 * @}
 */ /* end of group CAN_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group CAN_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CMP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMP_Peripheral_Access_Layer CMP Peripheral Access Layer
 * @{
 */

/** CMP - Register Layout Typedef */
typedef struct {
  __IO uint32 C0;                                  /**< CMP Control Register 0, offset: 0x0 */
  __IO uint32 C1;                                  /**< CMP Control Register 1, offset: 0x4 */
  __IO uint32 C2;                                  /**< CMP Control Register 2, offset: 0x8 */
} CMP_Type, *CMP_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CMP - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMP_Register_Accessor_Macros CMP - Register accessor macros
 * @{
 */


/* CMP - Register accessors */
#define CMP_C0_REG(base)                         ((base)->C0)
#define CMP_C1_REG(base)                         ((base)->C1)
#define CMP_C2_REG(base)                         ((base)->C2)

/*!
 * @}
 */ /* end of group CMP_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CMP Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMP_Register_Masks CMP Register Masks
 * @{
 */

/* C0 Bit Fields */
#define CMP_C0_HYSTCTR_MASK                      0x3u
#define CMP_C0_HYSTCTR_SHIFT                     0
#define CMP_C0_HYSTCTR_WIDTH                     2
#define CMP_C0_HYSTCTR(x)                        (((uint32)(((uint32)(x))<<CMP_C0_HYSTCTR_SHIFT))&CMP_C0_HYSTCTR_MASK)
#define CMP_C0_OFFSET_MASK                       0x4u
#define CMP_C0_OFFSET_SHIFT                      2
#define CMP_C0_OFFSET_WIDTH                      1
#define CMP_C0_OFFSET(x)                         (((uint32)(((uint32)(x))<<CMP_C0_OFFSET_SHIFT))&CMP_C0_OFFSET_MASK)
#define CMP_C0_FILTER_CNT_MASK                   0x70u
#define CMP_C0_FILTER_CNT_SHIFT                  4
#define CMP_C0_FILTER_CNT_WIDTH                  3
#define CMP_C0_FILTER_CNT(x)                     (((uint32)(((uint32)(x))<<CMP_C0_FILTER_CNT_SHIFT))&CMP_C0_FILTER_CNT_MASK)
#define CMP_C0_EN_MASK                           0x100u
#define CMP_C0_EN_SHIFT                          8
#define CMP_C0_EN_WIDTH                          1
#define CMP_C0_EN(x)                             (((uint32)(((uint32)(x))<<CMP_C0_EN_SHIFT))&CMP_C0_EN_MASK)
#define CMP_C0_OPE_MASK                          0x200u
#define CMP_C0_OPE_SHIFT                         9
#define CMP_C0_OPE_WIDTH                         1
#define CMP_C0_OPE(x)                            (((uint32)(((uint32)(x))<<CMP_C0_OPE_SHIFT))&CMP_C0_OPE_MASK)
#define CMP_C0_COS_MASK                          0x400u
#define CMP_C0_COS_SHIFT                         10
#define CMP_C0_COS_WIDTH                         1
#define CMP_C0_COS(x)                            (((uint32)(((uint32)(x))<<CMP_C0_COS_SHIFT))&CMP_C0_COS_MASK)
#define CMP_C0_INVT_MASK                         0x800u
#define CMP_C0_INVT_SHIFT                        11
#define CMP_C0_INVT_WIDTH                        1
#define CMP_C0_INVT(x)                           (((uint32)(((uint32)(x))<<CMP_C0_INVT_SHIFT))&CMP_C0_INVT_MASK)
#define CMP_C0_PMODE_MASK                        0x1000u
#define CMP_C0_PMODE_SHIFT                       12
#define CMP_C0_PMODE_WIDTH                       1
#define CMP_C0_PMODE(x)                          (((uint32)(((uint32)(x))<<CMP_C0_PMODE_SHIFT))&CMP_C0_PMODE_MASK)
#define CMP_C0_WE_MASK                           0x4000u
#define CMP_C0_WE_SHIFT                          14
#define CMP_C0_WE_WIDTH                          1
#define CMP_C0_WE(x)                             (((uint32)(((uint32)(x))<<CMP_C0_WE_SHIFT))&CMP_C0_WE_MASK)
#define CMP_C0_SE_MASK                           0x8000u
#define CMP_C0_SE_SHIFT                          15
#define CMP_C0_SE_WIDTH                          1
#define CMP_C0_SE(x)                             (((uint32)(((uint32)(x))<<CMP_C0_SE_SHIFT))&CMP_C0_SE_MASK)
#define CMP_C0_FPR_MASK                          0xFF0000u
#define CMP_C0_FPR_SHIFT                         16
#define CMP_C0_FPR_WIDTH                         8
#define CMP_C0_FPR(x)                            (((uint32)(((uint32)(x))<<CMP_C0_FPR_SHIFT))&CMP_C0_FPR_MASK)
#define CMP_C0_COUT_MASK                         0x1000000u
#define CMP_C0_COUT_SHIFT                        24
#define CMP_C0_COUT_WIDTH                        1
#define CMP_C0_COUT(x)                           (((uint32)(((uint32)(x))<<CMP_C0_COUT_SHIFT))&CMP_C0_COUT_MASK)
#define CMP_C0_CFF_MASK                          0x2000000u
#define CMP_C0_CFF_SHIFT                         25
#define CMP_C0_CFF_WIDTH                         1
#define CMP_C0_CFF(x)                            (((uint32)(((uint32)(x))<<CMP_C0_CFF_SHIFT))&CMP_C0_CFF_MASK)
#define CMP_C0_CFR_MASK                          0x4000000u
#define CMP_C0_CFR_SHIFT                         26
#define CMP_C0_CFR_WIDTH                         1
#define CMP_C0_CFR(x)                            (((uint32)(((uint32)(x))<<CMP_C0_CFR_SHIFT))&CMP_C0_CFR_MASK)
#define CMP_C0_IEF_MASK                          0x8000000u
#define CMP_C0_IEF_SHIFT                         27
#define CMP_C0_IEF_WIDTH                         1
#define CMP_C0_IEF(x)                            (((uint32)(((uint32)(x))<<CMP_C0_IEF_SHIFT))&CMP_C0_IEF_MASK)
#define CMP_C0_IER_MASK                          0x10000000u
#define CMP_C0_IER_SHIFT                         28
#define CMP_C0_IER_WIDTH                         1
#define CMP_C0_IER(x)                            (((uint32)(((uint32)(x))<<CMP_C0_IER_SHIFT))&CMP_C0_IER_MASK)
#define CMP_C0_DMAEN_MASK                        0x40000000u
#define CMP_C0_DMAEN_SHIFT                       30
#define CMP_C0_DMAEN_WIDTH                       1
#define CMP_C0_DMAEN(x)                          (((uint32)(((uint32)(x))<<CMP_C0_DMAEN_SHIFT))&CMP_C0_DMAEN_MASK)
/* C1 Bit Fields */
#define CMP_C1_VOSEL_MASK                        0xFFu
#define CMP_C1_VOSEL_SHIFT                       0
#define CMP_C1_VOSEL_WIDTH                       8
#define CMP_C1_VOSEL(x)                          (((uint32)(((uint32)(x))<<CMP_C1_VOSEL_SHIFT))&CMP_C1_VOSEL_MASK)
#define CMP_C1_MSEL_MASK                         0x700u
#define CMP_C1_MSEL_SHIFT                        8
#define CMP_C1_MSEL_WIDTH                        3
#define CMP_C1_MSEL(x)                           (((uint32)(((uint32)(x))<<CMP_C1_MSEL_SHIFT))&CMP_C1_MSEL_MASK)
#define CMP_C1_PSEL_MASK                         0x3800u
#define CMP_C1_PSEL_SHIFT                        11
#define CMP_C1_PSEL_WIDTH                        3
#define CMP_C1_PSEL(x)                           (((uint32)(((uint32)(x))<<CMP_C1_PSEL_SHIFT))&CMP_C1_PSEL_MASK)
#define CMP_C1_VRSEL_MASK                        0x4000u
#define CMP_C1_VRSEL_SHIFT                       14
#define CMP_C1_VRSEL_WIDTH                       1
#define CMP_C1_VRSEL(x)                          (((uint32)(((uint32)(x))<<CMP_C1_VRSEL_SHIFT))&CMP_C1_VRSEL_MASK)
#define CMP_C1_DACEN_MASK                        0x8000u
#define CMP_C1_DACEN_SHIFT                       15
#define CMP_C1_DACEN_WIDTH                       1
#define CMP_C1_DACEN(x)                          (((uint32)(((uint32)(x))<<CMP_C1_DACEN_SHIFT))&CMP_C1_DACEN_MASK)
#define CMP_C1_CHN0_MASK                         0x10000u
#define CMP_C1_CHN0_SHIFT                        16
#define CMP_C1_CHN0_WIDTH                        1
#define CMP_C1_CHN0(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN0_SHIFT))&CMP_C1_CHN0_MASK)
#define CMP_C1_CHN1_MASK                         0x20000u
#define CMP_C1_CHN1_SHIFT                        17
#define CMP_C1_CHN1_WIDTH                        1
#define CMP_C1_CHN1(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN1_SHIFT))&CMP_C1_CHN1_MASK)
#define CMP_C1_CHN2_MASK                         0x40000u
#define CMP_C1_CHN2_SHIFT                        18
#define CMP_C1_CHN2_WIDTH                        1
#define CMP_C1_CHN2(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN2_SHIFT))&CMP_C1_CHN2_MASK)
#define CMP_C1_CHN3_MASK                         0x80000u
#define CMP_C1_CHN3_SHIFT                        19
#define CMP_C1_CHN3_WIDTH                        1
#define CMP_C1_CHN3(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN3_SHIFT))&CMP_C1_CHN3_MASK)
#define CMP_C1_CHN4_MASK                         0x100000u
#define CMP_C1_CHN4_SHIFT                        20
#define CMP_C1_CHN4_WIDTH                        1
#define CMP_C1_CHN4(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN4_SHIFT))&CMP_C1_CHN4_MASK)
#define CMP_C1_CHN5_MASK                         0x200000u
#define CMP_C1_CHN5_SHIFT                        21
#define CMP_C1_CHN5_WIDTH                        1
#define CMP_C1_CHN5(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN5_SHIFT))&CMP_C1_CHN5_MASK)
#define CMP_C1_CHN6_MASK                         0x400000u
#define CMP_C1_CHN6_SHIFT                        22
#define CMP_C1_CHN6_WIDTH                        1
#define CMP_C1_CHN6(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN6_SHIFT))&CMP_C1_CHN6_MASK)
#define CMP_C1_CHN7_MASK                         0x800000u
#define CMP_C1_CHN7_SHIFT                        23
#define CMP_C1_CHN7_WIDTH                        1
#define CMP_C1_CHN7(x)                           (((uint32)(((uint32)(x))<<CMP_C1_CHN7_SHIFT))&CMP_C1_CHN7_MASK)
#define CMP_C1_INNSEL_MASK                       0x3000000u
#define CMP_C1_INNSEL_SHIFT                      24
#define CMP_C1_INNSEL_WIDTH                      2
#define CMP_C1_INNSEL(x)                         (((uint32)(((uint32)(x))<<CMP_C1_INNSEL_SHIFT))&CMP_C1_INNSEL_MASK)
#define CMP_C1_INPSEL_MASK                       0x18000000u
#define CMP_C1_INPSEL_SHIFT                      27
#define CMP_C1_INPSEL_WIDTH                      2
#define CMP_C1_INPSEL(x)                         (((uint32)(((uint32)(x))<<CMP_C1_INPSEL_SHIFT))&CMP_C1_INPSEL_MASK)
#define CMP_C1_DACOE_MASK                        0x20000000u
#define CMP_C1_DACOE_SHIFT                       29
#define CMP_C1_DACOE_WIDTH                       1
#define CMP_C1_DACOE(x)                          (((uint32)(((uint32)(x))<<CMP_C1_DACOE_SHIFT))&CMP_C1_DACOE_MASK)
/* C2 Bit Fields */
#define CMP_C2_ACOn_MASK                         0xFFu
#define CMP_C2_ACOn_SHIFT                        0
#define CMP_C2_ACOn_WIDTH                        8
#define CMP_C2_ACOn(x)                           (((uint32)(((uint32)(x))<<CMP_C2_ACOn_SHIFT))&CMP_C2_ACOn_MASK)
#define CMP_C2_INITMOD_MASK                      0x3F00u
#define CMP_C2_INITMOD_SHIFT                     8
#define CMP_C2_INITMOD_WIDTH                     6
#define CMP_C2_INITMOD(x)                        (((uint32)(((uint32)(x))<<CMP_C2_INITMOD_SHIFT))&CMP_C2_INITMOD_MASK)
#define CMP_C2_NSAM_MASK                         0xC000u
#define CMP_C2_NSAM_SHIFT                        14
#define CMP_C2_NSAM_WIDTH                        2
#define CMP_C2_NSAM(x)                           (((uint32)(((uint32)(x))<<CMP_C2_NSAM_SHIFT))&CMP_C2_NSAM_MASK)
#define CMP_C2_CH0F_MASK                         0x10000u
#define CMP_C2_CH0F_SHIFT                        16
#define CMP_C2_CH0F_WIDTH                        1
#define CMP_C2_CH0F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH0F_SHIFT))&CMP_C2_CH0F_MASK)
#define CMP_C2_CH1F_MASK                         0x20000u
#define CMP_C2_CH1F_SHIFT                        17
#define CMP_C2_CH1F_WIDTH                        1
#define CMP_C2_CH1F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH1F_SHIFT))&CMP_C2_CH1F_MASK)
#define CMP_C2_CH2F_MASK                         0x40000u
#define CMP_C2_CH2F_SHIFT                        18
#define CMP_C2_CH2F_WIDTH                        1
#define CMP_C2_CH2F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH2F_SHIFT))&CMP_C2_CH2F_MASK)
#define CMP_C2_CH3F_MASK                         0x80000u
#define CMP_C2_CH3F_SHIFT                        19
#define CMP_C2_CH3F_WIDTH                        1
#define CMP_C2_CH3F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH3F_SHIFT))&CMP_C2_CH3F_MASK)
#define CMP_C2_CH4F_MASK                         0x100000u
#define CMP_C2_CH4F_SHIFT                        20
#define CMP_C2_CH4F_WIDTH                        1
#define CMP_C2_CH4F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH4F_SHIFT))&CMP_C2_CH4F_MASK)
#define CMP_C2_CH5F_MASK                         0x200000u
#define CMP_C2_CH5F_SHIFT                        21
#define CMP_C2_CH5F_WIDTH                        1
#define CMP_C2_CH5F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH5F_SHIFT))&CMP_C2_CH5F_MASK)
#define CMP_C2_CH6F_MASK                         0x400000u
#define CMP_C2_CH6F_SHIFT                        22
#define CMP_C2_CH6F_WIDTH                        1
#define CMP_C2_CH6F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH6F_SHIFT))&CMP_C2_CH6F_MASK)
#define CMP_C2_CH7F_MASK                         0x800000u
#define CMP_C2_CH7F_SHIFT                        23
#define CMP_C2_CH7F_WIDTH                        1
#define CMP_C2_CH7F(x)                           (((uint32)(((uint32)(x))<<CMP_C2_CH7F_SHIFT))&CMP_C2_CH7F_MASK)
#define CMP_C2_FXMXCH_MASK                       0xE000000u
#define CMP_C2_FXMXCH_SHIFT                      25
#define CMP_C2_FXMXCH_WIDTH                      3
#define CMP_C2_FXMXCH(x)                         (((uint32)(((uint32)(x))<<CMP_C2_FXMXCH_SHIFT))&CMP_C2_FXMXCH_MASK)
#define CMP_C2_FXMP_MASK                         0x20000000u
#define CMP_C2_FXMP_SHIFT                        29
#define CMP_C2_FXMP_WIDTH                        1
#define CMP_C2_FXMP(x)                           (((uint32)(((uint32)(x))<<CMP_C2_FXMP_SHIFT))&CMP_C2_FXMP_MASK)
#define CMP_C2_RRIE_MASK                         0x40000000u
#define CMP_C2_RRIE_SHIFT                        30
#define CMP_C2_RRIE_WIDTH                        1
#define CMP_C2_RRIE(x)                           (((uint32)(((uint32)(x))<<CMP_C2_RRIE_SHIFT))&CMP_C2_RRIE_MASK)
#define CMP_C2_RRE_MASK                          0x80000000u
#define CMP_C2_RRE_SHIFT                         31
#define CMP_C2_RRE_WIDTH                         1
#define CMP_C2_RRE(x)                            (((uint32)(((uint32)(x))<<CMP_C2_RRE_SHIFT))&CMP_C2_RRE_MASK)

/*!
 * @}
 */ /* end of group CMP_Register_Masks */


/* CMP - Peripheral instance base addresses */
/** Peripheral CMP0 base address */
#define CMP0_BASE                                (0x40073000u)
/** Peripheral CMP0 base pointer */
#define CMP0                                     ((CMP_Type *)CMP0_BASE)
#define CMP0_BASE_PTR                            (CMP0)
/** Array initializer of CMP peripheral base addresses */
#define CMP_BASE_ADDRS                           { CMP0_BASE }
/** Array initializer of CMP peripheral base pointers */
#define CMP_BASE_PTRS                            { CMP0 }

/* ----------------------------------------------------------------------------
   -- CMP - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMP_Register_Accessor_Macros CMP - Register accessor macros
 * @{
 */


/* CMP - Register instance definitions */
/* CMP0 */
#define CMP0_C0                                  CMP_C0_REG(CMP0)
#define CMP0_C1                                  CMP_C1_REG(CMP0)
#define CMP0_C2                                  CMP_C2_REG(CMP0)

/*!
 * @}
 */ /* end of group CMP_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group CMP_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CRC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Peripheral_Access_Layer CRC Peripheral Access Layer
 * @{
 */

/** CRC - Register Layout Typedef */
typedef struct {
  __IO uint32 DATA;                                /**< CRC Data register, offset: 0x0 */
  __IO uint32 GPOLY;                               /**< CRC Polynomial register, offset: 0x4 */
  __IO uint32 CTRL;                                /**< CRC Control register, offset: 0x8 */
} CRC_Type, *CRC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Register_Accessor_Macros CRC - Register accessor macros
 * @{
 */


/* CRC - Register accessors */
#define CRC_DATA_REG(base)                       ((base)->DATA)
#define CRC_GPOLY_REG(base)                      ((base)->GPOLY)
#define CRC_CTRL_REG(base)                       ((base)->CTRL)

/*!
 * @}
 */ /* end of group CRC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CRC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Register_Masks CRC Register Masks
 * @{
 */

/* DATA Bit Fields */
#define CRC_DATA_LL_MASK                         0xFFu
#define CRC_DATA_LL_SHIFT                        0
#define CRC_DATA_LL_WIDTH                        8
#define CRC_DATA_LL(x)                           (((uint32)(((uint32)(x))<<CRC_DATA_LL_SHIFT))&CRC_DATA_LL_MASK)
#define CRC_DATA_LU_MASK                         0xFF00u
#define CRC_DATA_LU_SHIFT                        8
#define CRC_DATA_LU_WIDTH                        8
#define CRC_DATA_LU(x)                           (((uint32)(((uint32)(x))<<CRC_DATA_LU_SHIFT))&CRC_DATA_LU_MASK)
#define CRC_DATA_HL_MASK                         0xFF0000u
#define CRC_DATA_HL_SHIFT                        16
#define CRC_DATA_HL_WIDTH                        8
#define CRC_DATA_HL(x)                           (((uint32)(((uint32)(x))<<CRC_DATA_HL_SHIFT))&CRC_DATA_HL_MASK)
#define CRC_DATA_HU_MASK                         0xFF000000u
#define CRC_DATA_HU_SHIFT                        24
#define CRC_DATA_HU_WIDTH                        8
#define CRC_DATA_HU(x)                           (((uint32)(((uint32)(x))<<CRC_DATA_HU_SHIFT))&CRC_DATA_HU_MASK)
/* GPOLY Bit Fields */
#define CRC_GPOLY_LOW_MASK                       0xFFFFu
#define CRC_GPOLY_LOW_SHIFT                      0
#define CRC_GPOLY_LOW_WIDTH                      16
#define CRC_GPOLY_LOW(x)                         (((uint32)(((uint32)(x))<<CRC_GPOLY_LOW_SHIFT))&CRC_GPOLY_LOW_MASK)
#define CRC_GPOLY_HIGH_MASK                      0xFFFF0000u
#define CRC_GPOLY_HIGH_SHIFT                     16
#define CRC_GPOLY_HIGH_WIDTH                     16
#define CRC_GPOLY_HIGH(x)                        (((uint32)(((uint32)(x))<<CRC_GPOLY_HIGH_SHIFT))&CRC_GPOLY_HIGH_MASK)
/* CTRL Bit Fields */
#define CRC_CTRL_TCRC_MASK                       0x1000000u
#define CRC_CTRL_TCRC_SHIFT                      24
#define CRC_CTRL_TCRC_WIDTH                      1
#define CRC_CTRL_TCRC(x)                         (((uint32)(((uint32)(x))<<CRC_CTRL_TCRC_SHIFT))&CRC_CTRL_TCRC_MASK)
#define CRC_CTRL_WAS_MASK                        0x2000000u
#define CRC_CTRL_WAS_SHIFT                       25
#define CRC_CTRL_WAS_WIDTH                       1
#define CRC_CTRL_WAS(x)                          (((uint32)(((uint32)(x))<<CRC_CTRL_WAS_SHIFT))&CRC_CTRL_WAS_MASK)
#define CRC_CTRL_FXOR_MASK                       0x4000000u
#define CRC_CTRL_FXOR_SHIFT                      26
#define CRC_CTRL_FXOR_WIDTH                      1
#define CRC_CTRL_FXOR(x)                         (((uint32)(((uint32)(x))<<CRC_CTRL_FXOR_SHIFT))&CRC_CTRL_FXOR_MASK)
#define CRC_CTRL_TOTR_MASK                       0x30000000u
#define CRC_CTRL_TOTR_SHIFT                      28
#define CRC_CTRL_TOTR_WIDTH                      2
#define CRC_CTRL_TOTR(x)                         (((uint32)(((uint32)(x))<<CRC_CTRL_TOTR_SHIFT))&CRC_CTRL_TOTR_MASK)
#define CRC_CTRL_TOT_MASK                        0xC0000000u
#define CRC_CTRL_TOT_SHIFT                       30
#define CRC_CTRL_TOT_WIDTH                       2
#define CRC_CTRL_TOT(x)                          (((uint32)(((uint32)(x))<<CRC_CTRL_TOT_SHIFT))&CRC_CTRL_TOT_MASK)

/*!
 * @}
 */ /* end of group CRC_Register_Masks */


/* CRC - Peripheral instance base addresses */
/** Peripheral CRC base address */
#define CRC_BASE                                 (0x40032000u)
/** Peripheral CRC base pointer */
#define CRC                                      ((CRC_Type *)CRC_BASE)
#define CRC_BASE_PTR                             (CRC)
/** Array initializer of CRC peripheral base addresses */
#define CRC_BASE_ADDRS                           { CRC_BASE }
/** Array initializer of CRC peripheral base pointers */
#define CRC_BASE_PTRS                            { CRC }

/* ----------------------------------------------------------------------------
   -- CRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Register_Accessor_Macros CRC - Register accessor macros
 * @{
 */


/* CRC - Register instance definitions */
/* CRC */
#define CRC_DATA                                 CRC_DATA_REG(CRC)
#define CRC_GPOLY                                CRC_GPOLY_REG(CRC)
#define CRC_CTRL                                 CRC_CTRL_REG(CRC)

/*!
 * @}
 */ /* end of group CRC_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group CRC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMA Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Peripheral_Access_Layer DMA Peripheral Access Layer
 * @{
 */

/** DMA - Register Layout Typedef */
typedef struct {
  __IO uint32 CR;                                  /**< Control Register, offset: 0x0 */
  __I  uint32 ES;                                  /**< Error Status Register, offset: 0x4 */
       uint8 RESERVED_0[4];
  __IO uint32 ERQ;                                 /**< Enable Request Register, offset: 0xC */
       uint8 RESERVED_1[4];
  __IO uint32 EEI;                                 /**< Enable Error Interrupt Register, offset: 0x14 */
  __O  uint8 CEEI;                                 /**< Clear Enable Error Interrupt Register, offset: 0x18 */
  __O  uint8 SEEI;                                 /**< Set Enable Error Interrupt Register, offset: 0x19 */
  __O  uint8 CERQ;                                 /**< Clear Enable Request Register, offset: 0x1A */
  __O  uint8 SERQ;                                 /**< Set Enable Request Register, offset: 0x1B */
  __O  uint8 CDNE;                                 /**< Clear DONE Status Bit Register, offset: 0x1C */
  __O  uint8 SSRT;                                 /**< Set START Bit Register, offset: 0x1D */
  __O  uint8 CERR;                                 /**< Clear Error Register, offset: 0x1E */
  __O  uint8 CINT;                                 /**< Clear Interrupt Request Register, offset: 0x1F */
       uint8 RESERVED_2[4];
  __IO uint32 INT;                                 /**< Interrupt Request Register, offset: 0x24 */
       uint8 RESERVED_3[4];
  __IO uint32 ERR;                                 /**< Error Register, offset: 0x2C */
       uint8 RESERVED_4[4];
  __I  uint32 HRS;                                 /**< Hardware Request Status Register, offset: 0x34 */
       uint8 RESERVED_5[12];
  __IO uint32 EARS;                                /**< Enable Asynchronous Request in Stop Register, offset: 0x44 */
       uint8 RESERVED_6[184];
  __IO uint8 DCHPRI[16];                           /**< Channel n Priority Register, array offset: 0x100, array step: 0x1 */
       uint8 RESERVED_7[3824];
  __IO uint32 TCD0_SADDR;                          /**< TCD Source Address, offset: 0x1000 */
  __IO uint16 TCD0_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x1004 */
  __IO uint16 TCD0_ATTR;                           /**< TCD Transfer Attributes, offset: 0x1006 */
  union {                                          /* offset: 0x1008 */
    __IO uint32 TCD0_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1008 */
    __IO uint32 TCD0_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1008 */
    __IO uint32 TCD0_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1008 */
  } TCD0_NBYTES;
  __IO uint32 TCD0_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x100C */
  __IO uint32 TCD0_DADDR;                          /**< TCD Destination Address, offset: 0x1010 */
  __IO uint16 TCD0_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x1014 */
  union {                                          /* offset: 0x1016 */
    __IO uint16 TCD0_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1016 */
    __IO uint16 TCD0_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1016 */
  } TCD0_CITER;
  __IO uint32 TCD0_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1018 */
  __IO uint16 TCD0_CSR;                            /**< TCD Control and Status, offset: 0x101C */
  union {                                          /* offset: 0x101E */
    __IO uint16 TCD0_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x101E */
    __IO uint16 TCD0_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x101E */
  } TCD0_BITER;
  __IO uint32 TCD1_SADDR;                          /**< TCD Source Address, offset: 0x1020 */
  __IO uint16 TCD1_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x1024 */
  __IO uint16 TCD1_ATTR;                           /**< TCD Transfer Attributes, offset: 0x1026 */
  union {                                          /* offset: 0x1028 */
    __IO uint32 TCD1_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1028 */
    __IO uint32 TCD1_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1028 */
    __IO uint32 TCD1_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1028 */
  } TCD1_NBYTES;
  __IO uint32 TCD1_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x102C */
  __IO uint32 TCD1_DADDR;                          /**< TCD Destination Address, offset: 0x1030 */
  __IO uint16 TCD1_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x1034 */
  union {                                          /* offset: 0x1036 */
    __IO uint16 TCD1_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1036 */
    __IO uint16 TCD1_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1036 */
  } TCD1_CITER;
  __IO uint32 TCD1_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1038 */
  __IO uint16 TCD1_CSR;                            /**< TCD Control and Status, offset: 0x103C */
  union {                                          /* offset: 0x103E */
    __IO uint16 TCD1_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x103E */
    __IO uint16 TCD1_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x103E */
  } TCD1_BITER;
  __IO uint32 TCD2_SADDR;                          /**< TCD Source Address, offset: 0x1040 */
  __IO uint16 TCD2_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x1044 */
  __IO uint16 TCD2_ATTR;                           /**< TCD Transfer Attributes, offset: 0x1046 */
  union {                                          /* offset: 0x1048 */
    __IO uint32 TCD2_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1048 */
    __IO uint32 TCD2_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1048 */
    __IO uint32 TCD2_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1048 */
  } TCD2_NBYTES;
  __IO uint32 TCD2_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x104C */
  __IO uint32 TCD2_DADDR;                          /**< TCD Destination Address, offset: 0x1050 */
  __IO uint16 TCD2_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x1054 */
  union {                                          /* offset: 0x1056 */
    __IO uint16 TCD2_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1056 */
    __IO uint16 TCD2_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1056 */
  } TCD2_CITER;
  __IO uint32 TCD2_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1058 */
  __IO uint16 TCD2_CSR;                            /**< TCD Control and Status, offset: 0x105C */
  union {                                          /* offset: 0x105E */
    __IO uint16 TCD2_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x105E */
    __IO uint16 TCD2_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x105E */
  } TCD2_BITER;
  __IO uint32 TCD3_SADDR;                          /**< TCD Source Address, offset: 0x1060 */
  __IO uint16 TCD3_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x1064 */
  __IO uint16 TCD3_ATTR;                           /**< TCD Transfer Attributes, offset: 0x1066 */
  union {                                          /* offset: 0x1068 */
    __IO uint32 TCD3_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1068 */
    __IO uint32 TCD3_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1068 */
    __IO uint32 TCD3_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1068 */
  } TCD3_NBYTES;
  __IO uint32 TCD3_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x106C */
  __IO uint32 TCD3_DADDR;                          /**< TCD Destination Address, offset: 0x1070 */
  __IO uint16 TCD3_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x1074 */
  union {                                          /* offset: 0x1076 */
    __IO uint16 TCD3_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1076 */
    __IO uint16 TCD3_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1076 */
  } TCD3_CITER;
  __IO uint32 TCD3_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1078 */
  __IO uint16 TCD3_CSR;                            /**< TCD Control and Status, offset: 0x107C */
  union {                                          /* offset: 0x107E */
    __IO uint16 TCD3_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x107E */
    __IO uint16 TCD3_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x107E */
  } TCD3_BITER;
  __IO uint32 TCD4_SADDR;                          /**< TCD Source Address, offset: 0x1080 */
  __IO uint16 TCD4_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x1084 */
  __IO uint16 TCD4_ATTR;                           /**< TCD Transfer Attributes, offset: 0x1086 */
  union {                                          /* offset: 0x1088 */
    __IO uint32 TCD4_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1088 */
    __IO uint32 TCD4_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1088 */
    __IO uint32 TCD4_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1088 */
  } TCD4_NBYTES;
  __IO uint32 TCD4_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x108C */
  __IO uint32 TCD4_DADDR;                          /**< TCD Destination Address, offset: 0x1090 */
  __IO uint16 TCD4_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x1094 */
  union {                                          /* offset: 0x1096 */
    __IO uint16 TCD4_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1096 */
    __IO uint16 TCD4_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1096 */
  } TCD4_CITER;
  __IO uint32 TCD4_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1098 */
  __IO uint16 TCD4_CSR;                            /**< TCD Control and Status, offset: 0x109C */
  union {                                          /* offset: 0x109E */
    __IO uint16 TCD4_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x109E */
    __IO uint16 TCD4_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x109E */
  } TCD4_BITER;
  __IO uint32 TCD5_SADDR;                          /**< TCD Source Address, offset: 0x10A0 */
  __IO uint16 TCD5_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x10A4 */
  __IO uint16 TCD5_ATTR;                           /**< TCD Transfer Attributes, offset: 0x10A6 */
  union {                                          /* offset: 0x10A8 */
    __IO uint32 TCD5_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x10A8 */
    __IO uint32 TCD5_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x10A8 */
    __IO uint32 TCD5_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x10A8 */
  } TCD5_NBYTES;
  __IO uint32 TCD5_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x10AC */
  __IO uint32 TCD5_DADDR;                          /**< TCD Destination Address, offset: 0x10B0 */
  __IO uint16 TCD5_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x10B4 */
  union {                                          /* offset: 0x10B6 */
    __IO uint16 TCD5_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x10B6 */
    __IO uint16 TCD5_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x10B6 */
  } TCD5_CITER;
  __IO uint32 TCD5_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x10B8 */
  __IO uint16 TCD5_CSR;                            /**< TCD Control and Status, offset: 0x10BC */
  union {                                          /* offset: 0x10BE */
    __IO uint16 TCD5_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x10BE */
    __IO uint16 TCD5_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x10BE */
  } TCD5_BITER;
  __IO uint32 TCD6_SADDR;                          /**< TCD Source Address, offset: 0x10C0 */
  __IO uint16 TCD6_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x10C4 */
  __IO uint16 TCD6_ATTR;                           /**< TCD Transfer Attributes, offset: 0x10C6 */
  union {                                          /* offset: 0x10C8 */
    __IO uint32 TCD6_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x10C8 */
    __IO uint32 TCD6_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x10C8 */
    __IO uint32 TCD6_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x10C8 */
  } TCD6_NBYTES;
  __IO uint32 TCD6_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x10CC */
  __IO uint32 TCD6_DADDR;                          /**< TCD Destination Address, offset: 0x10D0 */
  __IO uint16 TCD6_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x10D4 */
  union {                                          /* offset: 0x10D6 */
    __IO uint16 TCD6_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x10D6 */
    __IO uint16 TCD6_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x10D6 */
  } TCD6_CITER;
  __IO uint32 TCD6_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x10D8 */
  __IO uint16 TCD6_CSR;                            /**< TCD Control and Status, offset: 0x10DC */
  union {                                          /* offset: 0x10DE */
    __IO uint16 TCD6_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x10DE */
    __IO uint16 TCD6_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x10DE */
  } TCD6_BITER;
  __IO uint32 TCD7_SADDR;                          /**< TCD Source Address, offset: 0x10E0 */
  __IO uint16 TCD7_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x10E4 */
  __IO uint16 TCD7_ATTR;                           /**< TCD Transfer Attributes, offset: 0x10E6 */
  union {                                          /* offset: 0x10E8 */
    __IO uint32 TCD7_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x10E8 */
    __IO uint32 TCD7_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x10E8 */
    __IO uint32 TCD7_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x10E8 */
  } TCD7_NBYTES;
  __IO uint32 TCD7_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x10EC */
  __IO uint32 TCD7_DADDR;                          /**< TCD Destination Address, offset: 0x10F0 */
  __IO uint16 TCD7_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x10F4 */
  union {                                          /* offset: 0x10F6 */
    __IO uint16 TCD7_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x10F6 */
    __IO uint16 TCD7_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x10F6 */
  } TCD7_CITER;
  __IO uint32 TCD7_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x10F8 */
  __IO uint16 TCD7_CSR;                            /**< TCD Control and Status, offset: 0x10FC */
  union {                                          /* offset: 0x10FE */
    __IO uint16 TCD7_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x10FE */
    __IO uint16 TCD7_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x10FE */
  } TCD7_BITER;
  __IO uint32 TCD8_SADDR;                          /**< TCD Source Address, offset: 0x1100 */
  __IO uint16 TCD8_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x1104 */
  __IO uint16 TCD8_ATTR;                           /**< TCD Transfer Attributes, offset: 0x1106 */
  union {                                          /* offset: 0x1108 */
    __IO uint32 TCD8_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1108 */
    __IO uint32 TCD8_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1108 */
    __IO uint32 TCD8_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1108 */
  } TCD8_NBYTES;
  __IO uint32 TCD8_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x110C */
  __IO uint32 TCD8_DADDR;                          /**< TCD Destination Address, offset: 0x1110 */
  __IO uint16 TCD8_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x1114 */
  union {                                          /* offset: 0x1116 */
    __IO uint16 TCD8_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1116 */
    __IO uint16 TCD8_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1116 */
  } TCD8_CITER;
  __IO uint32 TCD8_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1118 */
  __IO uint16 TCD8_CSR;                            /**< TCD Control and Status, offset: 0x111C */
  union {                                          /* offset: 0x111E */
    __IO uint16 TCD8_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x111E */
    __IO uint16 TCD8_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x111E */
  } TCD8_BITER;
  __IO uint32 TCD9_SADDR;                          /**< TCD Source Address, offset: 0x1120 */
  __IO uint16 TCD9_SOFF;                           /**< TCD Signed Source Address Offset, offset: 0x1124 */
  __IO uint16 TCD9_ATTR;                           /**< TCD Transfer Attributes, offset: 0x1126 */
  union {                                          /* offset: 0x1128 */
    __IO uint32 TCD9_NBYTES_MLNO;                    /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1128 */
    __IO uint32 TCD9_NBYTES_MLOFFNO;                 /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1128 */
    __IO uint32 TCD9_NBYTES_MLOFFYES;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1128 */
  } TCD9_NBYTES;
  __IO uint32 TCD9_SLAST;                          /**< TCD Last Source Address Adjustment, offset: 0x112C */
  __IO uint32 TCD9_DADDR;                          /**< TCD Destination Address, offset: 0x1130 */
  __IO uint16 TCD9_DOFF;                           /**< TCD Signed Destination Address Offset, offset: 0x1134 */
  union {                                          /* offset: 0x1136 */
    __IO uint16 TCD9_CITER_ELINKNO;                  /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1136 */
    __IO uint16 TCD9_CITER_ELINKYES;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1136 */
  } TCD9_CITER;
  __IO uint32 TCD9_DLASTSGA;                       /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1138 */
  __IO uint16 TCD9_CSR;                            /**< TCD Control and Status, offset: 0x113C */
  union {                                          /* offset: 0x113E */
    __IO uint16 TCD9_BITER_ELINKNO;                  /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x113E */
    __IO uint16 TCD9_BITER_ELINKYES;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x113E */
  } TCD9_BITER;
  __IO uint32 TCD10_SADDR;                         /**< TCD Source Address, offset: 0x1140 */
  __IO uint16 TCD10_SOFF;                          /**< TCD Signed Source Address Offset, offset: 0x1144 */
  __IO uint16 TCD10_ATTR;                          /**< TCD Transfer Attributes, offset: 0x1146 */
  union {                                          /* offset: 0x1148 */
    __IO uint32 TCD10_NBYTES_MLNO;                   /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1148 */
    __IO uint32 TCD10_NBYTES_MLOFFNO;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1148 */
    __IO uint32 TCD10_NBYTES_MLOFFYES;               /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1148 */
  } TCD10_NBYTES;
  __IO uint32 TCD10_SLAST;                         /**< TCD Last Source Address Adjustment, offset: 0x114C */
  __IO uint32 TCD10_DADDR;                         /**< TCD Destination Address, offset: 0x1150 */
  __IO uint16 TCD10_DOFF;                          /**< TCD Signed Destination Address Offset, offset: 0x1154 */
  union {                                          /* offset: 0x1156 */
    __IO uint16 TCD10_CITER_ELINKNO;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1156 */
    __IO uint16 TCD10_CITER_ELINKYES;                /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1156 */
  } TCD10_CITER;
  __IO uint32 TCD10_DLASTSGA;                      /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1158 */
  __IO uint16 TCD10_CSR;                           /**< TCD Control and Status, offset: 0x115C */
  union {                                          /* offset: 0x115E */
    __IO uint16 TCD10_BITER_ELINKNO;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x115E */
    __IO uint16 TCD10_BITER_ELINKYES;                /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x115E */
  } TCD10_BITER;
  __IO uint32 TCD11_SADDR;                         /**< TCD Source Address, offset: 0x1160 */
  __IO uint16 TCD11_SOFF;                          /**< TCD Signed Source Address Offset, offset: 0x1164 */
  __IO uint16 TCD11_ATTR;                          /**< TCD Transfer Attributes, offset: 0x1166 */
  union {                                          /* offset: 0x1168 */
    __IO uint32 TCD11_NBYTES_MLNO;                   /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1168 */
    __IO uint32 TCD11_NBYTES_MLOFFNO;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1168 */
    __IO uint32 TCD11_NBYTES_MLOFFYES;               /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1168 */
  } TCD11_NBYTES;
  __IO uint32 TCD11_SLAST;                         /**< TCD Last Source Address Adjustment, offset: 0x116C */
  __IO uint32 TCD11_DADDR;                         /**< TCD Destination Address, offset: 0x1170 */
  __IO uint16 TCD11_DOFF;                          /**< TCD Signed Destination Address Offset, offset: 0x1174 */
  union {                                          /* offset: 0x1176 */
    __IO uint16 TCD11_CITER_ELINKNO;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1176 */
    __IO uint16 TCD11_CITER_ELINKYES;                /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1176 */
  } TCD11_CITER;
  __IO uint32 TCD11_DLASTSGA;                      /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1178 */
  __IO uint16 TCD11_CSR;                           /**< TCD Control and Status, offset: 0x117C */
  union {                                          /* offset: 0x117E */
    __IO uint16 TCD11_BITER_ELINKNO;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x117E */
    __IO uint16 TCD11_BITER_ELINKYES;                /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x117E */
  } TCD11_BITER;
  __IO uint32 TCD12_SADDR;                         /**< TCD Source Address, offset: 0x1180 */
  __IO uint16 TCD12_SOFF;                          /**< TCD Signed Source Address Offset, offset: 0x1184 */
  __IO uint16 TCD12_ATTR;                          /**< TCD Transfer Attributes, offset: 0x1186 */
  union {                                          /* offset: 0x1188 */
    __IO uint32 TCD12_NBYTES_MLNO;                   /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x1188 */
    __IO uint32 TCD12_NBYTES_MLOFFNO;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x1188 */
    __IO uint32 TCD12_NBYTES_MLOFFYES;               /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x1188 */
  } TCD12_NBYTES;
  __IO uint32 TCD12_SLAST;                         /**< TCD Last Source Address Adjustment, offset: 0x118C */
  __IO uint32 TCD12_DADDR;                         /**< TCD Destination Address, offset: 0x1190 */
  __IO uint16 TCD12_DOFF;                          /**< TCD Signed Destination Address Offset, offset: 0x1194 */
  union {                                          /* offset: 0x1196 */
    __IO uint16 TCD12_CITER_ELINKNO;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x1196 */
    __IO uint16 TCD12_CITER_ELINKYES;                /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x1196 */
  } TCD12_CITER;
  __IO uint32 TCD12_DLASTSGA;                      /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x1198 */
  __IO uint16 TCD12_CSR;                           /**< TCD Control and Status, offset: 0x119C */
  union {                                          /* offset: 0x119E */
    __IO uint16 TCD12_BITER_ELINKNO;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x119E */
    __IO uint16 TCD12_BITER_ELINKYES;                /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x119E */
  } TCD12_BITER;
  __IO uint32 TCD13_SADDR;                         /**< TCD Source Address, offset: 0x11A0 */
  __IO uint16 TCD13_SOFF;                          /**< TCD Signed Source Address Offset, offset: 0x11A4 */
  __IO uint16 TCD13_ATTR;                          /**< TCD Transfer Attributes, offset: 0x11A6 */
  union {                                          /* offset: 0x11A8 */
    __IO uint32 TCD13_NBYTES_MLNO;                   /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x11A8 */
    __IO uint32 TCD13_NBYTES_MLOFFNO;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x11A8 */
    __IO uint32 TCD13_NBYTES_MLOFFYES;               /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x11A8 */
  } TCD13_NBYTES;
  __IO uint32 TCD13_SLAST;                         /**< TCD Last Source Address Adjustment, offset: 0x11AC */
  __IO uint32 TCD13_DADDR;                         /**< TCD Destination Address, offset: 0x11B0 */
  __IO uint16 TCD13_DOFF;                          /**< TCD Signed Destination Address Offset, offset: 0x11B4 */
  union {                                          /* offset: 0x11B6 */
    __IO uint16 TCD13_CITER_ELINKNO;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x11B6 */
    __IO uint16 TCD13_CITER_ELINKYES;                /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x11B6 */
  } TCD13_CITER;
  __IO uint32 TCD13_DLASTSGA;                      /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x11B8 */
  __IO uint16 TCD13_CSR;                           /**< TCD Control and Status, offset: 0x11BC */
  union {                                          /* offset: 0x11BE */
    __IO uint16 TCD13_BITER_ELINKNO;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x11BE */
    __IO uint16 TCD13_BITER_ELINKYES;                /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x11BE */
  } TCD13_BITER;
  __IO uint32 TCD14_SADDR;                         /**< TCD Source Address, offset: 0x11C0 */
  __IO uint16 TCD14_SOFF;                          /**< TCD Signed Source Address Offset, offset: 0x11C4 */
  __IO uint16 TCD14_ATTR;                          /**< TCD Transfer Attributes, offset: 0x11C6 */
  union {                                          /* offset: 0x11C8 */
    __IO uint32 TCD14_NBYTES_MLNO;                   /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x11C8 */
    __IO uint32 TCD14_NBYTES_MLOFFNO;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x11C8 */
    __IO uint32 TCD14_NBYTES_MLOFFYES;               /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x11C8 */
  } TCD14_NBYTES;
  __IO uint32 TCD14_SLAST;                         /**< TCD Last Source Address Adjustment, offset: 0x11CC */
  __IO uint32 TCD14_DADDR;                         /**< TCD Destination Address, offset: 0x11D0 */
  __IO uint16 TCD14_DOFF;                          /**< TCD Signed Destination Address Offset, offset: 0x11D4 */
  union {                                          /* offset: 0x11D6 */
    __IO uint16 TCD14_CITER_ELINKNO;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x11D6 */
    __IO uint16 TCD14_CITER_ELINKYES;                /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x11D6 */
  } TCD14_CITER;
  __IO uint32 TCD14_DLASTSGA;                      /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x11D8 */
  __IO uint16 TCD14_CSR;                           /**< TCD Control and Status, offset: 0x11DC */
  union {                                          /* offset: 0x11DE */
    __IO uint16 TCD14_BITER_ELINKNO;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x11DE */
    __IO uint16 TCD14_BITER_ELINKYES;                /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x11DE */
  } TCD14_BITER;
  __IO uint32 TCD15_SADDR;                         /**< TCD Source Address, offset: 0x11E0 */
  __IO uint16 TCD15_SOFF;                          /**< TCD Signed Source Address Offset, offset: 0x11E4 */
  __IO uint16 TCD15_ATTR;                          /**< TCD Transfer Attributes, offset: 0x11E6 */
  union {                                          /* offset: 0x11E8 */
    __IO uint32 TCD15_NBYTES_MLNO;                   /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), offset: 0x11E8 */
    __IO uint32 TCD15_NBYTES_MLOFFNO;                /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), offset: 0x11E8 */
    __IO uint32 TCD15_NBYTES_MLOFFYES;               /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), offset: 0x11E8 */
  } TCD15_NBYTES;
  __IO uint32 TCD15_SLAST;                         /**< TCD Last Source Address Adjustment, offset: 0x11EC */
  __IO uint32 TCD15_DADDR;                         /**< TCD Destination Address, offset: 0x11F0 */
  __IO uint16 TCD15_DOFF;                          /**< TCD Signed Destination Address Offset, offset: 0x11F4 */
  union {                                          /* offset: 0x11F6 */
    __IO uint16 TCD15_CITER_ELINKNO;                 /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x11F6 */
    __IO uint16 TCD15_CITER_ELINKYES;                /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x11F6 */
  } TCD15_CITER;
  __IO uint32 TCD15_DLASTSGA;                      /**< TCD Last Destination Address Adjustment/Scatter Gather Address, offset: 0x11F8 */
  __IO uint16 TCD15_CSR;                           /**< TCD Control and Status, offset: 0x11FC */
  union {                                          /* offset: 0x11FE */
    __IO uint16 TCD15_BITER_ELINKNO;                 /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), offset: 0x11FE */
    __IO uint16 TCD15_BITER_ELINKYES;                /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), offset: 0x11FE */
  } TCD15_BITER;
} DMA_Type, *DMA_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- DMA - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Register_Accessor_Macros DMA - Register accessor macros
 * @{
 */


/* DMA - Register accessors */
#define DMA_CR_REG(base)                         ((base)->CR)
#define DMA_ES_REG(base)                         ((base)->ES)
#define DMA_ERQ_REG(base)                        ((base)->ERQ)
#define DMA_EEI_REG(base)                        ((base)->EEI)
#define DMA_CEEI_REG(base)                       ((base)->CEEI)
#define DMA_SEEI_REG(base)                       ((base)->SEEI)
#define DMA_CERQ_REG(base)                       ((base)->CERQ)
#define DMA_SERQ_REG(base)                       ((base)->SERQ)
#define DMA_CDNE_REG(base)                       ((base)->CDNE)
#define DMA_SSRT_REG(base)                       ((base)->SSRT)
#define DMA_CERR_REG(base)                       ((base)->CERR)
#define DMA_CINT_REG(base)                       ((base)->CINT)
#define DMA_INT_REG(base)                        ((base)->INT)
#define DMA_ERR_REG(base)                        ((base)->ERR)
#define DMA_HRS_REG(base)                        ((base)->HRS)
#define DMA_EARS_REG(base)                       ((base)->EARS)
#define DMA_DCHPRI_REG(base,index)               ((base)->DCHPRI[index])
#define DMA_DCHPRI_COUNT                         16
#define DMA_TCD0_SADDR_REG(base)                 ((base)->TCD0_SADDR)
#define DMA_TCD0_SOFF_REG(base)                  ((base)->TCD0_SOFF)
#define DMA_TCD0_ATTR_REG(base)                  ((base)->TCD0_ATTR)
#define DMA_TCD0_NBYTES_MLNO_REG(base)           ((base)->TCD0_NBYTES.TCD0_NBYTES_MLNO)
#define DMA_TCD0_NBYTES_MLOFFNO_REG(base)        ((base)->TCD0_NBYTES.TCD0_NBYTES_MLOFFNO)
#define DMA_TCD0_NBYTES_MLOFFYES_REG(base)       ((base)->TCD0_NBYTES.TCD0_NBYTES_MLOFFYES)
#define DMA_TCD0_SLAST_REG(base)                 ((base)->TCD0_SLAST)
#define DMA_TCD0_DADDR_REG(base)                 ((base)->TCD0_DADDR)
#define DMA_TCD0_DOFF_REG(base)                  ((base)->TCD0_DOFF)
#define DMA_TCD0_CITER_ELINKNO_REG(base)         ((base)->TCD0_CITER.TCD0_CITER_ELINKNO)
#define DMA_TCD0_CITER_ELINKYES_REG(base)        ((base)->TCD0_CITER.TCD0_CITER_ELINKYES)
#define DMA_TCD0_DLASTSGA_REG(base)              ((base)->TCD0_DLASTSGA)
#define DMA_TCD0_CSR_REG(base)                   ((base)->TCD0_CSR)
#define DMA_TCD0_BITER_ELINKNO_REG(base)         ((base)->TCD0_BITER.TCD0_BITER_ELINKNO)
#define DMA_TCD0_BITER_ELINKYES_REG(base)        ((base)->TCD0_BITER.TCD0_BITER_ELINKYES)
#define DMA_TCD1_SADDR_REG(base)                 ((base)->TCD1_SADDR)
#define DMA_TCD1_SOFF_REG(base)                  ((base)->TCD1_SOFF)
#define DMA_TCD1_ATTR_REG(base)                  ((base)->TCD1_ATTR)
#define DMA_TCD1_NBYTES_MLNO_REG(base)           ((base)->TCD1_NBYTES.TCD1_NBYTES_MLNO)
#define DMA_TCD1_NBYTES_MLOFFNO_REG(base)        ((base)->TCD1_NBYTES.TCD1_NBYTES_MLOFFNO)
#define DMA_TCD1_NBYTES_MLOFFYES_REG(base)       ((base)->TCD1_NBYTES.TCD1_NBYTES_MLOFFYES)
#define DMA_TCD1_SLAST_REG(base)                 ((base)->TCD1_SLAST)
#define DMA_TCD1_DADDR_REG(base)                 ((base)->TCD1_DADDR)
#define DMA_TCD1_DOFF_REG(base)                  ((base)->TCD1_DOFF)
#define DMA_TCD1_CITER_ELINKNO_REG(base)         ((base)->TCD1_CITER.TCD1_CITER_ELINKNO)
#define DMA_TCD1_CITER_ELINKYES_REG(base)        ((base)->TCD1_CITER.TCD1_CITER_ELINKYES)
#define DMA_TCD1_DLASTSGA_REG(base)              ((base)->TCD1_DLASTSGA)
#define DMA_TCD1_CSR_REG(base)                   ((base)->TCD1_CSR)
#define DMA_TCD1_BITER_ELINKNO_REG(base)         ((base)->TCD1_BITER.TCD1_BITER_ELINKNO)
#define DMA_TCD1_BITER_ELINKYES_REG(base)        ((base)->TCD1_BITER.TCD1_BITER_ELINKYES)
#define DMA_TCD2_SADDR_REG(base)                 ((base)->TCD2_SADDR)
#define DMA_TCD2_SOFF_REG(base)                  ((base)->TCD2_SOFF)
#define DMA_TCD2_ATTR_REG(base)                  ((base)->TCD2_ATTR)
#define DMA_TCD2_NBYTES_MLNO_REG(base)           ((base)->TCD2_NBYTES.TCD2_NBYTES_MLNO)
#define DMA_TCD2_NBYTES_MLOFFNO_REG(base)        ((base)->TCD2_NBYTES.TCD2_NBYTES_MLOFFNO)
#define DMA_TCD2_NBYTES_MLOFFYES_REG(base)       ((base)->TCD2_NBYTES.TCD2_NBYTES_MLOFFYES)
#define DMA_TCD2_SLAST_REG(base)                 ((base)->TCD2_SLAST)
#define DMA_TCD2_DADDR_REG(base)                 ((base)->TCD2_DADDR)
#define DMA_TCD2_DOFF_REG(base)                  ((base)->TCD2_DOFF)
#define DMA_TCD2_CITER_ELINKNO_REG(base)         ((base)->TCD2_CITER.TCD2_CITER_ELINKNO)
#define DMA_TCD2_CITER_ELINKYES_REG(base)        ((base)->TCD2_CITER.TCD2_CITER_ELINKYES)
#define DMA_TCD2_DLASTSGA_REG(base)              ((base)->TCD2_DLASTSGA)
#define DMA_TCD2_CSR_REG(base)                   ((base)->TCD2_CSR)
#define DMA_TCD2_BITER_ELINKNO_REG(base)         ((base)->TCD2_BITER.TCD2_BITER_ELINKNO)
#define DMA_TCD2_BITER_ELINKYES_REG(base)        ((base)->TCD2_BITER.TCD2_BITER_ELINKYES)
#define DMA_TCD3_SADDR_REG(base)                 ((base)->TCD3_SADDR)
#define DMA_TCD3_SOFF_REG(base)                  ((base)->TCD3_SOFF)
#define DMA_TCD3_ATTR_REG(base)                  ((base)->TCD3_ATTR)
#define DMA_TCD3_NBYTES_MLNO_REG(base)           ((base)->TCD3_NBYTES.TCD3_NBYTES_MLNO)
#define DMA_TCD3_NBYTES_MLOFFNO_REG(base)        ((base)->TCD3_NBYTES.TCD3_NBYTES_MLOFFNO)
#define DMA_TCD3_NBYTES_MLOFFYES_REG(base)       ((base)->TCD3_NBYTES.TCD3_NBYTES_MLOFFYES)
#define DMA_TCD3_SLAST_REG(base)                 ((base)->TCD3_SLAST)
#define DMA_TCD3_DADDR_REG(base)                 ((base)->TCD3_DADDR)
#define DMA_TCD3_DOFF_REG(base)                  ((base)->TCD3_DOFF)
#define DMA_TCD3_CITER_ELINKNO_REG(base)         ((base)->TCD3_CITER.TCD3_CITER_ELINKNO)
#define DMA_TCD3_CITER_ELINKYES_REG(base)        ((base)->TCD3_CITER.TCD3_CITER_ELINKYES)
#define DMA_TCD3_DLASTSGA_REG(base)              ((base)->TCD3_DLASTSGA)
#define DMA_TCD3_CSR_REG(base)                   ((base)->TCD3_CSR)
#define DMA_TCD3_BITER_ELINKNO_REG(base)         ((base)->TCD3_BITER.TCD3_BITER_ELINKNO)
#define DMA_TCD3_BITER_ELINKYES_REG(base)        ((base)->TCD3_BITER.TCD3_BITER_ELINKYES)
#define DMA_TCD4_SADDR_REG(base)                 ((base)->TCD4_SADDR)
#define DMA_TCD4_SOFF_REG(base)                  ((base)->TCD4_SOFF)
#define DMA_TCD4_ATTR_REG(base)                  ((base)->TCD4_ATTR)
#define DMA_TCD4_NBYTES_MLNO_REG(base)           ((base)->TCD4_NBYTES.TCD4_NBYTES_MLNO)
#define DMA_TCD4_NBYTES_MLOFFNO_REG(base)        ((base)->TCD4_NBYTES.TCD4_NBYTES_MLOFFNO)
#define DMA_TCD4_NBYTES_MLOFFYES_REG(base)       ((base)->TCD4_NBYTES.TCD4_NBYTES_MLOFFYES)
#define DMA_TCD4_SLAST_REG(base)                 ((base)->TCD4_SLAST)
#define DMA_TCD4_DADDR_REG(base)                 ((base)->TCD4_DADDR)
#define DMA_TCD4_DOFF_REG(base)                  ((base)->TCD4_DOFF)
#define DMA_TCD4_CITER_ELINKNO_REG(base)         ((base)->TCD4_CITER.TCD4_CITER_ELINKNO)
#define DMA_TCD4_CITER_ELINKYES_REG(base)        ((base)->TCD4_CITER.TCD4_CITER_ELINKYES)
#define DMA_TCD4_DLASTSGA_REG(base)              ((base)->TCD4_DLASTSGA)
#define DMA_TCD4_CSR_REG(base)                   ((base)->TCD4_CSR)
#define DMA_TCD4_BITER_ELINKNO_REG(base)         ((base)->TCD4_BITER.TCD4_BITER_ELINKNO)
#define DMA_TCD4_BITER_ELINKYES_REG(base)        ((base)->TCD4_BITER.TCD4_BITER_ELINKYES)
#define DMA_TCD5_SADDR_REG(base)                 ((base)->TCD5_SADDR)
#define DMA_TCD5_SOFF_REG(base)                  ((base)->TCD5_SOFF)
#define DMA_TCD5_ATTR_REG(base)                  ((base)->TCD5_ATTR)
#define DMA_TCD5_NBYTES_MLNO_REG(base)           ((base)->TCD5_NBYTES.TCD5_NBYTES_MLNO)
#define DMA_TCD5_NBYTES_MLOFFNO_REG(base)        ((base)->TCD5_NBYTES.TCD5_NBYTES_MLOFFNO)
#define DMA_TCD5_NBYTES_MLOFFYES_REG(base)       ((base)->TCD5_NBYTES.TCD5_NBYTES_MLOFFYES)
#define DMA_TCD5_SLAST_REG(base)                 ((base)->TCD5_SLAST)
#define DMA_TCD5_DADDR_REG(base)                 ((base)->TCD5_DADDR)
#define DMA_TCD5_DOFF_REG(base)                  ((base)->TCD5_DOFF)
#define DMA_TCD5_CITER_ELINKNO_REG(base)         ((base)->TCD5_CITER.TCD5_CITER_ELINKNO)
#define DMA_TCD5_CITER_ELINKYES_REG(base)        ((base)->TCD5_CITER.TCD5_CITER_ELINKYES)
#define DMA_TCD5_DLASTSGA_REG(base)              ((base)->TCD5_DLASTSGA)
#define DMA_TCD5_CSR_REG(base)                   ((base)->TCD5_CSR)
#define DMA_TCD5_BITER_ELINKNO_REG(base)         ((base)->TCD5_BITER.TCD5_BITER_ELINKNO)
#define DMA_TCD5_BITER_ELINKYES_REG(base)        ((base)->TCD5_BITER.TCD5_BITER_ELINKYES)
#define DMA_TCD6_SADDR_REG(base)                 ((base)->TCD6_SADDR)
#define DMA_TCD6_SOFF_REG(base)                  ((base)->TCD6_SOFF)
#define DMA_TCD6_ATTR_REG(base)                  ((base)->TCD6_ATTR)
#define DMA_TCD6_NBYTES_MLNO_REG(base)           ((base)->TCD6_NBYTES.TCD6_NBYTES_MLNO)
#define DMA_TCD6_NBYTES_MLOFFNO_REG(base)        ((base)->TCD6_NBYTES.TCD6_NBYTES_MLOFFNO)
#define DMA_TCD6_NBYTES_MLOFFYES_REG(base)       ((base)->TCD6_NBYTES.TCD6_NBYTES_MLOFFYES)
#define DMA_TCD6_SLAST_REG(base)                 ((base)->TCD6_SLAST)
#define DMA_TCD6_DADDR_REG(base)                 ((base)->TCD6_DADDR)
#define DMA_TCD6_DOFF_REG(base)                  ((base)->TCD6_DOFF)
#define DMA_TCD6_CITER_ELINKNO_REG(base)         ((base)->TCD6_CITER.TCD6_CITER_ELINKNO)
#define DMA_TCD6_CITER_ELINKYES_REG(base)        ((base)->TCD6_CITER.TCD6_CITER_ELINKYES)
#define DMA_TCD6_DLASTSGA_REG(base)              ((base)->TCD6_DLASTSGA)
#define DMA_TCD6_CSR_REG(base)                   ((base)->TCD6_CSR)
#define DMA_TCD6_BITER_ELINKNO_REG(base)         ((base)->TCD6_BITER.TCD6_BITER_ELINKNO)
#define DMA_TCD6_BITER_ELINKYES_REG(base)        ((base)->TCD6_BITER.TCD6_BITER_ELINKYES)
#define DMA_TCD7_SADDR_REG(base)                 ((base)->TCD7_SADDR)
#define DMA_TCD7_SOFF_REG(base)                  ((base)->TCD7_SOFF)
#define DMA_TCD7_ATTR_REG(base)                  ((base)->TCD7_ATTR)
#define DMA_TCD7_NBYTES_MLNO_REG(base)           ((base)->TCD7_NBYTES.TCD7_NBYTES_MLNO)
#define DMA_TCD7_NBYTES_MLOFFNO_REG(base)        ((base)->TCD7_NBYTES.TCD7_NBYTES_MLOFFNO)
#define DMA_TCD7_NBYTES_MLOFFYES_REG(base)       ((base)->TCD7_NBYTES.TCD7_NBYTES_MLOFFYES)
#define DMA_TCD7_SLAST_REG(base)                 ((base)->TCD7_SLAST)
#define DMA_TCD7_DADDR_REG(base)                 ((base)->TCD7_DADDR)
#define DMA_TCD7_DOFF_REG(base)                  ((base)->TCD7_DOFF)
#define DMA_TCD7_CITER_ELINKNO_REG(base)         ((base)->TCD7_CITER.TCD7_CITER_ELINKNO)
#define DMA_TCD7_CITER_ELINKYES_REG(base)        ((base)->TCD7_CITER.TCD7_CITER_ELINKYES)
#define DMA_TCD7_DLASTSGA_REG(base)              ((base)->TCD7_DLASTSGA)
#define DMA_TCD7_CSR_REG(base)                   ((base)->TCD7_CSR)
#define DMA_TCD7_BITER_ELINKNO_REG(base)         ((base)->TCD7_BITER.TCD7_BITER_ELINKNO)
#define DMA_TCD7_BITER_ELINKYES_REG(base)        ((base)->TCD7_BITER.TCD7_BITER_ELINKYES)
#define DMA_TCD8_SADDR_REG(base)                 ((base)->TCD8_SADDR)
#define DMA_TCD8_SOFF_REG(base)                  ((base)->TCD8_SOFF)
#define DMA_TCD8_ATTR_REG(base)                  ((base)->TCD8_ATTR)
#define DMA_TCD8_NBYTES_MLNO_REG(base)           ((base)->TCD8_NBYTES.TCD8_NBYTES_MLNO)
#define DMA_TCD8_NBYTES_MLOFFNO_REG(base)        ((base)->TCD8_NBYTES.TCD8_NBYTES_MLOFFNO)
#define DMA_TCD8_NBYTES_MLOFFYES_REG(base)       ((base)->TCD8_NBYTES.TCD8_NBYTES_MLOFFYES)
#define DMA_TCD8_SLAST_REG(base)                 ((base)->TCD8_SLAST)
#define DMA_TCD8_DADDR_REG(base)                 ((base)->TCD8_DADDR)
#define DMA_TCD8_DOFF_REG(base)                  ((base)->TCD8_DOFF)
#define DMA_TCD8_CITER_ELINKNO_REG(base)         ((base)->TCD8_CITER.TCD8_CITER_ELINKNO)
#define DMA_TCD8_CITER_ELINKYES_REG(base)        ((base)->TCD8_CITER.TCD8_CITER_ELINKYES)
#define DMA_TCD8_DLASTSGA_REG(base)              ((base)->TCD8_DLASTSGA)
#define DMA_TCD8_CSR_REG(base)                   ((base)->TCD8_CSR)
#define DMA_TCD8_BITER_ELINKNO_REG(base)         ((base)->TCD8_BITER.TCD8_BITER_ELINKNO)
#define DMA_TCD8_BITER_ELINKYES_REG(base)        ((base)->TCD8_BITER.TCD8_BITER_ELINKYES)
#define DMA_TCD9_SADDR_REG(base)                 ((base)->TCD9_SADDR)
#define DMA_TCD9_SOFF_REG(base)                  ((base)->TCD9_SOFF)
#define DMA_TCD9_ATTR_REG(base)                  ((base)->TCD9_ATTR)
#define DMA_TCD9_NBYTES_MLNO_REG(base)           ((base)->TCD9_NBYTES.TCD9_NBYTES_MLNO)
#define DMA_TCD9_NBYTES_MLOFFNO_REG(base)        ((base)->TCD9_NBYTES.TCD9_NBYTES_MLOFFNO)
#define DMA_TCD9_NBYTES_MLOFFYES_REG(base)       ((base)->TCD9_NBYTES.TCD9_NBYTES_MLOFFYES)
#define DMA_TCD9_SLAST_REG(base)                 ((base)->TCD9_SLAST)
#define DMA_TCD9_DADDR_REG(base)                 ((base)->TCD9_DADDR)
#define DMA_TCD9_DOFF_REG(base)                  ((base)->TCD9_DOFF)
#define DMA_TCD9_CITER_ELINKNO_REG(base)         ((base)->TCD9_CITER.TCD9_CITER_ELINKNO)
#define DMA_TCD9_CITER_ELINKYES_REG(base)        ((base)->TCD9_CITER.TCD9_CITER_ELINKYES)
#define DMA_TCD9_DLASTSGA_REG(base)              ((base)->TCD9_DLASTSGA)
#define DMA_TCD9_CSR_REG(base)                   ((base)->TCD9_CSR)
#define DMA_TCD9_BITER_ELINKNO_REG(base)         ((base)->TCD9_BITER.TCD9_BITER_ELINKNO)
#define DMA_TCD9_BITER_ELINKYES_REG(base)        ((base)->TCD9_BITER.TCD9_BITER_ELINKYES)
#define DMA_TCD10_SADDR_REG(base)                ((base)->TCD10_SADDR)
#define DMA_TCD10_SOFF_REG(base)                 ((base)->TCD10_SOFF)
#define DMA_TCD10_ATTR_REG(base)                 ((base)->TCD10_ATTR)
#define DMA_TCD10_NBYTES_MLNO_REG(base)          ((base)->TCD10_NBYTES.TCD10_NBYTES_MLNO)
#define DMA_TCD10_NBYTES_MLOFFNO_REG(base)       ((base)->TCD10_NBYTES.TCD10_NBYTES_MLOFFNO)
#define DMA_TCD10_NBYTES_MLOFFYES_REG(base)      ((base)->TCD10_NBYTES.TCD10_NBYTES_MLOFFYES)
#define DMA_TCD10_SLAST_REG(base)                ((base)->TCD10_SLAST)
#define DMA_TCD10_DADDR_REG(base)                ((base)->TCD10_DADDR)
#define DMA_TCD10_DOFF_REG(base)                 ((base)->TCD10_DOFF)
#define DMA_TCD10_CITER_ELINKNO_REG(base)        ((base)->TCD10_CITER.TCD10_CITER_ELINKNO)
#define DMA_TCD10_CITER_ELINKYES_REG(base)       ((base)->TCD10_CITER.TCD10_CITER_ELINKYES)
#define DMA_TCD10_DLASTSGA_REG(base)             ((base)->TCD10_DLASTSGA)
#define DMA_TCD10_CSR_REG(base)                  ((base)->TCD10_CSR)
#define DMA_TCD10_BITER_ELINKNO_REG(base)        ((base)->TCD10_BITER.TCD10_BITER_ELINKNO)
#define DMA_TCD10_BITER_ELINKYES_REG(base)       ((base)->TCD10_BITER.TCD10_BITER_ELINKYES)
#define DMA_TCD11_SADDR_REG(base)                ((base)->TCD11_SADDR)
#define DMA_TCD11_SOFF_REG(base)                 ((base)->TCD11_SOFF)
#define DMA_TCD11_ATTR_REG(base)                 ((base)->TCD11_ATTR)
#define DMA_TCD11_NBYTES_MLNO_REG(base)          ((base)->TCD11_NBYTES.TCD11_NBYTES_MLNO)
#define DMA_TCD11_NBYTES_MLOFFNO_REG(base)       ((base)->TCD11_NBYTES.TCD11_NBYTES_MLOFFNO)
#define DMA_TCD11_NBYTES_MLOFFYES_REG(base)      ((base)->TCD11_NBYTES.TCD11_NBYTES_MLOFFYES)
#define DMA_TCD11_SLAST_REG(base)                ((base)->TCD11_SLAST)
#define DMA_TCD11_DADDR_REG(base)                ((base)->TCD11_DADDR)
#define DMA_TCD11_DOFF_REG(base)                 ((base)->TCD11_DOFF)
#define DMA_TCD11_CITER_ELINKNO_REG(base)        ((base)->TCD11_CITER.TCD11_CITER_ELINKNO)
#define DMA_TCD11_CITER_ELINKYES_REG(base)       ((base)->TCD11_CITER.TCD11_CITER_ELINKYES)
#define DMA_TCD11_DLASTSGA_REG(base)             ((base)->TCD11_DLASTSGA)
#define DMA_TCD11_CSR_REG(base)                  ((base)->TCD11_CSR)
#define DMA_TCD11_BITER_ELINKNO_REG(base)        ((base)->TCD11_BITER.TCD11_BITER_ELINKNO)
#define DMA_TCD11_BITER_ELINKYES_REG(base)       ((base)->TCD11_BITER.TCD11_BITER_ELINKYES)
#define DMA_TCD12_SADDR_REG(base)                ((base)->TCD12_SADDR)
#define DMA_TCD12_SOFF_REG(base)                 ((base)->TCD12_SOFF)
#define DMA_TCD12_ATTR_REG(base)                 ((base)->TCD12_ATTR)
#define DMA_TCD12_NBYTES_MLNO_REG(base)          ((base)->TCD12_NBYTES.TCD12_NBYTES_MLNO)
#define DMA_TCD12_NBYTES_MLOFFNO_REG(base)       ((base)->TCD12_NBYTES.TCD12_NBYTES_MLOFFNO)
#define DMA_TCD12_NBYTES_MLOFFYES_REG(base)      ((base)->TCD12_NBYTES.TCD12_NBYTES_MLOFFYES)
#define DMA_TCD12_SLAST_REG(base)                ((base)->TCD12_SLAST)
#define DMA_TCD12_DADDR_REG(base)                ((base)->TCD12_DADDR)
#define DMA_TCD12_DOFF_REG(base)                 ((base)->TCD12_DOFF)
#define DMA_TCD12_CITER_ELINKNO_REG(base)        ((base)->TCD12_CITER.TCD12_CITER_ELINKNO)
#define DMA_TCD12_CITER_ELINKYES_REG(base)       ((base)->TCD12_CITER.TCD12_CITER_ELINKYES)
#define DMA_TCD12_DLASTSGA_REG(base)             ((base)->TCD12_DLASTSGA)
#define DMA_TCD12_CSR_REG(base)                  ((base)->TCD12_CSR)
#define DMA_TCD12_BITER_ELINKNO_REG(base)        ((base)->TCD12_BITER.TCD12_BITER_ELINKNO)
#define DMA_TCD12_BITER_ELINKYES_REG(base)       ((base)->TCD12_BITER.TCD12_BITER_ELINKYES)
#define DMA_TCD13_SADDR_REG(base)                ((base)->TCD13_SADDR)
#define DMA_TCD13_SOFF_REG(base)                 ((base)->TCD13_SOFF)
#define DMA_TCD13_ATTR_REG(base)                 ((base)->TCD13_ATTR)
#define DMA_TCD13_NBYTES_MLNO_REG(base)          ((base)->TCD13_NBYTES.TCD13_NBYTES_MLNO)
#define DMA_TCD13_NBYTES_MLOFFNO_REG(base)       ((base)->TCD13_NBYTES.TCD13_NBYTES_MLOFFNO)
#define DMA_TCD13_NBYTES_MLOFFYES_REG(base)      ((base)->TCD13_NBYTES.TCD13_NBYTES_MLOFFYES)
#define DMA_TCD13_SLAST_REG(base)                ((base)->TCD13_SLAST)
#define DMA_TCD13_DADDR_REG(base)                ((base)->TCD13_DADDR)
#define DMA_TCD13_DOFF_REG(base)                 ((base)->TCD13_DOFF)
#define DMA_TCD13_CITER_ELINKNO_REG(base)        ((base)->TCD13_CITER.TCD13_CITER_ELINKNO)
#define DMA_TCD13_CITER_ELINKYES_REG(base)       ((base)->TCD13_CITER.TCD13_CITER_ELINKYES)
#define DMA_TCD13_DLASTSGA_REG(base)             ((base)->TCD13_DLASTSGA)
#define DMA_TCD13_CSR_REG(base)                  ((base)->TCD13_CSR)
#define DMA_TCD13_BITER_ELINKNO_REG(base)        ((base)->TCD13_BITER.TCD13_BITER_ELINKNO)
#define DMA_TCD13_BITER_ELINKYES_REG(base)       ((base)->TCD13_BITER.TCD13_BITER_ELINKYES)
#define DMA_TCD14_SADDR_REG(base)                ((base)->TCD14_SADDR)
#define DMA_TCD14_SOFF_REG(base)                 ((base)->TCD14_SOFF)
#define DMA_TCD14_ATTR_REG(base)                 ((base)->TCD14_ATTR)
#define DMA_TCD14_NBYTES_MLNO_REG(base)          ((base)->TCD14_NBYTES.TCD14_NBYTES_MLNO)
#define DMA_TCD14_NBYTES_MLOFFNO_REG(base)       ((base)->TCD14_NBYTES.TCD14_NBYTES_MLOFFNO)
#define DMA_TCD14_NBYTES_MLOFFYES_REG(base)      ((base)->TCD14_NBYTES.TCD14_NBYTES_MLOFFYES)
#define DMA_TCD14_SLAST_REG(base)                ((base)->TCD14_SLAST)
#define DMA_TCD14_DADDR_REG(base)                ((base)->TCD14_DADDR)
#define DMA_TCD14_DOFF_REG(base)                 ((base)->TCD14_DOFF)
#define DMA_TCD14_CITER_ELINKNO_REG(base)        ((base)->TCD14_CITER.TCD14_CITER_ELINKNO)
#define DMA_TCD14_CITER_ELINKYES_REG(base)       ((base)->TCD14_CITER.TCD14_CITER_ELINKYES)
#define DMA_TCD14_DLASTSGA_REG(base)             ((base)->TCD14_DLASTSGA)
#define DMA_TCD14_CSR_REG(base)                  ((base)->TCD14_CSR)
#define DMA_TCD14_BITER_ELINKNO_REG(base)        ((base)->TCD14_BITER.TCD14_BITER_ELINKNO)
#define DMA_TCD14_BITER_ELINKYES_REG(base)       ((base)->TCD14_BITER.TCD14_BITER_ELINKYES)
#define DMA_TCD15_SADDR_REG(base)                ((base)->TCD15_SADDR)
#define DMA_TCD15_SOFF_REG(base)                 ((base)->TCD15_SOFF)
#define DMA_TCD15_ATTR_REG(base)                 ((base)->TCD15_ATTR)
#define DMA_TCD15_NBYTES_MLNO_REG(base)          ((base)->TCD15_NBYTES.TCD15_NBYTES_MLNO)
#define DMA_TCD15_NBYTES_MLOFFNO_REG(base)       ((base)->TCD15_NBYTES.TCD15_NBYTES_MLOFFNO)
#define DMA_TCD15_NBYTES_MLOFFYES_REG(base)      ((base)->TCD15_NBYTES.TCD15_NBYTES_MLOFFYES)
#define DMA_TCD15_SLAST_REG(base)                ((base)->TCD15_SLAST)
#define DMA_TCD15_DADDR_REG(base)                ((base)->TCD15_DADDR)
#define DMA_TCD15_DOFF_REG(base)                 ((base)->TCD15_DOFF)
#define DMA_TCD15_CITER_ELINKNO_REG(base)        ((base)->TCD15_CITER.TCD15_CITER_ELINKNO)
#define DMA_TCD15_CITER_ELINKYES_REG(base)       ((base)->TCD15_CITER.TCD15_CITER_ELINKYES)
#define DMA_TCD15_DLASTSGA_REG(base)             ((base)->TCD15_DLASTSGA)
#define DMA_TCD15_CSR_REG(base)                  ((base)->TCD15_CSR)
#define DMA_TCD15_BITER_ELINKNO_REG(base)        ((base)->TCD15_BITER.TCD15_BITER_ELINKNO)
#define DMA_TCD15_BITER_ELINKYES_REG(base)       ((base)->TCD15_BITER.TCD15_BITER_ELINKYES)

/*!
 * @}
 */ /* end of group DMA_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- DMA Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Register_Masks DMA Register Masks
 * @{
 */

/* CR Bit Fields */
#define DMA_CR_EDBG_MASK                         0x2u
#define DMA_CR_EDBG_SHIFT                        1
#define DMA_CR_EDBG_WIDTH                        1
#define DMA_CR_EDBG(x)                           (((uint32)(((uint32)(x))<<DMA_CR_EDBG_SHIFT))&DMA_CR_EDBG_MASK)
#define DMA_CR_ERCA_MASK                         0x4u
#define DMA_CR_ERCA_SHIFT                        2
#define DMA_CR_ERCA_WIDTH                        1
#define DMA_CR_ERCA(x)                           (((uint32)(((uint32)(x))<<DMA_CR_ERCA_SHIFT))&DMA_CR_ERCA_MASK)
#define DMA_CR_HOE_MASK                          0x10u
#define DMA_CR_HOE_SHIFT                         4
#define DMA_CR_HOE_WIDTH                         1
#define DMA_CR_HOE(x)                            (((uint32)(((uint32)(x))<<DMA_CR_HOE_SHIFT))&DMA_CR_HOE_MASK)
#define DMA_CR_HALT_MASK                         0x20u
#define DMA_CR_HALT_SHIFT                        5
#define DMA_CR_HALT_WIDTH                        1
#define DMA_CR_HALT(x)                           (((uint32)(((uint32)(x))<<DMA_CR_HALT_SHIFT))&DMA_CR_HALT_MASK)
#define DMA_CR_CLM_MASK                          0x40u
#define DMA_CR_CLM_SHIFT                         6
#define DMA_CR_CLM_WIDTH                         1
#define DMA_CR_CLM(x)                            (((uint32)(((uint32)(x))<<DMA_CR_CLM_SHIFT))&DMA_CR_CLM_MASK)
#define DMA_CR_EMLM_MASK                         0x80u
#define DMA_CR_EMLM_SHIFT                        7
#define DMA_CR_EMLM_WIDTH                        1
#define DMA_CR_EMLM(x)                           (((uint32)(((uint32)(x))<<DMA_CR_EMLM_SHIFT))&DMA_CR_EMLM_MASK)
#define DMA_CR_ECX_MASK                          0x10000u
#define DMA_CR_ECX_SHIFT                         16
#define DMA_CR_ECX_WIDTH                         1
#define DMA_CR_ECX(x)                            (((uint32)(((uint32)(x))<<DMA_CR_ECX_SHIFT))&DMA_CR_ECX_MASK)
#define DMA_CR_CX_MASK                           0x20000u
#define DMA_CR_CX_SHIFT                          17
#define DMA_CR_CX_WIDTH                          1
#define DMA_CR_CX(x)                             (((uint32)(((uint32)(x))<<DMA_CR_CX_SHIFT))&DMA_CR_CX_MASK)
/* ES Bit Fields */
#define DMA_ES_DBE_MASK                          0x1u
#define DMA_ES_DBE_SHIFT                         0
#define DMA_ES_DBE_WIDTH                         1
#define DMA_ES_DBE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_DBE_SHIFT))&DMA_ES_DBE_MASK)
#define DMA_ES_SBE_MASK                          0x2u
#define DMA_ES_SBE_SHIFT                         1
#define DMA_ES_SBE_WIDTH                         1
#define DMA_ES_SBE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_SBE_SHIFT))&DMA_ES_SBE_MASK)
#define DMA_ES_SGE_MASK                          0x4u
#define DMA_ES_SGE_SHIFT                         2
#define DMA_ES_SGE_WIDTH                         1
#define DMA_ES_SGE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_SGE_SHIFT))&DMA_ES_SGE_MASK)
#define DMA_ES_NCE_MASK                          0x8u
#define DMA_ES_NCE_SHIFT                         3
#define DMA_ES_NCE_WIDTH                         1
#define DMA_ES_NCE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_NCE_SHIFT))&DMA_ES_NCE_MASK)
#define DMA_ES_DOE_MASK                          0x10u
#define DMA_ES_DOE_SHIFT                         4
#define DMA_ES_DOE_WIDTH                         1
#define DMA_ES_DOE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_DOE_SHIFT))&DMA_ES_DOE_MASK)
#define DMA_ES_DAE_MASK                          0x20u
#define DMA_ES_DAE_SHIFT                         5
#define DMA_ES_DAE_WIDTH                         1
#define DMA_ES_DAE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_DAE_SHIFT))&DMA_ES_DAE_MASK)
#define DMA_ES_SOE_MASK                          0x40u
#define DMA_ES_SOE_SHIFT                         6
#define DMA_ES_SOE_WIDTH                         1
#define DMA_ES_SOE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_SOE_SHIFT))&DMA_ES_SOE_MASK)
#define DMA_ES_SAE_MASK                          0x80u
#define DMA_ES_SAE_SHIFT                         7
#define DMA_ES_SAE_WIDTH                         1
#define DMA_ES_SAE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_SAE_SHIFT))&DMA_ES_SAE_MASK)
#define DMA_ES_ERRCHN_MASK                       0xF00u
#define DMA_ES_ERRCHN_SHIFT                      8
#define DMA_ES_ERRCHN_WIDTH                      4
#define DMA_ES_ERRCHN(x)                         (((uint32)(((uint32)(x))<<DMA_ES_ERRCHN_SHIFT))&DMA_ES_ERRCHN_MASK)
#define DMA_ES_CPE_MASK                          0x4000u
#define DMA_ES_CPE_SHIFT                         14
#define DMA_ES_CPE_WIDTH                         1
#define DMA_ES_CPE(x)                            (((uint32)(((uint32)(x))<<DMA_ES_CPE_SHIFT))&DMA_ES_CPE_MASK)
#define DMA_ES_ECX_MASK                          0x10000u
#define DMA_ES_ECX_SHIFT                         16
#define DMA_ES_ECX_WIDTH                         1
#define DMA_ES_ECX(x)                            (((uint32)(((uint32)(x))<<DMA_ES_ECX_SHIFT))&DMA_ES_ECX_MASK)
#define DMA_ES_VLD_MASK                          0x80000000u
#define DMA_ES_VLD_SHIFT                         31
#define DMA_ES_VLD_WIDTH                         1
#define DMA_ES_VLD(x)                            (((uint32)(((uint32)(x))<<DMA_ES_VLD_SHIFT))&DMA_ES_VLD_MASK)
/* ERQ Bit Fields */
#define DMA_ERQ_ERQ0_MASK                        0x1u
#define DMA_ERQ_ERQ0_SHIFT                       0
#define DMA_ERQ_ERQ0_WIDTH                       1
#define DMA_ERQ_ERQ0(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ0_SHIFT))&DMA_ERQ_ERQ0_MASK)
#define DMA_ERQ_ERQ1_MASK                        0x2u
#define DMA_ERQ_ERQ1_SHIFT                       1
#define DMA_ERQ_ERQ1_WIDTH                       1
#define DMA_ERQ_ERQ1(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ1_SHIFT))&DMA_ERQ_ERQ1_MASK)
#define DMA_ERQ_ERQ2_MASK                        0x4u
#define DMA_ERQ_ERQ2_SHIFT                       2
#define DMA_ERQ_ERQ2_WIDTH                       1
#define DMA_ERQ_ERQ2(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ2_SHIFT))&DMA_ERQ_ERQ2_MASK)
#define DMA_ERQ_ERQ3_MASK                        0x8u
#define DMA_ERQ_ERQ3_SHIFT                       3
#define DMA_ERQ_ERQ3_WIDTH                       1
#define DMA_ERQ_ERQ3(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ3_SHIFT))&DMA_ERQ_ERQ3_MASK)
#define DMA_ERQ_ERQ4_MASK                        0x10u
#define DMA_ERQ_ERQ4_SHIFT                       4
#define DMA_ERQ_ERQ4_WIDTH                       1
#define DMA_ERQ_ERQ4(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ4_SHIFT))&DMA_ERQ_ERQ4_MASK)
#define DMA_ERQ_ERQ5_MASK                        0x20u
#define DMA_ERQ_ERQ5_SHIFT                       5
#define DMA_ERQ_ERQ5_WIDTH                       1
#define DMA_ERQ_ERQ5(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ5_SHIFT))&DMA_ERQ_ERQ5_MASK)
#define DMA_ERQ_ERQ6_MASK                        0x40u
#define DMA_ERQ_ERQ6_SHIFT                       6
#define DMA_ERQ_ERQ6_WIDTH                       1
#define DMA_ERQ_ERQ6(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ6_SHIFT))&DMA_ERQ_ERQ6_MASK)
#define DMA_ERQ_ERQ7_MASK                        0x80u
#define DMA_ERQ_ERQ7_SHIFT                       7
#define DMA_ERQ_ERQ7_WIDTH                       1
#define DMA_ERQ_ERQ7(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ7_SHIFT))&DMA_ERQ_ERQ7_MASK)
#define DMA_ERQ_ERQ8_MASK                        0x100u
#define DMA_ERQ_ERQ8_SHIFT                       8
#define DMA_ERQ_ERQ8_WIDTH                       1
#define DMA_ERQ_ERQ8(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ8_SHIFT))&DMA_ERQ_ERQ8_MASK)
#define DMA_ERQ_ERQ9_MASK                        0x200u
#define DMA_ERQ_ERQ9_SHIFT                       9
#define DMA_ERQ_ERQ9_WIDTH                       1
#define DMA_ERQ_ERQ9(x)                          (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ9_SHIFT))&DMA_ERQ_ERQ9_MASK)
#define DMA_ERQ_ERQ10_MASK                       0x400u
#define DMA_ERQ_ERQ10_SHIFT                      10
#define DMA_ERQ_ERQ10_WIDTH                      1
#define DMA_ERQ_ERQ10(x)                         (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ10_SHIFT))&DMA_ERQ_ERQ10_MASK)
#define DMA_ERQ_ERQ11_MASK                       0x800u
#define DMA_ERQ_ERQ11_SHIFT                      11
#define DMA_ERQ_ERQ11_WIDTH                      1
#define DMA_ERQ_ERQ11(x)                         (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ11_SHIFT))&DMA_ERQ_ERQ11_MASK)
#define DMA_ERQ_ERQ12_MASK                       0x1000u
#define DMA_ERQ_ERQ12_SHIFT                      12
#define DMA_ERQ_ERQ12_WIDTH                      1
#define DMA_ERQ_ERQ12(x)                         (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ12_SHIFT))&DMA_ERQ_ERQ12_MASK)
#define DMA_ERQ_ERQ13_MASK                       0x2000u
#define DMA_ERQ_ERQ13_SHIFT                      13
#define DMA_ERQ_ERQ13_WIDTH                      1
#define DMA_ERQ_ERQ13(x)                         (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ13_SHIFT))&DMA_ERQ_ERQ13_MASK)
#define DMA_ERQ_ERQ14_MASK                       0x4000u
#define DMA_ERQ_ERQ14_SHIFT                      14
#define DMA_ERQ_ERQ14_WIDTH                      1
#define DMA_ERQ_ERQ14(x)                         (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ14_SHIFT))&DMA_ERQ_ERQ14_MASK)
#define DMA_ERQ_ERQ15_MASK                       0x8000u
#define DMA_ERQ_ERQ15_SHIFT                      15
#define DMA_ERQ_ERQ15_WIDTH                      1
#define DMA_ERQ_ERQ15(x)                         (((uint32)(((uint32)(x))<<DMA_ERQ_ERQ15_SHIFT))&DMA_ERQ_ERQ15_MASK)
/* EEI Bit Fields */
#define DMA_EEI_EEI0_MASK                        0x1u
#define DMA_EEI_EEI0_SHIFT                       0
#define DMA_EEI_EEI0_WIDTH                       1
#define DMA_EEI_EEI0(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI0_SHIFT))&DMA_EEI_EEI0_MASK)
#define DMA_EEI_EEI1_MASK                        0x2u
#define DMA_EEI_EEI1_SHIFT                       1
#define DMA_EEI_EEI1_WIDTH                       1
#define DMA_EEI_EEI1(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI1_SHIFT))&DMA_EEI_EEI1_MASK)
#define DMA_EEI_EEI2_MASK                        0x4u
#define DMA_EEI_EEI2_SHIFT                       2
#define DMA_EEI_EEI2_WIDTH                       1
#define DMA_EEI_EEI2(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI2_SHIFT))&DMA_EEI_EEI2_MASK)
#define DMA_EEI_EEI3_MASK                        0x8u
#define DMA_EEI_EEI3_SHIFT                       3
#define DMA_EEI_EEI3_WIDTH                       1
#define DMA_EEI_EEI3(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI3_SHIFT))&DMA_EEI_EEI3_MASK)
#define DMA_EEI_EEI4_MASK                        0x10u
#define DMA_EEI_EEI4_SHIFT                       4
#define DMA_EEI_EEI4_WIDTH                       1
#define DMA_EEI_EEI4(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI4_SHIFT))&DMA_EEI_EEI4_MASK)
#define DMA_EEI_EEI5_MASK                        0x20u
#define DMA_EEI_EEI5_SHIFT                       5
#define DMA_EEI_EEI5_WIDTH                       1
#define DMA_EEI_EEI5(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI5_SHIFT))&DMA_EEI_EEI5_MASK)
#define DMA_EEI_EEI6_MASK                        0x40u
#define DMA_EEI_EEI6_SHIFT                       6
#define DMA_EEI_EEI6_WIDTH                       1
#define DMA_EEI_EEI6(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI6_SHIFT))&DMA_EEI_EEI6_MASK)
#define DMA_EEI_EEI7_MASK                        0x80u
#define DMA_EEI_EEI7_SHIFT                       7
#define DMA_EEI_EEI7_WIDTH                       1
#define DMA_EEI_EEI7(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI7_SHIFT))&DMA_EEI_EEI7_MASK)
#define DMA_EEI_EEI8_MASK                        0x100u
#define DMA_EEI_EEI8_SHIFT                       8
#define DMA_EEI_EEI8_WIDTH                       1
#define DMA_EEI_EEI8(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI8_SHIFT))&DMA_EEI_EEI8_MASK)
#define DMA_EEI_EEI9_MASK                        0x200u
#define DMA_EEI_EEI9_SHIFT                       9
#define DMA_EEI_EEI9_WIDTH                       1
#define DMA_EEI_EEI9(x)                          (((uint32)(((uint32)(x))<<DMA_EEI_EEI9_SHIFT))&DMA_EEI_EEI9_MASK)
#define DMA_EEI_EEI10_MASK                       0x400u
#define DMA_EEI_EEI10_SHIFT                      10
#define DMA_EEI_EEI10_WIDTH                      1
#define DMA_EEI_EEI10(x)                         (((uint32)(((uint32)(x))<<DMA_EEI_EEI10_SHIFT))&DMA_EEI_EEI10_MASK)
#define DMA_EEI_EEI11_MASK                       0x800u
#define DMA_EEI_EEI11_SHIFT                      11
#define DMA_EEI_EEI11_WIDTH                      1
#define DMA_EEI_EEI11(x)                         (((uint32)(((uint32)(x))<<DMA_EEI_EEI11_SHIFT))&DMA_EEI_EEI11_MASK)
#define DMA_EEI_EEI12_MASK                       0x1000u
#define DMA_EEI_EEI12_SHIFT                      12
#define DMA_EEI_EEI12_WIDTH                      1
#define DMA_EEI_EEI12(x)                         (((uint32)(((uint32)(x))<<DMA_EEI_EEI12_SHIFT))&DMA_EEI_EEI12_MASK)
#define DMA_EEI_EEI13_MASK                       0x2000u
#define DMA_EEI_EEI13_SHIFT                      13
#define DMA_EEI_EEI13_WIDTH                      1
#define DMA_EEI_EEI13(x)                         (((uint32)(((uint32)(x))<<DMA_EEI_EEI13_SHIFT))&DMA_EEI_EEI13_MASK)
#define DMA_EEI_EEI14_MASK                       0x4000u
#define DMA_EEI_EEI14_SHIFT                      14
#define DMA_EEI_EEI14_WIDTH                      1
#define DMA_EEI_EEI14(x)                         (((uint32)(((uint32)(x))<<DMA_EEI_EEI14_SHIFT))&DMA_EEI_EEI14_MASK)
#define DMA_EEI_EEI15_MASK                       0x8000u
#define DMA_EEI_EEI15_SHIFT                      15
#define DMA_EEI_EEI15_WIDTH                      1
#define DMA_EEI_EEI15(x)                         (((uint32)(((uint32)(x))<<DMA_EEI_EEI15_SHIFT))&DMA_EEI_EEI15_MASK)
/* CEEI Bit Fields */
#define DMA_CEEI_CEEI_MASK                       0xFu
#define DMA_CEEI_CEEI_SHIFT                      0
#define DMA_CEEI_CEEI_WIDTH                      4
#define DMA_CEEI_CEEI(x)                         (((uint8)(((uint8)(x))<<DMA_CEEI_CEEI_SHIFT))&DMA_CEEI_CEEI_MASK)
#define DMA_CEEI_CAEE_MASK                       0x40u
#define DMA_CEEI_CAEE_SHIFT                      6
#define DMA_CEEI_CAEE_WIDTH                      1
#define DMA_CEEI_CAEE(x)                         (((uint8)(((uint8)(x))<<DMA_CEEI_CAEE_SHIFT))&DMA_CEEI_CAEE_MASK)
#define DMA_CEEI_NOP_MASK                        0x80u
#define DMA_CEEI_NOP_SHIFT                       7
#define DMA_CEEI_NOP_WIDTH                       1
#define DMA_CEEI_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_CEEI_NOP_SHIFT))&DMA_CEEI_NOP_MASK)
/* SEEI Bit Fields */
#define DMA_SEEI_SEEI_MASK                       0xFu
#define DMA_SEEI_SEEI_SHIFT                      0
#define DMA_SEEI_SEEI_WIDTH                      4
#define DMA_SEEI_SEEI(x)                         (((uint8)(((uint8)(x))<<DMA_SEEI_SEEI_SHIFT))&DMA_SEEI_SEEI_MASK)
#define DMA_SEEI_SAEE_MASK                       0x40u
#define DMA_SEEI_SAEE_SHIFT                      6
#define DMA_SEEI_SAEE_WIDTH                      1
#define DMA_SEEI_SAEE(x)                         (((uint8)(((uint8)(x))<<DMA_SEEI_SAEE_SHIFT))&DMA_SEEI_SAEE_MASK)
#define DMA_SEEI_NOP_MASK                        0x80u
#define DMA_SEEI_NOP_SHIFT                       7
#define DMA_SEEI_NOP_WIDTH                       1
#define DMA_SEEI_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_SEEI_NOP_SHIFT))&DMA_SEEI_NOP_MASK)
/* CERQ Bit Fields */
#define DMA_CERQ_CERQ_MASK                       0xFu
#define DMA_CERQ_CERQ_SHIFT                      0
#define DMA_CERQ_CERQ_WIDTH                      4
#define DMA_CERQ_CERQ(x)                         (((uint8)(((uint8)(x))<<DMA_CERQ_CERQ_SHIFT))&DMA_CERQ_CERQ_MASK)
#define DMA_CERQ_CAER_MASK                       0x40u
#define DMA_CERQ_CAER_SHIFT                      6
#define DMA_CERQ_CAER_WIDTH                      1
#define DMA_CERQ_CAER(x)                         (((uint8)(((uint8)(x))<<DMA_CERQ_CAER_SHIFT))&DMA_CERQ_CAER_MASK)
#define DMA_CERQ_NOP_MASK                        0x80u
#define DMA_CERQ_NOP_SHIFT                       7
#define DMA_CERQ_NOP_WIDTH                       1
#define DMA_CERQ_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_CERQ_NOP_SHIFT))&DMA_CERQ_NOP_MASK)
/* SERQ Bit Fields */
#define DMA_SERQ_SERQ_MASK                       0xFu
#define DMA_SERQ_SERQ_SHIFT                      0
#define DMA_SERQ_SERQ_WIDTH                      4
#define DMA_SERQ_SERQ(x)                         (((uint8)(((uint8)(x))<<DMA_SERQ_SERQ_SHIFT))&DMA_SERQ_SERQ_MASK)
#define DMA_SERQ_SAER_MASK                       0x40u
#define DMA_SERQ_SAER_SHIFT                      6
#define DMA_SERQ_SAER_WIDTH                      1
#define DMA_SERQ_SAER(x)                         (((uint8)(((uint8)(x))<<DMA_SERQ_SAER_SHIFT))&DMA_SERQ_SAER_MASK)
#define DMA_SERQ_NOP_MASK                        0x80u
#define DMA_SERQ_NOP_SHIFT                       7
#define DMA_SERQ_NOP_WIDTH                       1
#define DMA_SERQ_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_SERQ_NOP_SHIFT))&DMA_SERQ_NOP_MASK)
/* CDNE Bit Fields */
#define DMA_CDNE_CDNE_MASK                       0xFu
#define DMA_CDNE_CDNE_SHIFT                      0
#define DMA_CDNE_CDNE_WIDTH                      4
#define DMA_CDNE_CDNE(x)                         (((uint8)(((uint8)(x))<<DMA_CDNE_CDNE_SHIFT))&DMA_CDNE_CDNE_MASK)
#define DMA_CDNE_CADN_MASK                       0x40u
#define DMA_CDNE_CADN_SHIFT                      6
#define DMA_CDNE_CADN_WIDTH                      1
#define DMA_CDNE_CADN(x)                         (((uint8)(((uint8)(x))<<DMA_CDNE_CADN_SHIFT))&DMA_CDNE_CADN_MASK)
#define DMA_CDNE_NOP_MASK                        0x80u
#define DMA_CDNE_NOP_SHIFT                       7
#define DMA_CDNE_NOP_WIDTH                       1
#define DMA_CDNE_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_CDNE_NOP_SHIFT))&DMA_CDNE_NOP_MASK)
/* SSRT Bit Fields */
#define DMA_SSRT_SSRT_MASK                       0xFu
#define DMA_SSRT_SSRT_SHIFT                      0
#define DMA_SSRT_SSRT_WIDTH                      4
#define DMA_SSRT_SSRT(x)                         (((uint8)(((uint8)(x))<<DMA_SSRT_SSRT_SHIFT))&DMA_SSRT_SSRT_MASK)
#define DMA_SSRT_SAST_MASK                       0x40u
#define DMA_SSRT_SAST_SHIFT                      6
#define DMA_SSRT_SAST_WIDTH                      1
#define DMA_SSRT_SAST(x)                         (((uint8)(((uint8)(x))<<DMA_SSRT_SAST_SHIFT))&DMA_SSRT_SAST_MASK)
#define DMA_SSRT_NOP_MASK                        0x80u
#define DMA_SSRT_NOP_SHIFT                       7
#define DMA_SSRT_NOP_WIDTH                       1
#define DMA_SSRT_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_SSRT_NOP_SHIFT))&DMA_SSRT_NOP_MASK)
/* CERR Bit Fields */
#define DMA_CERR_CERR_MASK                       0xFu
#define DMA_CERR_CERR_SHIFT                      0
#define DMA_CERR_CERR_WIDTH                      4
#define DMA_CERR_CERR(x)                         (((uint8)(((uint8)(x))<<DMA_CERR_CERR_SHIFT))&DMA_CERR_CERR_MASK)
#define DMA_CERR_CAEI_MASK                       0x40u
#define DMA_CERR_CAEI_SHIFT                      6
#define DMA_CERR_CAEI_WIDTH                      1
#define DMA_CERR_CAEI(x)                         (((uint8)(((uint8)(x))<<DMA_CERR_CAEI_SHIFT))&DMA_CERR_CAEI_MASK)
#define DMA_CERR_NOP_MASK                        0x80u
#define DMA_CERR_NOP_SHIFT                       7
#define DMA_CERR_NOP_WIDTH                       1
#define DMA_CERR_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_CERR_NOP_SHIFT))&DMA_CERR_NOP_MASK)
/* CINT Bit Fields */
#define DMA_CINT_CINT_MASK                       0xFu
#define DMA_CINT_CINT_SHIFT                      0
#define DMA_CINT_CINT_WIDTH                      4
#define DMA_CINT_CINT(x)                         (((uint8)(((uint8)(x))<<DMA_CINT_CINT_SHIFT))&DMA_CINT_CINT_MASK)
#define DMA_CINT_CAIR_MASK                       0x40u
#define DMA_CINT_CAIR_SHIFT                      6
#define DMA_CINT_CAIR_WIDTH                      1
#define DMA_CINT_CAIR(x)                         (((uint8)(((uint8)(x))<<DMA_CINT_CAIR_SHIFT))&DMA_CINT_CAIR_MASK)
#define DMA_CINT_NOP_MASK                        0x80u
#define DMA_CINT_NOP_SHIFT                       7
#define DMA_CINT_NOP_WIDTH                       1
#define DMA_CINT_NOP(x)                          (((uint8)(((uint8)(x))<<DMA_CINT_NOP_SHIFT))&DMA_CINT_NOP_MASK)
/* INT Bit Fields */
#define DMA_INT_INT0_MASK                        0x1u
#define DMA_INT_INT0_SHIFT                       0
#define DMA_INT_INT0_WIDTH                       1
#define DMA_INT_INT0(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT0_SHIFT))&DMA_INT_INT0_MASK)
#define DMA_INT_INT1_MASK                        0x2u
#define DMA_INT_INT1_SHIFT                       1
#define DMA_INT_INT1_WIDTH                       1
#define DMA_INT_INT1(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT1_SHIFT))&DMA_INT_INT1_MASK)
#define DMA_INT_INT2_MASK                        0x4u
#define DMA_INT_INT2_SHIFT                       2
#define DMA_INT_INT2_WIDTH                       1
#define DMA_INT_INT2(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT2_SHIFT))&DMA_INT_INT2_MASK)
#define DMA_INT_INT3_MASK                        0x8u
#define DMA_INT_INT3_SHIFT                       3
#define DMA_INT_INT3_WIDTH                       1
#define DMA_INT_INT3(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT3_SHIFT))&DMA_INT_INT3_MASK)
#define DMA_INT_INT4_MASK                        0x10u
#define DMA_INT_INT4_SHIFT                       4
#define DMA_INT_INT4_WIDTH                       1
#define DMA_INT_INT4(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT4_SHIFT))&DMA_INT_INT4_MASK)
#define DMA_INT_INT5_MASK                        0x20u
#define DMA_INT_INT5_SHIFT                       5
#define DMA_INT_INT5_WIDTH                       1
#define DMA_INT_INT5(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT5_SHIFT))&DMA_INT_INT5_MASK)
#define DMA_INT_INT6_MASK                        0x40u
#define DMA_INT_INT6_SHIFT                       6
#define DMA_INT_INT6_WIDTH                       1
#define DMA_INT_INT6(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT6_SHIFT))&DMA_INT_INT6_MASK)
#define DMA_INT_INT7_MASK                        0x80u
#define DMA_INT_INT7_SHIFT                       7
#define DMA_INT_INT7_WIDTH                       1
#define DMA_INT_INT7(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT7_SHIFT))&DMA_INT_INT7_MASK)
#define DMA_INT_INT8_MASK                        0x100u
#define DMA_INT_INT8_SHIFT                       8
#define DMA_INT_INT8_WIDTH                       1
#define DMA_INT_INT8(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT8_SHIFT))&DMA_INT_INT8_MASK)
#define DMA_INT_INT9_MASK                        0x200u
#define DMA_INT_INT9_SHIFT                       9
#define DMA_INT_INT9_WIDTH                       1
#define DMA_INT_INT9(x)                          (((uint32)(((uint32)(x))<<DMA_INT_INT9_SHIFT))&DMA_INT_INT9_MASK)
#define DMA_INT_INT10_MASK                       0x400u
#define DMA_INT_INT10_SHIFT                      10
#define DMA_INT_INT10_WIDTH                      1
#define DMA_INT_INT10(x)                         (((uint32)(((uint32)(x))<<DMA_INT_INT10_SHIFT))&DMA_INT_INT10_MASK)
#define DMA_INT_INT11_MASK                       0x800u
#define DMA_INT_INT11_SHIFT                      11
#define DMA_INT_INT11_WIDTH                      1
#define DMA_INT_INT11(x)                         (((uint32)(((uint32)(x))<<DMA_INT_INT11_SHIFT))&DMA_INT_INT11_MASK)
#define DMA_INT_INT12_MASK                       0x1000u
#define DMA_INT_INT12_SHIFT                      12
#define DMA_INT_INT12_WIDTH                      1
#define DMA_INT_INT12(x)                         (((uint32)(((uint32)(x))<<DMA_INT_INT12_SHIFT))&DMA_INT_INT12_MASK)
#define DMA_INT_INT13_MASK                       0x2000u
#define DMA_INT_INT13_SHIFT                      13
#define DMA_INT_INT13_WIDTH                      1
#define DMA_INT_INT13(x)                         (((uint32)(((uint32)(x))<<DMA_INT_INT13_SHIFT))&DMA_INT_INT13_MASK)
#define DMA_INT_INT14_MASK                       0x4000u
#define DMA_INT_INT14_SHIFT                      14
#define DMA_INT_INT14_WIDTH                      1
#define DMA_INT_INT14(x)                         (((uint32)(((uint32)(x))<<DMA_INT_INT14_SHIFT))&DMA_INT_INT14_MASK)
#define DMA_INT_INT15_MASK                       0x8000u
#define DMA_INT_INT15_SHIFT                      15
#define DMA_INT_INT15_WIDTH                      1
#define DMA_INT_INT15(x)                         (((uint32)(((uint32)(x))<<DMA_INT_INT15_SHIFT))&DMA_INT_INT15_MASK)
/* ERR Bit Fields */
#define DMA_ERR_ERR0_MASK                        0x1u
#define DMA_ERR_ERR0_SHIFT                       0
#define DMA_ERR_ERR0_WIDTH                       1
#define DMA_ERR_ERR0(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR0_SHIFT))&DMA_ERR_ERR0_MASK)
#define DMA_ERR_ERR1_MASK                        0x2u
#define DMA_ERR_ERR1_SHIFT                       1
#define DMA_ERR_ERR1_WIDTH                       1
#define DMA_ERR_ERR1(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR1_SHIFT))&DMA_ERR_ERR1_MASK)
#define DMA_ERR_ERR2_MASK                        0x4u
#define DMA_ERR_ERR2_SHIFT                       2
#define DMA_ERR_ERR2_WIDTH                       1
#define DMA_ERR_ERR2(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR2_SHIFT))&DMA_ERR_ERR2_MASK)
#define DMA_ERR_ERR3_MASK                        0x8u
#define DMA_ERR_ERR3_SHIFT                       3
#define DMA_ERR_ERR3_WIDTH                       1
#define DMA_ERR_ERR3(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR3_SHIFT))&DMA_ERR_ERR3_MASK)
#define DMA_ERR_ERR4_MASK                        0x10u
#define DMA_ERR_ERR4_SHIFT                       4
#define DMA_ERR_ERR4_WIDTH                       1
#define DMA_ERR_ERR4(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR4_SHIFT))&DMA_ERR_ERR4_MASK)
#define DMA_ERR_ERR5_MASK                        0x20u
#define DMA_ERR_ERR5_SHIFT                       5
#define DMA_ERR_ERR5_WIDTH                       1
#define DMA_ERR_ERR5(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR5_SHIFT))&DMA_ERR_ERR5_MASK)
#define DMA_ERR_ERR6_MASK                        0x40u
#define DMA_ERR_ERR6_SHIFT                       6
#define DMA_ERR_ERR6_WIDTH                       1
#define DMA_ERR_ERR6(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR6_SHIFT))&DMA_ERR_ERR6_MASK)
#define DMA_ERR_ERR7_MASK                        0x80u
#define DMA_ERR_ERR7_SHIFT                       7
#define DMA_ERR_ERR7_WIDTH                       1
#define DMA_ERR_ERR7(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR7_SHIFT))&DMA_ERR_ERR7_MASK)
#define DMA_ERR_ERR8_MASK                        0x100u
#define DMA_ERR_ERR8_SHIFT                       8
#define DMA_ERR_ERR8_WIDTH                       1
#define DMA_ERR_ERR8(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR8_SHIFT))&DMA_ERR_ERR8_MASK)
#define DMA_ERR_ERR9_MASK                        0x200u
#define DMA_ERR_ERR9_SHIFT                       9
#define DMA_ERR_ERR9_WIDTH                       1
#define DMA_ERR_ERR9(x)                          (((uint32)(((uint32)(x))<<DMA_ERR_ERR9_SHIFT))&DMA_ERR_ERR9_MASK)
#define DMA_ERR_ERR10_MASK                       0x400u
#define DMA_ERR_ERR10_SHIFT                      10
#define DMA_ERR_ERR10_WIDTH                      1
#define DMA_ERR_ERR10(x)                         (((uint32)(((uint32)(x))<<DMA_ERR_ERR10_SHIFT))&DMA_ERR_ERR10_MASK)
#define DMA_ERR_ERR11_MASK                       0x800u
#define DMA_ERR_ERR11_SHIFT                      11
#define DMA_ERR_ERR11_WIDTH                      1
#define DMA_ERR_ERR11(x)                         (((uint32)(((uint32)(x))<<DMA_ERR_ERR11_SHIFT))&DMA_ERR_ERR11_MASK)
#define DMA_ERR_ERR12_MASK                       0x1000u
#define DMA_ERR_ERR12_SHIFT                      12
#define DMA_ERR_ERR12_WIDTH                      1
#define DMA_ERR_ERR12(x)                         (((uint32)(((uint32)(x))<<DMA_ERR_ERR12_SHIFT))&DMA_ERR_ERR12_MASK)
#define DMA_ERR_ERR13_MASK                       0x2000u
#define DMA_ERR_ERR13_SHIFT                      13
#define DMA_ERR_ERR13_WIDTH                      1
#define DMA_ERR_ERR13(x)                         (((uint32)(((uint32)(x))<<DMA_ERR_ERR13_SHIFT))&DMA_ERR_ERR13_MASK)
#define DMA_ERR_ERR14_MASK                       0x4000u
#define DMA_ERR_ERR14_SHIFT                      14
#define DMA_ERR_ERR14_WIDTH                      1
#define DMA_ERR_ERR14(x)                         (((uint32)(((uint32)(x))<<DMA_ERR_ERR14_SHIFT))&DMA_ERR_ERR14_MASK)
#define DMA_ERR_ERR15_MASK                       0x8000u
#define DMA_ERR_ERR15_SHIFT                      15
#define DMA_ERR_ERR15_WIDTH                      1
#define DMA_ERR_ERR15(x)                         (((uint32)(((uint32)(x))<<DMA_ERR_ERR15_SHIFT))&DMA_ERR_ERR15_MASK)
/* HRS Bit Fields */
#define DMA_HRS_HRS0_MASK                        0x1u
#define DMA_HRS_HRS0_SHIFT                       0
#define DMA_HRS_HRS0_WIDTH                       1
#define DMA_HRS_HRS0(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS0_SHIFT))&DMA_HRS_HRS0_MASK)
#define DMA_HRS_HRS1_MASK                        0x2u
#define DMA_HRS_HRS1_SHIFT                       1
#define DMA_HRS_HRS1_WIDTH                       1
#define DMA_HRS_HRS1(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS1_SHIFT))&DMA_HRS_HRS1_MASK)
#define DMA_HRS_HRS2_MASK                        0x4u
#define DMA_HRS_HRS2_SHIFT                       2
#define DMA_HRS_HRS2_WIDTH                       1
#define DMA_HRS_HRS2(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS2_SHIFT))&DMA_HRS_HRS2_MASK)
#define DMA_HRS_HRS3_MASK                        0x8u
#define DMA_HRS_HRS3_SHIFT                       3
#define DMA_HRS_HRS3_WIDTH                       1
#define DMA_HRS_HRS3(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS3_SHIFT))&DMA_HRS_HRS3_MASK)
#define DMA_HRS_HRS4_MASK                        0x10u
#define DMA_HRS_HRS4_SHIFT                       4
#define DMA_HRS_HRS4_WIDTH                       1
#define DMA_HRS_HRS4(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS4_SHIFT))&DMA_HRS_HRS4_MASK)
#define DMA_HRS_HRS5_MASK                        0x20u
#define DMA_HRS_HRS5_SHIFT                       5
#define DMA_HRS_HRS5_WIDTH                       1
#define DMA_HRS_HRS5(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS5_SHIFT))&DMA_HRS_HRS5_MASK)
#define DMA_HRS_HRS6_MASK                        0x40u
#define DMA_HRS_HRS6_SHIFT                       6
#define DMA_HRS_HRS6_WIDTH                       1
#define DMA_HRS_HRS6(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS6_SHIFT))&DMA_HRS_HRS6_MASK)
#define DMA_HRS_HRS7_MASK                        0x80u
#define DMA_HRS_HRS7_SHIFT                       7
#define DMA_HRS_HRS7_WIDTH                       1
#define DMA_HRS_HRS7(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS7_SHIFT))&DMA_HRS_HRS7_MASK)
#define DMA_HRS_HRS8_MASK                        0x100u
#define DMA_HRS_HRS8_SHIFT                       8
#define DMA_HRS_HRS8_WIDTH                       1
#define DMA_HRS_HRS8(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS8_SHIFT))&DMA_HRS_HRS8_MASK)
#define DMA_HRS_HRS9_MASK                        0x200u
#define DMA_HRS_HRS9_SHIFT                       9
#define DMA_HRS_HRS9_WIDTH                       1
#define DMA_HRS_HRS9(x)                          (((uint32)(((uint32)(x))<<DMA_HRS_HRS9_SHIFT))&DMA_HRS_HRS9_MASK)
#define DMA_HRS_HRS10_MASK                       0x400u
#define DMA_HRS_HRS10_SHIFT                      10
#define DMA_HRS_HRS10_WIDTH                      1
#define DMA_HRS_HRS10(x)                         (((uint32)(((uint32)(x))<<DMA_HRS_HRS10_SHIFT))&DMA_HRS_HRS10_MASK)
#define DMA_HRS_HRS11_MASK                       0x800u
#define DMA_HRS_HRS11_SHIFT                      11
#define DMA_HRS_HRS11_WIDTH                      1
#define DMA_HRS_HRS11(x)                         (((uint32)(((uint32)(x))<<DMA_HRS_HRS11_SHIFT))&DMA_HRS_HRS11_MASK)
#define DMA_HRS_HRS12_MASK                       0x1000u
#define DMA_HRS_HRS12_SHIFT                      12
#define DMA_HRS_HRS12_WIDTH                      1
#define DMA_HRS_HRS12(x)                         (((uint32)(((uint32)(x))<<DMA_HRS_HRS12_SHIFT))&DMA_HRS_HRS12_MASK)
#define DMA_HRS_HRS13_MASK                       0x2000u
#define DMA_HRS_HRS13_SHIFT                      13
#define DMA_HRS_HRS13_WIDTH                      1
#define DMA_HRS_HRS13(x)                         (((uint32)(((uint32)(x))<<DMA_HRS_HRS13_SHIFT))&DMA_HRS_HRS13_MASK)
#define DMA_HRS_HRS14_MASK                       0x4000u
#define DMA_HRS_HRS14_SHIFT                      14
#define DMA_HRS_HRS14_WIDTH                      1
#define DMA_HRS_HRS14(x)                         (((uint32)(((uint32)(x))<<DMA_HRS_HRS14_SHIFT))&DMA_HRS_HRS14_MASK)
#define DMA_HRS_HRS15_MASK                       0x8000u
#define DMA_HRS_HRS15_SHIFT                      15
#define DMA_HRS_HRS15_WIDTH                      1
#define DMA_HRS_HRS15(x)                         (((uint32)(((uint32)(x))<<DMA_HRS_HRS15_SHIFT))&DMA_HRS_HRS15_MASK)
/* EARS Bit Fields */
#define DMA_EARS_EDREQ_0_MASK                    0x1u
#define DMA_EARS_EDREQ_0_SHIFT                   0
#define DMA_EARS_EDREQ_0_WIDTH                   1
#define DMA_EARS_EDREQ_0(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_0_SHIFT))&DMA_EARS_EDREQ_0_MASK)
#define DMA_EARS_EDREQ_1_MASK                    0x2u
#define DMA_EARS_EDREQ_1_SHIFT                   1
#define DMA_EARS_EDREQ_1_WIDTH                   1
#define DMA_EARS_EDREQ_1(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_1_SHIFT))&DMA_EARS_EDREQ_1_MASK)
#define DMA_EARS_EDREQ_2_MASK                    0x4u
#define DMA_EARS_EDREQ_2_SHIFT                   2
#define DMA_EARS_EDREQ_2_WIDTH                   1
#define DMA_EARS_EDREQ_2(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_2_SHIFT))&DMA_EARS_EDREQ_2_MASK)
#define DMA_EARS_EDREQ_3_MASK                    0x8u
#define DMA_EARS_EDREQ_3_SHIFT                   3
#define DMA_EARS_EDREQ_3_WIDTH                   1
#define DMA_EARS_EDREQ_3(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_3_SHIFT))&DMA_EARS_EDREQ_3_MASK)
#define DMA_EARS_EDREQ_4_MASK                    0x10u
#define DMA_EARS_EDREQ_4_SHIFT                   4
#define DMA_EARS_EDREQ_4_WIDTH                   1
#define DMA_EARS_EDREQ_4(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_4_SHIFT))&DMA_EARS_EDREQ_4_MASK)
#define DMA_EARS_EDREQ_5_MASK                    0x20u
#define DMA_EARS_EDREQ_5_SHIFT                   5
#define DMA_EARS_EDREQ_5_WIDTH                   1
#define DMA_EARS_EDREQ_5(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_5_SHIFT))&DMA_EARS_EDREQ_5_MASK)
#define DMA_EARS_EDREQ_6_MASK                    0x40u
#define DMA_EARS_EDREQ_6_SHIFT                   6
#define DMA_EARS_EDREQ_6_WIDTH                   1
#define DMA_EARS_EDREQ_6(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_6_SHIFT))&DMA_EARS_EDREQ_6_MASK)
#define DMA_EARS_EDREQ_7_MASK                    0x80u
#define DMA_EARS_EDREQ_7_SHIFT                   7
#define DMA_EARS_EDREQ_7_WIDTH                   1
#define DMA_EARS_EDREQ_7(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_7_SHIFT))&DMA_EARS_EDREQ_7_MASK)
#define DMA_EARS_EDREQ_8_MASK                    0x100u
#define DMA_EARS_EDREQ_8_SHIFT                   8
#define DMA_EARS_EDREQ_8_WIDTH                   1
#define DMA_EARS_EDREQ_8(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_8_SHIFT))&DMA_EARS_EDREQ_8_MASK)
#define DMA_EARS_EDREQ_9_MASK                    0x200u
#define DMA_EARS_EDREQ_9_SHIFT                   9
#define DMA_EARS_EDREQ_9_WIDTH                   1
#define DMA_EARS_EDREQ_9(x)                      (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_9_SHIFT))&DMA_EARS_EDREQ_9_MASK)
#define DMA_EARS_EDREQ_10_MASK                   0x400u
#define DMA_EARS_EDREQ_10_SHIFT                  10
#define DMA_EARS_EDREQ_10_WIDTH                  1
#define DMA_EARS_EDREQ_10(x)                     (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_10_SHIFT))&DMA_EARS_EDREQ_10_MASK)
#define DMA_EARS_EDREQ_11_MASK                   0x800u
#define DMA_EARS_EDREQ_11_SHIFT                  11
#define DMA_EARS_EDREQ_11_WIDTH                  1
#define DMA_EARS_EDREQ_11(x)                     (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_11_SHIFT))&DMA_EARS_EDREQ_11_MASK)
#define DMA_EARS_EDREQ_12_MASK                   0x1000u
#define DMA_EARS_EDREQ_12_SHIFT                  12
#define DMA_EARS_EDREQ_12_WIDTH                  1
#define DMA_EARS_EDREQ_12(x)                     (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_12_SHIFT))&DMA_EARS_EDREQ_12_MASK)
#define DMA_EARS_EDREQ_13_MASK                   0x2000u
#define DMA_EARS_EDREQ_13_SHIFT                  13
#define DMA_EARS_EDREQ_13_WIDTH                  1
#define DMA_EARS_EDREQ_13(x)                     (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_13_SHIFT))&DMA_EARS_EDREQ_13_MASK)
#define DMA_EARS_EDREQ_14_MASK                   0x4000u
#define DMA_EARS_EDREQ_14_SHIFT                  14
#define DMA_EARS_EDREQ_14_WIDTH                  1
#define DMA_EARS_EDREQ_14(x)                     (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_14_SHIFT))&DMA_EARS_EDREQ_14_MASK)
#define DMA_EARS_EDREQ_15_MASK                   0x8000u
#define DMA_EARS_EDREQ_15_SHIFT                  15
#define DMA_EARS_EDREQ_15_WIDTH                  1
#define DMA_EARS_EDREQ_15(x)                     (((uint32)(((uint32)(x))<<DMA_EARS_EDREQ_15_SHIFT))&DMA_EARS_EDREQ_15_MASK)
/* DCHPRI Bit Fields */
#define DMA_DCHPRI_CHPRI_MASK                    0xFu
#define DMA_DCHPRI_CHPRI_SHIFT                   0
#define DMA_DCHPRI_CHPRI_WIDTH                   4
#define DMA_DCHPRI_CHPRI(x)                      (((uint8)(((uint8)(x))<<DMA_DCHPRI_CHPRI_SHIFT))&DMA_DCHPRI_CHPRI_MASK)
#define DMA_DCHPRI_DPA_MASK                      0x40u
#define DMA_DCHPRI_DPA_SHIFT                     6
#define DMA_DCHPRI_DPA_WIDTH                     1
#define DMA_DCHPRI_DPA(x)                        (((uint8)(((uint8)(x))<<DMA_DCHPRI_DPA_SHIFT))&DMA_DCHPRI_DPA_MASK)
#define DMA_DCHPRI_ECP_MASK                      0x80u
#define DMA_DCHPRI_ECP_SHIFT                     7
#define DMA_DCHPRI_ECP_WIDTH                     1
#define DMA_DCHPRI_ECP(x)                        (((uint8)(((uint8)(x))<<DMA_DCHPRI_ECP_SHIFT))&DMA_DCHPRI_ECP_MASK)
/* TCD0_SADDR Bit Fields */
#define DMA_TCD0_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD0_SADDR_SADDR_SHIFT               0
#define DMA_TCD0_SADDR_SADDR_WIDTH               32
#define DMA_TCD0_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD0_SADDR_SADDR_SHIFT))&DMA_TCD0_SADDR_SADDR_MASK)
/* TCD0_SOFF Bit Fields */
#define DMA_TCD0_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD0_SOFF_SOFF_SHIFT                 0
#define DMA_TCD0_SOFF_SOFF_WIDTH                 16
#define DMA_TCD0_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD0_SOFF_SOFF_SHIFT))&DMA_TCD0_SOFF_SOFF_MASK)
/* TCD0_ATTR Bit Fields */
#define DMA_TCD0_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD0_ATTR_DSIZE_SHIFT                0
#define DMA_TCD0_ATTR_DSIZE_WIDTH                3
#define DMA_TCD0_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD0_ATTR_DSIZE_SHIFT))&DMA_TCD0_ATTR_DSIZE_MASK)
#define DMA_TCD0_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD0_ATTR_DMOD_SHIFT                 3
#define DMA_TCD0_ATTR_DMOD_WIDTH                 5
#define DMA_TCD0_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD0_ATTR_DMOD_SHIFT))&DMA_TCD0_ATTR_DMOD_MASK)
#define DMA_TCD0_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD0_ATTR_SSIZE_SHIFT                8
#define DMA_TCD0_ATTR_SSIZE_WIDTH                3
#define DMA_TCD0_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD0_ATTR_SSIZE_SHIFT))&DMA_TCD0_ATTR_SSIZE_MASK)
#define DMA_TCD0_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD0_ATTR_SMOD_SHIFT                 11
#define DMA_TCD0_ATTR_SMOD_WIDTH                 5
#define DMA_TCD0_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD0_ATTR_SMOD_SHIFT))&DMA_TCD0_ATTR_SMOD_MASK)
/* TCD0_NBYTES_MLNO Bit Fields */
#define DMA_TCD0_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD0_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD0_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD0_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD0_NBYTES_MLNO_NBYTES_MASK)
/* TCD0_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD0_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD0_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD0_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD0_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD0_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD0_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD0_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD0_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD0_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD0_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD0_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD0_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD0_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD0_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD0_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD0_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD0_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD0_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD0_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD0_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD0_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD0_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD0_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD0_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD0_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD0_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD0_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD0_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD0_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD0_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD0_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD0_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD0_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD0_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD0_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD0_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD0_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD0_SLAST Bit Fields */
#define DMA_TCD0_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD0_SLAST_SLAST_SHIFT               0
#define DMA_TCD0_SLAST_SLAST_WIDTH               32
#define DMA_TCD0_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD0_SLAST_SLAST_SHIFT))&DMA_TCD0_SLAST_SLAST_MASK)
/* TCD0_DADDR Bit Fields */
#define DMA_TCD0_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD0_DADDR_DADDR_SHIFT               0
#define DMA_TCD0_DADDR_DADDR_WIDTH               32
#define DMA_TCD0_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD0_DADDR_DADDR_SHIFT))&DMA_TCD0_DADDR_DADDR_MASK)
/* TCD0_DOFF Bit Fields */
#define DMA_TCD0_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD0_DOFF_DOFF_SHIFT                 0
#define DMA_TCD0_DOFF_DOFF_WIDTH                 16
#define DMA_TCD0_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD0_DOFF_DOFF_SHIFT))&DMA_TCD0_DOFF_DOFF_MASK)
/* TCD0_CITER_ELINKNO Bit Fields */
#define DMA_TCD0_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD0_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD0_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD0_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD0_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD0_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD0_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD0_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD0_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD0_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD0_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD0_CITER_ELINKNO_ELINK_MASK)
/* TCD0_CITER_ELINKYES Bit Fields */
#define DMA_TCD0_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD0_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD0_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD0_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD0_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD0_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD0_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD0_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD0_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD0_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD0_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD0_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD0_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD0_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD0_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD0_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD0_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD0_CITER_ELINKYES_ELINK_MASK)
/* TCD0_DLASTSGA Bit Fields */
#define DMA_TCD0_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD0_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD0_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD0_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD0_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD0_DLASTSGA_DLASTSGA_MASK)
/* TCD0_CSR Bit Fields */
#define DMA_TCD0_CSR_START_MASK                  0x1u
#define DMA_TCD0_CSR_START_SHIFT                 0
#define DMA_TCD0_CSR_START_WIDTH                 1
#define DMA_TCD0_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_START_SHIFT))&DMA_TCD0_CSR_START_MASK)
#define DMA_TCD0_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD0_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD0_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD0_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_INTMAJOR_SHIFT))&DMA_TCD0_CSR_INTMAJOR_MASK)
#define DMA_TCD0_CSR_INTHALF_MASK                0x4u
#define DMA_TCD0_CSR_INTHALF_SHIFT               2
#define DMA_TCD0_CSR_INTHALF_WIDTH               1
#define DMA_TCD0_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_INTHALF_SHIFT))&DMA_TCD0_CSR_INTHALF_MASK)
#define DMA_TCD0_CSR_DREQ_MASK                   0x8u
#define DMA_TCD0_CSR_DREQ_SHIFT                  3
#define DMA_TCD0_CSR_DREQ_WIDTH                  1
#define DMA_TCD0_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_DREQ_SHIFT))&DMA_TCD0_CSR_DREQ_MASK)
#define DMA_TCD0_CSR_ESG_MASK                    0x10u
#define DMA_TCD0_CSR_ESG_SHIFT                   4
#define DMA_TCD0_CSR_ESG_WIDTH                   1
#define DMA_TCD0_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_ESG_SHIFT))&DMA_TCD0_CSR_ESG_MASK)
#define DMA_TCD0_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD0_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD0_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD0_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_MAJORELINK_SHIFT))&DMA_TCD0_CSR_MAJORELINK_MASK)
#define DMA_TCD0_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD0_CSR_ACTIVE_SHIFT                6
#define DMA_TCD0_CSR_ACTIVE_WIDTH                1
#define DMA_TCD0_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_ACTIVE_SHIFT))&DMA_TCD0_CSR_ACTIVE_MASK)
#define DMA_TCD0_CSR_DONE_MASK                   0x80u
#define DMA_TCD0_CSR_DONE_SHIFT                  7
#define DMA_TCD0_CSR_DONE_WIDTH                  1
#define DMA_TCD0_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_DONE_SHIFT))&DMA_TCD0_CSR_DONE_MASK)
#define DMA_TCD0_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD0_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD0_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD0_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_MAJORLINKCH_SHIFT))&DMA_TCD0_CSR_MAJORLINKCH_MASK)
#define DMA_TCD0_CSR_BWC_MASK                    0xC000u
#define DMA_TCD0_CSR_BWC_SHIFT                   14
#define DMA_TCD0_CSR_BWC_WIDTH                   2
#define DMA_TCD0_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD0_CSR_BWC_SHIFT))&DMA_TCD0_CSR_BWC_MASK)
/* TCD0_BITER_ELINKNO Bit Fields */
#define DMA_TCD0_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD0_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD0_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD0_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD0_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD0_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD0_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD0_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD0_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD0_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD0_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD0_BITER_ELINKNO_ELINK_MASK)
/* TCD0_BITER_ELINKYES Bit Fields */
#define DMA_TCD0_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD0_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD0_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD0_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD0_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD0_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD0_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD0_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD0_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD0_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD0_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD0_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD0_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD0_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD0_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD0_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD0_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD0_BITER_ELINKYES_ELINK_MASK)
/* TCD1_SADDR Bit Fields */
#define DMA_TCD1_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD1_SADDR_SADDR_SHIFT               0
#define DMA_TCD1_SADDR_SADDR_WIDTH               32
#define DMA_TCD1_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD1_SADDR_SADDR_SHIFT))&DMA_TCD1_SADDR_SADDR_MASK)
/* TCD1_SOFF Bit Fields */
#define DMA_TCD1_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD1_SOFF_SOFF_SHIFT                 0
#define DMA_TCD1_SOFF_SOFF_WIDTH                 16
#define DMA_TCD1_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD1_SOFF_SOFF_SHIFT))&DMA_TCD1_SOFF_SOFF_MASK)
/* TCD1_ATTR Bit Fields */
#define DMA_TCD1_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD1_ATTR_DSIZE_SHIFT                0
#define DMA_TCD1_ATTR_DSIZE_WIDTH                3
#define DMA_TCD1_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD1_ATTR_DSIZE_SHIFT))&DMA_TCD1_ATTR_DSIZE_MASK)
#define DMA_TCD1_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD1_ATTR_DMOD_SHIFT                 3
#define DMA_TCD1_ATTR_DMOD_WIDTH                 5
#define DMA_TCD1_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD1_ATTR_DMOD_SHIFT))&DMA_TCD1_ATTR_DMOD_MASK)
#define DMA_TCD1_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD1_ATTR_SSIZE_SHIFT                8
#define DMA_TCD1_ATTR_SSIZE_WIDTH                3
#define DMA_TCD1_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD1_ATTR_SSIZE_SHIFT))&DMA_TCD1_ATTR_SSIZE_MASK)
#define DMA_TCD1_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD1_ATTR_SMOD_SHIFT                 11
#define DMA_TCD1_ATTR_SMOD_WIDTH                 5
#define DMA_TCD1_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD1_ATTR_SMOD_SHIFT))&DMA_TCD1_ATTR_SMOD_MASK)
/* TCD1_NBYTES_MLNO Bit Fields */
#define DMA_TCD1_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD1_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD1_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD1_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD1_NBYTES_MLNO_NBYTES_MASK)
/* TCD1_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD1_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD1_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD1_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD1_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD1_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD1_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD1_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD1_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD1_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD1_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD1_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD1_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD1_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD1_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD1_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD1_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD1_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD1_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD1_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD1_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD1_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD1_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD1_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD1_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD1_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD1_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD1_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD1_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD1_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD1_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD1_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD1_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD1_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD1_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD1_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD1_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD1_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD1_SLAST Bit Fields */
#define DMA_TCD1_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD1_SLAST_SLAST_SHIFT               0
#define DMA_TCD1_SLAST_SLAST_WIDTH               32
#define DMA_TCD1_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD1_SLAST_SLAST_SHIFT))&DMA_TCD1_SLAST_SLAST_MASK)
/* TCD1_DADDR Bit Fields */
#define DMA_TCD1_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD1_DADDR_DADDR_SHIFT               0
#define DMA_TCD1_DADDR_DADDR_WIDTH               32
#define DMA_TCD1_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD1_DADDR_DADDR_SHIFT))&DMA_TCD1_DADDR_DADDR_MASK)
/* TCD1_DOFF Bit Fields */
#define DMA_TCD1_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD1_DOFF_DOFF_SHIFT                 0
#define DMA_TCD1_DOFF_DOFF_WIDTH                 16
#define DMA_TCD1_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD1_DOFF_DOFF_SHIFT))&DMA_TCD1_DOFF_DOFF_MASK)
/* TCD1_CITER_ELINKNO Bit Fields */
#define DMA_TCD1_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD1_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD1_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD1_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD1_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD1_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD1_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD1_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD1_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD1_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD1_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD1_CITER_ELINKNO_ELINK_MASK)
/* TCD1_CITER_ELINKYES Bit Fields */
#define DMA_TCD1_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD1_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD1_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD1_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD1_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD1_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD1_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD1_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD1_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD1_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD1_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD1_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD1_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD1_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD1_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD1_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD1_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD1_CITER_ELINKYES_ELINK_MASK)
/* TCD1_DLASTSGA Bit Fields */
#define DMA_TCD1_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD1_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD1_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD1_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD1_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD1_DLASTSGA_DLASTSGA_MASK)
/* TCD1_CSR Bit Fields */
#define DMA_TCD1_CSR_START_MASK                  0x1u
#define DMA_TCD1_CSR_START_SHIFT                 0
#define DMA_TCD1_CSR_START_WIDTH                 1
#define DMA_TCD1_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_START_SHIFT))&DMA_TCD1_CSR_START_MASK)
#define DMA_TCD1_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD1_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD1_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD1_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_INTMAJOR_SHIFT))&DMA_TCD1_CSR_INTMAJOR_MASK)
#define DMA_TCD1_CSR_INTHALF_MASK                0x4u
#define DMA_TCD1_CSR_INTHALF_SHIFT               2
#define DMA_TCD1_CSR_INTHALF_WIDTH               1
#define DMA_TCD1_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_INTHALF_SHIFT))&DMA_TCD1_CSR_INTHALF_MASK)
#define DMA_TCD1_CSR_DREQ_MASK                   0x8u
#define DMA_TCD1_CSR_DREQ_SHIFT                  3
#define DMA_TCD1_CSR_DREQ_WIDTH                  1
#define DMA_TCD1_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_DREQ_SHIFT))&DMA_TCD1_CSR_DREQ_MASK)
#define DMA_TCD1_CSR_ESG_MASK                    0x10u
#define DMA_TCD1_CSR_ESG_SHIFT                   4
#define DMA_TCD1_CSR_ESG_WIDTH                   1
#define DMA_TCD1_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_ESG_SHIFT))&DMA_TCD1_CSR_ESG_MASK)
#define DMA_TCD1_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD1_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD1_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD1_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_MAJORELINK_SHIFT))&DMA_TCD1_CSR_MAJORELINK_MASK)
#define DMA_TCD1_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD1_CSR_ACTIVE_SHIFT                6
#define DMA_TCD1_CSR_ACTIVE_WIDTH                1
#define DMA_TCD1_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_ACTIVE_SHIFT))&DMA_TCD1_CSR_ACTIVE_MASK)
#define DMA_TCD1_CSR_DONE_MASK                   0x80u
#define DMA_TCD1_CSR_DONE_SHIFT                  7
#define DMA_TCD1_CSR_DONE_WIDTH                  1
#define DMA_TCD1_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_DONE_SHIFT))&DMA_TCD1_CSR_DONE_MASK)
#define DMA_TCD1_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD1_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD1_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD1_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_MAJORLINKCH_SHIFT))&DMA_TCD1_CSR_MAJORLINKCH_MASK)
#define DMA_TCD1_CSR_BWC_MASK                    0xC000u
#define DMA_TCD1_CSR_BWC_SHIFT                   14
#define DMA_TCD1_CSR_BWC_WIDTH                   2
#define DMA_TCD1_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD1_CSR_BWC_SHIFT))&DMA_TCD1_CSR_BWC_MASK)
/* TCD1_BITER_ELINKNO Bit Fields */
#define DMA_TCD1_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD1_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD1_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD1_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD1_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD1_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD1_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD1_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD1_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD1_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD1_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD1_BITER_ELINKNO_ELINK_MASK)
/* TCD1_BITER_ELINKYES Bit Fields */
#define DMA_TCD1_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD1_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD1_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD1_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD1_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD1_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD1_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD1_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD1_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD1_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD1_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD1_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD1_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD1_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD1_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD1_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD1_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD1_BITER_ELINKYES_ELINK_MASK)
/* TCD2_SADDR Bit Fields */
#define DMA_TCD2_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD2_SADDR_SADDR_SHIFT               0
#define DMA_TCD2_SADDR_SADDR_WIDTH               32
#define DMA_TCD2_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD2_SADDR_SADDR_SHIFT))&DMA_TCD2_SADDR_SADDR_MASK)
/* TCD2_SOFF Bit Fields */
#define DMA_TCD2_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD2_SOFF_SOFF_SHIFT                 0
#define DMA_TCD2_SOFF_SOFF_WIDTH                 16
#define DMA_TCD2_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD2_SOFF_SOFF_SHIFT))&DMA_TCD2_SOFF_SOFF_MASK)
/* TCD2_ATTR Bit Fields */
#define DMA_TCD2_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD2_ATTR_DSIZE_SHIFT                0
#define DMA_TCD2_ATTR_DSIZE_WIDTH                3
#define DMA_TCD2_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD2_ATTR_DSIZE_SHIFT))&DMA_TCD2_ATTR_DSIZE_MASK)
#define DMA_TCD2_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD2_ATTR_DMOD_SHIFT                 3
#define DMA_TCD2_ATTR_DMOD_WIDTH                 5
#define DMA_TCD2_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD2_ATTR_DMOD_SHIFT))&DMA_TCD2_ATTR_DMOD_MASK)
#define DMA_TCD2_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD2_ATTR_SSIZE_SHIFT                8
#define DMA_TCD2_ATTR_SSIZE_WIDTH                3
#define DMA_TCD2_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD2_ATTR_SSIZE_SHIFT))&DMA_TCD2_ATTR_SSIZE_MASK)
#define DMA_TCD2_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD2_ATTR_SMOD_SHIFT                 11
#define DMA_TCD2_ATTR_SMOD_WIDTH                 5
#define DMA_TCD2_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD2_ATTR_SMOD_SHIFT))&DMA_TCD2_ATTR_SMOD_MASK)
/* TCD2_NBYTES_MLNO Bit Fields */
#define DMA_TCD2_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD2_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD2_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD2_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD2_NBYTES_MLNO_NBYTES_MASK)
/* TCD2_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD2_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD2_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD2_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD2_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD2_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD2_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD2_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD2_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD2_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD2_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD2_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD2_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD2_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD2_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD2_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD2_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD2_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD2_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD2_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD2_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD2_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD2_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD2_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD2_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD2_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD2_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD2_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD2_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD2_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD2_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD2_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD2_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD2_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD2_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD2_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD2_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD2_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD2_SLAST Bit Fields */
#define DMA_TCD2_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD2_SLAST_SLAST_SHIFT               0
#define DMA_TCD2_SLAST_SLAST_WIDTH               32
#define DMA_TCD2_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD2_SLAST_SLAST_SHIFT))&DMA_TCD2_SLAST_SLAST_MASK)
/* TCD2_DADDR Bit Fields */
#define DMA_TCD2_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD2_DADDR_DADDR_SHIFT               0
#define DMA_TCD2_DADDR_DADDR_WIDTH               32
#define DMA_TCD2_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD2_DADDR_DADDR_SHIFT))&DMA_TCD2_DADDR_DADDR_MASK)
/* TCD2_DOFF Bit Fields */
#define DMA_TCD2_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD2_DOFF_DOFF_SHIFT                 0
#define DMA_TCD2_DOFF_DOFF_WIDTH                 16
#define DMA_TCD2_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD2_DOFF_DOFF_SHIFT))&DMA_TCD2_DOFF_DOFF_MASK)
/* TCD2_CITER_ELINKNO Bit Fields */
#define DMA_TCD2_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD2_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD2_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD2_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD2_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD2_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD2_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD2_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD2_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD2_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD2_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD2_CITER_ELINKNO_ELINK_MASK)
/* TCD2_CITER_ELINKYES Bit Fields */
#define DMA_TCD2_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD2_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD2_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD2_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD2_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD2_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD2_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD2_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD2_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD2_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD2_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD2_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD2_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD2_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD2_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD2_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD2_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD2_CITER_ELINKYES_ELINK_MASK)
/* TCD2_DLASTSGA Bit Fields */
#define DMA_TCD2_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD2_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD2_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD2_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD2_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD2_DLASTSGA_DLASTSGA_MASK)
/* TCD2_CSR Bit Fields */
#define DMA_TCD2_CSR_START_MASK                  0x1u
#define DMA_TCD2_CSR_START_SHIFT                 0
#define DMA_TCD2_CSR_START_WIDTH                 1
#define DMA_TCD2_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_START_SHIFT))&DMA_TCD2_CSR_START_MASK)
#define DMA_TCD2_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD2_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD2_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD2_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_INTMAJOR_SHIFT))&DMA_TCD2_CSR_INTMAJOR_MASK)
#define DMA_TCD2_CSR_INTHALF_MASK                0x4u
#define DMA_TCD2_CSR_INTHALF_SHIFT               2
#define DMA_TCD2_CSR_INTHALF_WIDTH               1
#define DMA_TCD2_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_INTHALF_SHIFT))&DMA_TCD2_CSR_INTHALF_MASK)
#define DMA_TCD2_CSR_DREQ_MASK                   0x8u
#define DMA_TCD2_CSR_DREQ_SHIFT                  3
#define DMA_TCD2_CSR_DREQ_WIDTH                  1
#define DMA_TCD2_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_DREQ_SHIFT))&DMA_TCD2_CSR_DREQ_MASK)
#define DMA_TCD2_CSR_ESG_MASK                    0x10u
#define DMA_TCD2_CSR_ESG_SHIFT                   4
#define DMA_TCD2_CSR_ESG_WIDTH                   1
#define DMA_TCD2_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_ESG_SHIFT))&DMA_TCD2_CSR_ESG_MASK)
#define DMA_TCD2_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD2_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD2_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD2_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_MAJORELINK_SHIFT))&DMA_TCD2_CSR_MAJORELINK_MASK)
#define DMA_TCD2_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD2_CSR_ACTIVE_SHIFT                6
#define DMA_TCD2_CSR_ACTIVE_WIDTH                1
#define DMA_TCD2_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_ACTIVE_SHIFT))&DMA_TCD2_CSR_ACTIVE_MASK)
#define DMA_TCD2_CSR_DONE_MASK                   0x80u
#define DMA_TCD2_CSR_DONE_SHIFT                  7
#define DMA_TCD2_CSR_DONE_WIDTH                  1
#define DMA_TCD2_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_DONE_SHIFT))&DMA_TCD2_CSR_DONE_MASK)
#define DMA_TCD2_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD2_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD2_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD2_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_MAJORLINKCH_SHIFT))&DMA_TCD2_CSR_MAJORLINKCH_MASK)
#define DMA_TCD2_CSR_BWC_MASK                    0xC000u
#define DMA_TCD2_CSR_BWC_SHIFT                   14
#define DMA_TCD2_CSR_BWC_WIDTH                   2
#define DMA_TCD2_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD2_CSR_BWC_SHIFT))&DMA_TCD2_CSR_BWC_MASK)
/* TCD2_BITER_ELINKNO Bit Fields */
#define DMA_TCD2_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD2_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD2_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD2_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD2_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD2_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD2_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD2_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD2_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD2_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD2_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD2_BITER_ELINKNO_ELINK_MASK)
/* TCD2_BITER_ELINKYES Bit Fields */
#define DMA_TCD2_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD2_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD2_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD2_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD2_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD2_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD2_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD2_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD2_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD2_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD2_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD2_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD2_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD2_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD2_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD2_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD2_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD2_BITER_ELINKYES_ELINK_MASK)
/* TCD3_SADDR Bit Fields */
#define DMA_TCD3_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD3_SADDR_SADDR_SHIFT               0
#define DMA_TCD3_SADDR_SADDR_WIDTH               32
#define DMA_TCD3_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD3_SADDR_SADDR_SHIFT))&DMA_TCD3_SADDR_SADDR_MASK)
/* TCD3_SOFF Bit Fields */
#define DMA_TCD3_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD3_SOFF_SOFF_SHIFT                 0
#define DMA_TCD3_SOFF_SOFF_WIDTH                 16
#define DMA_TCD3_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD3_SOFF_SOFF_SHIFT))&DMA_TCD3_SOFF_SOFF_MASK)
/* TCD3_ATTR Bit Fields */
#define DMA_TCD3_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD3_ATTR_DSIZE_SHIFT                0
#define DMA_TCD3_ATTR_DSIZE_WIDTH                3
#define DMA_TCD3_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD3_ATTR_DSIZE_SHIFT))&DMA_TCD3_ATTR_DSIZE_MASK)
#define DMA_TCD3_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD3_ATTR_DMOD_SHIFT                 3
#define DMA_TCD3_ATTR_DMOD_WIDTH                 5
#define DMA_TCD3_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD3_ATTR_DMOD_SHIFT))&DMA_TCD3_ATTR_DMOD_MASK)
#define DMA_TCD3_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD3_ATTR_SSIZE_SHIFT                8
#define DMA_TCD3_ATTR_SSIZE_WIDTH                3
#define DMA_TCD3_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD3_ATTR_SSIZE_SHIFT))&DMA_TCD3_ATTR_SSIZE_MASK)
#define DMA_TCD3_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD3_ATTR_SMOD_SHIFT                 11
#define DMA_TCD3_ATTR_SMOD_WIDTH                 5
#define DMA_TCD3_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD3_ATTR_SMOD_SHIFT))&DMA_TCD3_ATTR_SMOD_MASK)
/* TCD3_NBYTES_MLNO Bit Fields */
#define DMA_TCD3_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD3_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD3_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD3_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD3_NBYTES_MLNO_NBYTES_MASK)
/* TCD3_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD3_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD3_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD3_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD3_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD3_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD3_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD3_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD3_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD3_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD3_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD3_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD3_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD3_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD3_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD3_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD3_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD3_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD3_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD3_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD3_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD3_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD3_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD3_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD3_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD3_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD3_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD3_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD3_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD3_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD3_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD3_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD3_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD3_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD3_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD3_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD3_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD3_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD3_SLAST Bit Fields */
#define DMA_TCD3_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD3_SLAST_SLAST_SHIFT               0
#define DMA_TCD3_SLAST_SLAST_WIDTH               32
#define DMA_TCD3_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD3_SLAST_SLAST_SHIFT))&DMA_TCD3_SLAST_SLAST_MASK)
/* TCD3_DADDR Bit Fields */
#define DMA_TCD3_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD3_DADDR_DADDR_SHIFT               0
#define DMA_TCD3_DADDR_DADDR_WIDTH               32
#define DMA_TCD3_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD3_DADDR_DADDR_SHIFT))&DMA_TCD3_DADDR_DADDR_MASK)
/* TCD3_DOFF Bit Fields */
#define DMA_TCD3_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD3_DOFF_DOFF_SHIFT                 0
#define DMA_TCD3_DOFF_DOFF_WIDTH                 16
#define DMA_TCD3_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD3_DOFF_DOFF_SHIFT))&DMA_TCD3_DOFF_DOFF_MASK)
/* TCD3_CITER_ELINKNO Bit Fields */
#define DMA_TCD3_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD3_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD3_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD3_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD3_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD3_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD3_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD3_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD3_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD3_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD3_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD3_CITER_ELINKNO_ELINK_MASK)
/* TCD3_CITER_ELINKYES Bit Fields */
#define DMA_TCD3_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD3_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD3_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD3_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD3_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD3_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD3_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD3_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD3_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD3_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD3_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD3_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD3_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD3_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD3_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD3_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD3_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD3_CITER_ELINKYES_ELINK_MASK)
/* TCD3_DLASTSGA Bit Fields */
#define DMA_TCD3_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD3_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD3_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD3_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD3_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD3_DLASTSGA_DLASTSGA_MASK)
/* TCD3_CSR Bit Fields */
#define DMA_TCD3_CSR_START_MASK                  0x1u
#define DMA_TCD3_CSR_START_SHIFT                 0
#define DMA_TCD3_CSR_START_WIDTH                 1
#define DMA_TCD3_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_START_SHIFT))&DMA_TCD3_CSR_START_MASK)
#define DMA_TCD3_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD3_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD3_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD3_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_INTMAJOR_SHIFT))&DMA_TCD3_CSR_INTMAJOR_MASK)
#define DMA_TCD3_CSR_INTHALF_MASK                0x4u
#define DMA_TCD3_CSR_INTHALF_SHIFT               2
#define DMA_TCD3_CSR_INTHALF_WIDTH               1
#define DMA_TCD3_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_INTHALF_SHIFT))&DMA_TCD3_CSR_INTHALF_MASK)
#define DMA_TCD3_CSR_DREQ_MASK                   0x8u
#define DMA_TCD3_CSR_DREQ_SHIFT                  3
#define DMA_TCD3_CSR_DREQ_WIDTH                  1
#define DMA_TCD3_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_DREQ_SHIFT))&DMA_TCD3_CSR_DREQ_MASK)
#define DMA_TCD3_CSR_ESG_MASK                    0x10u
#define DMA_TCD3_CSR_ESG_SHIFT                   4
#define DMA_TCD3_CSR_ESG_WIDTH                   1
#define DMA_TCD3_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_ESG_SHIFT))&DMA_TCD3_CSR_ESG_MASK)
#define DMA_TCD3_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD3_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD3_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD3_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_MAJORELINK_SHIFT))&DMA_TCD3_CSR_MAJORELINK_MASK)
#define DMA_TCD3_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD3_CSR_ACTIVE_SHIFT                6
#define DMA_TCD3_CSR_ACTIVE_WIDTH                1
#define DMA_TCD3_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_ACTIVE_SHIFT))&DMA_TCD3_CSR_ACTIVE_MASK)
#define DMA_TCD3_CSR_DONE_MASK                   0x80u
#define DMA_TCD3_CSR_DONE_SHIFT                  7
#define DMA_TCD3_CSR_DONE_WIDTH                  1
#define DMA_TCD3_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_DONE_SHIFT))&DMA_TCD3_CSR_DONE_MASK)
#define DMA_TCD3_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD3_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD3_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD3_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_MAJORLINKCH_SHIFT))&DMA_TCD3_CSR_MAJORLINKCH_MASK)
#define DMA_TCD3_CSR_BWC_MASK                    0xC000u
#define DMA_TCD3_CSR_BWC_SHIFT                   14
#define DMA_TCD3_CSR_BWC_WIDTH                   2
#define DMA_TCD3_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD3_CSR_BWC_SHIFT))&DMA_TCD3_CSR_BWC_MASK)
/* TCD3_BITER_ELINKNO Bit Fields */
#define DMA_TCD3_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD3_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD3_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD3_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD3_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD3_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD3_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD3_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD3_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD3_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD3_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD3_BITER_ELINKNO_ELINK_MASK)
/* TCD3_BITER_ELINKYES Bit Fields */
#define DMA_TCD3_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD3_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD3_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD3_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD3_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD3_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD3_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD3_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD3_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD3_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD3_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD3_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD3_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD3_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD3_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD3_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD3_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD3_BITER_ELINKYES_ELINK_MASK)
/* TCD4_SADDR Bit Fields */
#define DMA_TCD4_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD4_SADDR_SADDR_SHIFT               0
#define DMA_TCD4_SADDR_SADDR_WIDTH               32
#define DMA_TCD4_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD4_SADDR_SADDR_SHIFT))&DMA_TCD4_SADDR_SADDR_MASK)
/* TCD4_SOFF Bit Fields */
#define DMA_TCD4_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD4_SOFF_SOFF_SHIFT                 0
#define DMA_TCD4_SOFF_SOFF_WIDTH                 16
#define DMA_TCD4_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD4_SOFF_SOFF_SHIFT))&DMA_TCD4_SOFF_SOFF_MASK)
/* TCD4_ATTR Bit Fields */
#define DMA_TCD4_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD4_ATTR_DSIZE_SHIFT                0
#define DMA_TCD4_ATTR_DSIZE_WIDTH                3
#define DMA_TCD4_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD4_ATTR_DSIZE_SHIFT))&DMA_TCD4_ATTR_DSIZE_MASK)
#define DMA_TCD4_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD4_ATTR_DMOD_SHIFT                 3
#define DMA_TCD4_ATTR_DMOD_WIDTH                 5
#define DMA_TCD4_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD4_ATTR_DMOD_SHIFT))&DMA_TCD4_ATTR_DMOD_MASK)
#define DMA_TCD4_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD4_ATTR_SSIZE_SHIFT                8
#define DMA_TCD4_ATTR_SSIZE_WIDTH                3
#define DMA_TCD4_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD4_ATTR_SSIZE_SHIFT))&DMA_TCD4_ATTR_SSIZE_MASK)
#define DMA_TCD4_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD4_ATTR_SMOD_SHIFT                 11
#define DMA_TCD4_ATTR_SMOD_WIDTH                 5
#define DMA_TCD4_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD4_ATTR_SMOD_SHIFT))&DMA_TCD4_ATTR_SMOD_MASK)
/* TCD4_NBYTES_MLNO Bit Fields */
#define DMA_TCD4_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD4_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD4_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD4_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD4_NBYTES_MLNO_NBYTES_MASK)
/* TCD4_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD4_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD4_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD4_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD4_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD4_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD4_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD4_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD4_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD4_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD4_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD4_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD4_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD4_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD4_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD4_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD4_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD4_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD4_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD4_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD4_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD4_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD4_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD4_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD4_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD4_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD4_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD4_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD4_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD4_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD4_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD4_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD4_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD4_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD4_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD4_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD4_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD4_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD4_SLAST Bit Fields */
#define DMA_TCD4_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD4_SLAST_SLAST_SHIFT               0
#define DMA_TCD4_SLAST_SLAST_WIDTH               32
#define DMA_TCD4_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD4_SLAST_SLAST_SHIFT))&DMA_TCD4_SLAST_SLAST_MASK)
/* TCD4_DADDR Bit Fields */
#define DMA_TCD4_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD4_DADDR_DADDR_SHIFT               0
#define DMA_TCD4_DADDR_DADDR_WIDTH               32
#define DMA_TCD4_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD4_DADDR_DADDR_SHIFT))&DMA_TCD4_DADDR_DADDR_MASK)
/* TCD4_DOFF Bit Fields */
#define DMA_TCD4_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD4_DOFF_DOFF_SHIFT                 0
#define DMA_TCD4_DOFF_DOFF_WIDTH                 16
#define DMA_TCD4_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD4_DOFF_DOFF_SHIFT))&DMA_TCD4_DOFF_DOFF_MASK)
/* TCD4_CITER_ELINKNO Bit Fields */
#define DMA_TCD4_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD4_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD4_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD4_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD4_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD4_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD4_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD4_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD4_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD4_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD4_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD4_CITER_ELINKNO_ELINK_MASK)
/* TCD4_CITER_ELINKYES Bit Fields */
#define DMA_TCD4_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD4_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD4_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD4_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD4_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD4_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD4_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD4_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD4_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD4_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD4_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD4_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD4_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD4_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD4_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD4_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD4_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD4_CITER_ELINKYES_ELINK_MASK)
/* TCD4_DLASTSGA Bit Fields */
#define DMA_TCD4_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD4_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD4_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD4_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD4_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD4_DLASTSGA_DLASTSGA_MASK)
/* TCD4_CSR Bit Fields */
#define DMA_TCD4_CSR_START_MASK                  0x1u
#define DMA_TCD4_CSR_START_SHIFT                 0
#define DMA_TCD4_CSR_START_WIDTH                 1
#define DMA_TCD4_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_START_SHIFT))&DMA_TCD4_CSR_START_MASK)
#define DMA_TCD4_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD4_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD4_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD4_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_INTMAJOR_SHIFT))&DMA_TCD4_CSR_INTMAJOR_MASK)
#define DMA_TCD4_CSR_INTHALF_MASK                0x4u
#define DMA_TCD4_CSR_INTHALF_SHIFT               2
#define DMA_TCD4_CSR_INTHALF_WIDTH               1
#define DMA_TCD4_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_INTHALF_SHIFT))&DMA_TCD4_CSR_INTHALF_MASK)
#define DMA_TCD4_CSR_DREQ_MASK                   0x8u
#define DMA_TCD4_CSR_DREQ_SHIFT                  3
#define DMA_TCD4_CSR_DREQ_WIDTH                  1
#define DMA_TCD4_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_DREQ_SHIFT))&DMA_TCD4_CSR_DREQ_MASK)
#define DMA_TCD4_CSR_ESG_MASK                    0x10u
#define DMA_TCD4_CSR_ESG_SHIFT                   4
#define DMA_TCD4_CSR_ESG_WIDTH                   1
#define DMA_TCD4_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_ESG_SHIFT))&DMA_TCD4_CSR_ESG_MASK)
#define DMA_TCD4_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD4_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD4_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD4_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_MAJORELINK_SHIFT))&DMA_TCD4_CSR_MAJORELINK_MASK)
#define DMA_TCD4_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD4_CSR_ACTIVE_SHIFT                6
#define DMA_TCD4_CSR_ACTIVE_WIDTH                1
#define DMA_TCD4_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_ACTIVE_SHIFT))&DMA_TCD4_CSR_ACTIVE_MASK)
#define DMA_TCD4_CSR_DONE_MASK                   0x80u
#define DMA_TCD4_CSR_DONE_SHIFT                  7
#define DMA_TCD4_CSR_DONE_WIDTH                  1
#define DMA_TCD4_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_DONE_SHIFT))&DMA_TCD4_CSR_DONE_MASK)
#define DMA_TCD4_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD4_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD4_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD4_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_MAJORLINKCH_SHIFT))&DMA_TCD4_CSR_MAJORLINKCH_MASK)
#define DMA_TCD4_CSR_BWC_MASK                    0xC000u
#define DMA_TCD4_CSR_BWC_SHIFT                   14
#define DMA_TCD4_CSR_BWC_WIDTH                   2
#define DMA_TCD4_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD4_CSR_BWC_SHIFT))&DMA_TCD4_CSR_BWC_MASK)
/* TCD4_BITER_ELINKNO Bit Fields */
#define DMA_TCD4_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD4_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD4_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD4_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD4_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD4_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD4_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD4_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD4_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD4_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD4_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD4_BITER_ELINKNO_ELINK_MASK)
/* TCD4_BITER_ELINKYES Bit Fields */
#define DMA_TCD4_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD4_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD4_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD4_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD4_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD4_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD4_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD4_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD4_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD4_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD4_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD4_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD4_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD4_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD4_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD4_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD4_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD4_BITER_ELINKYES_ELINK_MASK)
/* TCD5_SADDR Bit Fields */
#define DMA_TCD5_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD5_SADDR_SADDR_SHIFT               0
#define DMA_TCD5_SADDR_SADDR_WIDTH               32
#define DMA_TCD5_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD5_SADDR_SADDR_SHIFT))&DMA_TCD5_SADDR_SADDR_MASK)
/* TCD5_SOFF Bit Fields */
#define DMA_TCD5_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD5_SOFF_SOFF_SHIFT                 0
#define DMA_TCD5_SOFF_SOFF_WIDTH                 16
#define DMA_TCD5_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD5_SOFF_SOFF_SHIFT))&DMA_TCD5_SOFF_SOFF_MASK)
/* TCD5_ATTR Bit Fields */
#define DMA_TCD5_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD5_ATTR_DSIZE_SHIFT                0
#define DMA_TCD5_ATTR_DSIZE_WIDTH                3
#define DMA_TCD5_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD5_ATTR_DSIZE_SHIFT))&DMA_TCD5_ATTR_DSIZE_MASK)
#define DMA_TCD5_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD5_ATTR_DMOD_SHIFT                 3
#define DMA_TCD5_ATTR_DMOD_WIDTH                 5
#define DMA_TCD5_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD5_ATTR_DMOD_SHIFT))&DMA_TCD5_ATTR_DMOD_MASK)
#define DMA_TCD5_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD5_ATTR_SSIZE_SHIFT                8
#define DMA_TCD5_ATTR_SSIZE_WIDTH                3
#define DMA_TCD5_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD5_ATTR_SSIZE_SHIFT))&DMA_TCD5_ATTR_SSIZE_MASK)
#define DMA_TCD5_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD5_ATTR_SMOD_SHIFT                 11
#define DMA_TCD5_ATTR_SMOD_WIDTH                 5
#define DMA_TCD5_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD5_ATTR_SMOD_SHIFT))&DMA_TCD5_ATTR_SMOD_MASK)
/* TCD5_NBYTES_MLNO Bit Fields */
#define DMA_TCD5_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD5_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD5_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD5_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD5_NBYTES_MLNO_NBYTES_MASK)
/* TCD5_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD5_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD5_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD5_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD5_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD5_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD5_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD5_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD5_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD5_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD5_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD5_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD5_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD5_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD5_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD5_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD5_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD5_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD5_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD5_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD5_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD5_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD5_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD5_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD5_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD5_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD5_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD5_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD5_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD5_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD5_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD5_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD5_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD5_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD5_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD5_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD5_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD5_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD5_SLAST Bit Fields */
#define DMA_TCD5_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD5_SLAST_SLAST_SHIFT               0
#define DMA_TCD5_SLAST_SLAST_WIDTH               32
#define DMA_TCD5_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD5_SLAST_SLAST_SHIFT))&DMA_TCD5_SLAST_SLAST_MASK)
/* TCD5_DADDR Bit Fields */
#define DMA_TCD5_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD5_DADDR_DADDR_SHIFT               0
#define DMA_TCD5_DADDR_DADDR_WIDTH               32
#define DMA_TCD5_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD5_DADDR_DADDR_SHIFT))&DMA_TCD5_DADDR_DADDR_MASK)
/* TCD5_DOFF Bit Fields */
#define DMA_TCD5_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD5_DOFF_DOFF_SHIFT                 0
#define DMA_TCD5_DOFF_DOFF_WIDTH                 16
#define DMA_TCD5_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD5_DOFF_DOFF_SHIFT))&DMA_TCD5_DOFF_DOFF_MASK)
/* TCD5_CITER_ELINKNO Bit Fields */
#define DMA_TCD5_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD5_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD5_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD5_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD5_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD5_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD5_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD5_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD5_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD5_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD5_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD5_CITER_ELINKNO_ELINK_MASK)
/* TCD5_CITER_ELINKYES Bit Fields */
#define DMA_TCD5_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD5_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD5_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD5_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD5_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD5_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD5_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD5_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD5_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD5_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD5_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD5_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD5_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD5_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD5_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD5_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD5_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD5_CITER_ELINKYES_ELINK_MASK)
/* TCD5_DLASTSGA Bit Fields */
#define DMA_TCD5_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD5_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD5_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD5_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD5_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD5_DLASTSGA_DLASTSGA_MASK)
/* TCD5_CSR Bit Fields */
#define DMA_TCD5_CSR_START_MASK                  0x1u
#define DMA_TCD5_CSR_START_SHIFT                 0
#define DMA_TCD5_CSR_START_WIDTH                 1
#define DMA_TCD5_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_START_SHIFT))&DMA_TCD5_CSR_START_MASK)
#define DMA_TCD5_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD5_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD5_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD5_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_INTMAJOR_SHIFT))&DMA_TCD5_CSR_INTMAJOR_MASK)
#define DMA_TCD5_CSR_INTHALF_MASK                0x4u
#define DMA_TCD5_CSR_INTHALF_SHIFT               2
#define DMA_TCD5_CSR_INTHALF_WIDTH               1
#define DMA_TCD5_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_INTHALF_SHIFT))&DMA_TCD5_CSR_INTHALF_MASK)
#define DMA_TCD5_CSR_DREQ_MASK                   0x8u
#define DMA_TCD5_CSR_DREQ_SHIFT                  3
#define DMA_TCD5_CSR_DREQ_WIDTH                  1
#define DMA_TCD5_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_DREQ_SHIFT))&DMA_TCD5_CSR_DREQ_MASK)
#define DMA_TCD5_CSR_ESG_MASK                    0x10u
#define DMA_TCD5_CSR_ESG_SHIFT                   4
#define DMA_TCD5_CSR_ESG_WIDTH                   1
#define DMA_TCD5_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_ESG_SHIFT))&DMA_TCD5_CSR_ESG_MASK)
#define DMA_TCD5_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD5_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD5_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD5_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_MAJORELINK_SHIFT))&DMA_TCD5_CSR_MAJORELINK_MASK)
#define DMA_TCD5_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD5_CSR_ACTIVE_SHIFT                6
#define DMA_TCD5_CSR_ACTIVE_WIDTH                1
#define DMA_TCD5_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_ACTIVE_SHIFT))&DMA_TCD5_CSR_ACTIVE_MASK)
#define DMA_TCD5_CSR_DONE_MASK                   0x80u
#define DMA_TCD5_CSR_DONE_SHIFT                  7
#define DMA_TCD5_CSR_DONE_WIDTH                  1
#define DMA_TCD5_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_DONE_SHIFT))&DMA_TCD5_CSR_DONE_MASK)
#define DMA_TCD5_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD5_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD5_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD5_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_MAJORLINKCH_SHIFT))&DMA_TCD5_CSR_MAJORLINKCH_MASK)
#define DMA_TCD5_CSR_BWC_MASK                    0xC000u
#define DMA_TCD5_CSR_BWC_SHIFT                   14
#define DMA_TCD5_CSR_BWC_WIDTH                   2
#define DMA_TCD5_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD5_CSR_BWC_SHIFT))&DMA_TCD5_CSR_BWC_MASK)
/* TCD5_BITER_ELINKNO Bit Fields */
#define DMA_TCD5_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD5_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD5_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD5_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD5_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD5_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD5_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD5_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD5_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD5_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD5_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD5_BITER_ELINKNO_ELINK_MASK)
/* TCD5_BITER_ELINKYES Bit Fields */
#define DMA_TCD5_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD5_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD5_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD5_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD5_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD5_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD5_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD5_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD5_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD5_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD5_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD5_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD5_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD5_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD5_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD5_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD5_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD5_BITER_ELINKYES_ELINK_MASK)
/* TCD6_SADDR Bit Fields */
#define DMA_TCD6_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD6_SADDR_SADDR_SHIFT               0
#define DMA_TCD6_SADDR_SADDR_WIDTH               32
#define DMA_TCD6_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD6_SADDR_SADDR_SHIFT))&DMA_TCD6_SADDR_SADDR_MASK)
/* TCD6_SOFF Bit Fields */
#define DMA_TCD6_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD6_SOFF_SOFF_SHIFT                 0
#define DMA_TCD6_SOFF_SOFF_WIDTH                 16
#define DMA_TCD6_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD6_SOFF_SOFF_SHIFT))&DMA_TCD6_SOFF_SOFF_MASK)
/* TCD6_ATTR Bit Fields */
#define DMA_TCD6_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD6_ATTR_DSIZE_SHIFT                0
#define DMA_TCD6_ATTR_DSIZE_WIDTH                3
#define DMA_TCD6_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD6_ATTR_DSIZE_SHIFT))&DMA_TCD6_ATTR_DSIZE_MASK)
#define DMA_TCD6_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD6_ATTR_DMOD_SHIFT                 3
#define DMA_TCD6_ATTR_DMOD_WIDTH                 5
#define DMA_TCD6_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD6_ATTR_DMOD_SHIFT))&DMA_TCD6_ATTR_DMOD_MASK)
#define DMA_TCD6_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD6_ATTR_SSIZE_SHIFT                8
#define DMA_TCD6_ATTR_SSIZE_WIDTH                3
#define DMA_TCD6_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD6_ATTR_SSIZE_SHIFT))&DMA_TCD6_ATTR_SSIZE_MASK)
#define DMA_TCD6_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD6_ATTR_SMOD_SHIFT                 11
#define DMA_TCD6_ATTR_SMOD_WIDTH                 5
#define DMA_TCD6_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD6_ATTR_SMOD_SHIFT))&DMA_TCD6_ATTR_SMOD_MASK)
/* TCD6_NBYTES_MLNO Bit Fields */
#define DMA_TCD6_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD6_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD6_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD6_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD6_NBYTES_MLNO_NBYTES_MASK)
/* TCD6_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD6_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD6_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD6_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD6_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD6_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD6_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD6_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD6_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD6_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD6_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD6_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD6_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD6_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD6_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD6_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD6_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD6_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD6_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD6_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD6_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD6_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD6_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD6_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD6_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD6_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD6_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD6_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD6_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD6_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD6_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD6_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD6_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD6_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD6_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD6_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD6_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD6_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD6_SLAST Bit Fields */
#define DMA_TCD6_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD6_SLAST_SLAST_SHIFT               0
#define DMA_TCD6_SLAST_SLAST_WIDTH               32
#define DMA_TCD6_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD6_SLAST_SLAST_SHIFT))&DMA_TCD6_SLAST_SLAST_MASK)
/* TCD6_DADDR Bit Fields */
#define DMA_TCD6_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD6_DADDR_DADDR_SHIFT               0
#define DMA_TCD6_DADDR_DADDR_WIDTH               32
#define DMA_TCD6_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD6_DADDR_DADDR_SHIFT))&DMA_TCD6_DADDR_DADDR_MASK)
/* TCD6_DOFF Bit Fields */
#define DMA_TCD6_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD6_DOFF_DOFF_SHIFT                 0
#define DMA_TCD6_DOFF_DOFF_WIDTH                 16
#define DMA_TCD6_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD6_DOFF_DOFF_SHIFT))&DMA_TCD6_DOFF_DOFF_MASK)
/* TCD6_CITER_ELINKNO Bit Fields */
#define DMA_TCD6_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD6_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD6_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD6_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD6_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD6_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD6_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD6_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD6_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD6_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD6_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD6_CITER_ELINKNO_ELINK_MASK)
/* TCD6_CITER_ELINKYES Bit Fields */
#define DMA_TCD6_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD6_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD6_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD6_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD6_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD6_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD6_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD6_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD6_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD6_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD6_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD6_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD6_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD6_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD6_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD6_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD6_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD6_CITER_ELINKYES_ELINK_MASK)
/* TCD6_DLASTSGA Bit Fields */
#define DMA_TCD6_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD6_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD6_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD6_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD6_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD6_DLASTSGA_DLASTSGA_MASK)
/* TCD6_CSR Bit Fields */
#define DMA_TCD6_CSR_START_MASK                  0x1u
#define DMA_TCD6_CSR_START_SHIFT                 0
#define DMA_TCD6_CSR_START_WIDTH                 1
#define DMA_TCD6_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_START_SHIFT))&DMA_TCD6_CSR_START_MASK)
#define DMA_TCD6_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD6_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD6_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD6_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_INTMAJOR_SHIFT))&DMA_TCD6_CSR_INTMAJOR_MASK)
#define DMA_TCD6_CSR_INTHALF_MASK                0x4u
#define DMA_TCD6_CSR_INTHALF_SHIFT               2
#define DMA_TCD6_CSR_INTHALF_WIDTH               1
#define DMA_TCD6_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_INTHALF_SHIFT))&DMA_TCD6_CSR_INTHALF_MASK)
#define DMA_TCD6_CSR_DREQ_MASK                   0x8u
#define DMA_TCD6_CSR_DREQ_SHIFT                  3
#define DMA_TCD6_CSR_DREQ_WIDTH                  1
#define DMA_TCD6_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_DREQ_SHIFT))&DMA_TCD6_CSR_DREQ_MASK)
#define DMA_TCD6_CSR_ESG_MASK                    0x10u
#define DMA_TCD6_CSR_ESG_SHIFT                   4
#define DMA_TCD6_CSR_ESG_WIDTH                   1
#define DMA_TCD6_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_ESG_SHIFT))&DMA_TCD6_CSR_ESG_MASK)
#define DMA_TCD6_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD6_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD6_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD6_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_MAJORELINK_SHIFT))&DMA_TCD6_CSR_MAJORELINK_MASK)
#define DMA_TCD6_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD6_CSR_ACTIVE_SHIFT                6
#define DMA_TCD6_CSR_ACTIVE_WIDTH                1
#define DMA_TCD6_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_ACTIVE_SHIFT))&DMA_TCD6_CSR_ACTIVE_MASK)
#define DMA_TCD6_CSR_DONE_MASK                   0x80u
#define DMA_TCD6_CSR_DONE_SHIFT                  7
#define DMA_TCD6_CSR_DONE_WIDTH                  1
#define DMA_TCD6_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_DONE_SHIFT))&DMA_TCD6_CSR_DONE_MASK)
#define DMA_TCD6_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD6_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD6_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD6_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_MAJORLINKCH_SHIFT))&DMA_TCD6_CSR_MAJORLINKCH_MASK)
#define DMA_TCD6_CSR_BWC_MASK                    0xC000u
#define DMA_TCD6_CSR_BWC_SHIFT                   14
#define DMA_TCD6_CSR_BWC_WIDTH                   2
#define DMA_TCD6_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD6_CSR_BWC_SHIFT))&DMA_TCD6_CSR_BWC_MASK)
/* TCD6_BITER_ELINKNO Bit Fields */
#define DMA_TCD6_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD6_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD6_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD6_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD6_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD6_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD6_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD6_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD6_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD6_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD6_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD6_BITER_ELINKNO_ELINK_MASK)
/* TCD6_BITER_ELINKYES Bit Fields */
#define DMA_TCD6_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD6_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD6_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD6_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD6_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD6_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD6_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD6_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD6_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD6_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD6_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD6_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD6_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD6_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD6_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD6_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD6_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD6_BITER_ELINKYES_ELINK_MASK)
/* TCD7_SADDR Bit Fields */
#define DMA_TCD7_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD7_SADDR_SADDR_SHIFT               0
#define DMA_TCD7_SADDR_SADDR_WIDTH               32
#define DMA_TCD7_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD7_SADDR_SADDR_SHIFT))&DMA_TCD7_SADDR_SADDR_MASK)
/* TCD7_SOFF Bit Fields */
#define DMA_TCD7_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD7_SOFF_SOFF_SHIFT                 0
#define DMA_TCD7_SOFF_SOFF_WIDTH                 16
#define DMA_TCD7_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD7_SOFF_SOFF_SHIFT))&DMA_TCD7_SOFF_SOFF_MASK)
/* TCD7_ATTR Bit Fields */
#define DMA_TCD7_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD7_ATTR_DSIZE_SHIFT                0
#define DMA_TCD7_ATTR_DSIZE_WIDTH                3
#define DMA_TCD7_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD7_ATTR_DSIZE_SHIFT))&DMA_TCD7_ATTR_DSIZE_MASK)
#define DMA_TCD7_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD7_ATTR_DMOD_SHIFT                 3
#define DMA_TCD7_ATTR_DMOD_WIDTH                 5
#define DMA_TCD7_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD7_ATTR_DMOD_SHIFT))&DMA_TCD7_ATTR_DMOD_MASK)
#define DMA_TCD7_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD7_ATTR_SSIZE_SHIFT                8
#define DMA_TCD7_ATTR_SSIZE_WIDTH                3
#define DMA_TCD7_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD7_ATTR_SSIZE_SHIFT))&DMA_TCD7_ATTR_SSIZE_MASK)
#define DMA_TCD7_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD7_ATTR_SMOD_SHIFT                 11
#define DMA_TCD7_ATTR_SMOD_WIDTH                 5
#define DMA_TCD7_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD7_ATTR_SMOD_SHIFT))&DMA_TCD7_ATTR_SMOD_MASK)
/* TCD7_NBYTES_MLNO Bit Fields */
#define DMA_TCD7_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD7_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD7_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD7_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD7_NBYTES_MLNO_NBYTES_MASK)
/* TCD7_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD7_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD7_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD7_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD7_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD7_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD7_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD7_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD7_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD7_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD7_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD7_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD7_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD7_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD7_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD7_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD7_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD7_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD7_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD7_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD7_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD7_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD7_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD7_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD7_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD7_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD7_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD7_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD7_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD7_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD7_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD7_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD7_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD7_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD7_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD7_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD7_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD7_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD7_SLAST Bit Fields */
#define DMA_TCD7_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD7_SLAST_SLAST_SHIFT               0
#define DMA_TCD7_SLAST_SLAST_WIDTH               32
#define DMA_TCD7_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD7_SLAST_SLAST_SHIFT))&DMA_TCD7_SLAST_SLAST_MASK)
/* TCD7_DADDR Bit Fields */
#define DMA_TCD7_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD7_DADDR_DADDR_SHIFT               0
#define DMA_TCD7_DADDR_DADDR_WIDTH               32
#define DMA_TCD7_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD7_DADDR_DADDR_SHIFT))&DMA_TCD7_DADDR_DADDR_MASK)
/* TCD7_DOFF Bit Fields */
#define DMA_TCD7_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD7_DOFF_DOFF_SHIFT                 0
#define DMA_TCD7_DOFF_DOFF_WIDTH                 16
#define DMA_TCD7_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD7_DOFF_DOFF_SHIFT))&DMA_TCD7_DOFF_DOFF_MASK)
/* TCD7_CITER_ELINKNO Bit Fields */
#define DMA_TCD7_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD7_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD7_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD7_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD7_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD7_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD7_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD7_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD7_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD7_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD7_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD7_CITER_ELINKNO_ELINK_MASK)
/* TCD7_CITER_ELINKYES Bit Fields */
#define DMA_TCD7_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD7_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD7_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD7_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD7_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD7_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD7_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD7_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD7_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD7_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD7_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD7_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD7_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD7_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD7_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD7_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD7_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD7_CITER_ELINKYES_ELINK_MASK)
/* TCD7_DLASTSGA Bit Fields */
#define DMA_TCD7_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD7_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD7_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD7_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD7_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD7_DLASTSGA_DLASTSGA_MASK)
/* TCD7_CSR Bit Fields */
#define DMA_TCD7_CSR_START_MASK                  0x1u
#define DMA_TCD7_CSR_START_SHIFT                 0
#define DMA_TCD7_CSR_START_WIDTH                 1
#define DMA_TCD7_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_START_SHIFT))&DMA_TCD7_CSR_START_MASK)
#define DMA_TCD7_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD7_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD7_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD7_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_INTMAJOR_SHIFT))&DMA_TCD7_CSR_INTMAJOR_MASK)
#define DMA_TCD7_CSR_INTHALF_MASK                0x4u
#define DMA_TCD7_CSR_INTHALF_SHIFT               2
#define DMA_TCD7_CSR_INTHALF_WIDTH               1
#define DMA_TCD7_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_INTHALF_SHIFT))&DMA_TCD7_CSR_INTHALF_MASK)
#define DMA_TCD7_CSR_DREQ_MASK                   0x8u
#define DMA_TCD7_CSR_DREQ_SHIFT                  3
#define DMA_TCD7_CSR_DREQ_WIDTH                  1
#define DMA_TCD7_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_DREQ_SHIFT))&DMA_TCD7_CSR_DREQ_MASK)
#define DMA_TCD7_CSR_ESG_MASK                    0x10u
#define DMA_TCD7_CSR_ESG_SHIFT                   4
#define DMA_TCD7_CSR_ESG_WIDTH                   1
#define DMA_TCD7_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_ESG_SHIFT))&DMA_TCD7_CSR_ESG_MASK)
#define DMA_TCD7_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD7_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD7_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD7_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_MAJORELINK_SHIFT))&DMA_TCD7_CSR_MAJORELINK_MASK)
#define DMA_TCD7_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD7_CSR_ACTIVE_SHIFT                6
#define DMA_TCD7_CSR_ACTIVE_WIDTH                1
#define DMA_TCD7_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_ACTIVE_SHIFT))&DMA_TCD7_CSR_ACTIVE_MASK)
#define DMA_TCD7_CSR_DONE_MASK                   0x80u
#define DMA_TCD7_CSR_DONE_SHIFT                  7
#define DMA_TCD7_CSR_DONE_WIDTH                  1
#define DMA_TCD7_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_DONE_SHIFT))&DMA_TCD7_CSR_DONE_MASK)
#define DMA_TCD7_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD7_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD7_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD7_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_MAJORLINKCH_SHIFT))&DMA_TCD7_CSR_MAJORLINKCH_MASK)
#define DMA_TCD7_CSR_BWC_MASK                    0xC000u
#define DMA_TCD7_CSR_BWC_SHIFT                   14
#define DMA_TCD7_CSR_BWC_WIDTH                   2
#define DMA_TCD7_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD7_CSR_BWC_SHIFT))&DMA_TCD7_CSR_BWC_MASK)
/* TCD7_BITER_ELINKNO Bit Fields */
#define DMA_TCD7_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD7_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD7_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD7_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD7_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD7_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD7_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD7_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD7_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD7_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD7_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD7_BITER_ELINKNO_ELINK_MASK)
/* TCD7_BITER_ELINKYES Bit Fields */
#define DMA_TCD7_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD7_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD7_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD7_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD7_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD7_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD7_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD7_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD7_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD7_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD7_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD7_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD7_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD7_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD7_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD7_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD7_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD7_BITER_ELINKYES_ELINK_MASK)
/* TCD8_SADDR Bit Fields */
#define DMA_TCD8_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD8_SADDR_SADDR_SHIFT               0
#define DMA_TCD8_SADDR_SADDR_WIDTH               32
#define DMA_TCD8_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD8_SADDR_SADDR_SHIFT))&DMA_TCD8_SADDR_SADDR_MASK)
/* TCD8_SOFF Bit Fields */
#define DMA_TCD8_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD8_SOFF_SOFF_SHIFT                 0
#define DMA_TCD8_SOFF_SOFF_WIDTH                 16
#define DMA_TCD8_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD8_SOFF_SOFF_SHIFT))&DMA_TCD8_SOFF_SOFF_MASK)
/* TCD8_ATTR Bit Fields */
#define DMA_TCD8_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD8_ATTR_DSIZE_SHIFT                0
#define DMA_TCD8_ATTR_DSIZE_WIDTH                3
#define DMA_TCD8_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD8_ATTR_DSIZE_SHIFT))&DMA_TCD8_ATTR_DSIZE_MASK)
#define DMA_TCD8_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD8_ATTR_DMOD_SHIFT                 3
#define DMA_TCD8_ATTR_DMOD_WIDTH                 5
#define DMA_TCD8_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD8_ATTR_DMOD_SHIFT))&DMA_TCD8_ATTR_DMOD_MASK)
#define DMA_TCD8_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD8_ATTR_SSIZE_SHIFT                8
#define DMA_TCD8_ATTR_SSIZE_WIDTH                3
#define DMA_TCD8_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD8_ATTR_SSIZE_SHIFT))&DMA_TCD8_ATTR_SSIZE_MASK)
#define DMA_TCD8_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD8_ATTR_SMOD_SHIFT                 11
#define DMA_TCD8_ATTR_SMOD_WIDTH                 5
#define DMA_TCD8_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD8_ATTR_SMOD_SHIFT))&DMA_TCD8_ATTR_SMOD_MASK)
/* TCD8_NBYTES_MLNO Bit Fields */
#define DMA_TCD8_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD8_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD8_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD8_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD8_NBYTES_MLNO_NBYTES_MASK)
/* TCD8_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD8_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD8_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD8_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD8_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD8_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD8_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD8_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD8_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD8_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD8_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD8_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD8_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD8_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD8_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD8_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD8_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD8_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD8_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD8_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD8_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD8_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD8_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD8_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD8_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD8_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD8_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD8_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD8_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD8_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD8_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD8_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD8_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD8_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD8_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD8_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD8_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD8_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD8_SLAST Bit Fields */
#define DMA_TCD8_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD8_SLAST_SLAST_SHIFT               0
#define DMA_TCD8_SLAST_SLAST_WIDTH               32
#define DMA_TCD8_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD8_SLAST_SLAST_SHIFT))&DMA_TCD8_SLAST_SLAST_MASK)
/* TCD8_DADDR Bit Fields */
#define DMA_TCD8_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD8_DADDR_DADDR_SHIFT               0
#define DMA_TCD8_DADDR_DADDR_WIDTH               32
#define DMA_TCD8_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD8_DADDR_DADDR_SHIFT))&DMA_TCD8_DADDR_DADDR_MASK)
/* TCD8_DOFF Bit Fields */
#define DMA_TCD8_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD8_DOFF_DOFF_SHIFT                 0
#define DMA_TCD8_DOFF_DOFF_WIDTH                 16
#define DMA_TCD8_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD8_DOFF_DOFF_SHIFT))&DMA_TCD8_DOFF_DOFF_MASK)
/* TCD8_CITER_ELINKNO Bit Fields */
#define DMA_TCD8_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD8_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD8_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD8_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD8_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD8_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD8_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD8_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD8_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD8_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD8_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD8_CITER_ELINKNO_ELINK_MASK)
/* TCD8_CITER_ELINKYES Bit Fields */
#define DMA_TCD8_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD8_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD8_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD8_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD8_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD8_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD8_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD8_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD8_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD8_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD8_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD8_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD8_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD8_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD8_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD8_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD8_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD8_CITER_ELINKYES_ELINK_MASK)
/* TCD8_DLASTSGA Bit Fields */
#define DMA_TCD8_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD8_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD8_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD8_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD8_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD8_DLASTSGA_DLASTSGA_MASK)
/* TCD8_CSR Bit Fields */
#define DMA_TCD8_CSR_START_MASK                  0x1u
#define DMA_TCD8_CSR_START_SHIFT                 0
#define DMA_TCD8_CSR_START_WIDTH                 1
#define DMA_TCD8_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_START_SHIFT))&DMA_TCD8_CSR_START_MASK)
#define DMA_TCD8_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD8_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD8_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD8_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_INTMAJOR_SHIFT))&DMA_TCD8_CSR_INTMAJOR_MASK)
#define DMA_TCD8_CSR_INTHALF_MASK                0x4u
#define DMA_TCD8_CSR_INTHALF_SHIFT               2
#define DMA_TCD8_CSR_INTHALF_WIDTH               1
#define DMA_TCD8_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_INTHALF_SHIFT))&DMA_TCD8_CSR_INTHALF_MASK)
#define DMA_TCD8_CSR_DREQ_MASK                   0x8u
#define DMA_TCD8_CSR_DREQ_SHIFT                  3
#define DMA_TCD8_CSR_DREQ_WIDTH                  1
#define DMA_TCD8_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_DREQ_SHIFT))&DMA_TCD8_CSR_DREQ_MASK)
#define DMA_TCD8_CSR_ESG_MASK                    0x10u
#define DMA_TCD8_CSR_ESG_SHIFT                   4
#define DMA_TCD8_CSR_ESG_WIDTH                   1
#define DMA_TCD8_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_ESG_SHIFT))&DMA_TCD8_CSR_ESG_MASK)
#define DMA_TCD8_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD8_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD8_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD8_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_MAJORELINK_SHIFT))&DMA_TCD8_CSR_MAJORELINK_MASK)
#define DMA_TCD8_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD8_CSR_ACTIVE_SHIFT                6
#define DMA_TCD8_CSR_ACTIVE_WIDTH                1
#define DMA_TCD8_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_ACTIVE_SHIFT))&DMA_TCD8_CSR_ACTIVE_MASK)
#define DMA_TCD8_CSR_DONE_MASK                   0x80u
#define DMA_TCD8_CSR_DONE_SHIFT                  7
#define DMA_TCD8_CSR_DONE_WIDTH                  1
#define DMA_TCD8_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_DONE_SHIFT))&DMA_TCD8_CSR_DONE_MASK)
#define DMA_TCD8_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD8_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD8_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD8_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_MAJORLINKCH_SHIFT))&DMA_TCD8_CSR_MAJORLINKCH_MASK)
#define DMA_TCD8_CSR_BWC_MASK                    0xC000u
#define DMA_TCD8_CSR_BWC_SHIFT                   14
#define DMA_TCD8_CSR_BWC_WIDTH                   2
#define DMA_TCD8_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD8_CSR_BWC_SHIFT))&DMA_TCD8_CSR_BWC_MASK)
/* TCD8_BITER_ELINKNO Bit Fields */
#define DMA_TCD8_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD8_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD8_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD8_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD8_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD8_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD8_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD8_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD8_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD8_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD8_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD8_BITER_ELINKNO_ELINK_MASK)
/* TCD8_BITER_ELINKYES Bit Fields */
#define DMA_TCD8_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD8_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD8_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD8_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD8_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD8_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD8_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD8_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD8_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD8_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD8_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD8_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD8_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD8_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD8_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD8_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD8_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD8_BITER_ELINKYES_ELINK_MASK)
/* TCD9_SADDR Bit Fields */
#define DMA_TCD9_SADDR_SADDR_MASK                0xFFFFFFFFu
#define DMA_TCD9_SADDR_SADDR_SHIFT               0
#define DMA_TCD9_SADDR_SADDR_WIDTH               32
#define DMA_TCD9_SADDR_SADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD9_SADDR_SADDR_SHIFT))&DMA_TCD9_SADDR_SADDR_MASK)
/* TCD9_SOFF Bit Fields */
#define DMA_TCD9_SOFF_SOFF_MASK                  0xFFFFu
#define DMA_TCD9_SOFF_SOFF_SHIFT                 0
#define DMA_TCD9_SOFF_SOFF_WIDTH                 16
#define DMA_TCD9_SOFF_SOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD9_SOFF_SOFF_SHIFT))&DMA_TCD9_SOFF_SOFF_MASK)
/* TCD9_ATTR Bit Fields */
#define DMA_TCD9_ATTR_DSIZE_MASK                 0x7u
#define DMA_TCD9_ATTR_DSIZE_SHIFT                0
#define DMA_TCD9_ATTR_DSIZE_WIDTH                3
#define DMA_TCD9_ATTR_DSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD9_ATTR_DSIZE_SHIFT))&DMA_TCD9_ATTR_DSIZE_MASK)
#define DMA_TCD9_ATTR_DMOD_MASK                  0xF8u
#define DMA_TCD9_ATTR_DMOD_SHIFT                 3
#define DMA_TCD9_ATTR_DMOD_WIDTH                 5
#define DMA_TCD9_ATTR_DMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD9_ATTR_DMOD_SHIFT))&DMA_TCD9_ATTR_DMOD_MASK)
#define DMA_TCD9_ATTR_SSIZE_MASK                 0x700u
#define DMA_TCD9_ATTR_SSIZE_SHIFT                8
#define DMA_TCD9_ATTR_SSIZE_WIDTH                3
#define DMA_TCD9_ATTR_SSIZE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD9_ATTR_SSIZE_SHIFT))&DMA_TCD9_ATTR_SSIZE_MASK)
#define DMA_TCD9_ATTR_SMOD_MASK                  0xF800u
#define DMA_TCD9_ATTR_SMOD_SHIFT                 11
#define DMA_TCD9_ATTR_SMOD_WIDTH                 5
#define DMA_TCD9_ATTR_SMOD(x)                    (((uint16)(((uint16)(x))<<DMA_TCD9_ATTR_SMOD_SHIFT))&DMA_TCD9_ATTR_SMOD_MASK)
/* TCD9_NBYTES_MLNO Bit Fields */
#define DMA_TCD9_NBYTES_MLNO_NBYTES_MASK         0xFFFFFFFFu
#define DMA_TCD9_NBYTES_MLNO_NBYTES_SHIFT        0
#define DMA_TCD9_NBYTES_MLNO_NBYTES_WIDTH        32
#define DMA_TCD9_NBYTES_MLNO_NBYTES(x)           (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD9_NBYTES_MLNO_NBYTES_MASK)
/* TCD9_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD9_NBYTES_MLOFFNO_NBYTES_MASK      0x3FFFFFFFu
#define DMA_TCD9_NBYTES_MLOFFNO_NBYTES_SHIFT     0
#define DMA_TCD9_NBYTES_MLOFFNO_NBYTES_WIDTH     30
#define DMA_TCD9_NBYTES_MLOFFNO_NBYTES(x)        (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD9_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD9_NBYTES_MLOFFNO_DMLOE_MASK       0x40000000u
#define DMA_TCD9_NBYTES_MLOFFNO_DMLOE_SHIFT      30
#define DMA_TCD9_NBYTES_MLOFFNO_DMLOE_WIDTH      1
#define DMA_TCD9_NBYTES_MLOFFNO_DMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD9_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD9_NBYTES_MLOFFNO_SMLOE_MASK       0x80000000u
#define DMA_TCD9_NBYTES_MLOFFNO_SMLOE_SHIFT      31
#define DMA_TCD9_NBYTES_MLOFFNO_SMLOE_WIDTH      1
#define DMA_TCD9_NBYTES_MLOFFNO_SMLOE(x)         (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD9_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD9_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD9_NBYTES_MLOFFYES_NBYTES_MASK     0x3FFu
#define DMA_TCD9_NBYTES_MLOFFYES_NBYTES_SHIFT    0
#define DMA_TCD9_NBYTES_MLOFFYES_NBYTES_WIDTH    10
#define DMA_TCD9_NBYTES_MLOFFYES_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD9_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD9_NBYTES_MLOFFYES_MLOFF_MASK      0x3FFFFC00u
#define DMA_TCD9_NBYTES_MLOFFYES_MLOFF_SHIFT     10
#define DMA_TCD9_NBYTES_MLOFFYES_MLOFF_WIDTH     20
#define DMA_TCD9_NBYTES_MLOFFYES_MLOFF(x)        (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD9_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD9_NBYTES_MLOFFYES_DMLOE_MASK      0x40000000u
#define DMA_TCD9_NBYTES_MLOFFYES_DMLOE_SHIFT     30
#define DMA_TCD9_NBYTES_MLOFFYES_DMLOE_WIDTH     1
#define DMA_TCD9_NBYTES_MLOFFYES_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD9_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD9_NBYTES_MLOFFYES_SMLOE_MASK      0x80000000u
#define DMA_TCD9_NBYTES_MLOFFYES_SMLOE_SHIFT     31
#define DMA_TCD9_NBYTES_MLOFFYES_SMLOE_WIDTH     1
#define DMA_TCD9_NBYTES_MLOFFYES_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD9_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD9_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD9_SLAST Bit Fields */
#define DMA_TCD9_SLAST_SLAST_MASK                0xFFFFFFFFu
#define DMA_TCD9_SLAST_SLAST_SHIFT               0
#define DMA_TCD9_SLAST_SLAST_WIDTH               32
#define DMA_TCD9_SLAST_SLAST(x)                  (((uint32)(((uint32)(x))<<DMA_TCD9_SLAST_SLAST_SHIFT))&DMA_TCD9_SLAST_SLAST_MASK)
/* TCD9_DADDR Bit Fields */
#define DMA_TCD9_DADDR_DADDR_MASK                0xFFFFFFFFu
#define DMA_TCD9_DADDR_DADDR_SHIFT               0
#define DMA_TCD9_DADDR_DADDR_WIDTH               32
#define DMA_TCD9_DADDR_DADDR(x)                  (((uint32)(((uint32)(x))<<DMA_TCD9_DADDR_DADDR_SHIFT))&DMA_TCD9_DADDR_DADDR_MASK)
/* TCD9_DOFF Bit Fields */
#define DMA_TCD9_DOFF_DOFF_MASK                  0xFFFFu
#define DMA_TCD9_DOFF_DOFF_SHIFT                 0
#define DMA_TCD9_DOFF_DOFF_WIDTH                 16
#define DMA_TCD9_DOFF_DOFF(x)                    (((uint16)(((uint16)(x))<<DMA_TCD9_DOFF_DOFF_SHIFT))&DMA_TCD9_DOFF_DOFF_MASK)
/* TCD9_CITER_ELINKNO Bit Fields */
#define DMA_TCD9_CITER_ELINKNO_CITER_MASK        0x7FFFu
#define DMA_TCD9_CITER_ELINKNO_CITER_SHIFT       0
#define DMA_TCD9_CITER_ELINKNO_CITER_WIDTH       15
#define DMA_TCD9_CITER_ELINKNO_CITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD9_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD9_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD9_CITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD9_CITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD9_CITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD9_CITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD9_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD9_CITER_ELINKNO_ELINK_MASK)
/* TCD9_CITER_ELINKYES Bit Fields */
#define DMA_TCD9_CITER_ELINKYES_CITER_MASK       0x1FFu
#define DMA_TCD9_CITER_ELINKYES_CITER_SHIFT      0
#define DMA_TCD9_CITER_ELINKYES_CITER_WIDTH      9
#define DMA_TCD9_CITER_ELINKYES_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD9_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD9_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD9_CITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD9_CITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD9_CITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD9_CITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD9_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD9_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD9_CITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD9_CITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD9_CITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD9_CITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD9_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD9_CITER_ELINKYES_ELINK_MASK)
/* TCD9_DLASTSGA Bit Fields */
#define DMA_TCD9_DLASTSGA_DLASTSGA_MASK          0xFFFFFFFFu
#define DMA_TCD9_DLASTSGA_DLASTSGA_SHIFT         0
#define DMA_TCD9_DLASTSGA_DLASTSGA_WIDTH         32
#define DMA_TCD9_DLASTSGA_DLASTSGA(x)            (((uint32)(((uint32)(x))<<DMA_TCD9_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD9_DLASTSGA_DLASTSGA_MASK)
/* TCD9_CSR Bit Fields */
#define DMA_TCD9_CSR_START_MASK                  0x1u
#define DMA_TCD9_CSR_START_SHIFT                 0
#define DMA_TCD9_CSR_START_WIDTH                 1
#define DMA_TCD9_CSR_START(x)                    (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_START_SHIFT))&DMA_TCD9_CSR_START_MASK)
#define DMA_TCD9_CSR_INTMAJOR_MASK               0x2u
#define DMA_TCD9_CSR_INTMAJOR_SHIFT              1
#define DMA_TCD9_CSR_INTMAJOR_WIDTH              1
#define DMA_TCD9_CSR_INTMAJOR(x)                 (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_INTMAJOR_SHIFT))&DMA_TCD9_CSR_INTMAJOR_MASK)
#define DMA_TCD9_CSR_INTHALF_MASK                0x4u
#define DMA_TCD9_CSR_INTHALF_SHIFT               2
#define DMA_TCD9_CSR_INTHALF_WIDTH               1
#define DMA_TCD9_CSR_INTHALF(x)                  (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_INTHALF_SHIFT))&DMA_TCD9_CSR_INTHALF_MASK)
#define DMA_TCD9_CSR_DREQ_MASK                   0x8u
#define DMA_TCD9_CSR_DREQ_SHIFT                  3
#define DMA_TCD9_CSR_DREQ_WIDTH                  1
#define DMA_TCD9_CSR_DREQ(x)                     (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_DREQ_SHIFT))&DMA_TCD9_CSR_DREQ_MASK)
#define DMA_TCD9_CSR_ESG_MASK                    0x10u
#define DMA_TCD9_CSR_ESG_SHIFT                   4
#define DMA_TCD9_CSR_ESG_WIDTH                   1
#define DMA_TCD9_CSR_ESG(x)                      (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_ESG_SHIFT))&DMA_TCD9_CSR_ESG_MASK)
#define DMA_TCD9_CSR_MAJORELINK_MASK             0x20u
#define DMA_TCD9_CSR_MAJORELINK_SHIFT            5
#define DMA_TCD9_CSR_MAJORELINK_WIDTH            1
#define DMA_TCD9_CSR_MAJORELINK(x)               (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_MAJORELINK_SHIFT))&DMA_TCD9_CSR_MAJORELINK_MASK)
#define DMA_TCD9_CSR_ACTIVE_MASK                 0x40u
#define DMA_TCD9_CSR_ACTIVE_SHIFT                6
#define DMA_TCD9_CSR_ACTIVE_WIDTH                1
#define DMA_TCD9_CSR_ACTIVE(x)                   (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_ACTIVE_SHIFT))&DMA_TCD9_CSR_ACTIVE_MASK)
#define DMA_TCD9_CSR_DONE_MASK                   0x80u
#define DMA_TCD9_CSR_DONE_SHIFT                  7
#define DMA_TCD9_CSR_DONE_WIDTH                  1
#define DMA_TCD9_CSR_DONE(x)                     (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_DONE_SHIFT))&DMA_TCD9_CSR_DONE_MASK)
#define DMA_TCD9_CSR_MAJORLINKCH_MASK            0xF00u
#define DMA_TCD9_CSR_MAJORLINKCH_SHIFT           8
#define DMA_TCD9_CSR_MAJORLINKCH_WIDTH           4
#define DMA_TCD9_CSR_MAJORLINKCH(x)              (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_MAJORLINKCH_SHIFT))&DMA_TCD9_CSR_MAJORLINKCH_MASK)
#define DMA_TCD9_CSR_BWC_MASK                    0xC000u
#define DMA_TCD9_CSR_BWC_SHIFT                   14
#define DMA_TCD9_CSR_BWC_WIDTH                   2
#define DMA_TCD9_CSR_BWC(x)                      (((uint16)(((uint16)(x))<<DMA_TCD9_CSR_BWC_SHIFT))&DMA_TCD9_CSR_BWC_MASK)
/* TCD9_BITER_ELINKNO Bit Fields */
#define DMA_TCD9_BITER_ELINKNO_BITER_MASK        0x7FFFu
#define DMA_TCD9_BITER_ELINKNO_BITER_SHIFT       0
#define DMA_TCD9_BITER_ELINKNO_BITER_WIDTH       15
#define DMA_TCD9_BITER_ELINKNO_BITER(x)          (((uint16)(((uint16)(x))<<DMA_TCD9_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD9_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD9_BITER_ELINKNO_ELINK_MASK        0x8000u
#define DMA_TCD9_BITER_ELINKNO_ELINK_SHIFT       15
#define DMA_TCD9_BITER_ELINKNO_ELINK_WIDTH       1
#define DMA_TCD9_BITER_ELINKNO_ELINK(x)          (((uint16)(((uint16)(x))<<DMA_TCD9_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD9_BITER_ELINKNO_ELINK_MASK)
/* TCD9_BITER_ELINKYES Bit Fields */
#define DMA_TCD9_BITER_ELINKYES_BITER_MASK       0x1FFu
#define DMA_TCD9_BITER_ELINKYES_BITER_SHIFT      0
#define DMA_TCD9_BITER_ELINKYES_BITER_WIDTH      9
#define DMA_TCD9_BITER_ELINKYES_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD9_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD9_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD9_BITER_ELINKYES_LINKCH_MASK      0x1E00u
#define DMA_TCD9_BITER_ELINKYES_LINKCH_SHIFT     9
#define DMA_TCD9_BITER_ELINKYES_LINKCH_WIDTH     4
#define DMA_TCD9_BITER_ELINKYES_LINKCH(x)        (((uint16)(((uint16)(x))<<DMA_TCD9_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD9_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD9_BITER_ELINKYES_ELINK_MASK       0x8000u
#define DMA_TCD9_BITER_ELINKYES_ELINK_SHIFT      15
#define DMA_TCD9_BITER_ELINKYES_ELINK_WIDTH      1
#define DMA_TCD9_BITER_ELINKYES_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD9_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD9_BITER_ELINKYES_ELINK_MASK)
/* TCD10_SADDR Bit Fields */
#define DMA_TCD10_SADDR_SADDR_MASK               0xFFFFFFFFu
#define DMA_TCD10_SADDR_SADDR_SHIFT              0
#define DMA_TCD10_SADDR_SADDR_WIDTH              32
#define DMA_TCD10_SADDR_SADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD10_SADDR_SADDR_SHIFT))&DMA_TCD10_SADDR_SADDR_MASK)
/* TCD10_SOFF Bit Fields */
#define DMA_TCD10_SOFF_SOFF_MASK                 0xFFFFu
#define DMA_TCD10_SOFF_SOFF_SHIFT                0
#define DMA_TCD10_SOFF_SOFF_WIDTH                16
#define DMA_TCD10_SOFF_SOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD10_SOFF_SOFF_SHIFT))&DMA_TCD10_SOFF_SOFF_MASK)
/* TCD10_ATTR Bit Fields */
#define DMA_TCD10_ATTR_DSIZE_MASK                0x7u
#define DMA_TCD10_ATTR_DSIZE_SHIFT               0
#define DMA_TCD10_ATTR_DSIZE_WIDTH               3
#define DMA_TCD10_ATTR_DSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD10_ATTR_DSIZE_SHIFT))&DMA_TCD10_ATTR_DSIZE_MASK)
#define DMA_TCD10_ATTR_DMOD_MASK                 0xF8u
#define DMA_TCD10_ATTR_DMOD_SHIFT                3
#define DMA_TCD10_ATTR_DMOD_WIDTH                5
#define DMA_TCD10_ATTR_DMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD10_ATTR_DMOD_SHIFT))&DMA_TCD10_ATTR_DMOD_MASK)
#define DMA_TCD10_ATTR_SSIZE_MASK                0x700u
#define DMA_TCD10_ATTR_SSIZE_SHIFT               8
#define DMA_TCD10_ATTR_SSIZE_WIDTH               3
#define DMA_TCD10_ATTR_SSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD10_ATTR_SSIZE_SHIFT))&DMA_TCD10_ATTR_SSIZE_MASK)
#define DMA_TCD10_ATTR_SMOD_MASK                 0xF800u
#define DMA_TCD10_ATTR_SMOD_SHIFT                11
#define DMA_TCD10_ATTR_SMOD_WIDTH                5
#define DMA_TCD10_ATTR_SMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD10_ATTR_SMOD_SHIFT))&DMA_TCD10_ATTR_SMOD_MASK)
/* TCD10_NBYTES_MLNO Bit Fields */
#define DMA_TCD10_NBYTES_MLNO_NBYTES_MASK        0xFFFFFFFFu
#define DMA_TCD10_NBYTES_MLNO_NBYTES_SHIFT       0
#define DMA_TCD10_NBYTES_MLNO_NBYTES_WIDTH       32
#define DMA_TCD10_NBYTES_MLNO_NBYTES(x)          (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD10_NBYTES_MLNO_NBYTES_MASK)
/* TCD10_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD10_NBYTES_MLOFFNO_NBYTES_MASK     0x3FFFFFFFu
#define DMA_TCD10_NBYTES_MLOFFNO_NBYTES_SHIFT    0
#define DMA_TCD10_NBYTES_MLOFFNO_NBYTES_WIDTH    30
#define DMA_TCD10_NBYTES_MLOFFNO_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD10_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD10_NBYTES_MLOFFNO_DMLOE_MASK      0x40000000u
#define DMA_TCD10_NBYTES_MLOFFNO_DMLOE_SHIFT     30
#define DMA_TCD10_NBYTES_MLOFFNO_DMLOE_WIDTH     1
#define DMA_TCD10_NBYTES_MLOFFNO_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD10_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD10_NBYTES_MLOFFNO_SMLOE_MASK      0x80000000u
#define DMA_TCD10_NBYTES_MLOFFNO_SMLOE_SHIFT     31
#define DMA_TCD10_NBYTES_MLOFFNO_SMLOE_WIDTH     1
#define DMA_TCD10_NBYTES_MLOFFNO_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD10_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD10_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD10_NBYTES_MLOFFYES_NBYTES_MASK    0x3FFu
#define DMA_TCD10_NBYTES_MLOFFYES_NBYTES_SHIFT   0
#define DMA_TCD10_NBYTES_MLOFFYES_NBYTES_WIDTH   10
#define DMA_TCD10_NBYTES_MLOFFYES_NBYTES(x)      (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD10_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD10_NBYTES_MLOFFYES_MLOFF_MASK     0x3FFFFC00u
#define DMA_TCD10_NBYTES_MLOFFYES_MLOFF_SHIFT    10
#define DMA_TCD10_NBYTES_MLOFFYES_MLOFF_WIDTH    20
#define DMA_TCD10_NBYTES_MLOFFYES_MLOFF(x)       (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD10_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD10_NBYTES_MLOFFYES_DMLOE_MASK     0x40000000u
#define DMA_TCD10_NBYTES_MLOFFYES_DMLOE_SHIFT    30
#define DMA_TCD10_NBYTES_MLOFFYES_DMLOE_WIDTH    1
#define DMA_TCD10_NBYTES_MLOFFYES_DMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD10_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD10_NBYTES_MLOFFYES_SMLOE_MASK     0x80000000u
#define DMA_TCD10_NBYTES_MLOFFYES_SMLOE_SHIFT    31
#define DMA_TCD10_NBYTES_MLOFFYES_SMLOE_WIDTH    1
#define DMA_TCD10_NBYTES_MLOFFYES_SMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD10_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD10_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD10_SLAST Bit Fields */
#define DMA_TCD10_SLAST_SLAST_MASK               0xFFFFFFFFu
#define DMA_TCD10_SLAST_SLAST_SHIFT              0
#define DMA_TCD10_SLAST_SLAST_WIDTH              32
#define DMA_TCD10_SLAST_SLAST(x)                 (((uint32)(((uint32)(x))<<DMA_TCD10_SLAST_SLAST_SHIFT))&DMA_TCD10_SLAST_SLAST_MASK)
/* TCD10_DADDR Bit Fields */
#define DMA_TCD10_DADDR_DADDR_MASK               0xFFFFFFFFu
#define DMA_TCD10_DADDR_DADDR_SHIFT              0
#define DMA_TCD10_DADDR_DADDR_WIDTH              32
#define DMA_TCD10_DADDR_DADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD10_DADDR_DADDR_SHIFT))&DMA_TCD10_DADDR_DADDR_MASK)
/* TCD10_DOFF Bit Fields */
#define DMA_TCD10_DOFF_DOFF_MASK                 0xFFFFu
#define DMA_TCD10_DOFF_DOFF_SHIFT                0
#define DMA_TCD10_DOFF_DOFF_WIDTH                16
#define DMA_TCD10_DOFF_DOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD10_DOFF_DOFF_SHIFT))&DMA_TCD10_DOFF_DOFF_MASK)
/* TCD10_CITER_ELINKNO Bit Fields */
#define DMA_TCD10_CITER_ELINKNO_CITER_MASK       0x7FFFu
#define DMA_TCD10_CITER_ELINKNO_CITER_SHIFT      0
#define DMA_TCD10_CITER_ELINKNO_CITER_WIDTH      15
#define DMA_TCD10_CITER_ELINKNO_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD10_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD10_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD10_CITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD10_CITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD10_CITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD10_CITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD10_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD10_CITER_ELINKNO_ELINK_MASK)
/* TCD10_CITER_ELINKYES Bit Fields */
#define DMA_TCD10_CITER_ELINKYES_CITER_MASK      0x1FFu
#define DMA_TCD10_CITER_ELINKYES_CITER_SHIFT     0
#define DMA_TCD10_CITER_ELINKYES_CITER_WIDTH     9
#define DMA_TCD10_CITER_ELINKYES_CITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD10_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD10_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD10_CITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD10_CITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD10_CITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD10_CITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD10_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD10_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD10_CITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD10_CITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD10_CITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD10_CITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD10_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD10_CITER_ELINKYES_ELINK_MASK)
/* TCD10_DLASTSGA Bit Fields */
#define DMA_TCD10_DLASTSGA_DLASTSGA_MASK         0xFFFFFFFFu
#define DMA_TCD10_DLASTSGA_DLASTSGA_SHIFT        0
#define DMA_TCD10_DLASTSGA_DLASTSGA_WIDTH        32
#define DMA_TCD10_DLASTSGA_DLASTSGA(x)           (((uint32)(((uint32)(x))<<DMA_TCD10_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD10_DLASTSGA_DLASTSGA_MASK)
/* TCD10_CSR Bit Fields */
#define DMA_TCD10_CSR_START_MASK                 0x1u
#define DMA_TCD10_CSR_START_SHIFT                0
#define DMA_TCD10_CSR_START_WIDTH                1
#define DMA_TCD10_CSR_START(x)                   (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_START_SHIFT))&DMA_TCD10_CSR_START_MASK)
#define DMA_TCD10_CSR_INTMAJOR_MASK              0x2u
#define DMA_TCD10_CSR_INTMAJOR_SHIFT             1
#define DMA_TCD10_CSR_INTMAJOR_WIDTH             1
#define DMA_TCD10_CSR_INTMAJOR(x)                (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_INTMAJOR_SHIFT))&DMA_TCD10_CSR_INTMAJOR_MASK)
#define DMA_TCD10_CSR_INTHALF_MASK               0x4u
#define DMA_TCD10_CSR_INTHALF_SHIFT              2
#define DMA_TCD10_CSR_INTHALF_WIDTH              1
#define DMA_TCD10_CSR_INTHALF(x)                 (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_INTHALF_SHIFT))&DMA_TCD10_CSR_INTHALF_MASK)
#define DMA_TCD10_CSR_DREQ_MASK                  0x8u
#define DMA_TCD10_CSR_DREQ_SHIFT                 3
#define DMA_TCD10_CSR_DREQ_WIDTH                 1
#define DMA_TCD10_CSR_DREQ(x)                    (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_DREQ_SHIFT))&DMA_TCD10_CSR_DREQ_MASK)
#define DMA_TCD10_CSR_ESG_MASK                   0x10u
#define DMA_TCD10_CSR_ESG_SHIFT                  4
#define DMA_TCD10_CSR_ESG_WIDTH                  1
#define DMA_TCD10_CSR_ESG(x)                     (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_ESG_SHIFT))&DMA_TCD10_CSR_ESG_MASK)
#define DMA_TCD10_CSR_MAJORELINK_MASK            0x20u
#define DMA_TCD10_CSR_MAJORELINK_SHIFT           5
#define DMA_TCD10_CSR_MAJORELINK_WIDTH           1
#define DMA_TCD10_CSR_MAJORELINK(x)              (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_MAJORELINK_SHIFT))&DMA_TCD10_CSR_MAJORELINK_MASK)
#define DMA_TCD10_CSR_ACTIVE_MASK                0x40u
#define DMA_TCD10_CSR_ACTIVE_SHIFT               6
#define DMA_TCD10_CSR_ACTIVE_WIDTH               1
#define DMA_TCD10_CSR_ACTIVE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_ACTIVE_SHIFT))&DMA_TCD10_CSR_ACTIVE_MASK)
#define DMA_TCD10_CSR_DONE_MASK                  0x80u
#define DMA_TCD10_CSR_DONE_SHIFT                 7
#define DMA_TCD10_CSR_DONE_WIDTH                 1
#define DMA_TCD10_CSR_DONE(x)                    (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_DONE_SHIFT))&DMA_TCD10_CSR_DONE_MASK)
#define DMA_TCD10_CSR_MAJORLINKCH_MASK           0xF00u
#define DMA_TCD10_CSR_MAJORLINKCH_SHIFT          8
#define DMA_TCD10_CSR_MAJORLINKCH_WIDTH          4
#define DMA_TCD10_CSR_MAJORLINKCH(x)             (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_MAJORLINKCH_SHIFT))&DMA_TCD10_CSR_MAJORLINKCH_MASK)
#define DMA_TCD10_CSR_BWC_MASK                   0xC000u
#define DMA_TCD10_CSR_BWC_SHIFT                  14
#define DMA_TCD10_CSR_BWC_WIDTH                  2
#define DMA_TCD10_CSR_BWC(x)                     (((uint16)(((uint16)(x))<<DMA_TCD10_CSR_BWC_SHIFT))&DMA_TCD10_CSR_BWC_MASK)
/* TCD10_BITER_ELINKNO Bit Fields */
#define DMA_TCD10_BITER_ELINKNO_BITER_MASK       0x7FFFu
#define DMA_TCD10_BITER_ELINKNO_BITER_SHIFT      0
#define DMA_TCD10_BITER_ELINKNO_BITER_WIDTH      15
#define DMA_TCD10_BITER_ELINKNO_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD10_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD10_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD10_BITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD10_BITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD10_BITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD10_BITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD10_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD10_BITER_ELINKNO_ELINK_MASK)
/* TCD10_BITER_ELINKYES Bit Fields */
#define DMA_TCD10_BITER_ELINKYES_BITER_MASK      0x1FFu
#define DMA_TCD10_BITER_ELINKYES_BITER_SHIFT     0
#define DMA_TCD10_BITER_ELINKYES_BITER_WIDTH     9
#define DMA_TCD10_BITER_ELINKYES_BITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD10_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD10_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD10_BITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD10_BITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD10_BITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD10_BITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD10_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD10_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD10_BITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD10_BITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD10_BITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD10_BITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD10_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD10_BITER_ELINKYES_ELINK_MASK)
/* TCD11_SADDR Bit Fields */
#define DMA_TCD11_SADDR_SADDR_MASK               0xFFFFFFFFu
#define DMA_TCD11_SADDR_SADDR_SHIFT              0
#define DMA_TCD11_SADDR_SADDR_WIDTH              32
#define DMA_TCD11_SADDR_SADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD11_SADDR_SADDR_SHIFT))&DMA_TCD11_SADDR_SADDR_MASK)
/* TCD11_SOFF Bit Fields */
#define DMA_TCD11_SOFF_SOFF_MASK                 0xFFFFu
#define DMA_TCD11_SOFF_SOFF_SHIFT                0
#define DMA_TCD11_SOFF_SOFF_WIDTH                16
#define DMA_TCD11_SOFF_SOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD11_SOFF_SOFF_SHIFT))&DMA_TCD11_SOFF_SOFF_MASK)
/* TCD11_ATTR Bit Fields */
#define DMA_TCD11_ATTR_DSIZE_MASK                0x7u
#define DMA_TCD11_ATTR_DSIZE_SHIFT               0
#define DMA_TCD11_ATTR_DSIZE_WIDTH               3
#define DMA_TCD11_ATTR_DSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD11_ATTR_DSIZE_SHIFT))&DMA_TCD11_ATTR_DSIZE_MASK)
#define DMA_TCD11_ATTR_DMOD_MASK                 0xF8u
#define DMA_TCD11_ATTR_DMOD_SHIFT                3
#define DMA_TCD11_ATTR_DMOD_WIDTH                5
#define DMA_TCD11_ATTR_DMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD11_ATTR_DMOD_SHIFT))&DMA_TCD11_ATTR_DMOD_MASK)
#define DMA_TCD11_ATTR_SSIZE_MASK                0x700u
#define DMA_TCD11_ATTR_SSIZE_SHIFT               8
#define DMA_TCD11_ATTR_SSIZE_WIDTH               3
#define DMA_TCD11_ATTR_SSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD11_ATTR_SSIZE_SHIFT))&DMA_TCD11_ATTR_SSIZE_MASK)
#define DMA_TCD11_ATTR_SMOD_MASK                 0xF800u
#define DMA_TCD11_ATTR_SMOD_SHIFT                11
#define DMA_TCD11_ATTR_SMOD_WIDTH                5
#define DMA_TCD11_ATTR_SMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD11_ATTR_SMOD_SHIFT))&DMA_TCD11_ATTR_SMOD_MASK)
/* TCD11_NBYTES_MLNO Bit Fields */
#define DMA_TCD11_NBYTES_MLNO_NBYTES_MASK        0xFFFFFFFFu
#define DMA_TCD11_NBYTES_MLNO_NBYTES_SHIFT       0
#define DMA_TCD11_NBYTES_MLNO_NBYTES_WIDTH       32
#define DMA_TCD11_NBYTES_MLNO_NBYTES(x)          (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD11_NBYTES_MLNO_NBYTES_MASK)
/* TCD11_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD11_NBYTES_MLOFFNO_NBYTES_MASK     0x3FFFFFFFu
#define DMA_TCD11_NBYTES_MLOFFNO_NBYTES_SHIFT    0
#define DMA_TCD11_NBYTES_MLOFFNO_NBYTES_WIDTH    30
#define DMA_TCD11_NBYTES_MLOFFNO_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD11_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD11_NBYTES_MLOFFNO_DMLOE_MASK      0x40000000u
#define DMA_TCD11_NBYTES_MLOFFNO_DMLOE_SHIFT     30
#define DMA_TCD11_NBYTES_MLOFFNO_DMLOE_WIDTH     1
#define DMA_TCD11_NBYTES_MLOFFNO_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD11_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD11_NBYTES_MLOFFNO_SMLOE_MASK      0x80000000u
#define DMA_TCD11_NBYTES_MLOFFNO_SMLOE_SHIFT     31
#define DMA_TCD11_NBYTES_MLOFFNO_SMLOE_WIDTH     1
#define DMA_TCD11_NBYTES_MLOFFNO_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD11_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD11_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD11_NBYTES_MLOFFYES_NBYTES_MASK    0x3FFu
#define DMA_TCD11_NBYTES_MLOFFYES_NBYTES_SHIFT   0
#define DMA_TCD11_NBYTES_MLOFFYES_NBYTES_WIDTH   10
#define DMA_TCD11_NBYTES_MLOFFYES_NBYTES(x)      (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD11_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD11_NBYTES_MLOFFYES_MLOFF_MASK     0x3FFFFC00u
#define DMA_TCD11_NBYTES_MLOFFYES_MLOFF_SHIFT    10
#define DMA_TCD11_NBYTES_MLOFFYES_MLOFF_WIDTH    20
#define DMA_TCD11_NBYTES_MLOFFYES_MLOFF(x)       (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD11_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD11_NBYTES_MLOFFYES_DMLOE_MASK     0x40000000u
#define DMA_TCD11_NBYTES_MLOFFYES_DMLOE_SHIFT    30
#define DMA_TCD11_NBYTES_MLOFFYES_DMLOE_WIDTH    1
#define DMA_TCD11_NBYTES_MLOFFYES_DMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD11_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD11_NBYTES_MLOFFYES_SMLOE_MASK     0x80000000u
#define DMA_TCD11_NBYTES_MLOFFYES_SMLOE_SHIFT    31
#define DMA_TCD11_NBYTES_MLOFFYES_SMLOE_WIDTH    1
#define DMA_TCD11_NBYTES_MLOFFYES_SMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD11_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD11_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD11_SLAST Bit Fields */
#define DMA_TCD11_SLAST_SLAST_MASK               0xFFFFFFFFu
#define DMA_TCD11_SLAST_SLAST_SHIFT              0
#define DMA_TCD11_SLAST_SLAST_WIDTH              32
#define DMA_TCD11_SLAST_SLAST(x)                 (((uint32)(((uint32)(x))<<DMA_TCD11_SLAST_SLAST_SHIFT))&DMA_TCD11_SLAST_SLAST_MASK)
/* TCD11_DADDR Bit Fields */
#define DMA_TCD11_DADDR_DADDR_MASK               0xFFFFFFFFu
#define DMA_TCD11_DADDR_DADDR_SHIFT              0
#define DMA_TCD11_DADDR_DADDR_WIDTH              32
#define DMA_TCD11_DADDR_DADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD11_DADDR_DADDR_SHIFT))&DMA_TCD11_DADDR_DADDR_MASK)
/* TCD11_DOFF Bit Fields */
#define DMA_TCD11_DOFF_DOFF_MASK                 0xFFFFu
#define DMA_TCD11_DOFF_DOFF_SHIFT                0
#define DMA_TCD11_DOFF_DOFF_WIDTH                16
#define DMA_TCD11_DOFF_DOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD11_DOFF_DOFF_SHIFT))&DMA_TCD11_DOFF_DOFF_MASK)
/* TCD11_CITER_ELINKNO Bit Fields */
#define DMA_TCD11_CITER_ELINKNO_CITER_MASK       0x7FFFu
#define DMA_TCD11_CITER_ELINKNO_CITER_SHIFT      0
#define DMA_TCD11_CITER_ELINKNO_CITER_WIDTH      15
#define DMA_TCD11_CITER_ELINKNO_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD11_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD11_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD11_CITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD11_CITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD11_CITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD11_CITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD11_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD11_CITER_ELINKNO_ELINK_MASK)
/* TCD11_CITER_ELINKYES Bit Fields */
#define DMA_TCD11_CITER_ELINKYES_CITER_MASK      0x1FFu
#define DMA_TCD11_CITER_ELINKYES_CITER_SHIFT     0
#define DMA_TCD11_CITER_ELINKYES_CITER_WIDTH     9
#define DMA_TCD11_CITER_ELINKYES_CITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD11_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD11_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD11_CITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD11_CITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD11_CITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD11_CITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD11_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD11_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD11_CITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD11_CITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD11_CITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD11_CITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD11_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD11_CITER_ELINKYES_ELINK_MASK)
/* TCD11_DLASTSGA Bit Fields */
#define DMA_TCD11_DLASTSGA_DLASTSGA_MASK         0xFFFFFFFFu
#define DMA_TCD11_DLASTSGA_DLASTSGA_SHIFT        0
#define DMA_TCD11_DLASTSGA_DLASTSGA_WIDTH        32
#define DMA_TCD11_DLASTSGA_DLASTSGA(x)           (((uint32)(((uint32)(x))<<DMA_TCD11_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD11_DLASTSGA_DLASTSGA_MASK)
/* TCD11_CSR Bit Fields */
#define DMA_TCD11_CSR_START_MASK                 0x1u
#define DMA_TCD11_CSR_START_SHIFT                0
#define DMA_TCD11_CSR_START_WIDTH                1
#define DMA_TCD11_CSR_START(x)                   (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_START_SHIFT))&DMA_TCD11_CSR_START_MASK)
#define DMA_TCD11_CSR_INTMAJOR_MASK              0x2u
#define DMA_TCD11_CSR_INTMAJOR_SHIFT             1
#define DMA_TCD11_CSR_INTMAJOR_WIDTH             1
#define DMA_TCD11_CSR_INTMAJOR(x)                (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_INTMAJOR_SHIFT))&DMA_TCD11_CSR_INTMAJOR_MASK)
#define DMA_TCD11_CSR_INTHALF_MASK               0x4u
#define DMA_TCD11_CSR_INTHALF_SHIFT              2
#define DMA_TCD11_CSR_INTHALF_WIDTH              1
#define DMA_TCD11_CSR_INTHALF(x)                 (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_INTHALF_SHIFT))&DMA_TCD11_CSR_INTHALF_MASK)
#define DMA_TCD11_CSR_DREQ_MASK                  0x8u
#define DMA_TCD11_CSR_DREQ_SHIFT                 3
#define DMA_TCD11_CSR_DREQ_WIDTH                 1
#define DMA_TCD11_CSR_DREQ(x)                    (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_DREQ_SHIFT))&DMA_TCD11_CSR_DREQ_MASK)
#define DMA_TCD11_CSR_ESG_MASK                   0x10u
#define DMA_TCD11_CSR_ESG_SHIFT                  4
#define DMA_TCD11_CSR_ESG_WIDTH                  1
#define DMA_TCD11_CSR_ESG(x)                     (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_ESG_SHIFT))&DMA_TCD11_CSR_ESG_MASK)
#define DMA_TCD11_CSR_MAJORELINK_MASK            0x20u
#define DMA_TCD11_CSR_MAJORELINK_SHIFT           5
#define DMA_TCD11_CSR_MAJORELINK_WIDTH           1
#define DMA_TCD11_CSR_MAJORELINK(x)              (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_MAJORELINK_SHIFT))&DMA_TCD11_CSR_MAJORELINK_MASK)
#define DMA_TCD11_CSR_ACTIVE_MASK                0x40u
#define DMA_TCD11_CSR_ACTIVE_SHIFT               6
#define DMA_TCD11_CSR_ACTIVE_WIDTH               1
#define DMA_TCD11_CSR_ACTIVE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_ACTIVE_SHIFT))&DMA_TCD11_CSR_ACTIVE_MASK)
#define DMA_TCD11_CSR_DONE_MASK                  0x80u
#define DMA_TCD11_CSR_DONE_SHIFT                 7
#define DMA_TCD11_CSR_DONE_WIDTH                 1
#define DMA_TCD11_CSR_DONE(x)                    (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_DONE_SHIFT))&DMA_TCD11_CSR_DONE_MASK)
#define DMA_TCD11_CSR_MAJORLINKCH_MASK           0xF00u
#define DMA_TCD11_CSR_MAJORLINKCH_SHIFT          8
#define DMA_TCD11_CSR_MAJORLINKCH_WIDTH          4
#define DMA_TCD11_CSR_MAJORLINKCH(x)             (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_MAJORLINKCH_SHIFT))&DMA_TCD11_CSR_MAJORLINKCH_MASK)
#define DMA_TCD11_CSR_BWC_MASK                   0xC000u
#define DMA_TCD11_CSR_BWC_SHIFT                  14
#define DMA_TCD11_CSR_BWC_WIDTH                  2
#define DMA_TCD11_CSR_BWC(x)                     (((uint16)(((uint16)(x))<<DMA_TCD11_CSR_BWC_SHIFT))&DMA_TCD11_CSR_BWC_MASK)
/* TCD11_BITER_ELINKNO Bit Fields */
#define DMA_TCD11_BITER_ELINKNO_BITER_MASK       0x7FFFu
#define DMA_TCD11_BITER_ELINKNO_BITER_SHIFT      0
#define DMA_TCD11_BITER_ELINKNO_BITER_WIDTH      15
#define DMA_TCD11_BITER_ELINKNO_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD11_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD11_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD11_BITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD11_BITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD11_BITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD11_BITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD11_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD11_BITER_ELINKNO_ELINK_MASK)
/* TCD11_BITER_ELINKYES Bit Fields */
#define DMA_TCD11_BITER_ELINKYES_BITER_MASK      0x1FFu
#define DMA_TCD11_BITER_ELINKYES_BITER_SHIFT     0
#define DMA_TCD11_BITER_ELINKYES_BITER_WIDTH     9
#define DMA_TCD11_BITER_ELINKYES_BITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD11_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD11_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD11_BITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD11_BITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD11_BITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD11_BITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD11_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD11_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD11_BITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD11_BITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD11_BITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD11_BITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD11_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD11_BITER_ELINKYES_ELINK_MASK)
/* TCD12_SADDR Bit Fields */
#define DMA_TCD12_SADDR_SADDR_MASK               0xFFFFFFFFu
#define DMA_TCD12_SADDR_SADDR_SHIFT              0
#define DMA_TCD12_SADDR_SADDR_WIDTH              32
#define DMA_TCD12_SADDR_SADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD12_SADDR_SADDR_SHIFT))&DMA_TCD12_SADDR_SADDR_MASK)
/* TCD12_SOFF Bit Fields */
#define DMA_TCD12_SOFF_SOFF_MASK                 0xFFFFu
#define DMA_TCD12_SOFF_SOFF_SHIFT                0
#define DMA_TCD12_SOFF_SOFF_WIDTH                16
#define DMA_TCD12_SOFF_SOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD12_SOFF_SOFF_SHIFT))&DMA_TCD12_SOFF_SOFF_MASK)
/* TCD12_ATTR Bit Fields */
#define DMA_TCD12_ATTR_DSIZE_MASK                0x7u
#define DMA_TCD12_ATTR_DSIZE_SHIFT               0
#define DMA_TCD12_ATTR_DSIZE_WIDTH               3
#define DMA_TCD12_ATTR_DSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD12_ATTR_DSIZE_SHIFT))&DMA_TCD12_ATTR_DSIZE_MASK)
#define DMA_TCD12_ATTR_DMOD_MASK                 0xF8u
#define DMA_TCD12_ATTR_DMOD_SHIFT                3
#define DMA_TCD12_ATTR_DMOD_WIDTH                5
#define DMA_TCD12_ATTR_DMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD12_ATTR_DMOD_SHIFT))&DMA_TCD12_ATTR_DMOD_MASK)
#define DMA_TCD12_ATTR_SSIZE_MASK                0x700u
#define DMA_TCD12_ATTR_SSIZE_SHIFT               8
#define DMA_TCD12_ATTR_SSIZE_WIDTH               3
#define DMA_TCD12_ATTR_SSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD12_ATTR_SSIZE_SHIFT))&DMA_TCD12_ATTR_SSIZE_MASK)
#define DMA_TCD12_ATTR_SMOD_MASK                 0xF800u
#define DMA_TCD12_ATTR_SMOD_SHIFT                11
#define DMA_TCD12_ATTR_SMOD_WIDTH                5
#define DMA_TCD12_ATTR_SMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD12_ATTR_SMOD_SHIFT))&DMA_TCD12_ATTR_SMOD_MASK)
/* TCD12_NBYTES_MLNO Bit Fields */
#define DMA_TCD12_NBYTES_MLNO_NBYTES_MASK        0xFFFFFFFFu
#define DMA_TCD12_NBYTES_MLNO_NBYTES_SHIFT       0
#define DMA_TCD12_NBYTES_MLNO_NBYTES_WIDTH       32
#define DMA_TCD12_NBYTES_MLNO_NBYTES(x)          (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD12_NBYTES_MLNO_NBYTES_MASK)
/* TCD12_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD12_NBYTES_MLOFFNO_NBYTES_MASK     0x3FFFFFFFu
#define DMA_TCD12_NBYTES_MLOFFNO_NBYTES_SHIFT    0
#define DMA_TCD12_NBYTES_MLOFFNO_NBYTES_WIDTH    30
#define DMA_TCD12_NBYTES_MLOFFNO_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD12_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD12_NBYTES_MLOFFNO_DMLOE_MASK      0x40000000u
#define DMA_TCD12_NBYTES_MLOFFNO_DMLOE_SHIFT     30
#define DMA_TCD12_NBYTES_MLOFFNO_DMLOE_WIDTH     1
#define DMA_TCD12_NBYTES_MLOFFNO_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD12_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD12_NBYTES_MLOFFNO_SMLOE_MASK      0x80000000u
#define DMA_TCD12_NBYTES_MLOFFNO_SMLOE_SHIFT     31
#define DMA_TCD12_NBYTES_MLOFFNO_SMLOE_WIDTH     1
#define DMA_TCD12_NBYTES_MLOFFNO_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD12_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD12_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD12_NBYTES_MLOFFYES_NBYTES_MASK    0x3FFu
#define DMA_TCD12_NBYTES_MLOFFYES_NBYTES_SHIFT   0
#define DMA_TCD12_NBYTES_MLOFFYES_NBYTES_WIDTH   10
#define DMA_TCD12_NBYTES_MLOFFYES_NBYTES(x)      (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD12_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD12_NBYTES_MLOFFYES_MLOFF_MASK     0x3FFFFC00u
#define DMA_TCD12_NBYTES_MLOFFYES_MLOFF_SHIFT    10
#define DMA_TCD12_NBYTES_MLOFFYES_MLOFF_WIDTH    20
#define DMA_TCD12_NBYTES_MLOFFYES_MLOFF(x)       (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD12_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD12_NBYTES_MLOFFYES_DMLOE_MASK     0x40000000u
#define DMA_TCD12_NBYTES_MLOFFYES_DMLOE_SHIFT    30
#define DMA_TCD12_NBYTES_MLOFFYES_DMLOE_WIDTH    1
#define DMA_TCD12_NBYTES_MLOFFYES_DMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD12_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD12_NBYTES_MLOFFYES_SMLOE_MASK     0x80000000u
#define DMA_TCD12_NBYTES_MLOFFYES_SMLOE_SHIFT    31
#define DMA_TCD12_NBYTES_MLOFFYES_SMLOE_WIDTH    1
#define DMA_TCD12_NBYTES_MLOFFYES_SMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD12_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD12_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD12_SLAST Bit Fields */
#define DMA_TCD12_SLAST_SLAST_MASK               0xFFFFFFFFu
#define DMA_TCD12_SLAST_SLAST_SHIFT              0
#define DMA_TCD12_SLAST_SLAST_WIDTH              32
#define DMA_TCD12_SLAST_SLAST(x)                 (((uint32)(((uint32)(x))<<DMA_TCD12_SLAST_SLAST_SHIFT))&DMA_TCD12_SLAST_SLAST_MASK)
/* TCD12_DADDR Bit Fields */
#define DMA_TCD12_DADDR_DADDR_MASK               0xFFFFFFFFu
#define DMA_TCD12_DADDR_DADDR_SHIFT              0
#define DMA_TCD12_DADDR_DADDR_WIDTH              32
#define DMA_TCD12_DADDR_DADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD12_DADDR_DADDR_SHIFT))&DMA_TCD12_DADDR_DADDR_MASK)
/* TCD12_DOFF Bit Fields */
#define DMA_TCD12_DOFF_DOFF_MASK                 0xFFFFu
#define DMA_TCD12_DOFF_DOFF_SHIFT                0
#define DMA_TCD12_DOFF_DOFF_WIDTH                16
#define DMA_TCD12_DOFF_DOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD12_DOFF_DOFF_SHIFT))&DMA_TCD12_DOFF_DOFF_MASK)
/* TCD12_CITER_ELINKNO Bit Fields */
#define DMA_TCD12_CITER_ELINKNO_CITER_MASK       0x7FFFu
#define DMA_TCD12_CITER_ELINKNO_CITER_SHIFT      0
#define DMA_TCD12_CITER_ELINKNO_CITER_WIDTH      15
#define DMA_TCD12_CITER_ELINKNO_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD12_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD12_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD12_CITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD12_CITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD12_CITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD12_CITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD12_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD12_CITER_ELINKNO_ELINK_MASK)
/* TCD12_CITER_ELINKYES Bit Fields */
#define DMA_TCD12_CITER_ELINKYES_CITER_MASK      0x1FFu
#define DMA_TCD12_CITER_ELINKYES_CITER_SHIFT     0
#define DMA_TCD12_CITER_ELINKYES_CITER_WIDTH     9
#define DMA_TCD12_CITER_ELINKYES_CITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD12_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD12_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD12_CITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD12_CITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD12_CITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD12_CITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD12_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD12_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD12_CITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD12_CITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD12_CITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD12_CITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD12_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD12_CITER_ELINKYES_ELINK_MASK)
/* TCD12_DLASTSGA Bit Fields */
#define DMA_TCD12_DLASTSGA_DLASTSGA_MASK         0xFFFFFFFFu
#define DMA_TCD12_DLASTSGA_DLASTSGA_SHIFT        0
#define DMA_TCD12_DLASTSGA_DLASTSGA_WIDTH        32
#define DMA_TCD12_DLASTSGA_DLASTSGA(x)           (((uint32)(((uint32)(x))<<DMA_TCD12_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD12_DLASTSGA_DLASTSGA_MASK)
/* TCD12_CSR Bit Fields */
#define DMA_TCD12_CSR_START_MASK                 0x1u
#define DMA_TCD12_CSR_START_SHIFT                0
#define DMA_TCD12_CSR_START_WIDTH                1
#define DMA_TCD12_CSR_START(x)                   (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_START_SHIFT))&DMA_TCD12_CSR_START_MASK)
#define DMA_TCD12_CSR_INTMAJOR_MASK              0x2u
#define DMA_TCD12_CSR_INTMAJOR_SHIFT             1
#define DMA_TCD12_CSR_INTMAJOR_WIDTH             1
#define DMA_TCD12_CSR_INTMAJOR(x)                (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_INTMAJOR_SHIFT))&DMA_TCD12_CSR_INTMAJOR_MASK)
#define DMA_TCD12_CSR_INTHALF_MASK               0x4u
#define DMA_TCD12_CSR_INTHALF_SHIFT              2
#define DMA_TCD12_CSR_INTHALF_WIDTH              1
#define DMA_TCD12_CSR_INTHALF(x)                 (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_INTHALF_SHIFT))&DMA_TCD12_CSR_INTHALF_MASK)
#define DMA_TCD12_CSR_DREQ_MASK                  0x8u
#define DMA_TCD12_CSR_DREQ_SHIFT                 3
#define DMA_TCD12_CSR_DREQ_WIDTH                 1
#define DMA_TCD12_CSR_DREQ(x)                    (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_DREQ_SHIFT))&DMA_TCD12_CSR_DREQ_MASK)
#define DMA_TCD12_CSR_ESG_MASK                   0x10u
#define DMA_TCD12_CSR_ESG_SHIFT                  4
#define DMA_TCD12_CSR_ESG_WIDTH                  1
#define DMA_TCD12_CSR_ESG(x)                     (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_ESG_SHIFT))&DMA_TCD12_CSR_ESG_MASK)
#define DMA_TCD12_CSR_MAJORELINK_MASK            0x20u
#define DMA_TCD12_CSR_MAJORELINK_SHIFT           5
#define DMA_TCD12_CSR_MAJORELINK_WIDTH           1
#define DMA_TCD12_CSR_MAJORELINK(x)              (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_MAJORELINK_SHIFT))&DMA_TCD12_CSR_MAJORELINK_MASK)
#define DMA_TCD12_CSR_ACTIVE_MASK                0x40u
#define DMA_TCD12_CSR_ACTIVE_SHIFT               6
#define DMA_TCD12_CSR_ACTIVE_WIDTH               1
#define DMA_TCD12_CSR_ACTIVE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_ACTIVE_SHIFT))&DMA_TCD12_CSR_ACTIVE_MASK)
#define DMA_TCD12_CSR_DONE_MASK                  0x80u
#define DMA_TCD12_CSR_DONE_SHIFT                 7
#define DMA_TCD12_CSR_DONE_WIDTH                 1
#define DMA_TCD12_CSR_DONE(x)                    (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_DONE_SHIFT))&DMA_TCD12_CSR_DONE_MASK)
#define DMA_TCD12_CSR_MAJORLINKCH_MASK           0xF00u
#define DMA_TCD12_CSR_MAJORLINKCH_SHIFT          8
#define DMA_TCD12_CSR_MAJORLINKCH_WIDTH          4
#define DMA_TCD12_CSR_MAJORLINKCH(x)             (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_MAJORLINKCH_SHIFT))&DMA_TCD12_CSR_MAJORLINKCH_MASK)
#define DMA_TCD12_CSR_BWC_MASK                   0xC000u
#define DMA_TCD12_CSR_BWC_SHIFT                  14
#define DMA_TCD12_CSR_BWC_WIDTH                  2
#define DMA_TCD12_CSR_BWC(x)                     (((uint16)(((uint16)(x))<<DMA_TCD12_CSR_BWC_SHIFT))&DMA_TCD12_CSR_BWC_MASK)
/* TCD12_BITER_ELINKNO Bit Fields */
#define DMA_TCD12_BITER_ELINKNO_BITER_MASK       0x7FFFu
#define DMA_TCD12_BITER_ELINKNO_BITER_SHIFT      0
#define DMA_TCD12_BITER_ELINKNO_BITER_WIDTH      15
#define DMA_TCD12_BITER_ELINKNO_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD12_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD12_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD12_BITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD12_BITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD12_BITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD12_BITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD12_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD12_BITER_ELINKNO_ELINK_MASK)
/* TCD12_BITER_ELINKYES Bit Fields */
#define DMA_TCD12_BITER_ELINKYES_BITER_MASK      0x1FFu
#define DMA_TCD12_BITER_ELINKYES_BITER_SHIFT     0
#define DMA_TCD12_BITER_ELINKYES_BITER_WIDTH     9
#define DMA_TCD12_BITER_ELINKYES_BITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD12_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD12_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD12_BITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD12_BITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD12_BITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD12_BITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD12_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD12_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD12_BITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD12_BITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD12_BITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD12_BITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD12_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD12_BITER_ELINKYES_ELINK_MASK)
/* TCD13_SADDR Bit Fields */
#define DMA_TCD13_SADDR_SADDR_MASK               0xFFFFFFFFu
#define DMA_TCD13_SADDR_SADDR_SHIFT              0
#define DMA_TCD13_SADDR_SADDR_WIDTH              32
#define DMA_TCD13_SADDR_SADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD13_SADDR_SADDR_SHIFT))&DMA_TCD13_SADDR_SADDR_MASK)
/* TCD13_SOFF Bit Fields */
#define DMA_TCD13_SOFF_SOFF_MASK                 0xFFFFu
#define DMA_TCD13_SOFF_SOFF_SHIFT                0
#define DMA_TCD13_SOFF_SOFF_WIDTH                16
#define DMA_TCD13_SOFF_SOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD13_SOFF_SOFF_SHIFT))&DMA_TCD13_SOFF_SOFF_MASK)
/* TCD13_ATTR Bit Fields */
#define DMA_TCD13_ATTR_DSIZE_MASK                0x7u
#define DMA_TCD13_ATTR_DSIZE_SHIFT               0
#define DMA_TCD13_ATTR_DSIZE_WIDTH               3
#define DMA_TCD13_ATTR_DSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD13_ATTR_DSIZE_SHIFT))&DMA_TCD13_ATTR_DSIZE_MASK)
#define DMA_TCD13_ATTR_DMOD_MASK                 0xF8u
#define DMA_TCD13_ATTR_DMOD_SHIFT                3
#define DMA_TCD13_ATTR_DMOD_WIDTH                5
#define DMA_TCD13_ATTR_DMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD13_ATTR_DMOD_SHIFT))&DMA_TCD13_ATTR_DMOD_MASK)
#define DMA_TCD13_ATTR_SSIZE_MASK                0x700u
#define DMA_TCD13_ATTR_SSIZE_SHIFT               8
#define DMA_TCD13_ATTR_SSIZE_WIDTH               3
#define DMA_TCD13_ATTR_SSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD13_ATTR_SSIZE_SHIFT))&DMA_TCD13_ATTR_SSIZE_MASK)
#define DMA_TCD13_ATTR_SMOD_MASK                 0xF800u
#define DMA_TCD13_ATTR_SMOD_SHIFT                11
#define DMA_TCD13_ATTR_SMOD_WIDTH                5
#define DMA_TCD13_ATTR_SMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD13_ATTR_SMOD_SHIFT))&DMA_TCD13_ATTR_SMOD_MASK)
/* TCD13_NBYTES_MLNO Bit Fields */
#define DMA_TCD13_NBYTES_MLNO_NBYTES_MASK        0xFFFFFFFFu
#define DMA_TCD13_NBYTES_MLNO_NBYTES_SHIFT       0
#define DMA_TCD13_NBYTES_MLNO_NBYTES_WIDTH       32
#define DMA_TCD13_NBYTES_MLNO_NBYTES(x)          (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD13_NBYTES_MLNO_NBYTES_MASK)
/* TCD13_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD13_NBYTES_MLOFFNO_NBYTES_MASK     0x3FFFFFFFu
#define DMA_TCD13_NBYTES_MLOFFNO_NBYTES_SHIFT    0
#define DMA_TCD13_NBYTES_MLOFFNO_NBYTES_WIDTH    30
#define DMA_TCD13_NBYTES_MLOFFNO_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD13_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD13_NBYTES_MLOFFNO_DMLOE_MASK      0x40000000u
#define DMA_TCD13_NBYTES_MLOFFNO_DMLOE_SHIFT     30
#define DMA_TCD13_NBYTES_MLOFFNO_DMLOE_WIDTH     1
#define DMA_TCD13_NBYTES_MLOFFNO_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD13_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD13_NBYTES_MLOFFNO_SMLOE_MASK      0x80000000u
#define DMA_TCD13_NBYTES_MLOFFNO_SMLOE_SHIFT     31
#define DMA_TCD13_NBYTES_MLOFFNO_SMLOE_WIDTH     1
#define DMA_TCD13_NBYTES_MLOFFNO_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD13_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD13_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD13_NBYTES_MLOFFYES_NBYTES_MASK    0x3FFu
#define DMA_TCD13_NBYTES_MLOFFYES_NBYTES_SHIFT   0
#define DMA_TCD13_NBYTES_MLOFFYES_NBYTES_WIDTH   10
#define DMA_TCD13_NBYTES_MLOFFYES_NBYTES(x)      (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD13_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD13_NBYTES_MLOFFYES_MLOFF_MASK     0x3FFFFC00u
#define DMA_TCD13_NBYTES_MLOFFYES_MLOFF_SHIFT    10
#define DMA_TCD13_NBYTES_MLOFFYES_MLOFF_WIDTH    20
#define DMA_TCD13_NBYTES_MLOFFYES_MLOFF(x)       (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD13_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD13_NBYTES_MLOFFYES_DMLOE_MASK     0x40000000u
#define DMA_TCD13_NBYTES_MLOFFYES_DMLOE_SHIFT    30
#define DMA_TCD13_NBYTES_MLOFFYES_DMLOE_WIDTH    1
#define DMA_TCD13_NBYTES_MLOFFYES_DMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD13_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD13_NBYTES_MLOFFYES_SMLOE_MASK     0x80000000u
#define DMA_TCD13_NBYTES_MLOFFYES_SMLOE_SHIFT    31
#define DMA_TCD13_NBYTES_MLOFFYES_SMLOE_WIDTH    1
#define DMA_TCD13_NBYTES_MLOFFYES_SMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD13_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD13_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD13_SLAST Bit Fields */
#define DMA_TCD13_SLAST_SLAST_MASK               0xFFFFFFFFu
#define DMA_TCD13_SLAST_SLAST_SHIFT              0
#define DMA_TCD13_SLAST_SLAST_WIDTH              32
#define DMA_TCD13_SLAST_SLAST(x)                 (((uint32)(((uint32)(x))<<DMA_TCD13_SLAST_SLAST_SHIFT))&DMA_TCD13_SLAST_SLAST_MASK)
/* TCD13_DADDR Bit Fields */
#define DMA_TCD13_DADDR_DADDR_MASK               0xFFFFFFFFu
#define DMA_TCD13_DADDR_DADDR_SHIFT              0
#define DMA_TCD13_DADDR_DADDR_WIDTH              32
#define DMA_TCD13_DADDR_DADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD13_DADDR_DADDR_SHIFT))&DMA_TCD13_DADDR_DADDR_MASK)
/* TCD13_DOFF Bit Fields */
#define DMA_TCD13_DOFF_DOFF_MASK                 0xFFFFu
#define DMA_TCD13_DOFF_DOFF_SHIFT                0
#define DMA_TCD13_DOFF_DOFF_WIDTH                16
#define DMA_TCD13_DOFF_DOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD13_DOFF_DOFF_SHIFT))&DMA_TCD13_DOFF_DOFF_MASK)
/* TCD13_CITER_ELINKNO Bit Fields */
#define DMA_TCD13_CITER_ELINKNO_CITER_MASK       0x7FFFu
#define DMA_TCD13_CITER_ELINKNO_CITER_SHIFT      0
#define DMA_TCD13_CITER_ELINKNO_CITER_WIDTH      15
#define DMA_TCD13_CITER_ELINKNO_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD13_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD13_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD13_CITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD13_CITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD13_CITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD13_CITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD13_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD13_CITER_ELINKNO_ELINK_MASK)
/* TCD13_CITER_ELINKYES Bit Fields */
#define DMA_TCD13_CITER_ELINKYES_CITER_MASK      0x1FFu
#define DMA_TCD13_CITER_ELINKYES_CITER_SHIFT     0
#define DMA_TCD13_CITER_ELINKYES_CITER_WIDTH     9
#define DMA_TCD13_CITER_ELINKYES_CITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD13_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD13_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD13_CITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD13_CITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD13_CITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD13_CITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD13_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD13_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD13_CITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD13_CITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD13_CITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD13_CITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD13_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD13_CITER_ELINKYES_ELINK_MASK)
/* TCD13_DLASTSGA Bit Fields */
#define DMA_TCD13_DLASTSGA_DLASTSGA_MASK         0xFFFFFFFFu
#define DMA_TCD13_DLASTSGA_DLASTSGA_SHIFT        0
#define DMA_TCD13_DLASTSGA_DLASTSGA_WIDTH        32
#define DMA_TCD13_DLASTSGA_DLASTSGA(x)           (((uint32)(((uint32)(x))<<DMA_TCD13_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD13_DLASTSGA_DLASTSGA_MASK)
/* TCD13_CSR Bit Fields */
#define DMA_TCD13_CSR_START_MASK                 0x1u
#define DMA_TCD13_CSR_START_SHIFT                0
#define DMA_TCD13_CSR_START_WIDTH                1
#define DMA_TCD13_CSR_START(x)                   (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_START_SHIFT))&DMA_TCD13_CSR_START_MASK)
#define DMA_TCD13_CSR_INTMAJOR_MASK              0x2u
#define DMA_TCD13_CSR_INTMAJOR_SHIFT             1
#define DMA_TCD13_CSR_INTMAJOR_WIDTH             1
#define DMA_TCD13_CSR_INTMAJOR(x)                (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_INTMAJOR_SHIFT))&DMA_TCD13_CSR_INTMAJOR_MASK)
#define DMA_TCD13_CSR_INTHALF_MASK               0x4u
#define DMA_TCD13_CSR_INTHALF_SHIFT              2
#define DMA_TCD13_CSR_INTHALF_WIDTH              1
#define DMA_TCD13_CSR_INTHALF(x)                 (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_INTHALF_SHIFT))&DMA_TCD13_CSR_INTHALF_MASK)
#define DMA_TCD13_CSR_DREQ_MASK                  0x8u
#define DMA_TCD13_CSR_DREQ_SHIFT                 3
#define DMA_TCD13_CSR_DREQ_WIDTH                 1
#define DMA_TCD13_CSR_DREQ(x)                    (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_DREQ_SHIFT))&DMA_TCD13_CSR_DREQ_MASK)
#define DMA_TCD13_CSR_ESG_MASK                   0x10u
#define DMA_TCD13_CSR_ESG_SHIFT                  4
#define DMA_TCD13_CSR_ESG_WIDTH                  1
#define DMA_TCD13_CSR_ESG(x)                     (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_ESG_SHIFT))&DMA_TCD13_CSR_ESG_MASK)
#define DMA_TCD13_CSR_MAJORELINK_MASK            0x20u
#define DMA_TCD13_CSR_MAJORELINK_SHIFT           5
#define DMA_TCD13_CSR_MAJORELINK_WIDTH           1
#define DMA_TCD13_CSR_MAJORELINK(x)              (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_MAJORELINK_SHIFT))&DMA_TCD13_CSR_MAJORELINK_MASK)
#define DMA_TCD13_CSR_ACTIVE_MASK                0x40u
#define DMA_TCD13_CSR_ACTIVE_SHIFT               6
#define DMA_TCD13_CSR_ACTIVE_WIDTH               1
#define DMA_TCD13_CSR_ACTIVE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_ACTIVE_SHIFT))&DMA_TCD13_CSR_ACTIVE_MASK)
#define DMA_TCD13_CSR_DONE_MASK                  0x80u
#define DMA_TCD13_CSR_DONE_SHIFT                 7
#define DMA_TCD13_CSR_DONE_WIDTH                 1
#define DMA_TCD13_CSR_DONE(x)                    (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_DONE_SHIFT))&DMA_TCD13_CSR_DONE_MASK)
#define DMA_TCD13_CSR_MAJORLINKCH_MASK           0xF00u
#define DMA_TCD13_CSR_MAJORLINKCH_SHIFT          8
#define DMA_TCD13_CSR_MAJORLINKCH_WIDTH          4
#define DMA_TCD13_CSR_MAJORLINKCH(x)             (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_MAJORLINKCH_SHIFT))&DMA_TCD13_CSR_MAJORLINKCH_MASK)
#define DMA_TCD13_CSR_BWC_MASK                   0xC000u
#define DMA_TCD13_CSR_BWC_SHIFT                  14
#define DMA_TCD13_CSR_BWC_WIDTH                  2
#define DMA_TCD13_CSR_BWC(x)                     (((uint16)(((uint16)(x))<<DMA_TCD13_CSR_BWC_SHIFT))&DMA_TCD13_CSR_BWC_MASK)
/* TCD13_BITER_ELINKNO Bit Fields */
#define DMA_TCD13_BITER_ELINKNO_BITER_MASK       0x7FFFu
#define DMA_TCD13_BITER_ELINKNO_BITER_SHIFT      0
#define DMA_TCD13_BITER_ELINKNO_BITER_WIDTH      15
#define DMA_TCD13_BITER_ELINKNO_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD13_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD13_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD13_BITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD13_BITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD13_BITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD13_BITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD13_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD13_BITER_ELINKNO_ELINK_MASK)
/* TCD13_BITER_ELINKYES Bit Fields */
#define DMA_TCD13_BITER_ELINKYES_BITER_MASK      0x1FFu
#define DMA_TCD13_BITER_ELINKYES_BITER_SHIFT     0
#define DMA_TCD13_BITER_ELINKYES_BITER_WIDTH     9
#define DMA_TCD13_BITER_ELINKYES_BITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD13_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD13_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD13_BITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD13_BITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD13_BITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD13_BITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD13_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD13_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD13_BITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD13_BITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD13_BITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD13_BITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD13_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD13_BITER_ELINKYES_ELINK_MASK)
/* TCD14_SADDR Bit Fields */
#define DMA_TCD14_SADDR_SADDR_MASK               0xFFFFFFFFu
#define DMA_TCD14_SADDR_SADDR_SHIFT              0
#define DMA_TCD14_SADDR_SADDR_WIDTH              32
#define DMA_TCD14_SADDR_SADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD14_SADDR_SADDR_SHIFT))&DMA_TCD14_SADDR_SADDR_MASK)
/* TCD14_SOFF Bit Fields */
#define DMA_TCD14_SOFF_SOFF_MASK                 0xFFFFu
#define DMA_TCD14_SOFF_SOFF_SHIFT                0
#define DMA_TCD14_SOFF_SOFF_WIDTH                16
#define DMA_TCD14_SOFF_SOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD14_SOFF_SOFF_SHIFT))&DMA_TCD14_SOFF_SOFF_MASK)
/* TCD14_ATTR Bit Fields */
#define DMA_TCD14_ATTR_DSIZE_MASK                0x7u
#define DMA_TCD14_ATTR_DSIZE_SHIFT               0
#define DMA_TCD14_ATTR_DSIZE_WIDTH               3
#define DMA_TCD14_ATTR_DSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD14_ATTR_DSIZE_SHIFT))&DMA_TCD14_ATTR_DSIZE_MASK)
#define DMA_TCD14_ATTR_DMOD_MASK                 0xF8u
#define DMA_TCD14_ATTR_DMOD_SHIFT                3
#define DMA_TCD14_ATTR_DMOD_WIDTH                5
#define DMA_TCD14_ATTR_DMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD14_ATTR_DMOD_SHIFT))&DMA_TCD14_ATTR_DMOD_MASK)
#define DMA_TCD14_ATTR_SSIZE_MASK                0x700u
#define DMA_TCD14_ATTR_SSIZE_SHIFT               8
#define DMA_TCD14_ATTR_SSIZE_WIDTH               3
#define DMA_TCD14_ATTR_SSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD14_ATTR_SSIZE_SHIFT))&DMA_TCD14_ATTR_SSIZE_MASK)
#define DMA_TCD14_ATTR_SMOD_MASK                 0xF800u
#define DMA_TCD14_ATTR_SMOD_SHIFT                11
#define DMA_TCD14_ATTR_SMOD_WIDTH                5
#define DMA_TCD14_ATTR_SMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD14_ATTR_SMOD_SHIFT))&DMA_TCD14_ATTR_SMOD_MASK)
/* TCD14_NBYTES_MLNO Bit Fields */
#define DMA_TCD14_NBYTES_MLNO_NBYTES_MASK        0xFFFFFFFFu
#define DMA_TCD14_NBYTES_MLNO_NBYTES_SHIFT       0
#define DMA_TCD14_NBYTES_MLNO_NBYTES_WIDTH       32
#define DMA_TCD14_NBYTES_MLNO_NBYTES(x)          (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD14_NBYTES_MLNO_NBYTES_MASK)
/* TCD14_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD14_NBYTES_MLOFFNO_NBYTES_MASK     0x3FFFFFFFu
#define DMA_TCD14_NBYTES_MLOFFNO_NBYTES_SHIFT    0
#define DMA_TCD14_NBYTES_MLOFFNO_NBYTES_WIDTH    30
#define DMA_TCD14_NBYTES_MLOFFNO_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD14_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD14_NBYTES_MLOFFNO_DMLOE_MASK      0x40000000u
#define DMA_TCD14_NBYTES_MLOFFNO_DMLOE_SHIFT     30
#define DMA_TCD14_NBYTES_MLOFFNO_DMLOE_WIDTH     1
#define DMA_TCD14_NBYTES_MLOFFNO_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD14_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD14_NBYTES_MLOFFNO_SMLOE_MASK      0x80000000u
#define DMA_TCD14_NBYTES_MLOFFNO_SMLOE_SHIFT     31
#define DMA_TCD14_NBYTES_MLOFFNO_SMLOE_WIDTH     1
#define DMA_TCD14_NBYTES_MLOFFNO_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD14_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD14_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD14_NBYTES_MLOFFYES_NBYTES_MASK    0x3FFu
#define DMA_TCD14_NBYTES_MLOFFYES_NBYTES_SHIFT   0
#define DMA_TCD14_NBYTES_MLOFFYES_NBYTES_WIDTH   10
#define DMA_TCD14_NBYTES_MLOFFYES_NBYTES(x)      (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD14_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD14_NBYTES_MLOFFYES_MLOFF_MASK     0x3FFFFC00u
#define DMA_TCD14_NBYTES_MLOFFYES_MLOFF_SHIFT    10
#define DMA_TCD14_NBYTES_MLOFFYES_MLOFF_WIDTH    20
#define DMA_TCD14_NBYTES_MLOFFYES_MLOFF(x)       (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD14_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD14_NBYTES_MLOFFYES_DMLOE_MASK     0x40000000u
#define DMA_TCD14_NBYTES_MLOFFYES_DMLOE_SHIFT    30
#define DMA_TCD14_NBYTES_MLOFFYES_DMLOE_WIDTH    1
#define DMA_TCD14_NBYTES_MLOFFYES_DMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD14_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD14_NBYTES_MLOFFYES_SMLOE_MASK     0x80000000u
#define DMA_TCD14_NBYTES_MLOFFYES_SMLOE_SHIFT    31
#define DMA_TCD14_NBYTES_MLOFFYES_SMLOE_WIDTH    1
#define DMA_TCD14_NBYTES_MLOFFYES_SMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD14_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD14_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD14_SLAST Bit Fields */
#define DMA_TCD14_SLAST_SLAST_MASK               0xFFFFFFFFu
#define DMA_TCD14_SLAST_SLAST_SHIFT              0
#define DMA_TCD14_SLAST_SLAST_WIDTH              32
#define DMA_TCD14_SLAST_SLAST(x)                 (((uint32)(((uint32)(x))<<DMA_TCD14_SLAST_SLAST_SHIFT))&DMA_TCD14_SLAST_SLAST_MASK)
/* TCD14_DADDR Bit Fields */
#define DMA_TCD14_DADDR_DADDR_MASK               0xFFFFFFFFu
#define DMA_TCD14_DADDR_DADDR_SHIFT              0
#define DMA_TCD14_DADDR_DADDR_WIDTH              32
#define DMA_TCD14_DADDR_DADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD14_DADDR_DADDR_SHIFT))&DMA_TCD14_DADDR_DADDR_MASK)
/* TCD14_DOFF Bit Fields */
#define DMA_TCD14_DOFF_DOFF_MASK                 0xFFFFu
#define DMA_TCD14_DOFF_DOFF_SHIFT                0
#define DMA_TCD14_DOFF_DOFF_WIDTH                16
#define DMA_TCD14_DOFF_DOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD14_DOFF_DOFF_SHIFT))&DMA_TCD14_DOFF_DOFF_MASK)
/* TCD14_CITER_ELINKNO Bit Fields */
#define DMA_TCD14_CITER_ELINKNO_CITER_MASK       0x7FFFu
#define DMA_TCD14_CITER_ELINKNO_CITER_SHIFT      0
#define DMA_TCD14_CITER_ELINKNO_CITER_WIDTH      15
#define DMA_TCD14_CITER_ELINKNO_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD14_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD14_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD14_CITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD14_CITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD14_CITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD14_CITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD14_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD14_CITER_ELINKNO_ELINK_MASK)
/* TCD14_CITER_ELINKYES Bit Fields */
#define DMA_TCD14_CITER_ELINKYES_CITER_MASK      0x1FFu
#define DMA_TCD14_CITER_ELINKYES_CITER_SHIFT     0
#define DMA_TCD14_CITER_ELINKYES_CITER_WIDTH     9
#define DMA_TCD14_CITER_ELINKYES_CITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD14_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD14_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD14_CITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD14_CITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD14_CITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD14_CITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD14_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD14_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD14_CITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD14_CITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD14_CITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD14_CITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD14_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD14_CITER_ELINKYES_ELINK_MASK)
/* TCD14_DLASTSGA Bit Fields */
#define DMA_TCD14_DLASTSGA_DLASTSGA_MASK         0xFFFFFFFFu
#define DMA_TCD14_DLASTSGA_DLASTSGA_SHIFT        0
#define DMA_TCD14_DLASTSGA_DLASTSGA_WIDTH        32
#define DMA_TCD14_DLASTSGA_DLASTSGA(x)           (((uint32)(((uint32)(x))<<DMA_TCD14_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD14_DLASTSGA_DLASTSGA_MASK)
/* TCD14_CSR Bit Fields */
#define DMA_TCD14_CSR_START_MASK                 0x1u
#define DMA_TCD14_CSR_START_SHIFT                0
#define DMA_TCD14_CSR_START_WIDTH                1
#define DMA_TCD14_CSR_START(x)                   (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_START_SHIFT))&DMA_TCD14_CSR_START_MASK)
#define DMA_TCD14_CSR_INTMAJOR_MASK              0x2u
#define DMA_TCD14_CSR_INTMAJOR_SHIFT             1
#define DMA_TCD14_CSR_INTMAJOR_WIDTH             1
#define DMA_TCD14_CSR_INTMAJOR(x)                (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_INTMAJOR_SHIFT))&DMA_TCD14_CSR_INTMAJOR_MASK)
#define DMA_TCD14_CSR_INTHALF_MASK               0x4u
#define DMA_TCD14_CSR_INTHALF_SHIFT              2
#define DMA_TCD14_CSR_INTHALF_WIDTH              1
#define DMA_TCD14_CSR_INTHALF(x)                 (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_INTHALF_SHIFT))&DMA_TCD14_CSR_INTHALF_MASK)
#define DMA_TCD14_CSR_DREQ_MASK                  0x8u
#define DMA_TCD14_CSR_DREQ_SHIFT                 3
#define DMA_TCD14_CSR_DREQ_WIDTH                 1
#define DMA_TCD14_CSR_DREQ(x)                    (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_DREQ_SHIFT))&DMA_TCD14_CSR_DREQ_MASK)
#define DMA_TCD14_CSR_ESG_MASK                   0x10u
#define DMA_TCD14_CSR_ESG_SHIFT                  4
#define DMA_TCD14_CSR_ESG_WIDTH                  1
#define DMA_TCD14_CSR_ESG(x)                     (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_ESG_SHIFT))&DMA_TCD14_CSR_ESG_MASK)
#define DMA_TCD14_CSR_MAJORELINK_MASK            0x20u
#define DMA_TCD14_CSR_MAJORELINK_SHIFT           5
#define DMA_TCD14_CSR_MAJORELINK_WIDTH           1
#define DMA_TCD14_CSR_MAJORELINK(x)              (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_MAJORELINK_SHIFT))&DMA_TCD14_CSR_MAJORELINK_MASK)
#define DMA_TCD14_CSR_ACTIVE_MASK                0x40u
#define DMA_TCD14_CSR_ACTIVE_SHIFT               6
#define DMA_TCD14_CSR_ACTIVE_WIDTH               1
#define DMA_TCD14_CSR_ACTIVE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_ACTIVE_SHIFT))&DMA_TCD14_CSR_ACTIVE_MASK)
#define DMA_TCD14_CSR_DONE_MASK                  0x80u
#define DMA_TCD14_CSR_DONE_SHIFT                 7
#define DMA_TCD14_CSR_DONE_WIDTH                 1
#define DMA_TCD14_CSR_DONE(x)                    (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_DONE_SHIFT))&DMA_TCD14_CSR_DONE_MASK)
#define DMA_TCD14_CSR_MAJORLINKCH_MASK           0xF00u
#define DMA_TCD14_CSR_MAJORLINKCH_SHIFT          8
#define DMA_TCD14_CSR_MAJORLINKCH_WIDTH          4
#define DMA_TCD14_CSR_MAJORLINKCH(x)             (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_MAJORLINKCH_SHIFT))&DMA_TCD14_CSR_MAJORLINKCH_MASK)
#define DMA_TCD14_CSR_BWC_MASK                   0xC000u
#define DMA_TCD14_CSR_BWC_SHIFT                  14
#define DMA_TCD14_CSR_BWC_WIDTH                  2
#define DMA_TCD14_CSR_BWC(x)                     (((uint16)(((uint16)(x))<<DMA_TCD14_CSR_BWC_SHIFT))&DMA_TCD14_CSR_BWC_MASK)
/* TCD14_BITER_ELINKNO Bit Fields */
#define DMA_TCD14_BITER_ELINKNO_BITER_MASK       0x7FFFu
#define DMA_TCD14_BITER_ELINKNO_BITER_SHIFT      0
#define DMA_TCD14_BITER_ELINKNO_BITER_WIDTH      15
#define DMA_TCD14_BITER_ELINKNO_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD14_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD14_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD14_BITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD14_BITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD14_BITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD14_BITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD14_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD14_BITER_ELINKNO_ELINK_MASK)
/* TCD14_BITER_ELINKYES Bit Fields */
#define DMA_TCD14_BITER_ELINKYES_BITER_MASK      0x1FFu
#define DMA_TCD14_BITER_ELINKYES_BITER_SHIFT     0
#define DMA_TCD14_BITER_ELINKYES_BITER_WIDTH     9
#define DMA_TCD14_BITER_ELINKYES_BITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD14_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD14_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD14_BITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD14_BITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD14_BITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD14_BITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD14_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD14_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD14_BITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD14_BITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD14_BITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD14_BITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD14_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD14_BITER_ELINKYES_ELINK_MASK)
/* TCD15_SADDR Bit Fields */
#define DMA_TCD15_SADDR_SADDR_MASK               0xFFFFFFFFu
#define DMA_TCD15_SADDR_SADDR_SHIFT              0
#define DMA_TCD15_SADDR_SADDR_WIDTH              32
#define DMA_TCD15_SADDR_SADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD15_SADDR_SADDR_SHIFT))&DMA_TCD15_SADDR_SADDR_MASK)
/* TCD15_SOFF Bit Fields */
#define DMA_TCD15_SOFF_SOFF_MASK                 0xFFFFu
#define DMA_TCD15_SOFF_SOFF_SHIFT                0
#define DMA_TCD15_SOFF_SOFF_WIDTH                16
#define DMA_TCD15_SOFF_SOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD15_SOFF_SOFF_SHIFT))&DMA_TCD15_SOFF_SOFF_MASK)
/* TCD15_ATTR Bit Fields */
#define DMA_TCD15_ATTR_DSIZE_MASK                0x7u
#define DMA_TCD15_ATTR_DSIZE_SHIFT               0
#define DMA_TCD15_ATTR_DSIZE_WIDTH               3
#define DMA_TCD15_ATTR_DSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD15_ATTR_DSIZE_SHIFT))&DMA_TCD15_ATTR_DSIZE_MASK)
#define DMA_TCD15_ATTR_DMOD_MASK                 0xF8u
#define DMA_TCD15_ATTR_DMOD_SHIFT                3
#define DMA_TCD15_ATTR_DMOD_WIDTH                5
#define DMA_TCD15_ATTR_DMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD15_ATTR_DMOD_SHIFT))&DMA_TCD15_ATTR_DMOD_MASK)
#define DMA_TCD15_ATTR_SSIZE_MASK                0x700u
#define DMA_TCD15_ATTR_SSIZE_SHIFT               8
#define DMA_TCD15_ATTR_SSIZE_WIDTH               3
#define DMA_TCD15_ATTR_SSIZE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD15_ATTR_SSIZE_SHIFT))&DMA_TCD15_ATTR_SSIZE_MASK)
#define DMA_TCD15_ATTR_SMOD_MASK                 0xF800u
#define DMA_TCD15_ATTR_SMOD_SHIFT                11
#define DMA_TCD15_ATTR_SMOD_WIDTH                5
#define DMA_TCD15_ATTR_SMOD(x)                   (((uint16)(((uint16)(x))<<DMA_TCD15_ATTR_SMOD_SHIFT))&DMA_TCD15_ATTR_SMOD_MASK)
/* TCD15_NBYTES_MLNO Bit Fields */
#define DMA_TCD15_NBYTES_MLNO_NBYTES_MASK        0xFFFFFFFFu
#define DMA_TCD15_NBYTES_MLNO_NBYTES_SHIFT       0
#define DMA_TCD15_NBYTES_MLNO_NBYTES_WIDTH       32
#define DMA_TCD15_NBYTES_MLNO_NBYTES(x)          (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD15_NBYTES_MLNO_NBYTES_MASK)
/* TCD15_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD15_NBYTES_MLOFFNO_NBYTES_MASK     0x3FFFFFFFu
#define DMA_TCD15_NBYTES_MLOFFNO_NBYTES_SHIFT    0
#define DMA_TCD15_NBYTES_MLOFFNO_NBYTES_WIDTH    30
#define DMA_TCD15_NBYTES_MLOFFNO_NBYTES(x)       (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD15_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD15_NBYTES_MLOFFNO_DMLOE_MASK      0x40000000u
#define DMA_TCD15_NBYTES_MLOFFNO_DMLOE_SHIFT     30
#define DMA_TCD15_NBYTES_MLOFFNO_DMLOE_WIDTH     1
#define DMA_TCD15_NBYTES_MLOFFNO_DMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD15_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD15_NBYTES_MLOFFNO_SMLOE_MASK      0x80000000u
#define DMA_TCD15_NBYTES_MLOFFNO_SMLOE_SHIFT     31
#define DMA_TCD15_NBYTES_MLOFFNO_SMLOE_WIDTH     1
#define DMA_TCD15_NBYTES_MLOFFNO_SMLOE(x)        (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD15_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD15_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD15_NBYTES_MLOFFYES_NBYTES_MASK    0x3FFu
#define DMA_TCD15_NBYTES_MLOFFYES_NBYTES_SHIFT   0
#define DMA_TCD15_NBYTES_MLOFFYES_NBYTES_WIDTH   10
#define DMA_TCD15_NBYTES_MLOFFYES_NBYTES(x)      (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD15_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD15_NBYTES_MLOFFYES_MLOFF_MASK     0x3FFFFC00u
#define DMA_TCD15_NBYTES_MLOFFYES_MLOFF_SHIFT    10
#define DMA_TCD15_NBYTES_MLOFFYES_MLOFF_WIDTH    20
#define DMA_TCD15_NBYTES_MLOFFYES_MLOFF(x)       (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD15_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD15_NBYTES_MLOFFYES_DMLOE_MASK     0x40000000u
#define DMA_TCD15_NBYTES_MLOFFYES_DMLOE_SHIFT    30
#define DMA_TCD15_NBYTES_MLOFFYES_DMLOE_WIDTH    1
#define DMA_TCD15_NBYTES_MLOFFYES_DMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD15_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD15_NBYTES_MLOFFYES_SMLOE_MASK     0x80000000u
#define DMA_TCD15_NBYTES_MLOFFYES_SMLOE_SHIFT    31
#define DMA_TCD15_NBYTES_MLOFFYES_SMLOE_WIDTH    1
#define DMA_TCD15_NBYTES_MLOFFYES_SMLOE(x)       (((uint32)(((uint32)(x))<<DMA_TCD15_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD15_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD15_SLAST Bit Fields */
#define DMA_TCD15_SLAST_SLAST_MASK               0xFFFFFFFFu
#define DMA_TCD15_SLAST_SLAST_SHIFT              0
#define DMA_TCD15_SLAST_SLAST_WIDTH              32
#define DMA_TCD15_SLAST_SLAST(x)                 (((uint32)(((uint32)(x))<<DMA_TCD15_SLAST_SLAST_SHIFT))&DMA_TCD15_SLAST_SLAST_MASK)
/* TCD15_DADDR Bit Fields */
#define DMA_TCD15_DADDR_DADDR_MASK               0xFFFFFFFFu
#define DMA_TCD15_DADDR_DADDR_SHIFT              0
#define DMA_TCD15_DADDR_DADDR_WIDTH              32
#define DMA_TCD15_DADDR_DADDR(x)                 (((uint32)(((uint32)(x))<<DMA_TCD15_DADDR_DADDR_SHIFT))&DMA_TCD15_DADDR_DADDR_MASK)
/* TCD15_DOFF Bit Fields */
#define DMA_TCD15_DOFF_DOFF_MASK                 0xFFFFu
#define DMA_TCD15_DOFF_DOFF_SHIFT                0
#define DMA_TCD15_DOFF_DOFF_WIDTH                16
#define DMA_TCD15_DOFF_DOFF(x)                   (((uint16)(((uint16)(x))<<DMA_TCD15_DOFF_DOFF_SHIFT))&DMA_TCD15_DOFF_DOFF_MASK)
/* TCD15_CITER_ELINKNO Bit Fields */
#define DMA_TCD15_CITER_ELINKNO_CITER_MASK       0x7FFFu
#define DMA_TCD15_CITER_ELINKNO_CITER_SHIFT      0
#define DMA_TCD15_CITER_ELINKNO_CITER_WIDTH      15
#define DMA_TCD15_CITER_ELINKNO_CITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD15_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD15_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD15_CITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD15_CITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD15_CITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD15_CITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD15_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD15_CITER_ELINKNO_ELINK_MASK)
/* TCD15_CITER_ELINKYES Bit Fields */
#define DMA_TCD15_CITER_ELINKYES_CITER_MASK      0x1FFu
#define DMA_TCD15_CITER_ELINKYES_CITER_SHIFT     0
#define DMA_TCD15_CITER_ELINKYES_CITER_WIDTH     9
#define DMA_TCD15_CITER_ELINKYES_CITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD15_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD15_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD15_CITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD15_CITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD15_CITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD15_CITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD15_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD15_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD15_CITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD15_CITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD15_CITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD15_CITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD15_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD15_CITER_ELINKYES_ELINK_MASK)
/* TCD15_DLASTSGA Bit Fields */
#define DMA_TCD15_DLASTSGA_DLASTSGA_MASK         0xFFFFFFFFu
#define DMA_TCD15_DLASTSGA_DLASTSGA_SHIFT        0
#define DMA_TCD15_DLASTSGA_DLASTSGA_WIDTH        32
#define DMA_TCD15_DLASTSGA_DLASTSGA(x)           (((uint32)(((uint32)(x))<<DMA_TCD15_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD15_DLASTSGA_DLASTSGA_MASK)
/* TCD15_CSR Bit Fields */
#define DMA_TCD15_CSR_START_MASK                 0x1u
#define DMA_TCD15_CSR_START_SHIFT                0
#define DMA_TCD15_CSR_START_WIDTH                1
#define DMA_TCD15_CSR_START(x)                   (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_START_SHIFT))&DMA_TCD15_CSR_START_MASK)
#define DMA_TCD15_CSR_INTMAJOR_MASK              0x2u
#define DMA_TCD15_CSR_INTMAJOR_SHIFT             1
#define DMA_TCD15_CSR_INTMAJOR_WIDTH             1
#define DMA_TCD15_CSR_INTMAJOR(x)                (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_INTMAJOR_SHIFT))&DMA_TCD15_CSR_INTMAJOR_MASK)
#define DMA_TCD15_CSR_INTHALF_MASK               0x4u
#define DMA_TCD15_CSR_INTHALF_SHIFT              2
#define DMA_TCD15_CSR_INTHALF_WIDTH              1
#define DMA_TCD15_CSR_INTHALF(x)                 (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_INTHALF_SHIFT))&DMA_TCD15_CSR_INTHALF_MASK)
#define DMA_TCD15_CSR_DREQ_MASK                  0x8u
#define DMA_TCD15_CSR_DREQ_SHIFT                 3
#define DMA_TCD15_CSR_DREQ_WIDTH                 1
#define DMA_TCD15_CSR_DREQ(x)                    (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_DREQ_SHIFT))&DMA_TCD15_CSR_DREQ_MASK)
#define DMA_TCD15_CSR_ESG_MASK                   0x10u
#define DMA_TCD15_CSR_ESG_SHIFT                  4
#define DMA_TCD15_CSR_ESG_WIDTH                  1
#define DMA_TCD15_CSR_ESG(x)                     (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_ESG_SHIFT))&DMA_TCD15_CSR_ESG_MASK)
#define DMA_TCD15_CSR_MAJORELINK_MASK            0x20u
#define DMA_TCD15_CSR_MAJORELINK_SHIFT           5
#define DMA_TCD15_CSR_MAJORELINK_WIDTH           1
#define DMA_TCD15_CSR_MAJORELINK(x)              (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_MAJORELINK_SHIFT))&DMA_TCD15_CSR_MAJORELINK_MASK)
#define DMA_TCD15_CSR_ACTIVE_MASK                0x40u
#define DMA_TCD15_CSR_ACTIVE_SHIFT               6
#define DMA_TCD15_CSR_ACTIVE_WIDTH               1
#define DMA_TCD15_CSR_ACTIVE(x)                  (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_ACTIVE_SHIFT))&DMA_TCD15_CSR_ACTIVE_MASK)
#define DMA_TCD15_CSR_DONE_MASK                  0x80u
#define DMA_TCD15_CSR_DONE_SHIFT                 7
#define DMA_TCD15_CSR_DONE_WIDTH                 1
#define DMA_TCD15_CSR_DONE(x)                    (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_DONE_SHIFT))&DMA_TCD15_CSR_DONE_MASK)
#define DMA_TCD15_CSR_MAJORLINKCH_MASK           0xF00u
#define DMA_TCD15_CSR_MAJORLINKCH_SHIFT          8
#define DMA_TCD15_CSR_MAJORLINKCH_WIDTH          4
#define DMA_TCD15_CSR_MAJORLINKCH(x)             (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_MAJORLINKCH_SHIFT))&DMA_TCD15_CSR_MAJORLINKCH_MASK)
#define DMA_TCD15_CSR_BWC_MASK                   0xC000u
#define DMA_TCD15_CSR_BWC_SHIFT                  14
#define DMA_TCD15_CSR_BWC_WIDTH                  2
#define DMA_TCD15_CSR_BWC(x)                     (((uint16)(((uint16)(x))<<DMA_TCD15_CSR_BWC_SHIFT))&DMA_TCD15_CSR_BWC_MASK)
/* TCD15_BITER_ELINKNO Bit Fields */
#define DMA_TCD15_BITER_ELINKNO_BITER_MASK       0x7FFFu
#define DMA_TCD15_BITER_ELINKNO_BITER_SHIFT      0
#define DMA_TCD15_BITER_ELINKNO_BITER_WIDTH      15
#define DMA_TCD15_BITER_ELINKNO_BITER(x)         (((uint16)(((uint16)(x))<<DMA_TCD15_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD15_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD15_BITER_ELINKNO_ELINK_MASK       0x8000u
#define DMA_TCD15_BITER_ELINKNO_ELINK_SHIFT      15
#define DMA_TCD15_BITER_ELINKNO_ELINK_WIDTH      1
#define DMA_TCD15_BITER_ELINKNO_ELINK(x)         (((uint16)(((uint16)(x))<<DMA_TCD15_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD15_BITER_ELINKNO_ELINK_MASK)
/* TCD15_BITER_ELINKYES Bit Fields */
#define DMA_TCD15_BITER_ELINKYES_BITER_MASK      0x1FFu
#define DMA_TCD15_BITER_ELINKYES_BITER_SHIFT     0
#define DMA_TCD15_BITER_ELINKYES_BITER_WIDTH     9
#define DMA_TCD15_BITER_ELINKYES_BITER(x)        (((uint16)(((uint16)(x))<<DMA_TCD15_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD15_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD15_BITER_ELINKYES_LINKCH_MASK     0x1E00u
#define DMA_TCD15_BITER_ELINKYES_LINKCH_SHIFT    9
#define DMA_TCD15_BITER_ELINKYES_LINKCH_WIDTH    4
#define DMA_TCD15_BITER_ELINKYES_LINKCH(x)       (((uint16)(((uint16)(x))<<DMA_TCD15_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD15_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD15_BITER_ELINKYES_ELINK_MASK      0x8000u
#define DMA_TCD15_BITER_ELINKYES_ELINK_SHIFT     15
#define DMA_TCD15_BITER_ELINKYES_ELINK_WIDTH     1
#define DMA_TCD15_BITER_ELINKYES_ELINK(x)        (((uint16)(((uint16)(x))<<DMA_TCD15_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD15_BITER_ELINKYES_ELINK_MASK)

/*!
 * @}
 */ /* end of group DMA_Register_Masks */


/* DMA - Peripheral instance base addresses */
/** Peripheral DMA base address */
#define DMA_BASE                                 (0x40008000u)
/** Peripheral DMA base pointer */
#define DMA                                      ((DMA_Type *)DMA_BASE)
#define DMA_BASE_PTR                             (DMA)
/** Array initializer of DMA peripheral base addresses */
#define DMA_BASE_ADDRS                           { DMA_BASE }
/** Array initializer of DMA peripheral base pointers */
#define DMA_BASE_PTRS                            { DMA }

/* ----------------------------------------------------------------------------
   -- DMA - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Register_Accessor_Macros DMA - Register accessor macros
 * @{
 */


/* DMA - Register instance definitions */
/* DMA */
#define DMA_CR                                   DMA_CR_REG(DMA)
#define DMA_ES                                   DMA_ES_REG(DMA)
#define DMA_ERQ                                  DMA_ERQ_REG(DMA)
#define DMA_EEI                                  DMA_EEI_REG(DMA)
#define DMA_CEEI                                 DMA_CEEI_REG(DMA)
#define DMA_SEEI                                 DMA_SEEI_REG(DMA)
#define DMA_CERQ                                 DMA_CERQ_REG(DMA)
#define DMA_SERQ                                 DMA_SERQ_REG(DMA)
#define DMA_CDNE                                 DMA_CDNE_REG(DMA)
#define DMA_SSRT                                 DMA_SSRT_REG(DMA)
#define DMA_CERR                                 DMA_CERR_REG(DMA)
#define DMA_CINT                                 DMA_CINT_REG(DMA)
#define DMA_INT                                  DMA_INT_REG(DMA)
#define DMA_ERR                                  DMA_ERR_REG(DMA)
#define DMA_HRS                                  DMA_HRS_REG(DMA)
#define DMA_EARS                                 DMA_EARS_REG(DMA)
#define DMA_DCHPRI3                              DMA_DCHPRI_REG(DMA,0)
#define DMA_DCHPRI2                              DMA_DCHPRI_REG(DMA,1)
#define DMA_DCHPRI1                              DMA_DCHPRI_REG(DMA,2)
#define DMA_DCHPRI0                              DMA_DCHPRI_REG(DMA,3)
#define DMA_DCHPRI7                              DMA_DCHPRI_REG(DMA,4)
#define DMA_DCHPRI6                              DMA_DCHPRI_REG(DMA,5)
#define DMA_DCHPRI5                              DMA_DCHPRI_REG(DMA,6)
#define DMA_DCHPRI4                              DMA_DCHPRI_REG(DMA,7)
#define DMA_DCHPRI11                             DMA_DCHPRI_REG(DMA,8)
#define DMA_DCHPRI10                             DMA_DCHPRI_REG(DMA,9)
#define DMA_DCHPRI9                              DMA_DCHPRI_REG(DMA,10)
#define DMA_DCHPRI8                              DMA_DCHPRI_REG(DMA,11)
#define DMA_DCHPRI15                             DMA_DCHPRI_REG(DMA,12)
#define DMA_DCHPRI14                             DMA_DCHPRI_REG(DMA,13)
#define DMA_DCHPRI13                             DMA_DCHPRI_REG(DMA,14)
#define DMA_DCHPRI12                             DMA_DCHPRI_REG(DMA,15)
#define DMA_TCD0_SADDR                           DMA_TCD0_SADDR_REG(DMA)
#define DMA_TCD0_SOFF                            DMA_TCD0_SOFF_REG(DMA)
#define DMA_TCD0_ATTR                            DMA_TCD0_ATTR_REG(DMA)
#define DMA_TCD0_NBYTES_MLNO                     DMA_TCD0_NBYTES_MLNO_REG(DMA)
#define DMA_TCD0_NBYTES_MLOFFNO                  DMA_TCD0_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD0_NBYTES_MLOFFYES                 DMA_TCD0_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD0_SLAST                           DMA_TCD0_SLAST_REG(DMA)
#define DMA_TCD0_DADDR                           DMA_TCD0_DADDR_REG(DMA)
#define DMA_TCD0_DOFF                            DMA_TCD0_DOFF_REG(DMA)
#define DMA_TCD0_CITER_ELINKNO                   DMA_TCD0_CITER_ELINKNO_REG(DMA)
#define DMA_TCD0_CITER_ELINKYES                  DMA_TCD0_CITER_ELINKYES_REG(DMA)
#define DMA_TCD0_DLASTSGA                        DMA_TCD0_DLASTSGA_REG(DMA)
#define DMA_TCD0_CSR                             DMA_TCD0_CSR_REG(DMA)
#define DMA_TCD0_BITER_ELINKNO                   DMA_TCD0_BITER_ELINKNO_REG(DMA)
#define DMA_TCD0_BITER_ELINKYES                  DMA_TCD0_BITER_ELINKYES_REG(DMA)
#define DMA_TCD1_SADDR                           DMA_TCD1_SADDR_REG(DMA)
#define DMA_TCD1_SOFF                            DMA_TCD1_SOFF_REG(DMA)
#define DMA_TCD1_ATTR                            DMA_TCD1_ATTR_REG(DMA)
#define DMA_TCD1_NBYTES_MLNO                     DMA_TCD1_NBYTES_MLNO_REG(DMA)
#define DMA_TCD1_NBYTES_MLOFFNO                  DMA_TCD1_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD1_NBYTES_MLOFFYES                 DMA_TCD1_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD1_SLAST                           DMA_TCD1_SLAST_REG(DMA)
#define DMA_TCD1_DADDR                           DMA_TCD1_DADDR_REG(DMA)
#define DMA_TCD1_DOFF                            DMA_TCD1_DOFF_REG(DMA)
#define DMA_TCD1_CITER_ELINKNO                   DMA_TCD1_CITER_ELINKNO_REG(DMA)
#define DMA_TCD1_CITER_ELINKYES                  DMA_TCD1_CITER_ELINKYES_REG(DMA)
#define DMA_TCD1_DLASTSGA                        DMA_TCD1_DLASTSGA_REG(DMA)
#define DMA_TCD1_CSR                             DMA_TCD1_CSR_REG(DMA)
#define DMA_TCD1_BITER_ELINKNO                   DMA_TCD1_BITER_ELINKNO_REG(DMA)
#define DMA_TCD1_BITER_ELINKYES                  DMA_TCD1_BITER_ELINKYES_REG(DMA)
#define DMA_TCD2_SADDR                           DMA_TCD2_SADDR_REG(DMA)
#define DMA_TCD2_SOFF                            DMA_TCD2_SOFF_REG(DMA)
#define DMA_TCD2_ATTR                            DMA_TCD2_ATTR_REG(DMA)
#define DMA_TCD2_NBYTES_MLNO                     DMA_TCD2_NBYTES_MLNO_REG(DMA)
#define DMA_TCD2_NBYTES_MLOFFNO                  DMA_TCD2_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD2_NBYTES_MLOFFYES                 DMA_TCD2_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD2_SLAST                           DMA_TCD2_SLAST_REG(DMA)
#define DMA_TCD2_DADDR                           DMA_TCD2_DADDR_REG(DMA)
#define DMA_TCD2_DOFF                            DMA_TCD2_DOFF_REG(DMA)
#define DMA_TCD2_CITER_ELINKNO                   DMA_TCD2_CITER_ELINKNO_REG(DMA)
#define DMA_TCD2_CITER_ELINKYES                  DMA_TCD2_CITER_ELINKYES_REG(DMA)
#define DMA_TCD2_DLASTSGA                        DMA_TCD2_DLASTSGA_REG(DMA)
#define DMA_TCD2_CSR                             DMA_TCD2_CSR_REG(DMA)
#define DMA_TCD2_BITER_ELINKNO                   DMA_TCD2_BITER_ELINKNO_REG(DMA)
#define DMA_TCD2_BITER_ELINKYES                  DMA_TCD2_BITER_ELINKYES_REG(DMA)
#define DMA_TCD3_SADDR                           DMA_TCD3_SADDR_REG(DMA)
#define DMA_TCD3_SOFF                            DMA_TCD3_SOFF_REG(DMA)
#define DMA_TCD3_ATTR                            DMA_TCD3_ATTR_REG(DMA)
#define DMA_TCD3_NBYTES_MLNO                     DMA_TCD3_NBYTES_MLNO_REG(DMA)
#define DMA_TCD3_NBYTES_MLOFFNO                  DMA_TCD3_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD3_NBYTES_MLOFFYES                 DMA_TCD3_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD3_SLAST                           DMA_TCD3_SLAST_REG(DMA)
#define DMA_TCD3_DADDR                           DMA_TCD3_DADDR_REG(DMA)
#define DMA_TCD3_DOFF                            DMA_TCD3_DOFF_REG(DMA)
#define DMA_TCD3_CITER_ELINKNO                   DMA_TCD3_CITER_ELINKNO_REG(DMA)
#define DMA_TCD3_CITER_ELINKYES                  DMA_TCD3_CITER_ELINKYES_REG(DMA)
#define DMA_TCD3_DLASTSGA                        DMA_TCD3_DLASTSGA_REG(DMA)
#define DMA_TCD3_CSR                             DMA_TCD3_CSR_REG(DMA)
#define DMA_TCD3_BITER_ELINKNO                   DMA_TCD3_BITER_ELINKNO_REG(DMA)
#define DMA_TCD3_BITER_ELINKYES                  DMA_TCD3_BITER_ELINKYES_REG(DMA)
#define DMA_TCD4_SADDR                           DMA_TCD4_SADDR_REG(DMA)
#define DMA_TCD4_SOFF                            DMA_TCD4_SOFF_REG(DMA)
#define DMA_TCD4_ATTR                            DMA_TCD4_ATTR_REG(DMA)
#define DMA_TCD4_NBYTES_MLNO                     DMA_TCD4_NBYTES_MLNO_REG(DMA)
#define DMA_TCD4_NBYTES_MLOFFNO                  DMA_TCD4_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD4_NBYTES_MLOFFYES                 DMA_TCD4_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD4_SLAST                           DMA_TCD4_SLAST_REG(DMA)
#define DMA_TCD4_DADDR                           DMA_TCD4_DADDR_REG(DMA)
#define DMA_TCD4_DOFF                            DMA_TCD4_DOFF_REG(DMA)
#define DMA_TCD4_CITER_ELINKNO                   DMA_TCD4_CITER_ELINKNO_REG(DMA)
#define DMA_TCD4_CITER_ELINKYES                  DMA_TCD4_CITER_ELINKYES_REG(DMA)
#define DMA_TCD4_DLASTSGA                        DMA_TCD4_DLASTSGA_REG(DMA)
#define DMA_TCD4_CSR                             DMA_TCD4_CSR_REG(DMA)
#define DMA_TCD4_BITER_ELINKNO                   DMA_TCD4_BITER_ELINKNO_REG(DMA)
#define DMA_TCD4_BITER_ELINKYES                  DMA_TCD4_BITER_ELINKYES_REG(DMA)
#define DMA_TCD5_SADDR                           DMA_TCD5_SADDR_REG(DMA)
#define DMA_TCD5_SOFF                            DMA_TCD5_SOFF_REG(DMA)
#define DMA_TCD5_ATTR                            DMA_TCD5_ATTR_REG(DMA)
#define DMA_TCD5_NBYTES_MLNO                     DMA_TCD5_NBYTES_MLNO_REG(DMA)
#define DMA_TCD5_NBYTES_MLOFFNO                  DMA_TCD5_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD5_NBYTES_MLOFFYES                 DMA_TCD5_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD5_SLAST                           DMA_TCD5_SLAST_REG(DMA)
#define DMA_TCD5_DADDR                           DMA_TCD5_DADDR_REG(DMA)
#define DMA_TCD5_DOFF                            DMA_TCD5_DOFF_REG(DMA)
#define DMA_TCD5_CITER_ELINKNO                   DMA_TCD5_CITER_ELINKNO_REG(DMA)
#define DMA_TCD5_CITER_ELINKYES                  DMA_TCD5_CITER_ELINKYES_REG(DMA)
#define DMA_TCD5_DLASTSGA                        DMA_TCD5_DLASTSGA_REG(DMA)
#define DMA_TCD5_CSR                             DMA_TCD5_CSR_REG(DMA)
#define DMA_TCD5_BITER_ELINKNO                   DMA_TCD5_BITER_ELINKNO_REG(DMA)
#define DMA_TCD5_BITER_ELINKYES                  DMA_TCD5_BITER_ELINKYES_REG(DMA)
#define DMA_TCD6_SADDR                           DMA_TCD6_SADDR_REG(DMA)
#define DMA_TCD6_SOFF                            DMA_TCD6_SOFF_REG(DMA)
#define DMA_TCD6_ATTR                            DMA_TCD6_ATTR_REG(DMA)
#define DMA_TCD6_NBYTES_MLNO                     DMA_TCD6_NBYTES_MLNO_REG(DMA)
#define DMA_TCD6_NBYTES_MLOFFNO                  DMA_TCD6_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD6_NBYTES_MLOFFYES                 DMA_TCD6_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD6_SLAST                           DMA_TCD6_SLAST_REG(DMA)
#define DMA_TCD6_DADDR                           DMA_TCD6_DADDR_REG(DMA)
#define DMA_TCD6_DOFF                            DMA_TCD6_DOFF_REG(DMA)
#define DMA_TCD6_CITER_ELINKNO                   DMA_TCD6_CITER_ELINKNO_REG(DMA)
#define DMA_TCD6_CITER_ELINKYES                  DMA_TCD6_CITER_ELINKYES_REG(DMA)
#define DMA_TCD6_DLASTSGA                        DMA_TCD6_DLASTSGA_REG(DMA)
#define DMA_TCD6_CSR                             DMA_TCD6_CSR_REG(DMA)
#define DMA_TCD6_BITER_ELINKNO                   DMA_TCD6_BITER_ELINKNO_REG(DMA)
#define DMA_TCD6_BITER_ELINKYES                  DMA_TCD6_BITER_ELINKYES_REG(DMA)
#define DMA_TCD7_SADDR                           DMA_TCD7_SADDR_REG(DMA)
#define DMA_TCD7_SOFF                            DMA_TCD7_SOFF_REG(DMA)
#define DMA_TCD7_ATTR                            DMA_TCD7_ATTR_REG(DMA)
#define DMA_TCD7_NBYTES_MLNO                     DMA_TCD7_NBYTES_MLNO_REG(DMA)
#define DMA_TCD7_NBYTES_MLOFFNO                  DMA_TCD7_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD7_NBYTES_MLOFFYES                 DMA_TCD7_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD7_SLAST                           DMA_TCD7_SLAST_REG(DMA)
#define DMA_TCD7_DADDR                           DMA_TCD7_DADDR_REG(DMA)
#define DMA_TCD7_DOFF                            DMA_TCD7_DOFF_REG(DMA)
#define DMA_TCD7_CITER_ELINKNO                   DMA_TCD7_CITER_ELINKNO_REG(DMA)
#define DMA_TCD7_CITER_ELINKYES                  DMA_TCD7_CITER_ELINKYES_REG(DMA)
#define DMA_TCD7_DLASTSGA                        DMA_TCD7_DLASTSGA_REG(DMA)
#define DMA_TCD7_CSR                             DMA_TCD7_CSR_REG(DMA)
#define DMA_TCD7_BITER_ELINKNO                   DMA_TCD7_BITER_ELINKNO_REG(DMA)
#define DMA_TCD7_BITER_ELINKYES                  DMA_TCD7_BITER_ELINKYES_REG(DMA)
#define DMA_TCD8_SADDR                           DMA_TCD8_SADDR_REG(DMA)
#define DMA_TCD8_SOFF                            DMA_TCD8_SOFF_REG(DMA)
#define DMA_TCD8_ATTR                            DMA_TCD8_ATTR_REG(DMA)
#define DMA_TCD8_NBYTES_MLNO                     DMA_TCD8_NBYTES_MLNO_REG(DMA)
#define DMA_TCD8_NBYTES_MLOFFNO                  DMA_TCD8_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD8_NBYTES_MLOFFYES                 DMA_TCD8_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD8_SLAST                           DMA_TCD8_SLAST_REG(DMA)
#define DMA_TCD8_DADDR                           DMA_TCD8_DADDR_REG(DMA)
#define DMA_TCD8_DOFF                            DMA_TCD8_DOFF_REG(DMA)
#define DMA_TCD8_CITER_ELINKNO                   DMA_TCD8_CITER_ELINKNO_REG(DMA)
#define DMA_TCD8_CITER_ELINKYES                  DMA_TCD8_CITER_ELINKYES_REG(DMA)
#define DMA_TCD8_DLASTSGA                        DMA_TCD8_DLASTSGA_REG(DMA)
#define DMA_TCD8_CSR                             DMA_TCD8_CSR_REG(DMA)
#define DMA_TCD8_BITER_ELINKNO                   DMA_TCD8_BITER_ELINKNO_REG(DMA)
#define DMA_TCD8_BITER_ELINKYES                  DMA_TCD8_BITER_ELINKYES_REG(DMA)
#define DMA_TCD9_SADDR                           DMA_TCD9_SADDR_REG(DMA)
#define DMA_TCD9_SOFF                            DMA_TCD9_SOFF_REG(DMA)
#define DMA_TCD9_ATTR                            DMA_TCD9_ATTR_REG(DMA)
#define DMA_TCD9_NBYTES_MLNO                     DMA_TCD9_NBYTES_MLNO_REG(DMA)
#define DMA_TCD9_NBYTES_MLOFFNO                  DMA_TCD9_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD9_NBYTES_MLOFFYES                 DMA_TCD9_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD9_SLAST                           DMA_TCD9_SLAST_REG(DMA)
#define DMA_TCD9_DADDR                           DMA_TCD9_DADDR_REG(DMA)
#define DMA_TCD9_DOFF                            DMA_TCD9_DOFF_REG(DMA)
#define DMA_TCD9_CITER_ELINKNO                   DMA_TCD9_CITER_ELINKNO_REG(DMA)
#define DMA_TCD9_CITER_ELINKYES                  DMA_TCD9_CITER_ELINKYES_REG(DMA)
#define DMA_TCD9_DLASTSGA                        DMA_TCD9_DLASTSGA_REG(DMA)
#define DMA_TCD9_CSR                             DMA_TCD9_CSR_REG(DMA)
#define DMA_TCD9_BITER_ELINKNO                   DMA_TCD9_BITER_ELINKNO_REG(DMA)
#define DMA_TCD9_BITER_ELINKYES                  DMA_TCD9_BITER_ELINKYES_REG(DMA)
#define DMA_TCD10_SADDR                          DMA_TCD10_SADDR_REG(DMA)
#define DMA_TCD10_SOFF                           DMA_TCD10_SOFF_REG(DMA)
#define DMA_TCD10_ATTR                           DMA_TCD10_ATTR_REG(DMA)
#define DMA_TCD10_NBYTES_MLNO                    DMA_TCD10_NBYTES_MLNO_REG(DMA)
#define DMA_TCD10_NBYTES_MLOFFNO                 DMA_TCD10_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD10_NBYTES_MLOFFYES                DMA_TCD10_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD10_SLAST                          DMA_TCD10_SLAST_REG(DMA)
#define DMA_TCD10_DADDR                          DMA_TCD10_DADDR_REG(DMA)
#define DMA_TCD10_DOFF                           DMA_TCD10_DOFF_REG(DMA)
#define DMA_TCD10_CITER_ELINKNO                  DMA_TCD10_CITER_ELINKNO_REG(DMA)
#define DMA_TCD10_CITER_ELINKYES                 DMA_TCD10_CITER_ELINKYES_REG(DMA)
#define DMA_TCD10_DLASTSGA                       DMA_TCD10_DLASTSGA_REG(DMA)
#define DMA_TCD10_CSR                            DMA_TCD10_CSR_REG(DMA)
#define DMA_TCD10_BITER_ELINKNO                  DMA_TCD10_BITER_ELINKNO_REG(DMA)
#define DMA_TCD10_BITER_ELINKYES                 DMA_TCD10_BITER_ELINKYES_REG(DMA)
#define DMA_TCD11_SADDR                          DMA_TCD11_SADDR_REG(DMA)
#define DMA_TCD11_SOFF                           DMA_TCD11_SOFF_REG(DMA)
#define DMA_TCD11_ATTR                           DMA_TCD11_ATTR_REG(DMA)
#define DMA_TCD11_NBYTES_MLNO                    DMA_TCD11_NBYTES_MLNO_REG(DMA)
#define DMA_TCD11_NBYTES_MLOFFNO                 DMA_TCD11_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD11_NBYTES_MLOFFYES                DMA_TCD11_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD11_SLAST                          DMA_TCD11_SLAST_REG(DMA)
#define DMA_TCD11_DADDR                          DMA_TCD11_DADDR_REG(DMA)
#define DMA_TCD11_DOFF                           DMA_TCD11_DOFF_REG(DMA)
#define DMA_TCD11_CITER_ELINKNO                  DMA_TCD11_CITER_ELINKNO_REG(DMA)
#define DMA_TCD11_CITER_ELINKYES                 DMA_TCD11_CITER_ELINKYES_REG(DMA)
#define DMA_TCD11_DLASTSGA                       DMA_TCD11_DLASTSGA_REG(DMA)
#define DMA_TCD11_CSR                            DMA_TCD11_CSR_REG(DMA)
#define DMA_TCD11_BITER_ELINKNO                  DMA_TCD11_BITER_ELINKNO_REG(DMA)
#define DMA_TCD11_BITER_ELINKYES                 DMA_TCD11_BITER_ELINKYES_REG(DMA)
#define DMA_TCD12_SADDR                          DMA_TCD12_SADDR_REG(DMA)
#define DMA_TCD12_SOFF                           DMA_TCD12_SOFF_REG(DMA)
#define DMA_TCD12_ATTR                           DMA_TCD12_ATTR_REG(DMA)
#define DMA_TCD12_NBYTES_MLNO                    DMA_TCD12_NBYTES_MLNO_REG(DMA)
#define DMA_TCD12_NBYTES_MLOFFNO                 DMA_TCD12_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD12_NBYTES_MLOFFYES                DMA_TCD12_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD12_SLAST                          DMA_TCD12_SLAST_REG(DMA)
#define DMA_TCD12_DADDR                          DMA_TCD12_DADDR_REG(DMA)
#define DMA_TCD12_DOFF                           DMA_TCD12_DOFF_REG(DMA)
#define DMA_TCD12_CITER_ELINKNO                  DMA_TCD12_CITER_ELINKNO_REG(DMA)
#define DMA_TCD12_CITER_ELINKYES                 DMA_TCD12_CITER_ELINKYES_REG(DMA)
#define DMA_TCD12_DLASTSGA                       DMA_TCD12_DLASTSGA_REG(DMA)
#define DMA_TCD12_CSR                            DMA_TCD12_CSR_REG(DMA)
#define DMA_TCD12_BITER_ELINKNO                  DMA_TCD12_BITER_ELINKNO_REG(DMA)
#define DMA_TCD12_BITER_ELINKYES                 DMA_TCD12_BITER_ELINKYES_REG(DMA)
#define DMA_TCD13_SADDR                          DMA_TCD13_SADDR_REG(DMA)
#define DMA_TCD13_SOFF                           DMA_TCD13_SOFF_REG(DMA)
#define DMA_TCD13_ATTR                           DMA_TCD13_ATTR_REG(DMA)
#define DMA_TCD13_NBYTES_MLNO                    DMA_TCD13_NBYTES_MLNO_REG(DMA)
#define DMA_TCD13_NBYTES_MLOFFNO                 DMA_TCD13_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD13_NBYTES_MLOFFYES                DMA_TCD13_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD13_SLAST                          DMA_TCD13_SLAST_REG(DMA)
#define DMA_TCD13_DADDR                          DMA_TCD13_DADDR_REG(DMA)
#define DMA_TCD13_DOFF                           DMA_TCD13_DOFF_REG(DMA)
#define DMA_TCD13_CITER_ELINKNO                  DMA_TCD13_CITER_ELINKNO_REG(DMA)
#define DMA_TCD13_CITER_ELINKYES                 DMA_TCD13_CITER_ELINKYES_REG(DMA)
#define DMA_TCD13_DLASTSGA                       DMA_TCD13_DLASTSGA_REG(DMA)
#define DMA_TCD13_CSR                            DMA_TCD13_CSR_REG(DMA)
#define DMA_TCD13_BITER_ELINKNO                  DMA_TCD13_BITER_ELINKNO_REG(DMA)
#define DMA_TCD13_BITER_ELINKYES                 DMA_TCD13_BITER_ELINKYES_REG(DMA)
#define DMA_TCD14_SADDR                          DMA_TCD14_SADDR_REG(DMA)
#define DMA_TCD14_SOFF                           DMA_TCD14_SOFF_REG(DMA)
#define DMA_TCD14_ATTR                           DMA_TCD14_ATTR_REG(DMA)
#define DMA_TCD14_NBYTES_MLNO                    DMA_TCD14_NBYTES_MLNO_REG(DMA)
#define DMA_TCD14_NBYTES_MLOFFNO                 DMA_TCD14_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD14_NBYTES_MLOFFYES                DMA_TCD14_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD14_SLAST                          DMA_TCD14_SLAST_REG(DMA)
#define DMA_TCD14_DADDR                          DMA_TCD14_DADDR_REG(DMA)
#define DMA_TCD14_DOFF                           DMA_TCD14_DOFF_REG(DMA)
#define DMA_TCD14_CITER_ELINKNO                  DMA_TCD14_CITER_ELINKNO_REG(DMA)
#define DMA_TCD14_CITER_ELINKYES                 DMA_TCD14_CITER_ELINKYES_REG(DMA)
#define DMA_TCD14_DLASTSGA                       DMA_TCD14_DLASTSGA_REG(DMA)
#define DMA_TCD14_CSR                            DMA_TCD14_CSR_REG(DMA)
#define DMA_TCD14_BITER_ELINKNO                  DMA_TCD14_BITER_ELINKNO_REG(DMA)
#define DMA_TCD14_BITER_ELINKYES                 DMA_TCD14_BITER_ELINKYES_REG(DMA)
#define DMA_TCD15_SADDR                          DMA_TCD15_SADDR_REG(DMA)
#define DMA_TCD15_SOFF                           DMA_TCD15_SOFF_REG(DMA)
#define DMA_TCD15_ATTR                           DMA_TCD15_ATTR_REG(DMA)
#define DMA_TCD15_NBYTES_MLNO                    DMA_TCD15_NBYTES_MLNO_REG(DMA)
#define DMA_TCD15_NBYTES_MLOFFNO                 DMA_TCD15_NBYTES_MLOFFNO_REG(DMA)
#define DMA_TCD15_NBYTES_MLOFFYES                DMA_TCD15_NBYTES_MLOFFYES_REG(DMA)
#define DMA_TCD15_SLAST                          DMA_TCD15_SLAST_REG(DMA)
#define DMA_TCD15_DADDR                          DMA_TCD15_DADDR_REG(DMA)
#define DMA_TCD15_DOFF                           DMA_TCD15_DOFF_REG(DMA)
#define DMA_TCD15_CITER_ELINKNO                  DMA_TCD15_CITER_ELINKNO_REG(DMA)
#define DMA_TCD15_CITER_ELINKYES                 DMA_TCD15_CITER_ELINKYES_REG(DMA)
#define DMA_TCD15_DLASTSGA                       DMA_TCD15_DLASTSGA_REG(DMA)
#define DMA_TCD15_CSR                            DMA_TCD15_CSR_REG(DMA)
#define DMA_TCD15_BITER_ELINKNO                  DMA_TCD15_BITER_ELINKNO_REG(DMA)
#define DMA_TCD15_BITER_ELINKYES                 DMA_TCD15_BITER_ELINKYES_REG(DMA)

/* DMA - Register array accessors */
#define DMA_DCHPRI(index)                        DMA_DCHPRI_REG(DMA,index)

/*!
 * @}
 */ /* end of group DMA_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group DMA_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMAMUX Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Peripheral_Access_Layer DMAMUX Peripheral Access Layer
 * @{
 */

/** DMAMUX - Register Layout Typedef */
typedef struct {
  __IO uint8 CHCFG[16];                            /**< Channel Configuration register, array offset: 0x0, array step: 0x1 */
} DMAMUX_Type, *DMAMUX_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- DMAMUX - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Register_Accessor_Macros DMAMUX - Register accessor macros
 * @{
 */


/* DMAMUX - Register accessors */
#define DMAMUX_CHCFG_REG(base,index)             ((base)->CHCFG[index])
#define DMAMUX_CHCFG_COUNT                       16

/*!
 * @}
 */ /* end of group DMAMUX_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- DMAMUX Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Register_Masks DMAMUX Register Masks
 * @{
 */

/* CHCFG Bit Fields */
#define DMAMUX_CHCFG_SOURCE_MASK                 0x3Fu
#define DMAMUX_CHCFG_SOURCE_SHIFT                0
#define DMAMUX_CHCFG_SOURCE_WIDTH                6
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8)(((uint8)(x))<<DMAMUX_CHCFG_SOURCE_SHIFT))&DMAMUX_CHCFG_SOURCE_MASK)
#define DMAMUX_CHCFG_TRIG_MASK                   0x40u
#define DMAMUX_CHCFG_TRIG_SHIFT                  6
#define DMAMUX_CHCFG_TRIG_WIDTH                  1
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8)(((uint8)(x))<<DMAMUX_CHCFG_TRIG_SHIFT))&DMAMUX_CHCFG_TRIG_MASK)
#define DMAMUX_CHCFG_ENBL_MASK                   0x80u
#define DMAMUX_CHCFG_ENBL_SHIFT                  7
#define DMAMUX_CHCFG_ENBL_WIDTH                  1
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8)(((uint8)(x))<<DMAMUX_CHCFG_ENBL_SHIFT))&DMAMUX_CHCFG_ENBL_MASK)

/*!
 * @}
 */ /* end of group DMAMUX_Register_Masks */


/* DMAMUX - Peripheral instance base addresses */
/** Peripheral DMAMUX base address */
#define DMAMUX_BASE                              (0x40021000u)
/** Peripheral DMAMUX base pointer */
#define DMAMUX                                   ((DMAMUX_Type *)DMAMUX_BASE)
#define DMAMUX_BASE_PTR                          (DMAMUX)
/** Array initializer of DMAMUX peripheral base addresses */
#define DMAMUX_BASE_ADDRS                        { DMAMUX_BASE }
/** Array initializer of DMAMUX peripheral base pointers */
#define DMAMUX_BASE_PTRS                         { DMAMUX }

/* ----------------------------------------------------------------------------
   -- DMAMUX - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Register_Accessor_Macros DMAMUX - Register accessor macros
 * @{
 */


/* DMAMUX - Register instance definitions */
/* DMAMUX */
#define DMAMUX_CHCFG0                            DMAMUX_CHCFG_REG(DMAMUX,0)
#define DMAMUX_CHCFG1                            DMAMUX_CHCFG_REG(DMAMUX,1)
#define DMAMUX_CHCFG2                            DMAMUX_CHCFG_REG(DMAMUX,2)
#define DMAMUX_CHCFG3                            DMAMUX_CHCFG_REG(DMAMUX,3)
#define DMAMUX_CHCFG4                            DMAMUX_CHCFG_REG(DMAMUX,4)
#define DMAMUX_CHCFG5                            DMAMUX_CHCFG_REG(DMAMUX,5)
#define DMAMUX_CHCFG6                            DMAMUX_CHCFG_REG(DMAMUX,6)
#define DMAMUX_CHCFG7                            DMAMUX_CHCFG_REG(DMAMUX,7)
#define DMAMUX_CHCFG8                            DMAMUX_CHCFG_REG(DMAMUX,8)
#define DMAMUX_CHCFG9                            DMAMUX_CHCFG_REG(DMAMUX,9)
#define DMAMUX_CHCFG10                           DMAMUX_CHCFG_REG(DMAMUX,10)
#define DMAMUX_CHCFG11                           DMAMUX_CHCFG_REG(DMAMUX,11)
#define DMAMUX_CHCFG12                           DMAMUX_CHCFG_REG(DMAMUX,12)
#define DMAMUX_CHCFG13                           DMAMUX_CHCFG_REG(DMAMUX,13)
#define DMAMUX_CHCFG14                           DMAMUX_CHCFG_REG(DMAMUX,14)
#define DMAMUX_CHCFG15                           DMAMUX_CHCFG_REG(DMAMUX,15)

/* DMAMUX - Register array accessors */
#define DMAMUX_CHCFG(index)                      DMAMUX_CHCFG_REG(DMAMUX,index)

/*!
 * @}
 */ /* end of group DMAMUX_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group DMAMUX_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- EWM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EWM_Peripheral_Access_Layer EWM Peripheral Access Layer
 * @{
 */

/** EWM - Register Layout Typedef */
typedef struct {
  __IO uint8 CTRL;                                 /**< Control Register, offset: 0x0 */
  __O  uint8 SERV;                                 /**< Service Register, offset: 0x1 */
  __IO uint8 CMPL;                                 /**< Compare Low Register, offset: 0x2 */
  __IO uint8 CMPH;                                 /**< Compare High Register, offset: 0x3 */
       uint8 RESERVED_0[1];
  __IO uint8 CLKPRESCALER;                         /**< Clock Prescaler Register, offset: 0x5 */
} EWM_Type, *EWM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- EWM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EWM_Register_Accessor_Macros EWM - Register accessor macros
 * @{
 */


/* EWM - Register accessors */
#define EWM_CTRL_REG(base)                       ((base)->CTRL)
#define EWM_SERV_REG(base)                       ((base)->SERV)
#define EWM_CMPL_REG(base)                       ((base)->CMPL)
#define EWM_CMPH_REG(base)                       ((base)->CMPH)
#define EWM_CLKPRESCALER_REG(base)               ((base)->CLKPRESCALER)

/*!
 * @}
 */ /* end of group EWM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- EWM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EWM_Register_Masks EWM Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define EWM_CTRL_EWMEN_MASK                      0x1u
#define EWM_CTRL_EWMEN_SHIFT                     0
#define EWM_CTRL_EWMEN_WIDTH                     1
#define EWM_CTRL_EWMEN(x)                        (((uint8)(((uint8)(x))<<EWM_CTRL_EWMEN_SHIFT))&EWM_CTRL_EWMEN_MASK)
#define EWM_CTRL_ASSIN_MASK                      0x2u
#define EWM_CTRL_ASSIN_SHIFT                     1
#define EWM_CTRL_ASSIN_WIDTH                     1
#define EWM_CTRL_ASSIN(x)                        (((uint8)(((uint8)(x))<<EWM_CTRL_ASSIN_SHIFT))&EWM_CTRL_ASSIN_MASK)
#define EWM_CTRL_INEN_MASK                       0x4u
#define EWM_CTRL_INEN_SHIFT                      2
#define EWM_CTRL_INEN_WIDTH                      1
#define EWM_CTRL_INEN(x)                         (((uint8)(((uint8)(x))<<EWM_CTRL_INEN_SHIFT))&EWM_CTRL_INEN_MASK)
#define EWM_CTRL_INTEN_MASK                      0x8u
#define EWM_CTRL_INTEN_SHIFT                     3
#define EWM_CTRL_INTEN_WIDTH                     1
#define EWM_CTRL_INTEN(x)                        (((uint8)(((uint8)(x))<<EWM_CTRL_INTEN_SHIFT))&EWM_CTRL_INTEN_MASK)
/* SERV Bit Fields */
#define EWM_SERV_SERVICE_MASK                    0xFFu
#define EWM_SERV_SERVICE_SHIFT                   0
#define EWM_SERV_SERVICE_WIDTH                   8
#define EWM_SERV_SERVICE(x)                      (((uint8)(((uint8)(x))<<EWM_SERV_SERVICE_SHIFT))&EWM_SERV_SERVICE_MASK)
/* CMPL Bit Fields */
#define EWM_CMPL_COMPAREL_MASK                   0xFFu
#define EWM_CMPL_COMPAREL_SHIFT                  0
#define EWM_CMPL_COMPAREL_WIDTH                  8
#define EWM_CMPL_COMPAREL(x)                     (((uint8)(((uint8)(x))<<EWM_CMPL_COMPAREL_SHIFT))&EWM_CMPL_COMPAREL_MASK)
/* CMPH Bit Fields */
#define EWM_CMPH_COMPAREH_MASK                   0xFFu
#define EWM_CMPH_COMPAREH_SHIFT                  0
#define EWM_CMPH_COMPAREH_WIDTH                  8
#define EWM_CMPH_COMPAREH(x)                     (((uint8)(((uint8)(x))<<EWM_CMPH_COMPAREH_SHIFT))&EWM_CMPH_COMPAREH_MASK)
/* CLKPRESCALER Bit Fields */
#define EWM_CLKPRESCALER_CLK_DIV_MASK            0xFFu
#define EWM_CLKPRESCALER_CLK_DIV_SHIFT           0
#define EWM_CLKPRESCALER_CLK_DIV_WIDTH           8
#define EWM_CLKPRESCALER_CLK_DIV(x)              (((uint8)(((uint8)(x))<<EWM_CLKPRESCALER_CLK_DIV_SHIFT))&EWM_CLKPRESCALER_CLK_DIV_MASK)

/*!
 * @}
 */ /* end of group EWM_Register_Masks */


/* EWM - Peripheral instance base addresses */
/** Peripheral EWM base address */
#define EWM_BASE                                 (0x40061000u)
/** Peripheral EWM base pointer */
#define EWM                                      ((EWM_Type *)EWM_BASE)
#define EWM_BASE_PTR                             (EWM)
/** Array initializer of EWM peripheral base addresses */
#define EWM_BASE_ADDRS                           { EWM_BASE }
/** Array initializer of EWM peripheral base pointers */
#define EWM_BASE_PTRS                            { EWM }

/* ----------------------------------------------------------------------------
   -- EWM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup EWM_Register_Accessor_Macros EWM - Register accessor macros
 * @{
 */


/* EWM - Register instance definitions */
/* EWM */
#define EWM_CTRL                                 EWM_CTRL_REG(EWM)
#define EWM_SERV                                 EWM_SERV_REG(EWM)
#define EWM_CMPL                                 EWM_CMPL_REG(EWM)
#define EWM_CMPH                                 EWM_CMPH_REG(EWM)
#define EWM_CLKPRESCALER                         EWM_CLKPRESCALER_REG(EWM)

/*!
 * @}
 */ /* end of group EWM_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group EWM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FLEXIO Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FLEXIO_Peripheral_Access_Layer FLEXIO Peripheral Access Layer
 * @{
 */

/** FLEXIO - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< Parameter Register, offset: 0x4 */
  __IO uint32 CTRL;                                /**< FlexIO Control Register, offset: 0x8 */
  __I  uint32 PIN;                                 /**< Pin State Register, offset: 0xC */
  __IO uint32 SHIFTSTAT;                           /**< Shifter Status Register, offset: 0x10 */
  __IO uint32 SHIFTERR;                            /**< Shifter Error Register, offset: 0x14 */
  __IO uint32 TIMSTAT;                             /**< Timer Status Register, offset: 0x18 */
       uint8 RESERVED_0[4];
  __IO uint32 SHIFTSIEN;                           /**< Shifter Status Interrupt Enable, offset: 0x20 */
  __IO uint32 SHIFTEIEN;                           /**< Shifter Error Interrupt Enable, offset: 0x24 */
  __IO uint32 TIMIEN;                              /**< Timer Interrupt Enable Register, offset: 0x28 */
       uint8 RESERVED_1[4];
  __IO uint32 SHIFTSDEN;                           /**< Shifter Status DMA Enable, offset: 0x30 */
       uint8 RESERVED_2[12];
  __IO uint32 SHIFTSTATE;                          /**< Shifter State Register, offset: 0x40 */
       uint8 RESERVED_3[60];
  __IO uint32 SHIFTCTL[4];                         /**< Shifter Control N Register, array offset: 0x80, array step: 0x4 */
       uint8 RESERVED_4[112];
  __IO uint32 SHIFTCFG[4];                         /**< Shifter Configuration N Register, array offset: 0x100, array step: 0x4 */
       uint8 RESERVED_5[240];
  __IO uint32 SHIFTBUF[4];                         /**< Shifter Buffer N Register, array offset: 0x200, array step: 0x4 */
       uint8 RESERVED_6[112];
  __IO uint32 SHIFTBUFBIS[4];                      /**< Shifter Buffer N Bit Swapped Register, array offset: 0x280, array step: 0x4 */
       uint8 RESERVED_7[112];
  __IO uint32 SHIFTBUFBYS[4];                      /**< Shifter Buffer N Byte Swapped Register, array offset: 0x300, array step: 0x4 */
       uint8 RESERVED_8[112];
  __IO uint32 SHIFTBUFBBS[4];                      /**< Shifter Buffer N Bit Byte Swapped Register, array offset: 0x380, array step: 0x4 */
       uint8 RESERVED_9[112];
  __IO uint32 TIMCTL[4];                           /**< Timer Control N Register, array offset: 0x400, array step: 0x4 */
       uint8 RESERVED_10[112];
  __IO uint32 TIMCFG[4];                           /**< Timer Configuration N Register, array offset: 0x480, array step: 0x4 */
       uint8 RESERVED_11[112];
  __IO uint32 TIMCMP[4];                           /**< Timer Compare N Register, array offset: 0x500, array step: 0x4 */
} FLEXIO_Type, *FLEXIO_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- FLEXIO - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FLEXIO_Register_Accessor_Macros FLEXIO - Register accessor macros
 * @{
 */


/* FLEXIO - Register accessors */
#define FLEXIO_VERID_REG(base)                   ((base)->VERID)
#define FLEXIO_PARAM_REG(base)                   ((base)->PARAM)
#define FLEXIO_CTRL_REG(base)                    ((base)->CTRL)
#define FLEXIO_PIN_REG(base)                     ((base)->PIN)
#define FLEXIO_SHIFTSTAT_REG(base)               ((base)->SHIFTSTAT)
#define FLEXIO_SHIFTERR_REG(base)                ((base)->SHIFTERR)
#define FLEXIO_TIMSTAT_REG(base)                 ((base)->TIMSTAT)
#define FLEXIO_SHIFTSIEN_REG(base)               ((base)->SHIFTSIEN)
#define FLEXIO_SHIFTEIEN_REG(base)               ((base)->SHIFTEIEN)
#define FLEXIO_TIMIEN_REG(base)                  ((base)->TIMIEN)
#define FLEXIO_SHIFTSDEN_REG(base)               ((base)->SHIFTSDEN)
#define FLEXIO_SHIFTSTATE_REG(base)              ((base)->SHIFTSTATE)
#define FLEXIO_SHIFTCTL_REG(base,index)          ((base)->SHIFTCTL[index])
#define FLEXIO_SHIFTCTL_COUNT                    4
#define FLEXIO_SHIFTCFG_REG(base,index)          ((base)->SHIFTCFG[index])
#define FLEXIO_SHIFTCFG_COUNT                    4
#define FLEXIO_SHIFTBUF_REG(base,index)          ((base)->SHIFTBUF[index])
#define FLEXIO_SHIFTBUF_COUNT                    4
#define FLEXIO_SHIFTBUFBIS_REG(base,index)       ((base)->SHIFTBUFBIS[index])
#define FLEXIO_SHIFTBUFBIS_COUNT                 4
#define FLEXIO_SHIFTBUFBYS_REG(base,index)       ((base)->SHIFTBUFBYS[index])
#define FLEXIO_SHIFTBUFBYS_COUNT                 4
#define FLEXIO_SHIFTBUFBBS_REG(base,index)       ((base)->SHIFTBUFBBS[index])
#define FLEXIO_SHIFTBUFBBS_COUNT                 4
#define FLEXIO_TIMCTL_REG(base,index)            ((base)->TIMCTL[index])
#define FLEXIO_TIMCTL_COUNT                      4
#define FLEXIO_TIMCFG_REG(base,index)            ((base)->TIMCFG[index])
#define FLEXIO_TIMCFG_COUNT                      4
#define FLEXIO_TIMCMP_REG(base,index)            ((base)->TIMCMP[index])
#define FLEXIO_TIMCMP_COUNT                      4

/*!
 * @}
 */ /* end of group FLEXIO_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- FLEXIO Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FLEXIO_Register_Masks FLEXIO Register Masks
 * @{
 */

/* VERID Bit Fields */
#define FLEXIO_VERID_FEATURE_MASK                0xFFFFu
#define FLEXIO_VERID_FEATURE_SHIFT               0
#define FLEXIO_VERID_FEATURE_WIDTH               16
#define FLEXIO_VERID_FEATURE(x)                  (((uint32)(((uint32)(x))<<FLEXIO_VERID_FEATURE_SHIFT))&FLEXIO_VERID_FEATURE_MASK)
#define FLEXIO_VERID_MINOR_MASK                  0xFF0000u
#define FLEXIO_VERID_MINOR_SHIFT                 16
#define FLEXIO_VERID_MINOR_WIDTH                 8
#define FLEXIO_VERID_MINOR(x)                    (((uint32)(((uint32)(x))<<FLEXIO_VERID_MINOR_SHIFT))&FLEXIO_VERID_MINOR_MASK)
#define FLEXIO_VERID_MAJOR_MASK                  0xFF000000u
#define FLEXIO_VERID_MAJOR_SHIFT                 24
#define FLEXIO_VERID_MAJOR_WIDTH                 8
#define FLEXIO_VERID_MAJOR(x)                    (((uint32)(((uint32)(x))<<FLEXIO_VERID_MAJOR_SHIFT))&FLEXIO_VERID_MAJOR_MASK)
/* PARAM Bit Fields */
#define FLEXIO_PARAM_SHIFTER_MASK                0xFFu
#define FLEXIO_PARAM_SHIFTER_SHIFT               0
#define FLEXIO_PARAM_SHIFTER_WIDTH               8
#define FLEXIO_PARAM_SHIFTER(x)                  (((uint32)(((uint32)(x))<<FLEXIO_PARAM_SHIFTER_SHIFT))&FLEXIO_PARAM_SHIFTER_MASK)
#define FLEXIO_PARAM_TIMER_MASK                  0xFF00u
#define FLEXIO_PARAM_TIMER_SHIFT                 8
#define FLEXIO_PARAM_TIMER_WIDTH                 8
#define FLEXIO_PARAM_TIMER(x)                    (((uint32)(((uint32)(x))<<FLEXIO_PARAM_TIMER_SHIFT))&FLEXIO_PARAM_TIMER_MASK)
#define FLEXIO_PARAM_PIN_MASK                    0xFF0000u
#define FLEXIO_PARAM_PIN_SHIFT                   16
#define FLEXIO_PARAM_PIN_WIDTH                   8
#define FLEXIO_PARAM_PIN(x)                      (((uint32)(((uint32)(x))<<FLEXIO_PARAM_PIN_SHIFT))&FLEXIO_PARAM_PIN_MASK)
#define FLEXIO_PARAM_TRIGGER_MASK                0xFF000000u
#define FLEXIO_PARAM_TRIGGER_SHIFT               24
#define FLEXIO_PARAM_TRIGGER_WIDTH               8
#define FLEXIO_PARAM_TRIGGER(x)                  (((uint32)(((uint32)(x))<<FLEXIO_PARAM_TRIGGER_SHIFT))&FLEXIO_PARAM_TRIGGER_MASK)
/* CTRL Bit Fields */
#define FLEXIO_CTRL_FLEXEN_MASK                  0x1u
#define FLEXIO_CTRL_FLEXEN_SHIFT                 0
#define FLEXIO_CTRL_FLEXEN_WIDTH                 1
#define FLEXIO_CTRL_FLEXEN(x)                    (((uint32)(((uint32)(x))<<FLEXIO_CTRL_FLEXEN_SHIFT))&FLEXIO_CTRL_FLEXEN_MASK)
#define FLEXIO_CTRL_SWRST_MASK                   0x2u
#define FLEXIO_CTRL_SWRST_SHIFT                  1
#define FLEXIO_CTRL_SWRST_WIDTH                  1
#define FLEXIO_CTRL_SWRST(x)                     (((uint32)(((uint32)(x))<<FLEXIO_CTRL_SWRST_SHIFT))&FLEXIO_CTRL_SWRST_MASK)
#define FLEXIO_CTRL_FASTACC_MASK                 0x4u
#define FLEXIO_CTRL_FASTACC_SHIFT                2
#define FLEXIO_CTRL_FASTACC_WIDTH                1
#define FLEXIO_CTRL_FASTACC(x)                   (((uint32)(((uint32)(x))<<FLEXIO_CTRL_FASTACC_SHIFT))&FLEXIO_CTRL_FASTACC_MASK)
#define FLEXIO_CTRL_DBGE_MASK                    0x40000000u
#define FLEXIO_CTRL_DBGE_SHIFT                   30
#define FLEXIO_CTRL_DBGE_WIDTH                   1
#define FLEXIO_CTRL_DBGE(x)                      (((uint32)(((uint32)(x))<<FLEXIO_CTRL_DBGE_SHIFT))&FLEXIO_CTRL_DBGE_MASK)
#define FLEXIO_CTRL_DOZEN_MASK                   0x80000000u
#define FLEXIO_CTRL_DOZEN_SHIFT                  31
#define FLEXIO_CTRL_DOZEN_WIDTH                  1
#define FLEXIO_CTRL_DOZEN(x)                     (((uint32)(((uint32)(x))<<FLEXIO_CTRL_DOZEN_SHIFT))&FLEXIO_CTRL_DOZEN_MASK)
/* PIN Bit Fields */
#define FLEXIO_PIN_PDI_MASK                      0xFFu
#define FLEXIO_PIN_PDI_SHIFT                     0
#define FLEXIO_PIN_PDI_WIDTH                     8
#define FLEXIO_PIN_PDI(x)                        (((uint32)(((uint32)(x))<<FLEXIO_PIN_PDI_SHIFT))&FLEXIO_PIN_PDI_MASK)
/* SHIFTSTAT Bit Fields */
#define FLEXIO_SHIFTSTAT_SSF_MASK                0xFu
#define FLEXIO_SHIFTSTAT_SSF_SHIFT               0
#define FLEXIO_SHIFTSTAT_SSF_WIDTH               4
#define FLEXIO_SHIFTSTAT_SSF(x)                  (((uint32)(((uint32)(x))<<FLEXIO_SHIFTSTAT_SSF_SHIFT))&FLEXIO_SHIFTSTAT_SSF_MASK)
/* SHIFTERR Bit Fields */
#define FLEXIO_SHIFTERR_SEF_MASK                 0xFu
#define FLEXIO_SHIFTERR_SEF_SHIFT                0
#define FLEXIO_SHIFTERR_SEF_WIDTH                4
#define FLEXIO_SHIFTERR_SEF(x)                   (((uint32)(((uint32)(x))<<FLEXIO_SHIFTERR_SEF_SHIFT))&FLEXIO_SHIFTERR_SEF_MASK)
/* TIMSTAT Bit Fields */
#define FLEXIO_TIMSTAT_TSF_MASK                  0xFu
#define FLEXIO_TIMSTAT_TSF_SHIFT                 0
#define FLEXIO_TIMSTAT_TSF_WIDTH                 4
#define FLEXIO_TIMSTAT_TSF(x)                    (((uint32)(((uint32)(x))<<FLEXIO_TIMSTAT_TSF_SHIFT))&FLEXIO_TIMSTAT_TSF_MASK)
/* SHIFTSIEN Bit Fields */
#define FLEXIO_SHIFTSIEN_SSIE_MASK               0xFu
#define FLEXIO_SHIFTSIEN_SSIE_SHIFT              0
#define FLEXIO_SHIFTSIEN_SSIE_WIDTH              4
#define FLEXIO_SHIFTSIEN_SSIE(x)                 (((uint32)(((uint32)(x))<<FLEXIO_SHIFTSIEN_SSIE_SHIFT))&FLEXIO_SHIFTSIEN_SSIE_MASK)
/* SHIFTEIEN Bit Fields */
#define FLEXIO_SHIFTEIEN_SEIE_MASK               0xFu
#define FLEXIO_SHIFTEIEN_SEIE_SHIFT              0
#define FLEXIO_SHIFTEIEN_SEIE_WIDTH              4
#define FLEXIO_SHIFTEIEN_SEIE(x)                 (((uint32)(((uint32)(x))<<FLEXIO_SHIFTEIEN_SEIE_SHIFT))&FLEXIO_SHIFTEIEN_SEIE_MASK)
/* TIMIEN Bit Fields */
#define FLEXIO_TIMIEN_TEIE_MASK                  0xFu
#define FLEXIO_TIMIEN_TEIE_SHIFT                 0
#define FLEXIO_TIMIEN_TEIE_WIDTH                 4
#define FLEXIO_TIMIEN_TEIE(x)                    (((uint32)(((uint32)(x))<<FLEXIO_TIMIEN_TEIE_SHIFT))&FLEXIO_TIMIEN_TEIE_MASK)
/* SHIFTSDEN Bit Fields */
#define FLEXIO_SHIFTSDEN_SSDE_MASK               0xFu
#define FLEXIO_SHIFTSDEN_SSDE_SHIFT              0
#define FLEXIO_SHIFTSDEN_SSDE_WIDTH              4
#define FLEXIO_SHIFTSDEN_SSDE(x)                 (((uint32)(((uint32)(x))<<FLEXIO_SHIFTSDEN_SSDE_SHIFT))&FLEXIO_SHIFTSDEN_SSDE_MASK)
/* SHIFTSTATE Bit Fields */
#define FLEXIO_SHIFTSTATE_STATE_MASK             0x7u
#define FLEXIO_SHIFTSTATE_STATE_SHIFT            0
#define FLEXIO_SHIFTSTATE_STATE_WIDTH            3
#define FLEXIO_SHIFTSTATE_STATE(x)               (((uint32)(((uint32)(x))<<FLEXIO_SHIFTSTATE_STATE_SHIFT))&FLEXIO_SHIFTSTATE_STATE_MASK)
/* SHIFTCTL Bit Fields */
#define FLEXIO_SHIFTCTL_SMOD_MASK                0x7u
#define FLEXIO_SHIFTCTL_SMOD_SHIFT               0
#define FLEXIO_SHIFTCTL_SMOD_WIDTH               3
#define FLEXIO_SHIFTCTL_SMOD(x)                  (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCTL_SMOD_SHIFT))&FLEXIO_SHIFTCTL_SMOD_MASK)
#define FLEXIO_SHIFTCTL_PINPOL_MASK              0x80u
#define FLEXIO_SHIFTCTL_PINPOL_SHIFT             7
#define FLEXIO_SHIFTCTL_PINPOL_WIDTH             1
#define FLEXIO_SHIFTCTL_PINPOL(x)                (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCTL_PINPOL_SHIFT))&FLEXIO_SHIFTCTL_PINPOL_MASK)
#define FLEXIO_SHIFTCTL_PINSEL_MASK              0x700u
#define FLEXIO_SHIFTCTL_PINSEL_SHIFT             8
#define FLEXIO_SHIFTCTL_PINSEL_WIDTH             3
#define FLEXIO_SHIFTCTL_PINSEL(x)                (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCTL_PINSEL_SHIFT))&FLEXIO_SHIFTCTL_PINSEL_MASK)
#define FLEXIO_SHIFTCTL_PINCFG_MASK              0x30000u
#define FLEXIO_SHIFTCTL_PINCFG_SHIFT             16
#define FLEXIO_SHIFTCTL_PINCFG_WIDTH             2
#define FLEXIO_SHIFTCTL_PINCFG(x)                (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCTL_PINCFG_SHIFT))&FLEXIO_SHIFTCTL_PINCFG_MASK)
#define FLEXIO_SHIFTCTL_TIMPOL_MASK              0x800000u
#define FLEXIO_SHIFTCTL_TIMPOL_SHIFT             23
#define FLEXIO_SHIFTCTL_TIMPOL_WIDTH             1
#define FLEXIO_SHIFTCTL_TIMPOL(x)                (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCTL_TIMPOL_SHIFT))&FLEXIO_SHIFTCTL_TIMPOL_MASK)
#define FLEXIO_SHIFTCTL_TIMSEL_MASK              0x3000000u
#define FLEXIO_SHIFTCTL_TIMSEL_SHIFT             24
#define FLEXIO_SHIFTCTL_TIMSEL_WIDTH             2
#define FLEXIO_SHIFTCTL_TIMSEL(x)                (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCTL_TIMSEL_SHIFT))&FLEXIO_SHIFTCTL_TIMSEL_MASK)
/* SHIFTCFG Bit Fields */
#define FLEXIO_SHIFTCFG_SSTART_MASK              0x3u
#define FLEXIO_SHIFTCFG_SSTART_SHIFT             0
#define FLEXIO_SHIFTCFG_SSTART_WIDTH             2
#define FLEXIO_SHIFTCFG_SSTART(x)                (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCFG_SSTART_SHIFT))&FLEXIO_SHIFTCFG_SSTART_MASK)
#define FLEXIO_SHIFTCFG_SSTOP_MASK               0x30u
#define FLEXIO_SHIFTCFG_SSTOP_SHIFT              4
#define FLEXIO_SHIFTCFG_SSTOP_WIDTH              2
#define FLEXIO_SHIFTCFG_SSTOP(x)                 (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCFG_SSTOP_SHIFT))&FLEXIO_SHIFTCFG_SSTOP_MASK)
#define FLEXIO_SHIFTCFG_INSRC_MASK               0x100u
#define FLEXIO_SHIFTCFG_INSRC_SHIFT              8
#define FLEXIO_SHIFTCFG_INSRC_WIDTH              1
#define FLEXIO_SHIFTCFG_INSRC(x)                 (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCFG_INSRC_SHIFT))&FLEXIO_SHIFTCFG_INSRC_MASK)
#define FLEXIO_SHIFTCFG_PWIDTH_MASK              0x1F0000u
#define FLEXIO_SHIFTCFG_PWIDTH_SHIFT             16
#define FLEXIO_SHIFTCFG_PWIDTH_WIDTH             5
#define FLEXIO_SHIFTCFG_PWIDTH(x)                (((uint32)(((uint32)(x))<<FLEXIO_SHIFTCFG_PWIDTH_SHIFT))&FLEXIO_SHIFTCFG_PWIDTH_MASK)
/* SHIFTBUF Bit Fields */
#define FLEXIO_SHIFTBUF_SHIFTBUF_MASK            0xFFFFFFFFu
#define FLEXIO_SHIFTBUF_SHIFTBUF_SHIFT           0
#define FLEXIO_SHIFTBUF_SHIFTBUF_WIDTH           32
#define FLEXIO_SHIFTBUF_SHIFTBUF(x)              (((uint32)(((uint32)(x))<<FLEXIO_SHIFTBUF_SHIFTBUF_SHIFT))&FLEXIO_SHIFTBUF_SHIFTBUF_MASK)
/* SHIFTBUFBIS Bit Fields */
#define FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_MASK      0xFFFFFFFFu
#define FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_SHIFT     0
#define FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_WIDTH     32
#define FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS(x)        (((uint32)(((uint32)(x))<<FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_SHIFT))&FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_MASK)
/* SHIFTBUFBYS Bit Fields */
#define FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_MASK      0xFFFFFFFFu
#define FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_SHIFT     0
#define FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_WIDTH     32
#define FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS(x)        (((uint32)(((uint32)(x))<<FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_SHIFT))&FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_MASK)
/* SHIFTBUFBBS Bit Fields */
#define FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_MASK      0xFFFFFFFFu
#define FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_SHIFT     0
#define FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_WIDTH     32
#define FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS(x)        (((uint32)(((uint32)(x))<<FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_SHIFT))&FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_MASK)
/* TIMCTL Bit Fields */
#define FLEXIO_TIMCTL_TIMOD_MASK                 0x3u
#define FLEXIO_TIMCTL_TIMOD_SHIFT                0
#define FLEXIO_TIMCTL_TIMOD_WIDTH                2
#define FLEXIO_TIMCTL_TIMOD(x)                   (((uint32)(((uint32)(x))<<FLEXIO_TIMCTL_TIMOD_SHIFT))&FLEXIO_TIMCTL_TIMOD_MASK)
#define FLEXIO_TIMCTL_PINPOL_MASK                0x80u
#define FLEXIO_TIMCTL_PINPOL_SHIFT               7
#define FLEXIO_TIMCTL_PINPOL_WIDTH               1
#define FLEXIO_TIMCTL_PINPOL(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCTL_PINPOL_SHIFT))&FLEXIO_TIMCTL_PINPOL_MASK)
#define FLEXIO_TIMCTL_PINSEL_MASK                0x700u
#define FLEXIO_TIMCTL_PINSEL_SHIFT               8
#define FLEXIO_TIMCTL_PINSEL_WIDTH               3
#define FLEXIO_TIMCTL_PINSEL(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCTL_PINSEL_SHIFT))&FLEXIO_TIMCTL_PINSEL_MASK)
#define FLEXIO_TIMCTL_PINCFG_MASK                0x30000u
#define FLEXIO_TIMCTL_PINCFG_SHIFT               16
#define FLEXIO_TIMCTL_PINCFG_WIDTH               2
#define FLEXIO_TIMCTL_PINCFG(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCTL_PINCFG_SHIFT))&FLEXIO_TIMCTL_PINCFG_MASK)
#define FLEXIO_TIMCTL_TRGSRC_MASK                0x400000u
#define FLEXIO_TIMCTL_TRGSRC_SHIFT               22
#define FLEXIO_TIMCTL_TRGSRC_WIDTH               1
#define FLEXIO_TIMCTL_TRGSRC(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCTL_TRGSRC_SHIFT))&FLEXIO_TIMCTL_TRGSRC_MASK)
#define FLEXIO_TIMCTL_TRGPOL_MASK                0x800000u
#define FLEXIO_TIMCTL_TRGPOL_SHIFT               23
#define FLEXIO_TIMCTL_TRGPOL_WIDTH               1
#define FLEXIO_TIMCTL_TRGPOL(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCTL_TRGPOL_SHIFT))&FLEXIO_TIMCTL_TRGPOL_MASK)
#define FLEXIO_TIMCTL_TRGSEL_MASK                0xF000000u
#define FLEXIO_TIMCTL_TRGSEL_SHIFT               24
#define FLEXIO_TIMCTL_TRGSEL_WIDTH               4
#define FLEXIO_TIMCTL_TRGSEL(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCTL_TRGSEL_SHIFT))&FLEXIO_TIMCTL_TRGSEL_MASK)
/* TIMCFG Bit Fields */
#define FLEXIO_TIMCFG_TSTART_MASK                0x2u
#define FLEXIO_TIMCFG_TSTART_SHIFT               1
#define FLEXIO_TIMCFG_TSTART_WIDTH               1
#define FLEXIO_TIMCFG_TSTART(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCFG_TSTART_SHIFT))&FLEXIO_TIMCFG_TSTART_MASK)
#define FLEXIO_TIMCFG_TSTOP_MASK                 0x30u
#define FLEXIO_TIMCFG_TSTOP_SHIFT                4
#define FLEXIO_TIMCFG_TSTOP_WIDTH                2
#define FLEXIO_TIMCFG_TSTOP(x)                   (((uint32)(((uint32)(x))<<FLEXIO_TIMCFG_TSTOP_SHIFT))&FLEXIO_TIMCFG_TSTOP_MASK)
#define FLEXIO_TIMCFG_TIMENA_MASK                0x700u
#define FLEXIO_TIMCFG_TIMENA_SHIFT               8
#define FLEXIO_TIMCFG_TIMENA_WIDTH               3
#define FLEXIO_TIMCFG_TIMENA(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCFG_TIMENA_SHIFT))&FLEXIO_TIMCFG_TIMENA_MASK)
#define FLEXIO_TIMCFG_TIMDIS_MASK                0x7000u
#define FLEXIO_TIMCFG_TIMDIS_SHIFT               12
#define FLEXIO_TIMCFG_TIMDIS_WIDTH               3
#define FLEXIO_TIMCFG_TIMDIS(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCFG_TIMDIS_SHIFT))&FLEXIO_TIMCFG_TIMDIS_MASK)
#define FLEXIO_TIMCFG_TIMRST_MASK                0x70000u
#define FLEXIO_TIMCFG_TIMRST_SHIFT               16
#define FLEXIO_TIMCFG_TIMRST_WIDTH               3
#define FLEXIO_TIMCFG_TIMRST(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCFG_TIMRST_SHIFT))&FLEXIO_TIMCFG_TIMRST_MASK)
#define FLEXIO_TIMCFG_TIMDEC_MASK                0x300000u
#define FLEXIO_TIMCFG_TIMDEC_SHIFT               20
#define FLEXIO_TIMCFG_TIMDEC_WIDTH               2
#define FLEXIO_TIMCFG_TIMDEC(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCFG_TIMDEC_SHIFT))&FLEXIO_TIMCFG_TIMDEC_MASK)
#define FLEXIO_TIMCFG_TIMOUT_MASK                0x3000000u
#define FLEXIO_TIMCFG_TIMOUT_SHIFT               24
#define FLEXIO_TIMCFG_TIMOUT_WIDTH               2
#define FLEXIO_TIMCFG_TIMOUT(x)                  (((uint32)(((uint32)(x))<<FLEXIO_TIMCFG_TIMOUT_SHIFT))&FLEXIO_TIMCFG_TIMOUT_MASK)
/* TIMCMP Bit Fields */
#define FLEXIO_TIMCMP_CMP_MASK                   0xFFFFu
#define FLEXIO_TIMCMP_CMP_SHIFT                  0
#define FLEXIO_TIMCMP_CMP_WIDTH                  16
#define FLEXIO_TIMCMP_CMP(x)                     (((uint32)(((uint32)(x))<<FLEXIO_TIMCMP_CMP_SHIFT))&FLEXIO_TIMCMP_CMP_MASK)

/*!
 * @}
 */ /* end of group FLEXIO_Register_Masks */


/* FLEXIO - Peripheral instance base addresses */
/** Peripheral FLEXIO base address */
#define FLEXIO_BASE                              (0x4005A000u)
/** Peripheral FLEXIO base pointer */
#define FLEXIO                                   ((FLEXIO_Type *)FLEXIO_BASE)
#define FLEXIO_BASE_PTR                          (FLEXIO)
/** Array initializer of FLEXIO peripheral base addresses */
#define FLEXIO_BASE_ADDRS                        { FLEXIO_BASE }
/** Array initializer of FLEXIO peripheral base pointers */
#define FLEXIO_BASE_PTRS                         { FLEXIO }

/* ----------------------------------------------------------------------------
   -- FLEXIO - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FLEXIO_Register_Accessor_Macros FLEXIO - Register accessor macros
 * @{
 */


/* FLEXIO - Register instance definitions */
/* FLEXIO */
#define FLEXIO_VERID                             FLEXIO_VERID_REG(FLEXIO)
#define FLEXIO_PARAM                             FLEXIO_PARAM_REG(FLEXIO)
#define FLEXIO_CTRL                              FLEXIO_CTRL_REG(FLEXIO)
#define FLEXIO_PIN                               FLEXIO_PIN_REG(FLEXIO)
#define FLEXIO_SHIFTSTAT                         FLEXIO_SHIFTSTAT_REG(FLEXIO)
#define FLEXIO_SHIFTERR                          FLEXIO_SHIFTERR_REG(FLEXIO)
#define FLEXIO_TIMSTAT                           FLEXIO_TIMSTAT_REG(FLEXIO)
#define FLEXIO_SHIFTSIEN                         FLEXIO_SHIFTSIEN_REG(FLEXIO)
#define FLEXIO_SHIFTEIEN                         FLEXIO_SHIFTEIEN_REG(FLEXIO)
#define FLEXIO_TIMIEN                            FLEXIO_TIMIEN_REG(FLEXIO)
#define FLEXIO_SHIFTSDEN                         FLEXIO_SHIFTSDEN_REG(FLEXIO)
#define FLEXIO_SHIFTSTATE                        FLEXIO_SHIFTSTATE_REG(FLEXIO)
#define FLEXIO_SHIFTCTL0                         FLEXIO_SHIFTCTL_REG(FLEXIO,0)
#define FLEXIO_SHIFTCTL1                         FLEXIO_SHIFTCTL_REG(FLEXIO,1)
#define FLEXIO_SHIFTCTL2                         FLEXIO_SHIFTCTL_REG(FLEXIO,2)
#define FLEXIO_SHIFTCTL3                         FLEXIO_SHIFTCTL_REG(FLEXIO,3)
#define FLEXIO_SHIFTCFG0                         FLEXIO_SHIFTCFG_REG(FLEXIO,0)
#define FLEXIO_SHIFTCFG1                         FLEXIO_SHIFTCFG_REG(FLEXIO,1)
#define FLEXIO_SHIFTCFG2                         FLEXIO_SHIFTCFG_REG(FLEXIO,2)
#define FLEXIO_SHIFTCFG3                         FLEXIO_SHIFTCFG_REG(FLEXIO,3)
#define FLEXIO_SHIFTBUF0                         FLEXIO_SHIFTBUF_REG(FLEXIO,0)
#define FLEXIO_SHIFTBUF1                         FLEXIO_SHIFTBUF_REG(FLEXIO,1)
#define FLEXIO_SHIFTBUF2                         FLEXIO_SHIFTBUF_REG(FLEXIO,2)
#define FLEXIO_SHIFTBUF3                         FLEXIO_SHIFTBUF_REG(FLEXIO,3)
#define FLEXIO_SHIFTBUFBIS0                      FLEXIO_SHIFTBUFBIS_REG(FLEXIO,0)
#define FLEXIO_SHIFTBUFBIS1                      FLEXIO_SHIFTBUFBIS_REG(FLEXIO,1)
#define FLEXIO_SHIFTBUFBIS2                      FLEXIO_SHIFTBUFBIS_REG(FLEXIO,2)
#define FLEXIO_SHIFTBUFBIS3                      FLEXIO_SHIFTBUFBIS_REG(FLEXIO,3)
#define FLEXIO_SHIFTBUFBYS0                      FLEXIO_SHIFTBUFBYS_REG(FLEXIO,0)
#define FLEXIO_SHIFTBUFBYS1                      FLEXIO_SHIFTBUFBYS_REG(FLEXIO,1)
#define FLEXIO_SHIFTBUFBYS2                      FLEXIO_SHIFTBUFBYS_REG(FLEXIO,2)
#define FLEXIO_SHIFTBUFBYS3                      FLEXIO_SHIFTBUFBYS_REG(FLEXIO,3)
#define FLEXIO_SHIFTBUFBBS0                      FLEXIO_SHIFTBUFBBS_REG(FLEXIO,0)
#define FLEXIO_SHIFTBUFBBS1                      FLEXIO_SHIFTBUFBBS_REG(FLEXIO,1)
#define FLEXIO_SHIFTBUFBBS2                      FLEXIO_SHIFTBUFBBS_REG(FLEXIO,2)
#define FLEXIO_SHIFTBUFBBS3                      FLEXIO_SHIFTBUFBBS_REG(FLEXIO,3)
#define FLEXIO_TIMCTL0                           FLEXIO_TIMCTL_REG(FLEXIO,0)
#define FLEXIO_TIMCTL1                           FLEXIO_TIMCTL_REG(FLEXIO,1)
#define FLEXIO_TIMCTL2                           FLEXIO_TIMCTL_REG(FLEXIO,2)
#define FLEXIO_TIMCTL3                           FLEXIO_TIMCTL_REG(FLEXIO,3)
#define FLEXIO_TIMCFG0                           FLEXIO_TIMCFG_REG(FLEXIO,0)
#define FLEXIO_TIMCFG1                           FLEXIO_TIMCFG_REG(FLEXIO,1)
#define FLEXIO_TIMCFG2                           FLEXIO_TIMCFG_REG(FLEXIO,2)
#define FLEXIO_TIMCFG3                           FLEXIO_TIMCFG_REG(FLEXIO,3)
#define FLEXIO_TIMCMP0                           FLEXIO_TIMCMP_REG(FLEXIO,0)
#define FLEXIO_TIMCMP1                           FLEXIO_TIMCMP_REG(FLEXIO,1)
#define FLEXIO_TIMCMP2                           FLEXIO_TIMCMP_REG(FLEXIO,2)
#define FLEXIO_TIMCMP3                           FLEXIO_TIMCMP_REG(FLEXIO,3)

/* FLEXIO - Register array accessors */
#define FLEXIO_SHIFTCTL(index)                   FLEXIO_SHIFTCTL_REG(FLEXIO,index)
#define FLEXIO_SHIFTCFG(index)                   FLEXIO_SHIFTCFG_REG(FLEXIO,index)
#define FLEXIO_SHIFTBUF(index)                   FLEXIO_SHIFTBUF_REG(FLEXIO,index)
#define FLEXIO_SHIFTBUFBIS(index)                FLEXIO_SHIFTBUFBIS_REG(FLEXIO,index)
#define FLEXIO_SHIFTBUFBYS(index)                FLEXIO_SHIFTBUFBYS_REG(FLEXIO,index)
#define FLEXIO_SHIFTBUFBBS(index)                FLEXIO_SHIFTBUFBBS_REG(FLEXIO,index)
#define FLEXIO_TIMCTL(index)                     FLEXIO_TIMCTL_REG(FLEXIO,index)
#define FLEXIO_TIMCFG(index)                     FLEXIO_TIMCFG_REG(FLEXIO,index)
#define FLEXIO_TIMCMP(index)                     FLEXIO_TIMCMP_REG(FLEXIO,index)

/*!
 * @}
 */ /* end of group FLEXIO_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group FLEXIO_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FTFE Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTFE_Peripheral_Access_Layer FTFE Peripheral Access Layer
 * @{
 */

/** FTFE - Register Layout Typedef */
typedef struct {
  __IO uint8 FSTAT;                                /**< Flash Status Register, offset: 0x0 */
  __IO uint8 FCNFG;                                /**< Flash Configuration Register, offset: 0x1 */
  __I  uint8 FSEC;                                 /**< Flash Security Register, offset: 0x2 */
  __I  uint8 FOPT;                                 /**< Flash Option Register, offset: 0x3 */
  __IO uint8 FCCOB[12];                            /**< Flash Common Command Object Registers, array offset: 0x4, array step: 0x1 */
  __IO uint8 FPROT[4];                             /**< Program Flash Protection Registers, array offset: 0x10, array step: 0x1 */
       uint8 RESERVED_0[2];
  __IO uint8 FEPROT;                               /**< EEPROM Protection Register, offset: 0x16 */
  __IO uint8 FDPROT;                               /**< Data Flash Protection Register, offset: 0x17 */
       uint8 RESERVED_1[22];
  __IO uint8 FERSTAT;                              /**< Flash Error Status Register, offset: 0x2E */
  __IO uint8 FERCNFG;                              /**< Flash Error Configuration Register, offset: 0x2F */
} FTFE_Type, *FTFE_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- FTFE - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTFE_Register_Accessor_Macros FTFE - Register accessor macros
 * @{
 */


/* FTFE - Register accessors */
#define FTFE_FSTAT_REG(base)                     ((base)->FSTAT)
#define FTFE_FCNFG_REG(base)                     ((base)->FCNFG)
#define FTFE_FSEC_REG(base)                      ((base)->FSEC)
#define FTFE_FOPT_REG(base)                      ((base)->FOPT)
#define FTFE_FCCOB_REG(base,index)               ((base)->FCCOB[index])
#define FTFE_FCCOB_COUNT                         12
#define FTFE_FPROT_REG(base,index)               ((base)->FPROT[index])
#define FTFE_FPROT_COUNT                         4
#define FTFE_FEPROT_REG(base)                    ((base)->FEPROT)
#define FTFE_FDPROT_REG(base)                    ((base)->FDPROT)
#define FTFE_FERSTAT_REG(base)                   ((base)->FERSTAT)
#define FTFE_FERCNFG_REG(base)                   ((base)->FERCNFG)

/*!
 * @}
 */ /* end of group FTFE_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- FTFE Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTFE_Register_Masks FTFE Register Masks
 * @{
 */

/* FSTAT Bit Fields */
#define FTFE_FSTAT_MGSTAT0_MASK                  0x1u
#define FTFE_FSTAT_MGSTAT0_SHIFT                 0
#define FTFE_FSTAT_MGSTAT0_WIDTH                 1
#define FTFE_FSTAT_MGSTAT0(x)                    (((uint8)(((uint8)(x))<<FTFE_FSTAT_MGSTAT0_SHIFT))&FTFE_FSTAT_MGSTAT0_MASK)
#define FTFE_FSTAT_FPVIOL_MASK                   0x10u
#define FTFE_FSTAT_FPVIOL_SHIFT                  4
#define FTFE_FSTAT_FPVIOL_WIDTH                  1
#define FTFE_FSTAT_FPVIOL(x)                     (((uint8)(((uint8)(x))<<FTFE_FSTAT_FPVIOL_SHIFT))&FTFE_FSTAT_FPVIOL_MASK)
#define FTFE_FSTAT_ACCERR_MASK                   0x20u
#define FTFE_FSTAT_ACCERR_SHIFT                  5
#define FTFE_FSTAT_ACCERR_WIDTH                  1
#define FTFE_FSTAT_ACCERR(x)                     (((uint8)(((uint8)(x))<<FTFE_FSTAT_ACCERR_SHIFT))&FTFE_FSTAT_ACCERR_MASK)
#define FTFE_FSTAT_RDCOLERR_MASK                 0x40u
#define FTFE_FSTAT_RDCOLERR_SHIFT                6
#define FTFE_FSTAT_RDCOLERR_WIDTH                1
#define FTFE_FSTAT_RDCOLERR(x)                   (((uint8)(((uint8)(x))<<FTFE_FSTAT_RDCOLERR_SHIFT))&FTFE_FSTAT_RDCOLERR_MASK)
#define FTFE_FSTAT_CCIF_MASK                     0x80u
#define FTFE_FSTAT_CCIF_SHIFT                    7
#define FTFE_FSTAT_CCIF_WIDTH                    1
#define FTFE_FSTAT_CCIF(x)                       (((uint8)(((uint8)(x))<<FTFE_FSTAT_CCIF_SHIFT))&FTFE_FSTAT_CCIF_MASK)
/* FCNFG Bit Fields */
#define FTFE_FCNFG_EEERDY_MASK                   0x1u
#define FTFE_FCNFG_EEERDY_SHIFT                  0
#define FTFE_FCNFG_EEERDY_WIDTH                  1
#define FTFE_FCNFG_EEERDY(x)                     (((uint8)(((uint8)(x))<<FTFE_FCNFG_EEERDY_SHIFT))&FTFE_FCNFG_EEERDY_MASK)
#define FTFE_FCNFG_RAMRDY_MASK                   0x2u
#define FTFE_FCNFG_RAMRDY_SHIFT                  1
#define FTFE_FCNFG_RAMRDY_WIDTH                  1
#define FTFE_FCNFG_RAMRDY(x)                     (((uint8)(((uint8)(x))<<FTFE_FCNFG_RAMRDY_SHIFT))&FTFE_FCNFG_RAMRDY_MASK)
#define FTFE_FCNFG_PFLSH_MASK                    0x4u
#define FTFE_FCNFG_PFLSH_SHIFT                   2
#define FTFE_FCNFG_PFLSH_WIDTH                   1
#define FTFE_FCNFG_PFLSH(x)                      (((uint8)(((uint8)(x))<<FTFE_FCNFG_PFLSH_SHIFT))&FTFE_FCNFG_PFLSH_MASK)
#define FTFE_FCNFG_ERSSUSP_MASK                  0x10u
#define FTFE_FCNFG_ERSSUSP_SHIFT                 4
#define FTFE_FCNFG_ERSSUSP_WIDTH                 1
#define FTFE_FCNFG_ERSSUSP(x)                    (((uint8)(((uint8)(x))<<FTFE_FCNFG_ERSSUSP_SHIFT))&FTFE_FCNFG_ERSSUSP_MASK)
#define FTFE_FCNFG_ERSAREQ_MASK                  0x20u
#define FTFE_FCNFG_ERSAREQ_SHIFT                 5
#define FTFE_FCNFG_ERSAREQ_WIDTH                 1
#define FTFE_FCNFG_ERSAREQ(x)                    (((uint8)(((uint8)(x))<<FTFE_FCNFG_ERSAREQ_SHIFT))&FTFE_FCNFG_ERSAREQ_MASK)
#define FTFE_FCNFG_RDCOLLIE_MASK                 0x40u
#define FTFE_FCNFG_RDCOLLIE_SHIFT                6
#define FTFE_FCNFG_RDCOLLIE_WIDTH                1
#define FTFE_FCNFG_RDCOLLIE(x)                   (((uint8)(((uint8)(x))<<FTFE_FCNFG_RDCOLLIE_SHIFT))&FTFE_FCNFG_RDCOLLIE_MASK)
#define FTFE_FCNFG_CCIE_MASK                     0x80u
#define FTFE_FCNFG_CCIE_SHIFT                    7
#define FTFE_FCNFG_CCIE_WIDTH                    1
#define FTFE_FCNFG_CCIE(x)                       (((uint8)(((uint8)(x))<<FTFE_FCNFG_CCIE_SHIFT))&FTFE_FCNFG_CCIE_MASK)
/* FSEC Bit Fields */
#define FTFE_FSEC_SEC_MASK                       0x3u
#define FTFE_FSEC_SEC_SHIFT                      0
#define FTFE_FSEC_SEC_WIDTH                      2
#define FTFE_FSEC_SEC(x)                         (((uint8)(((uint8)(x))<<FTFE_FSEC_SEC_SHIFT))&FTFE_FSEC_SEC_MASK)
#define FTFE_FSEC_FSLACC_MASK                    0xCu
#define FTFE_FSEC_FSLACC_SHIFT                   2
#define FTFE_FSEC_FSLACC_WIDTH                   2
#define FTFE_FSEC_FSLACC(x)                      (((uint8)(((uint8)(x))<<FTFE_FSEC_FSLACC_SHIFT))&FTFE_FSEC_FSLACC_MASK)
#define FTFE_FSEC_MEEN_MASK                      0x30u
#define FTFE_FSEC_MEEN_SHIFT                     4
#define FTFE_FSEC_MEEN_WIDTH                     2
#define FTFE_FSEC_MEEN(x)                        (((uint8)(((uint8)(x))<<FTFE_FSEC_MEEN_SHIFT))&FTFE_FSEC_MEEN_MASK)
#define FTFE_FSEC_KEYEN_MASK                     0xC0u
#define FTFE_FSEC_KEYEN_SHIFT                    6
#define FTFE_FSEC_KEYEN_WIDTH                    2
#define FTFE_FSEC_KEYEN(x)                       (((uint8)(((uint8)(x))<<FTFE_FSEC_KEYEN_SHIFT))&FTFE_FSEC_KEYEN_MASK)
/* FOPT Bit Fields */
#define FTFE_FOPT_OPT_MASK                       0xFFu
#define FTFE_FOPT_OPT_SHIFT                      0
#define FTFE_FOPT_OPT_WIDTH                      8
#define FTFE_FOPT_OPT(x)                         (((uint8)(((uint8)(x))<<FTFE_FOPT_OPT_SHIFT))&FTFE_FOPT_OPT_MASK)
/* FCCOB Bit Fields */
#define FTFE_FCCOB_CCOBn_MASK                    0xFFu
#define FTFE_FCCOB_CCOBn_SHIFT                   0
#define FTFE_FCCOB_CCOBn_WIDTH                   8
#define FTFE_FCCOB_CCOBn(x)                      (((uint8)(((uint8)(x))<<FTFE_FCCOB_CCOBn_SHIFT))&FTFE_FCCOB_CCOBn_MASK)
/* FPROT Bit Fields */
#define FTFE_FPROT_PROT_MASK                     0xFFu
#define FTFE_FPROT_PROT_SHIFT                    0
#define FTFE_FPROT_PROT_WIDTH                    8
#define FTFE_FPROT_PROT(x)                       (((uint8)(((uint8)(x))<<FTFE_FPROT_PROT_SHIFT))&FTFE_FPROT_PROT_MASK)
/* FEPROT Bit Fields */
#define FTFE_FEPROT_EPROT_MASK                   0xFFu
#define FTFE_FEPROT_EPROT_SHIFT                  0
#define FTFE_FEPROT_EPROT_WIDTH                  8
#define FTFE_FEPROT_EPROT(x)                     (((uint8)(((uint8)(x))<<FTFE_FEPROT_EPROT_SHIFT))&FTFE_FEPROT_EPROT_MASK)
/* FDPROT Bit Fields */
#define FTFE_FDPROT_DPROT_MASK                   0xFFu
#define FTFE_FDPROT_DPROT_SHIFT                  0
#define FTFE_FDPROT_DPROT_WIDTH                  8
#define FTFE_FDPROT_DPROT(x)                     (((uint8)(((uint8)(x))<<FTFE_FDPROT_DPROT_SHIFT))&FTFE_FDPROT_DPROT_MASK)
/* FERSTAT Bit Fields */
#define FTFE_FERSTAT_DFDIF_MASK                  0x2u
#define FTFE_FERSTAT_DFDIF_SHIFT                 1
#define FTFE_FERSTAT_DFDIF_WIDTH                 1
#define FTFE_FERSTAT_DFDIF(x)                    (((uint8)(((uint8)(x))<<FTFE_FERSTAT_DFDIF_SHIFT))&FTFE_FERSTAT_DFDIF_MASK)
/* FERCNFG Bit Fields */
#define FTFE_FERCNFG_DFDIE_MASK                  0x2u
#define FTFE_FERCNFG_DFDIE_SHIFT                 1
#define FTFE_FERCNFG_DFDIE_WIDTH                 1
#define FTFE_FERCNFG_DFDIE(x)                    (((uint8)(((uint8)(x))<<FTFE_FERCNFG_DFDIE_SHIFT))&FTFE_FERCNFG_DFDIE_MASK)
#define FTFE_FERCNFG_FDFD_MASK                   0x20u
#define FTFE_FERCNFG_FDFD_SHIFT                  5
#define FTFE_FERCNFG_FDFD_WIDTH                  1
#define FTFE_FERCNFG_FDFD(x)                     (((uint8)(((uint8)(x))<<FTFE_FERCNFG_FDFD_SHIFT))&FTFE_FERCNFG_FDFD_MASK)

/*!
 * @}
 */ /* end of group FTFE_Register_Masks */


/* FTFE - Peripheral instance base addresses */
/** Peripheral FTFE base address */
#define FTFE_BASE                                (0x40020000u)
/** Peripheral FTFE base pointer */
#define FTFE                                     ((FTFE_Type *)FTFE_BASE)
#define FTFE_BASE_PTR                            (FTFE)
/** Array initializer of FTFE peripheral base addresses */
#define FTFE_BASE_ADDRS                          { FTFE_BASE }
/** Array initializer of FTFE peripheral base pointers */
#define FTFE_BASE_PTRS                           { FTFE }

/* ----------------------------------------------------------------------------
   -- FTFE - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTFE_Register_Accessor_Macros FTFE - Register accessor macros
 * @{
 */


/* FTFE - Register instance definitions */
/* FTFE */
#define FTFE_FSTAT                               FTFE_FSTAT_REG(FTFE)
#define FTFE_FCNFG                               FTFE_FCNFG_REG(FTFE)
#define FTFE_FSEC                                FTFE_FSEC_REG(FTFE)
#define FTFE_FOPT                                FTFE_FOPT_REG(FTFE)
#define FTFE_FCCOB3                              FTFE_FCCOB_REG(FTFE,0)
#define FTFE_FCCOB2                              FTFE_FCCOB_REG(FTFE,1)
#define FTFE_FCCOB1                              FTFE_FCCOB_REG(FTFE,2)
#define FTFE_FCCOB0                              FTFE_FCCOB_REG(FTFE,3)
#define FTFE_FCCOB7                              FTFE_FCCOB_REG(FTFE,4)
#define FTFE_FCCOB6                              FTFE_FCCOB_REG(FTFE,5)
#define FTFE_FCCOB5                              FTFE_FCCOB_REG(FTFE,6)
#define FTFE_FCCOB4                              FTFE_FCCOB_REG(FTFE,7)
#define FTFE_FCCOBB                              FTFE_FCCOB_REG(FTFE,8)
#define FTFE_FCCOBA                              FTFE_FCCOB_REG(FTFE,9)
#define FTFE_FCCOB9                              FTFE_FCCOB_REG(FTFE,10)
#define FTFE_FCCOB8                              FTFE_FCCOB_REG(FTFE,11)
#define FTFE_FPROT3                              FTFE_FPROT_REG(FTFE,0)
#define FTFE_FPROT2                              FTFE_FPROT_REG(FTFE,1)
#define FTFE_FPROT1                              FTFE_FPROT_REG(FTFE,2)
#define FTFE_FPROT0                              FTFE_FPROT_REG(FTFE,3)
#define FTFE_FEPROT                              FTFE_FEPROT_REG(FTFE)
#define FTFE_FDPROT                              FTFE_FDPROT_REG(FTFE)
#define FTFE_FERSTAT                             FTFE_FERSTAT_REG(FTFE)
#define FTFE_FERCNFG                             FTFE_FERCNFG_REG(FTFE)

/* FTFE - Register array accessors */
#define FTFE_FCCOB(index)                        FTFE_FCCOB_REG(FTFE,index)
#define FTFE_FPROT(index)                        FTFE_FPROT_REG(FTFE,index)

/*!
 * @}
 */ /* end of group FTFE_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group FTFE_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FTM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTM_Peripheral_Access_Layer FTM Peripheral Access Layer
 * @{
 */

/** FTM - Register Layout Typedef */
typedef struct {
  __IO uint32 SC;                                  /**< Status And Control, offset: 0x0 */
  __IO uint32 CNT;                                 /**< Counter, offset: 0x4 */
  __IO uint32 MOD;                                 /**< Modulo, offset: 0x8 */
  __IO uint32 C0SC;                                /**< Channel (n) Status And Control, offset: 0xC */
  __IO uint32 C0V;                                 /**< Channel (n) Value, offset: 0x10 */
  __IO uint32 C1SC;                                /**< Channel (n) Status And Control, offset: 0x14 */
  __IO uint32 C1V;                                 /**< Channel (n) Value, offset: 0x18 */
  __IO uint32 C2SC;                                /**< Channel (n) Status And Control, offset: 0x1C */
  __IO uint32 C2V;                                 /**< Channel (n) Value, offset: 0x20 */
  __IO uint32 C3SC;                                /**< Channel (n) Status And Control, offset: 0x24 */
  __IO uint32 C3V;                                 /**< Channel (n) Value, offset: 0x28 */
  __IO uint32 C4SC;                                /**< Channel (n) Status And Control, offset: 0x2C */
  __IO uint32 C4V;                                 /**< Channel (n) Value, offset: 0x30 */
  __IO uint32 C5SC;                                /**< Channel (n) Status And Control, offset: 0x34 */
  __IO uint32 C5V;                                 /**< Channel (n) Value, offset: 0x38 */
  __IO uint32 C6SC;                                /**< Channel (n) Status And Control, offset: 0x3C */
  __IO uint32 C6V;                                 /**< Channel (n) Value, offset: 0x40 */
  __IO uint32 C7SC;                                /**< Channel (n) Status And Control, offset: 0x44 */
  __IO uint32 C7V;                                 /**< Channel (n) Value, offset: 0x48 */
  __IO uint32 CNTIN;                               /**< Counter Initial Value, offset: 0x4C */
  __IO uint32 STATUS;                              /**< Capture And Compare Status, offset: 0x50 */
  __IO uint32 MODE;                                /**< Features Mode Selection, offset: 0x54 */
  __IO uint32 SYNC;                                /**< Synchronization, offset: 0x58 */
  __IO uint32 OUTINIT;                             /**< Initial State For Channels Output, offset: 0x5C */
  __IO uint32 OUTMASK;                             /**< Output Mask, offset: 0x60 */
  __IO uint32 COMBINE;                             /**< Function For Linked Channels, offset: 0x64 */
  __IO uint32 DEADTIME;                            /**< Deadtime Insertion Control, offset: 0x68 */
  __IO uint32 EXTTRIG;                             /**< FTM External Trigger, offset: 0x6C */
  __IO uint32 POL;                                 /**< Channels Polarity, offset: 0x70 */
  __IO uint32 FMS;                                 /**< Fault Mode Status, offset: 0x74 */
  __IO uint32 FILTER;                              /**< Input Capture Filter Control, offset: 0x78 */
  __IO uint32 FLTCTRL;                             /**< Fault Control, offset: 0x7C */
  __IO uint32 QDCTRL;                              /**< Quadrature Decoder Control And Status, offset: 0x80 */
  __IO uint32 CONF;                                /**< Configuration, offset: 0x84 */
  __IO uint32 FLTPOL;                              /**< FTM Fault Input Polarity, offset: 0x88 */
  __IO uint32 SYNCONF;                             /**< Synchronization Configuration, offset: 0x8C */
  __IO uint32 INVCTRL;                             /**< FTM Inverting Control, offset: 0x90 */
  __IO uint32 SWOCTRL;                             /**< FTM Software Output Control, offset: 0x94 */
  __IO uint32 PWMLOAD;                             /**< FTM PWM Load, offset: 0x98 */
  __IO uint32 HCR;                                 /**< Half Cycle Register, offset: 0x9C */
} FTM_Type, *FTM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- FTM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTM_Register_Accessor_Macros FTM - Register accessor macros
 * @{
 */


/* FTM - Register accessors */
#define FTM_SC_REG(base)                         ((base)->SC)
#define FTM_CNT_REG(base)                        ((base)->CNT)
#define FTM_MOD_REG(base)                        ((base)->MOD)
#define FTM_C0SC_REG(base)                       ((base)->C0SC)
#define FTM_C0V_REG(base)                        ((base)->C0V)
#define FTM_C1SC_REG(base)                       ((base)->C1SC)
#define FTM_C1V_REG(base)                        ((base)->C1V)
#define FTM_C2SC_REG(base)                       ((base)->C2SC)
#define FTM_C2V_REG(base)                        ((base)->C2V)
#define FTM_C3SC_REG(base)                       ((base)->C3SC)
#define FTM_C3V_REG(base)                        ((base)->C3V)
#define FTM_C4SC_REG(base)                       ((base)->C4SC)
#define FTM_C4V_REG(base)                        ((base)->C4V)
#define FTM_C5SC_REG(base)                       ((base)->C5SC)
#define FTM_C5V_REG(base)                        ((base)->C5V)
#define FTM_C6SC_REG(base)                       ((base)->C6SC)
#define FTM_C6V_REG(base)                        ((base)->C6V)
#define FTM_C7SC_REG(base)                       ((base)->C7SC)
#define FTM_C7V_REG(base)                        ((base)->C7V)
#define FTM_CNTIN_REG(base)                      ((base)->CNTIN)
#define FTM_STATUS_REG(base)                     ((base)->STATUS)
#define FTM_MODE_REG(base)                       ((base)->MODE)
#define FTM_SYNC_REG(base)                       ((base)->SYNC)
#define FTM_OUTINIT_REG(base)                    ((base)->OUTINIT)
#define FTM_OUTMASK_REG(base)                    ((base)->OUTMASK)
#define FTM_COMBINE_REG(base)                    ((base)->COMBINE)
#define FTM_DEADTIME_REG(base)                   ((base)->DEADTIME)
#define FTM_EXTTRIG_REG(base)                    ((base)->EXTTRIG)
#define FTM_POL_REG(base)                        ((base)->POL)
#define FTM_FMS_REG(base)                        ((base)->FMS)
#define FTM_FILTER_REG(base)                     ((base)->FILTER)
#define FTM_FLTCTRL_REG(base)                    ((base)->FLTCTRL)
#define FTM_QDCTRL_REG(base)                     ((base)->QDCTRL)
#define FTM_CONF_REG(base)                       ((base)->CONF)
#define FTM_FLTPOL_REG(base)                     ((base)->FLTPOL)
#define FTM_SYNCONF_REG(base)                    ((base)->SYNCONF)
#define FTM_INVCTRL_REG(base)                    ((base)->INVCTRL)
#define FTM_SWOCTRL_REG(base)                    ((base)->SWOCTRL)
#define FTM_PWMLOAD_REG(base)                    ((base)->PWMLOAD)
#define FTM_HCR_REG(base)                        ((base)->HCR)

/*!
 * @}
 */ /* end of group FTM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- FTM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTM_Register_Masks FTM Register Masks
 * @{
 */

/* SC Bit Fields */
#define FTM_SC_PS_MASK                           0x7u
#define FTM_SC_PS_SHIFT                          0
#define FTM_SC_PS_WIDTH                          3
#define FTM_SC_PS(x)                             (((uint32)(((uint32)(x))<<FTM_SC_PS_SHIFT))&FTM_SC_PS_MASK)
#define FTM_SC_CLKS_MASK                         0x18u
#define FTM_SC_CLKS_SHIFT                        3
#define FTM_SC_CLKS_WIDTH                        2
#define FTM_SC_CLKS(x)                           (((uint32)(((uint32)(x))<<FTM_SC_CLKS_SHIFT))&FTM_SC_CLKS_MASK)
#define FTM_SC_CPWMS_MASK                        0x20u
#define FTM_SC_CPWMS_SHIFT                       5
#define FTM_SC_CPWMS_WIDTH                       1
#define FTM_SC_CPWMS(x)                          (((uint32)(((uint32)(x))<<FTM_SC_CPWMS_SHIFT))&FTM_SC_CPWMS_MASK)
#define FTM_SC_RIE_MASK                          0x40u
#define FTM_SC_RIE_SHIFT                         6
#define FTM_SC_RIE_WIDTH                         1
#define FTM_SC_RIE(x)                            (((uint32)(((uint32)(x))<<FTM_SC_RIE_SHIFT))&FTM_SC_RIE_MASK)
#define FTM_SC_RF_MASK                           0x80u
#define FTM_SC_RF_SHIFT                          7
#define FTM_SC_RF_WIDTH                          1
#define FTM_SC_RF(x)                             (((uint32)(((uint32)(x))<<FTM_SC_RF_SHIFT))&FTM_SC_RF_MASK)
#define FTM_SC_TOIE_MASK                         0x100u
#define FTM_SC_TOIE_SHIFT                        8
#define FTM_SC_TOIE_WIDTH                        1
#define FTM_SC_TOIE(x)                           (((uint32)(((uint32)(x))<<FTM_SC_TOIE_SHIFT))&FTM_SC_TOIE_MASK)
#define FTM_SC_TOF_MASK                          0x200u
#define FTM_SC_TOF_SHIFT                         9
#define FTM_SC_TOF_WIDTH                         1
#define FTM_SC_TOF(x)                            (((uint32)(((uint32)(x))<<FTM_SC_TOF_SHIFT))&FTM_SC_TOF_MASK)
#define FTM_SC_PWMEN0_MASK                       0x10000u
#define FTM_SC_PWMEN0_SHIFT                      16
#define FTM_SC_PWMEN0_WIDTH                      1
#define FTM_SC_PWMEN0(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN0_SHIFT))&FTM_SC_PWMEN0_MASK)
#define FTM_SC_PWMEN1_MASK                       0x20000u
#define FTM_SC_PWMEN1_SHIFT                      17
#define FTM_SC_PWMEN1_WIDTH                      1
#define FTM_SC_PWMEN1(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN1_SHIFT))&FTM_SC_PWMEN1_MASK)
#define FTM_SC_PWMEN2_MASK                       0x40000u
#define FTM_SC_PWMEN2_SHIFT                      18
#define FTM_SC_PWMEN2_WIDTH                      1
#define FTM_SC_PWMEN2(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN2_SHIFT))&FTM_SC_PWMEN2_MASK)
#define FTM_SC_PWMEN3_MASK                       0x80000u
#define FTM_SC_PWMEN3_SHIFT                      19
#define FTM_SC_PWMEN3_WIDTH                      1
#define FTM_SC_PWMEN3(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN3_SHIFT))&FTM_SC_PWMEN3_MASK)
#define FTM_SC_PWMEN4_MASK                       0x100000u
#define FTM_SC_PWMEN4_SHIFT                      20
#define FTM_SC_PWMEN4_WIDTH                      1
#define FTM_SC_PWMEN4(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN4_SHIFT))&FTM_SC_PWMEN4_MASK)
#define FTM_SC_PWMEN5_MASK                       0x200000u
#define FTM_SC_PWMEN5_SHIFT                      21
#define FTM_SC_PWMEN5_WIDTH                      1
#define FTM_SC_PWMEN5(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN5_SHIFT))&FTM_SC_PWMEN5_MASK)
#define FTM_SC_PWMEN6_MASK                       0x400000u
#define FTM_SC_PWMEN6_SHIFT                      22
#define FTM_SC_PWMEN6_WIDTH                      1
#define FTM_SC_PWMEN6(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN6_SHIFT))&FTM_SC_PWMEN6_MASK)
#define FTM_SC_PWMEN7_MASK                       0x800000u
#define FTM_SC_PWMEN7_SHIFT                      23
#define FTM_SC_PWMEN7_WIDTH                      1
#define FTM_SC_PWMEN7(x)                         (((uint32)(((uint32)(x))<<FTM_SC_PWMEN7_SHIFT))&FTM_SC_PWMEN7_MASK)
/* CNT Bit Fields */
#define FTM_CNT_COUNT_MASK                       0xFFFFu
#define FTM_CNT_COUNT_SHIFT                      0
#define FTM_CNT_COUNT_WIDTH                      16
#define FTM_CNT_COUNT(x)                         (((uint32)(((uint32)(x))<<FTM_CNT_COUNT_SHIFT))&FTM_CNT_COUNT_MASK)
/* MOD Bit Fields */
#define FTM_MOD_MOD_MASK                         0xFFFFu
#define FTM_MOD_MOD_SHIFT                        0
#define FTM_MOD_MOD_WIDTH                        16
#define FTM_MOD_MOD(x)                           (((uint32)(((uint32)(x))<<FTM_MOD_MOD_SHIFT))&FTM_MOD_MOD_MASK)
/* C0SC Bit Fields */
#define FTM_C0SC_DMA_MASK                        0x1u
#define FTM_C0SC_DMA_SHIFT                       0
#define FTM_C0SC_DMA_WIDTH                       1
#define FTM_C0SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C0SC_DMA_SHIFT))&FTM_C0SC_DMA_MASK)
#define FTM_C0SC_ICRST_MASK                      0x2u
#define FTM_C0SC_ICRST_SHIFT                     1
#define FTM_C0SC_ICRST_WIDTH                     1
#define FTM_C0SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C0SC_ICRST_SHIFT))&FTM_C0SC_ICRST_MASK)
#define FTM_C0SC_ELSA_MASK                       0x4u
#define FTM_C0SC_ELSA_SHIFT                      2
#define FTM_C0SC_ELSA_WIDTH                      1
#define FTM_C0SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C0SC_ELSA_SHIFT))&FTM_C0SC_ELSA_MASK)
#define FTM_C0SC_ELSB_MASK                       0x8u
#define FTM_C0SC_ELSB_SHIFT                      3
#define FTM_C0SC_ELSB_WIDTH                      1
#define FTM_C0SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C0SC_ELSB_SHIFT))&FTM_C0SC_ELSB_MASK)
#define FTM_C0SC_MSA_MASK                        0x10u
#define FTM_C0SC_MSA_SHIFT                       4
#define FTM_C0SC_MSA_WIDTH                       1
#define FTM_C0SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C0SC_MSA_SHIFT))&FTM_C0SC_MSA_MASK)
#define FTM_C0SC_MSB_MASK                        0x20u
#define FTM_C0SC_MSB_SHIFT                       5
#define FTM_C0SC_MSB_WIDTH                       1
#define FTM_C0SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C0SC_MSB_SHIFT))&FTM_C0SC_MSB_MASK)
#define FTM_C0SC_CHIE_MASK                       0x40u
#define FTM_C0SC_CHIE_SHIFT                      6
#define FTM_C0SC_CHIE_WIDTH                      1
#define FTM_C0SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C0SC_CHIE_SHIFT))&FTM_C0SC_CHIE_MASK)
#define FTM_C0SC_CHF_MASK                        0x80u
#define FTM_C0SC_CHF_SHIFT                       7
#define FTM_C0SC_CHF_WIDTH                       1
#define FTM_C0SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C0SC_CHF_SHIFT))&FTM_C0SC_CHF_MASK)
#define FTM_C0SC_TRIGMODE_MASK                   0x100u
#define FTM_C0SC_TRIGMODE_SHIFT                  8
#define FTM_C0SC_TRIGMODE_WIDTH                  1
#define FTM_C0SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C0SC_TRIGMODE_SHIFT))&FTM_C0SC_TRIGMODE_MASK)
#define FTM_C0SC_CHIS_MASK                       0x200u
#define FTM_C0SC_CHIS_SHIFT                      9
#define FTM_C0SC_CHIS_WIDTH                      1
#define FTM_C0SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C0SC_CHIS_SHIFT))&FTM_C0SC_CHIS_MASK)
/* C0V Bit Fields */
#define FTM_C0V_VAL_MASK                         0xFFFFu
#define FTM_C0V_VAL_SHIFT                        0
#define FTM_C0V_VAL_WIDTH                        16
#define FTM_C0V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C0V_VAL_SHIFT))&FTM_C0V_VAL_MASK)
/* C1SC Bit Fields */
#define FTM_C1SC_DMA_MASK                        0x1u
#define FTM_C1SC_DMA_SHIFT                       0
#define FTM_C1SC_DMA_WIDTH                       1
#define FTM_C1SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C1SC_DMA_SHIFT))&FTM_C1SC_DMA_MASK)
#define FTM_C1SC_ICRST_MASK                      0x2u
#define FTM_C1SC_ICRST_SHIFT                     1
#define FTM_C1SC_ICRST_WIDTH                     1
#define FTM_C1SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C1SC_ICRST_SHIFT))&FTM_C1SC_ICRST_MASK)
#define FTM_C1SC_ELSA_MASK                       0x4u
#define FTM_C1SC_ELSA_SHIFT                      2
#define FTM_C1SC_ELSA_WIDTH                      1
#define FTM_C1SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C1SC_ELSA_SHIFT))&FTM_C1SC_ELSA_MASK)
#define FTM_C1SC_ELSB_MASK                       0x8u
#define FTM_C1SC_ELSB_SHIFT                      3
#define FTM_C1SC_ELSB_WIDTH                      1
#define FTM_C1SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C1SC_ELSB_SHIFT))&FTM_C1SC_ELSB_MASK)
#define FTM_C1SC_MSA_MASK                        0x10u
#define FTM_C1SC_MSA_SHIFT                       4
#define FTM_C1SC_MSA_WIDTH                       1
#define FTM_C1SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C1SC_MSA_SHIFT))&FTM_C1SC_MSA_MASK)
#define FTM_C1SC_MSB_MASK                        0x20u
#define FTM_C1SC_MSB_SHIFT                       5
#define FTM_C1SC_MSB_WIDTH                       1
#define FTM_C1SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C1SC_MSB_SHIFT))&FTM_C1SC_MSB_MASK)
#define FTM_C1SC_CHIE_MASK                       0x40u
#define FTM_C1SC_CHIE_SHIFT                      6
#define FTM_C1SC_CHIE_WIDTH                      1
#define FTM_C1SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C1SC_CHIE_SHIFT))&FTM_C1SC_CHIE_MASK)
#define FTM_C1SC_CHF_MASK                        0x80u
#define FTM_C1SC_CHF_SHIFT                       7
#define FTM_C1SC_CHF_WIDTH                       1
#define FTM_C1SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C1SC_CHF_SHIFT))&FTM_C1SC_CHF_MASK)
#define FTM_C1SC_TRIGMODE_MASK                   0x100u
#define FTM_C1SC_TRIGMODE_SHIFT                  8
#define FTM_C1SC_TRIGMODE_WIDTH                  1
#define FTM_C1SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C1SC_TRIGMODE_SHIFT))&FTM_C1SC_TRIGMODE_MASK)
#define FTM_C1SC_CHIS_MASK                       0x200u
#define FTM_C1SC_CHIS_SHIFT                      9
#define FTM_C1SC_CHIS_WIDTH                      1
#define FTM_C1SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C1SC_CHIS_SHIFT))&FTM_C1SC_CHIS_MASK)
/* C1V Bit Fields */
#define FTM_C1V_VAL_MASK                         0xFFFFu
#define FTM_C1V_VAL_SHIFT                        0
#define FTM_C1V_VAL_WIDTH                        16
#define FTM_C1V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C1V_VAL_SHIFT))&FTM_C1V_VAL_MASK)
/* C2SC Bit Fields */
#define FTM_C2SC_DMA_MASK                        0x1u
#define FTM_C2SC_DMA_SHIFT                       0
#define FTM_C2SC_DMA_WIDTH                       1
#define FTM_C2SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C2SC_DMA_SHIFT))&FTM_C2SC_DMA_MASK)
#define FTM_C2SC_ICRST_MASK                      0x2u
#define FTM_C2SC_ICRST_SHIFT                     1
#define FTM_C2SC_ICRST_WIDTH                     1
#define FTM_C2SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C2SC_ICRST_SHIFT))&FTM_C2SC_ICRST_MASK)
#define FTM_C2SC_ELSA_MASK                       0x4u
#define FTM_C2SC_ELSA_SHIFT                      2
#define FTM_C2SC_ELSA_WIDTH                      1
#define FTM_C2SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C2SC_ELSA_SHIFT))&FTM_C2SC_ELSA_MASK)
#define FTM_C2SC_ELSB_MASK                       0x8u
#define FTM_C2SC_ELSB_SHIFT                      3
#define FTM_C2SC_ELSB_WIDTH                      1
#define FTM_C2SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C2SC_ELSB_SHIFT))&FTM_C2SC_ELSB_MASK)
#define FTM_C2SC_MSA_MASK                        0x10u
#define FTM_C2SC_MSA_SHIFT                       4
#define FTM_C2SC_MSA_WIDTH                       1
#define FTM_C2SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C2SC_MSA_SHIFT))&FTM_C2SC_MSA_MASK)
#define FTM_C2SC_MSB_MASK                        0x20u
#define FTM_C2SC_MSB_SHIFT                       5
#define FTM_C2SC_MSB_WIDTH                       1
#define FTM_C2SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C2SC_MSB_SHIFT))&FTM_C2SC_MSB_MASK)
#define FTM_C2SC_CHIE_MASK                       0x40u
#define FTM_C2SC_CHIE_SHIFT                      6
#define FTM_C2SC_CHIE_WIDTH                      1
#define FTM_C2SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C2SC_CHIE_SHIFT))&FTM_C2SC_CHIE_MASK)
#define FTM_C2SC_CHF_MASK                        0x80u
#define FTM_C2SC_CHF_SHIFT                       7
#define FTM_C2SC_CHF_WIDTH                       1
#define FTM_C2SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C2SC_CHF_SHIFT))&FTM_C2SC_CHF_MASK)
#define FTM_C2SC_TRIGMODE_MASK                   0x100u
#define FTM_C2SC_TRIGMODE_SHIFT                  8
#define FTM_C2SC_TRIGMODE_WIDTH                  1
#define FTM_C2SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C2SC_TRIGMODE_SHIFT))&FTM_C2SC_TRIGMODE_MASK)
#define FTM_C2SC_CHIS_MASK                       0x200u
#define FTM_C2SC_CHIS_SHIFT                      9
#define FTM_C2SC_CHIS_WIDTH                      1
#define FTM_C2SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C2SC_CHIS_SHIFT))&FTM_C2SC_CHIS_MASK)
/* C2V Bit Fields */
#define FTM_C2V_VAL_MASK                         0xFFFFu
#define FTM_C2V_VAL_SHIFT                        0
#define FTM_C2V_VAL_WIDTH                        16
#define FTM_C2V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C2V_VAL_SHIFT))&FTM_C2V_VAL_MASK)
/* C3SC Bit Fields */
#define FTM_C3SC_DMA_MASK                        0x1u
#define FTM_C3SC_DMA_SHIFT                       0
#define FTM_C3SC_DMA_WIDTH                       1
#define FTM_C3SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C3SC_DMA_SHIFT))&FTM_C3SC_DMA_MASK)
#define FTM_C3SC_ICRST_MASK                      0x2u
#define FTM_C3SC_ICRST_SHIFT                     1
#define FTM_C3SC_ICRST_WIDTH                     1
#define FTM_C3SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C3SC_ICRST_SHIFT))&FTM_C3SC_ICRST_MASK)
#define FTM_C3SC_ELSA_MASK                       0x4u
#define FTM_C3SC_ELSA_SHIFT                      2
#define FTM_C3SC_ELSA_WIDTH                      1
#define FTM_C3SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C3SC_ELSA_SHIFT))&FTM_C3SC_ELSA_MASK)
#define FTM_C3SC_ELSB_MASK                       0x8u
#define FTM_C3SC_ELSB_SHIFT                      3
#define FTM_C3SC_ELSB_WIDTH                      1
#define FTM_C3SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C3SC_ELSB_SHIFT))&FTM_C3SC_ELSB_MASK)
#define FTM_C3SC_MSA_MASK                        0x10u
#define FTM_C3SC_MSA_SHIFT                       4
#define FTM_C3SC_MSA_WIDTH                       1
#define FTM_C3SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C3SC_MSA_SHIFT))&FTM_C3SC_MSA_MASK)
#define FTM_C3SC_MSB_MASK                        0x20u
#define FTM_C3SC_MSB_SHIFT                       5
#define FTM_C3SC_MSB_WIDTH                       1
#define FTM_C3SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C3SC_MSB_SHIFT))&FTM_C3SC_MSB_MASK)
#define FTM_C3SC_CHIE_MASK                       0x40u
#define FTM_C3SC_CHIE_SHIFT                      6
#define FTM_C3SC_CHIE_WIDTH                      1
#define FTM_C3SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C3SC_CHIE_SHIFT))&FTM_C3SC_CHIE_MASK)
#define FTM_C3SC_CHF_MASK                        0x80u
#define FTM_C3SC_CHF_SHIFT                       7
#define FTM_C3SC_CHF_WIDTH                       1
#define FTM_C3SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C3SC_CHF_SHIFT))&FTM_C3SC_CHF_MASK)
#define FTM_C3SC_TRIGMODE_MASK                   0x100u
#define FTM_C3SC_TRIGMODE_SHIFT                  8
#define FTM_C3SC_TRIGMODE_WIDTH                  1
#define FTM_C3SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C3SC_TRIGMODE_SHIFT))&FTM_C3SC_TRIGMODE_MASK)
#define FTM_C3SC_CHIS_MASK                       0x200u
#define FTM_C3SC_CHIS_SHIFT                      9
#define FTM_C3SC_CHIS_WIDTH                      1
#define FTM_C3SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C3SC_CHIS_SHIFT))&FTM_C3SC_CHIS_MASK)
/* C3V Bit Fields */
#define FTM_C3V_VAL_MASK                         0xFFFFu
#define FTM_C3V_VAL_SHIFT                        0
#define FTM_C3V_VAL_WIDTH                        16
#define FTM_C3V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C3V_VAL_SHIFT))&FTM_C3V_VAL_MASK)
/* C4SC Bit Fields */
#define FTM_C4SC_DMA_MASK                        0x1u
#define FTM_C4SC_DMA_SHIFT                       0
#define FTM_C4SC_DMA_WIDTH                       1
#define FTM_C4SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C4SC_DMA_SHIFT))&FTM_C4SC_DMA_MASK)
#define FTM_C4SC_ICRST_MASK                      0x2u
#define FTM_C4SC_ICRST_SHIFT                     1
#define FTM_C4SC_ICRST_WIDTH                     1
#define FTM_C4SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C4SC_ICRST_SHIFT))&FTM_C4SC_ICRST_MASK)
#define FTM_C4SC_ELSA_MASK                       0x4u
#define FTM_C4SC_ELSA_SHIFT                      2
#define FTM_C4SC_ELSA_WIDTH                      1
#define FTM_C4SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C4SC_ELSA_SHIFT))&FTM_C4SC_ELSA_MASK)
#define FTM_C4SC_ELSB_MASK                       0x8u
#define FTM_C4SC_ELSB_SHIFT                      3
#define FTM_C4SC_ELSB_WIDTH                      1
#define FTM_C4SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C4SC_ELSB_SHIFT))&FTM_C4SC_ELSB_MASK)
#define FTM_C4SC_MSA_MASK                        0x10u
#define FTM_C4SC_MSA_SHIFT                       4
#define FTM_C4SC_MSA_WIDTH                       1
#define FTM_C4SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C4SC_MSA_SHIFT))&FTM_C4SC_MSA_MASK)
#define FTM_C4SC_MSB_MASK                        0x20u
#define FTM_C4SC_MSB_SHIFT                       5
#define FTM_C4SC_MSB_WIDTH                       1
#define FTM_C4SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C4SC_MSB_SHIFT))&FTM_C4SC_MSB_MASK)
#define FTM_C4SC_CHIE_MASK                       0x40u
#define FTM_C4SC_CHIE_SHIFT                      6
#define FTM_C4SC_CHIE_WIDTH                      1
#define FTM_C4SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C4SC_CHIE_SHIFT))&FTM_C4SC_CHIE_MASK)
#define FTM_C4SC_CHF_MASK                        0x80u
#define FTM_C4SC_CHF_SHIFT                       7
#define FTM_C4SC_CHF_WIDTH                       1
#define FTM_C4SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C4SC_CHF_SHIFT))&FTM_C4SC_CHF_MASK)
#define FTM_C4SC_TRIGMODE_MASK                   0x100u
#define FTM_C4SC_TRIGMODE_SHIFT                  8
#define FTM_C4SC_TRIGMODE_WIDTH                  1
#define FTM_C4SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C4SC_TRIGMODE_SHIFT))&FTM_C4SC_TRIGMODE_MASK)
#define FTM_C4SC_CHIS_MASK                       0x200u
#define FTM_C4SC_CHIS_SHIFT                      9
#define FTM_C4SC_CHIS_WIDTH                      1
#define FTM_C4SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C4SC_CHIS_SHIFT))&FTM_C4SC_CHIS_MASK)
/* C4V Bit Fields */
#define FTM_C4V_VAL_MASK                         0xFFFFu
#define FTM_C4V_VAL_SHIFT                        0
#define FTM_C4V_VAL_WIDTH                        16
#define FTM_C4V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C4V_VAL_SHIFT))&FTM_C4V_VAL_MASK)
/* C5SC Bit Fields */
#define FTM_C5SC_DMA_MASK                        0x1u
#define FTM_C5SC_DMA_SHIFT                       0
#define FTM_C5SC_DMA_WIDTH                       1
#define FTM_C5SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C5SC_DMA_SHIFT))&FTM_C5SC_DMA_MASK)
#define FTM_C5SC_ICRST_MASK                      0x2u
#define FTM_C5SC_ICRST_SHIFT                     1
#define FTM_C5SC_ICRST_WIDTH                     1
#define FTM_C5SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C5SC_ICRST_SHIFT))&FTM_C5SC_ICRST_MASK)
#define FTM_C5SC_ELSA_MASK                       0x4u
#define FTM_C5SC_ELSA_SHIFT                      2
#define FTM_C5SC_ELSA_WIDTH                      1
#define FTM_C5SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C5SC_ELSA_SHIFT))&FTM_C5SC_ELSA_MASK)
#define FTM_C5SC_ELSB_MASK                       0x8u
#define FTM_C5SC_ELSB_SHIFT                      3
#define FTM_C5SC_ELSB_WIDTH                      1
#define FTM_C5SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C5SC_ELSB_SHIFT))&FTM_C5SC_ELSB_MASK)
#define FTM_C5SC_MSA_MASK                        0x10u
#define FTM_C5SC_MSA_SHIFT                       4
#define FTM_C5SC_MSA_WIDTH                       1
#define FTM_C5SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C5SC_MSA_SHIFT))&FTM_C5SC_MSA_MASK)
#define FTM_C5SC_MSB_MASK                        0x20u
#define FTM_C5SC_MSB_SHIFT                       5
#define FTM_C5SC_MSB_WIDTH                       1
#define FTM_C5SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C5SC_MSB_SHIFT))&FTM_C5SC_MSB_MASK)
#define FTM_C5SC_CHIE_MASK                       0x40u
#define FTM_C5SC_CHIE_SHIFT                      6
#define FTM_C5SC_CHIE_WIDTH                      1
#define FTM_C5SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C5SC_CHIE_SHIFT))&FTM_C5SC_CHIE_MASK)
#define FTM_C5SC_CHF_MASK                        0x80u
#define FTM_C5SC_CHF_SHIFT                       7
#define FTM_C5SC_CHF_WIDTH                       1
#define FTM_C5SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C5SC_CHF_SHIFT))&FTM_C5SC_CHF_MASK)
#define FTM_C5SC_TRIGMODE_MASK                   0x100u
#define FTM_C5SC_TRIGMODE_SHIFT                  8
#define FTM_C5SC_TRIGMODE_WIDTH                  1
#define FTM_C5SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C5SC_TRIGMODE_SHIFT))&FTM_C5SC_TRIGMODE_MASK)
#define FTM_C5SC_CHIS_MASK                       0x200u
#define FTM_C5SC_CHIS_SHIFT                      9
#define FTM_C5SC_CHIS_WIDTH                      1
#define FTM_C5SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C5SC_CHIS_SHIFT))&FTM_C5SC_CHIS_MASK)
/* C5V Bit Fields */
#define FTM_C5V_VAL_MASK                         0xFFFFu
#define FTM_C5V_VAL_SHIFT                        0
#define FTM_C5V_VAL_WIDTH                        16
#define FTM_C5V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C5V_VAL_SHIFT))&FTM_C5V_VAL_MASK)
/* C6SC Bit Fields */
#define FTM_C6SC_DMA_MASK                        0x1u
#define FTM_C6SC_DMA_SHIFT                       0
#define FTM_C6SC_DMA_WIDTH                       1
#define FTM_C6SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C6SC_DMA_SHIFT))&FTM_C6SC_DMA_MASK)
#define FTM_C6SC_ICRST_MASK                      0x2u
#define FTM_C6SC_ICRST_SHIFT                     1
#define FTM_C6SC_ICRST_WIDTH                     1
#define FTM_C6SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C6SC_ICRST_SHIFT))&FTM_C6SC_ICRST_MASK)
#define FTM_C6SC_ELSA_MASK                       0x4u
#define FTM_C6SC_ELSA_SHIFT                      2
#define FTM_C6SC_ELSA_WIDTH                      1
#define FTM_C6SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C6SC_ELSA_SHIFT))&FTM_C6SC_ELSA_MASK)
#define FTM_C6SC_ELSB_MASK                       0x8u
#define FTM_C6SC_ELSB_SHIFT                      3
#define FTM_C6SC_ELSB_WIDTH                      1
#define FTM_C6SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C6SC_ELSB_SHIFT))&FTM_C6SC_ELSB_MASK)
#define FTM_C6SC_MSA_MASK                        0x10u
#define FTM_C6SC_MSA_SHIFT                       4
#define FTM_C6SC_MSA_WIDTH                       1
#define FTM_C6SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C6SC_MSA_SHIFT))&FTM_C6SC_MSA_MASK)
#define FTM_C6SC_MSB_MASK                        0x20u
#define FTM_C6SC_MSB_SHIFT                       5
#define FTM_C6SC_MSB_WIDTH                       1
#define FTM_C6SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C6SC_MSB_SHIFT))&FTM_C6SC_MSB_MASK)
#define FTM_C6SC_CHIE_MASK                       0x40u
#define FTM_C6SC_CHIE_SHIFT                      6
#define FTM_C6SC_CHIE_WIDTH                      1
#define FTM_C6SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C6SC_CHIE_SHIFT))&FTM_C6SC_CHIE_MASK)
#define FTM_C6SC_CHF_MASK                        0x80u
#define FTM_C6SC_CHF_SHIFT                       7
#define FTM_C6SC_CHF_WIDTH                       1
#define FTM_C6SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C6SC_CHF_SHIFT))&FTM_C6SC_CHF_MASK)
#define FTM_C6SC_TRIGMODE_MASK                   0x100u
#define FTM_C6SC_TRIGMODE_SHIFT                  8
#define FTM_C6SC_TRIGMODE_WIDTH                  1
#define FTM_C6SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C6SC_TRIGMODE_SHIFT))&FTM_C6SC_TRIGMODE_MASK)
#define FTM_C6SC_CHIS_MASK                       0x200u
#define FTM_C6SC_CHIS_SHIFT                      9
#define FTM_C6SC_CHIS_WIDTH                      1
#define FTM_C6SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C6SC_CHIS_SHIFT))&FTM_C6SC_CHIS_MASK)
/* C6V Bit Fields */
#define FTM_C6V_VAL_MASK                         0xFFFFu
#define FTM_C6V_VAL_SHIFT                        0
#define FTM_C6V_VAL_WIDTH                        16
#define FTM_C6V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C6V_VAL_SHIFT))&FTM_C6V_VAL_MASK)
/* C7SC Bit Fields */
#define FTM_C7SC_DMA_MASK                        0x1u
#define FTM_C7SC_DMA_SHIFT                       0
#define FTM_C7SC_DMA_WIDTH                       1
#define FTM_C7SC_DMA(x)                          (((uint32)(((uint32)(x))<<FTM_C7SC_DMA_SHIFT))&FTM_C7SC_DMA_MASK)
#define FTM_C7SC_ICRST_MASK                      0x2u
#define FTM_C7SC_ICRST_SHIFT                     1
#define FTM_C7SC_ICRST_WIDTH                     1
#define FTM_C7SC_ICRST(x)                        (((uint32)(((uint32)(x))<<FTM_C7SC_ICRST_SHIFT))&FTM_C7SC_ICRST_MASK)
#define FTM_C7SC_ELSA_MASK                       0x4u
#define FTM_C7SC_ELSA_SHIFT                      2
#define FTM_C7SC_ELSA_WIDTH                      1
#define FTM_C7SC_ELSA(x)                         (((uint32)(((uint32)(x))<<FTM_C7SC_ELSA_SHIFT))&FTM_C7SC_ELSA_MASK)
#define FTM_C7SC_ELSB_MASK                       0x8u
#define FTM_C7SC_ELSB_SHIFT                      3
#define FTM_C7SC_ELSB_WIDTH                      1
#define FTM_C7SC_ELSB(x)                         (((uint32)(((uint32)(x))<<FTM_C7SC_ELSB_SHIFT))&FTM_C7SC_ELSB_MASK)
#define FTM_C7SC_MSA_MASK                        0x10u
#define FTM_C7SC_MSA_SHIFT                       4
#define FTM_C7SC_MSA_WIDTH                       1
#define FTM_C7SC_MSA(x)                          (((uint32)(((uint32)(x))<<FTM_C7SC_MSA_SHIFT))&FTM_C7SC_MSA_MASK)
#define FTM_C7SC_MSB_MASK                        0x20u
#define FTM_C7SC_MSB_SHIFT                       5
#define FTM_C7SC_MSB_WIDTH                       1
#define FTM_C7SC_MSB(x)                          (((uint32)(((uint32)(x))<<FTM_C7SC_MSB_SHIFT))&FTM_C7SC_MSB_MASK)
#define FTM_C7SC_CHIE_MASK                       0x40u
#define FTM_C7SC_CHIE_SHIFT                      6
#define FTM_C7SC_CHIE_WIDTH                      1
#define FTM_C7SC_CHIE(x)                         (((uint32)(((uint32)(x))<<FTM_C7SC_CHIE_SHIFT))&FTM_C7SC_CHIE_MASK)
#define FTM_C7SC_CHF_MASK                        0x80u
#define FTM_C7SC_CHF_SHIFT                       7
#define FTM_C7SC_CHF_WIDTH                       1
#define FTM_C7SC_CHF(x)                          (((uint32)(((uint32)(x))<<FTM_C7SC_CHF_SHIFT))&FTM_C7SC_CHF_MASK)
#define FTM_C7SC_TRIGMODE_MASK                   0x100u
#define FTM_C7SC_TRIGMODE_SHIFT                  8
#define FTM_C7SC_TRIGMODE_WIDTH                  1
#define FTM_C7SC_TRIGMODE(x)                     (((uint32)(((uint32)(x))<<FTM_C7SC_TRIGMODE_SHIFT))&FTM_C7SC_TRIGMODE_MASK)
#define FTM_C7SC_CHIS_MASK                       0x200u
#define FTM_C7SC_CHIS_SHIFT                      9
#define FTM_C7SC_CHIS_WIDTH                      1
#define FTM_C7SC_CHIS(x)                         (((uint32)(((uint32)(x))<<FTM_C7SC_CHIS_SHIFT))&FTM_C7SC_CHIS_MASK)
/* C7V Bit Fields */
#define FTM_C7V_VAL_MASK                         0xFFFFu
#define FTM_C7V_VAL_SHIFT                        0
#define FTM_C7V_VAL_WIDTH                        16
#define FTM_C7V_VAL(x)                           (((uint32)(((uint32)(x))<<FTM_C7V_VAL_SHIFT))&FTM_C7V_VAL_MASK)
/* CNTIN Bit Fields */
#define FTM_CNTIN_INIT_MASK                      0xFFFFu
#define FTM_CNTIN_INIT_SHIFT                     0
#define FTM_CNTIN_INIT_WIDTH                     16
#define FTM_CNTIN_INIT(x)                        (((uint32)(((uint32)(x))<<FTM_CNTIN_INIT_SHIFT))&FTM_CNTIN_INIT_MASK)
/* STATUS Bit Fields */
#define FTM_STATUS_CH0F_MASK                     0x1u
#define FTM_STATUS_CH0F_SHIFT                    0
#define FTM_STATUS_CH0F_WIDTH                    1
#define FTM_STATUS_CH0F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH0F_SHIFT))&FTM_STATUS_CH0F_MASK)
#define FTM_STATUS_CH1F_MASK                     0x2u
#define FTM_STATUS_CH1F_SHIFT                    1
#define FTM_STATUS_CH1F_WIDTH                    1
#define FTM_STATUS_CH1F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH1F_SHIFT))&FTM_STATUS_CH1F_MASK)
#define FTM_STATUS_CH2F_MASK                     0x4u
#define FTM_STATUS_CH2F_SHIFT                    2
#define FTM_STATUS_CH2F_WIDTH                    1
#define FTM_STATUS_CH2F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH2F_SHIFT))&FTM_STATUS_CH2F_MASK)
#define FTM_STATUS_CH3F_MASK                     0x8u
#define FTM_STATUS_CH3F_SHIFT                    3
#define FTM_STATUS_CH3F_WIDTH                    1
#define FTM_STATUS_CH3F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH3F_SHIFT))&FTM_STATUS_CH3F_MASK)
#define FTM_STATUS_CH4F_MASK                     0x10u
#define FTM_STATUS_CH4F_SHIFT                    4
#define FTM_STATUS_CH4F_WIDTH                    1
#define FTM_STATUS_CH4F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH4F_SHIFT))&FTM_STATUS_CH4F_MASK)
#define FTM_STATUS_CH5F_MASK                     0x20u
#define FTM_STATUS_CH5F_SHIFT                    5
#define FTM_STATUS_CH5F_WIDTH                    1
#define FTM_STATUS_CH5F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH5F_SHIFT))&FTM_STATUS_CH5F_MASK)
#define FTM_STATUS_CH6F_MASK                     0x40u
#define FTM_STATUS_CH6F_SHIFT                    6
#define FTM_STATUS_CH6F_WIDTH                    1
#define FTM_STATUS_CH6F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH6F_SHIFT))&FTM_STATUS_CH6F_MASK)
#define FTM_STATUS_CH7F_MASK                     0x80u
#define FTM_STATUS_CH7F_SHIFT                    7
#define FTM_STATUS_CH7F_WIDTH                    1
#define FTM_STATUS_CH7F(x)                       (((uint32)(((uint32)(x))<<FTM_STATUS_CH7F_SHIFT))&FTM_STATUS_CH7F_MASK)
/* MODE Bit Fields */
#define FTM_MODE_FTMEN_MASK                      0x1u
#define FTM_MODE_FTMEN_SHIFT                     0
#define FTM_MODE_FTMEN_WIDTH                     1
#define FTM_MODE_FTMEN(x)                        (((uint32)(((uint32)(x))<<FTM_MODE_FTMEN_SHIFT))&FTM_MODE_FTMEN_MASK)
#define FTM_MODE_INIT_MASK                       0x2u
#define FTM_MODE_INIT_SHIFT                      1
#define FTM_MODE_INIT_WIDTH                      1
#define FTM_MODE_INIT(x)                         (((uint32)(((uint32)(x))<<FTM_MODE_INIT_SHIFT))&FTM_MODE_INIT_MASK)
#define FTM_MODE_WPDIS_MASK                      0x4u
#define FTM_MODE_WPDIS_SHIFT                     2
#define FTM_MODE_WPDIS_WIDTH                     1
#define FTM_MODE_WPDIS(x)                        (((uint32)(((uint32)(x))<<FTM_MODE_WPDIS_SHIFT))&FTM_MODE_WPDIS_MASK)
#define FTM_MODE_PWMSYNC_MASK                    0x8u
#define FTM_MODE_PWMSYNC_SHIFT                   3
#define FTM_MODE_PWMSYNC_WIDTH                   1
#define FTM_MODE_PWMSYNC(x)                      (((uint32)(((uint32)(x))<<FTM_MODE_PWMSYNC_SHIFT))&FTM_MODE_PWMSYNC_MASK)
#define FTM_MODE_CAPTEST_MASK                    0x10u
#define FTM_MODE_CAPTEST_SHIFT                   4
#define FTM_MODE_CAPTEST_WIDTH                   1
#define FTM_MODE_CAPTEST(x)                      (((uint32)(((uint32)(x))<<FTM_MODE_CAPTEST_SHIFT))&FTM_MODE_CAPTEST_MASK)
#define FTM_MODE_FAULTM_MASK                     0x60u
#define FTM_MODE_FAULTM_SHIFT                    5
#define FTM_MODE_FAULTM_WIDTH                    2
#define FTM_MODE_FAULTM(x)                       (((uint32)(((uint32)(x))<<FTM_MODE_FAULTM_SHIFT))&FTM_MODE_FAULTM_MASK)
#define FTM_MODE_FAULTIE_MASK                    0x80u
#define FTM_MODE_FAULTIE_SHIFT                   7
#define FTM_MODE_FAULTIE_WIDTH                   1
#define FTM_MODE_FAULTIE(x)                      (((uint32)(((uint32)(x))<<FTM_MODE_FAULTIE_SHIFT))&FTM_MODE_FAULTIE_MASK)
/* SYNC Bit Fields */
#define FTM_SYNC_CNTMIN_MASK                     0x1u
#define FTM_SYNC_CNTMIN_SHIFT                    0
#define FTM_SYNC_CNTMIN_WIDTH                    1
#define FTM_SYNC_CNTMIN(x)                       (((uint32)(((uint32)(x))<<FTM_SYNC_CNTMIN_SHIFT))&FTM_SYNC_CNTMIN_MASK)
#define FTM_SYNC_CNTMAX_MASK                     0x2u
#define FTM_SYNC_CNTMAX_SHIFT                    1
#define FTM_SYNC_CNTMAX_WIDTH                    1
#define FTM_SYNC_CNTMAX(x)                       (((uint32)(((uint32)(x))<<FTM_SYNC_CNTMAX_SHIFT))&FTM_SYNC_CNTMAX_MASK)
#define FTM_SYNC_REINIT_MASK                     0x4u
#define FTM_SYNC_REINIT_SHIFT                    2
#define FTM_SYNC_REINIT_WIDTH                    1
#define FTM_SYNC_REINIT(x)                       (((uint32)(((uint32)(x))<<FTM_SYNC_REINIT_SHIFT))&FTM_SYNC_REINIT_MASK)
#define FTM_SYNC_SYNCHOM_MASK                    0x8u
#define FTM_SYNC_SYNCHOM_SHIFT                   3
#define FTM_SYNC_SYNCHOM_WIDTH                   1
#define FTM_SYNC_SYNCHOM(x)                      (((uint32)(((uint32)(x))<<FTM_SYNC_SYNCHOM_SHIFT))&FTM_SYNC_SYNCHOM_MASK)
#define FTM_SYNC_TRIG0_MASK                      0x10u
#define FTM_SYNC_TRIG0_SHIFT                     4
#define FTM_SYNC_TRIG0_WIDTH                     1
#define FTM_SYNC_TRIG0(x)                        (((uint32)(((uint32)(x))<<FTM_SYNC_TRIG0_SHIFT))&FTM_SYNC_TRIG0_MASK)
#define FTM_SYNC_TRIG1_MASK                      0x20u
#define FTM_SYNC_TRIG1_SHIFT                     5
#define FTM_SYNC_TRIG1_WIDTH                     1
#define FTM_SYNC_TRIG1(x)                        (((uint32)(((uint32)(x))<<FTM_SYNC_TRIG1_SHIFT))&FTM_SYNC_TRIG1_MASK)
#define FTM_SYNC_TRIG2_MASK                      0x40u
#define FTM_SYNC_TRIG2_SHIFT                     6
#define FTM_SYNC_TRIG2_WIDTH                     1
#define FTM_SYNC_TRIG2(x)                        (((uint32)(((uint32)(x))<<FTM_SYNC_TRIG2_SHIFT))&FTM_SYNC_TRIG2_MASK)
#define FTM_SYNC_SWSYNC_MASK                     0x80u
#define FTM_SYNC_SWSYNC_SHIFT                    7
#define FTM_SYNC_SWSYNC_WIDTH                    1
#define FTM_SYNC_SWSYNC(x)                       (((uint32)(((uint32)(x))<<FTM_SYNC_SWSYNC_SHIFT))&FTM_SYNC_SWSYNC_MASK)
/* OUTINIT Bit Fields */
#define FTM_OUTINIT_CH0OI_MASK                   0x1u
#define FTM_OUTINIT_CH0OI_SHIFT                  0
#define FTM_OUTINIT_CH0OI_WIDTH                  1
#define FTM_OUTINIT_CH0OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH0OI_SHIFT))&FTM_OUTINIT_CH0OI_MASK)
#define FTM_OUTINIT_CH1OI_MASK                   0x2u
#define FTM_OUTINIT_CH1OI_SHIFT                  1
#define FTM_OUTINIT_CH1OI_WIDTH                  1
#define FTM_OUTINIT_CH1OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH1OI_SHIFT))&FTM_OUTINIT_CH1OI_MASK)
#define FTM_OUTINIT_CH2OI_MASK                   0x4u
#define FTM_OUTINIT_CH2OI_SHIFT                  2
#define FTM_OUTINIT_CH2OI_WIDTH                  1
#define FTM_OUTINIT_CH2OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH2OI_SHIFT))&FTM_OUTINIT_CH2OI_MASK)
#define FTM_OUTINIT_CH3OI_MASK                   0x8u
#define FTM_OUTINIT_CH3OI_SHIFT                  3
#define FTM_OUTINIT_CH3OI_WIDTH                  1
#define FTM_OUTINIT_CH3OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH3OI_SHIFT))&FTM_OUTINIT_CH3OI_MASK)
#define FTM_OUTINIT_CH4OI_MASK                   0x10u
#define FTM_OUTINIT_CH4OI_SHIFT                  4
#define FTM_OUTINIT_CH4OI_WIDTH                  1
#define FTM_OUTINIT_CH4OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH4OI_SHIFT))&FTM_OUTINIT_CH4OI_MASK)
#define FTM_OUTINIT_CH5OI_MASK                   0x20u
#define FTM_OUTINIT_CH5OI_SHIFT                  5
#define FTM_OUTINIT_CH5OI_WIDTH                  1
#define FTM_OUTINIT_CH5OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH5OI_SHIFT))&FTM_OUTINIT_CH5OI_MASK)
#define FTM_OUTINIT_CH6OI_MASK                   0x40u
#define FTM_OUTINIT_CH6OI_SHIFT                  6
#define FTM_OUTINIT_CH6OI_WIDTH                  1
#define FTM_OUTINIT_CH6OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH6OI_SHIFT))&FTM_OUTINIT_CH6OI_MASK)
#define FTM_OUTINIT_CH7OI_MASK                   0x80u
#define FTM_OUTINIT_CH7OI_SHIFT                  7
#define FTM_OUTINIT_CH7OI_WIDTH                  1
#define FTM_OUTINIT_CH7OI(x)                     (((uint32)(((uint32)(x))<<FTM_OUTINIT_CH7OI_SHIFT))&FTM_OUTINIT_CH7OI_MASK)
/* OUTMASK Bit Fields */
#define FTM_OUTMASK_CH0OM_MASK                   0x1u
#define FTM_OUTMASK_CH0OM_SHIFT                  0
#define FTM_OUTMASK_CH0OM_WIDTH                  1
#define FTM_OUTMASK_CH0OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH0OM_SHIFT))&FTM_OUTMASK_CH0OM_MASK)
#define FTM_OUTMASK_CH1OM_MASK                   0x2u
#define FTM_OUTMASK_CH1OM_SHIFT                  1
#define FTM_OUTMASK_CH1OM_WIDTH                  1
#define FTM_OUTMASK_CH1OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH1OM_SHIFT))&FTM_OUTMASK_CH1OM_MASK)
#define FTM_OUTMASK_CH2OM_MASK                   0x4u
#define FTM_OUTMASK_CH2OM_SHIFT                  2
#define FTM_OUTMASK_CH2OM_WIDTH                  1
#define FTM_OUTMASK_CH2OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH2OM_SHIFT))&FTM_OUTMASK_CH2OM_MASK)
#define FTM_OUTMASK_CH3OM_MASK                   0x8u
#define FTM_OUTMASK_CH3OM_SHIFT                  3
#define FTM_OUTMASK_CH3OM_WIDTH                  1
#define FTM_OUTMASK_CH3OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH3OM_SHIFT))&FTM_OUTMASK_CH3OM_MASK)
#define FTM_OUTMASK_CH4OM_MASK                   0x10u
#define FTM_OUTMASK_CH4OM_SHIFT                  4
#define FTM_OUTMASK_CH4OM_WIDTH                  1
#define FTM_OUTMASK_CH4OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH4OM_SHIFT))&FTM_OUTMASK_CH4OM_MASK)
#define FTM_OUTMASK_CH5OM_MASK                   0x20u
#define FTM_OUTMASK_CH5OM_SHIFT                  5
#define FTM_OUTMASK_CH5OM_WIDTH                  1
#define FTM_OUTMASK_CH5OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH5OM_SHIFT))&FTM_OUTMASK_CH5OM_MASK)
#define FTM_OUTMASK_CH6OM_MASK                   0x40u
#define FTM_OUTMASK_CH6OM_SHIFT                  6
#define FTM_OUTMASK_CH6OM_WIDTH                  1
#define FTM_OUTMASK_CH6OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH6OM_SHIFT))&FTM_OUTMASK_CH6OM_MASK)
#define FTM_OUTMASK_CH7OM_MASK                   0x80u
#define FTM_OUTMASK_CH7OM_SHIFT                  7
#define FTM_OUTMASK_CH7OM_WIDTH                  1
#define FTM_OUTMASK_CH7OM(x)                     (((uint32)(((uint32)(x))<<FTM_OUTMASK_CH7OM_SHIFT))&FTM_OUTMASK_CH7OM_MASK)
/* COMBINE Bit Fields */
#define FTM_COMBINE_COMBINE0_MASK                0x1u
#define FTM_COMBINE_COMBINE0_SHIFT               0
#define FTM_COMBINE_COMBINE0_WIDTH               1
#define FTM_COMBINE_COMBINE0(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_COMBINE0_SHIFT))&FTM_COMBINE_COMBINE0_MASK)
#define FTM_COMBINE_COMP0_MASK                   0x2u
#define FTM_COMBINE_COMP0_SHIFT                  1
#define FTM_COMBINE_COMP0_WIDTH                  1
#define FTM_COMBINE_COMP0(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_COMP0_SHIFT))&FTM_COMBINE_COMP0_MASK)
#define FTM_COMBINE_DECAPEN0_MASK                0x4u
#define FTM_COMBINE_DECAPEN0_SHIFT               2
#define FTM_COMBINE_DECAPEN0_WIDTH               1
#define FTM_COMBINE_DECAPEN0(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAPEN0_SHIFT))&FTM_COMBINE_DECAPEN0_MASK)
#define FTM_COMBINE_DECAP0_MASK                  0x8u
#define FTM_COMBINE_DECAP0_SHIFT                 3
#define FTM_COMBINE_DECAP0_WIDTH                 1
#define FTM_COMBINE_DECAP0(x)                    (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAP0_SHIFT))&FTM_COMBINE_DECAP0_MASK)
#define FTM_COMBINE_DTEN0_MASK                   0x10u
#define FTM_COMBINE_DTEN0_SHIFT                  4
#define FTM_COMBINE_DTEN0_WIDTH                  1
#define FTM_COMBINE_DTEN0(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_DTEN0_SHIFT))&FTM_COMBINE_DTEN0_MASK)
#define FTM_COMBINE_SYNCEN0_MASK                 0x20u
#define FTM_COMBINE_SYNCEN0_SHIFT                5
#define FTM_COMBINE_SYNCEN0_WIDTH                1
#define FTM_COMBINE_SYNCEN0(x)                   (((uint32)(((uint32)(x))<<FTM_COMBINE_SYNCEN0_SHIFT))&FTM_COMBINE_SYNCEN0_MASK)
#define FTM_COMBINE_FAULTEN0_MASK                0x40u
#define FTM_COMBINE_FAULTEN0_SHIFT               6
#define FTM_COMBINE_FAULTEN0_WIDTH               1
#define FTM_COMBINE_FAULTEN0(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_FAULTEN0_SHIFT))&FTM_COMBINE_FAULTEN0_MASK)
#define FTM_COMBINE_COMBINE1_MASK                0x100u
#define FTM_COMBINE_COMBINE1_SHIFT               8
#define FTM_COMBINE_COMBINE1_WIDTH               1
#define FTM_COMBINE_COMBINE1(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_COMBINE1_SHIFT))&FTM_COMBINE_COMBINE1_MASK)
#define FTM_COMBINE_COMP1_MASK                   0x200u
#define FTM_COMBINE_COMP1_SHIFT                  9
#define FTM_COMBINE_COMP1_WIDTH                  1
#define FTM_COMBINE_COMP1(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_COMP1_SHIFT))&FTM_COMBINE_COMP1_MASK)
#define FTM_COMBINE_DECAPEN1_MASK                0x400u
#define FTM_COMBINE_DECAPEN1_SHIFT               10
#define FTM_COMBINE_DECAPEN1_WIDTH               1
#define FTM_COMBINE_DECAPEN1(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAPEN1_SHIFT))&FTM_COMBINE_DECAPEN1_MASK)
#define FTM_COMBINE_DECAP1_MASK                  0x800u
#define FTM_COMBINE_DECAP1_SHIFT                 11
#define FTM_COMBINE_DECAP1_WIDTH                 1
#define FTM_COMBINE_DECAP1(x)                    (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAP1_SHIFT))&FTM_COMBINE_DECAP1_MASK)
#define FTM_COMBINE_DTEN1_MASK                   0x1000u
#define FTM_COMBINE_DTEN1_SHIFT                  12
#define FTM_COMBINE_DTEN1_WIDTH                  1
#define FTM_COMBINE_DTEN1(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_DTEN1_SHIFT))&FTM_COMBINE_DTEN1_MASK)
#define FTM_COMBINE_SYNCEN1_MASK                 0x2000u
#define FTM_COMBINE_SYNCEN1_SHIFT                13
#define FTM_COMBINE_SYNCEN1_WIDTH                1
#define FTM_COMBINE_SYNCEN1(x)                   (((uint32)(((uint32)(x))<<FTM_COMBINE_SYNCEN1_SHIFT))&FTM_COMBINE_SYNCEN1_MASK)
#define FTM_COMBINE_FAULTEN1_MASK                0x4000u
#define FTM_COMBINE_FAULTEN1_SHIFT               14
#define FTM_COMBINE_FAULTEN1_WIDTH               1
#define FTM_COMBINE_FAULTEN1(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_FAULTEN1_SHIFT))&FTM_COMBINE_FAULTEN1_MASK)
#define FTM_COMBINE_COMBINE2_MASK                0x10000u
#define FTM_COMBINE_COMBINE2_SHIFT               16
#define FTM_COMBINE_COMBINE2_WIDTH               1
#define FTM_COMBINE_COMBINE2(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_COMBINE2_SHIFT))&FTM_COMBINE_COMBINE2_MASK)
#define FTM_COMBINE_COMP2_MASK                   0x20000u
#define FTM_COMBINE_COMP2_SHIFT                  17
#define FTM_COMBINE_COMP2_WIDTH                  1
#define FTM_COMBINE_COMP2(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_COMP2_SHIFT))&FTM_COMBINE_COMP2_MASK)
#define FTM_COMBINE_DECAPEN2_MASK                0x40000u
#define FTM_COMBINE_DECAPEN2_SHIFT               18
#define FTM_COMBINE_DECAPEN2_WIDTH               1
#define FTM_COMBINE_DECAPEN2(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAPEN2_SHIFT))&FTM_COMBINE_DECAPEN2_MASK)
#define FTM_COMBINE_DECAP2_MASK                  0x80000u
#define FTM_COMBINE_DECAP2_SHIFT                 19
#define FTM_COMBINE_DECAP2_WIDTH                 1
#define FTM_COMBINE_DECAP2(x)                    (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAP2_SHIFT))&FTM_COMBINE_DECAP2_MASK)
#define FTM_COMBINE_DTEN2_MASK                   0x100000u
#define FTM_COMBINE_DTEN2_SHIFT                  20
#define FTM_COMBINE_DTEN2_WIDTH                  1
#define FTM_COMBINE_DTEN2(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_DTEN2_SHIFT))&FTM_COMBINE_DTEN2_MASK)
#define FTM_COMBINE_SYNCEN2_MASK                 0x200000u
#define FTM_COMBINE_SYNCEN2_SHIFT                21
#define FTM_COMBINE_SYNCEN2_WIDTH                1
#define FTM_COMBINE_SYNCEN2(x)                   (((uint32)(((uint32)(x))<<FTM_COMBINE_SYNCEN2_SHIFT))&FTM_COMBINE_SYNCEN2_MASK)
#define FTM_COMBINE_FAULTEN2_MASK                0x400000u
#define FTM_COMBINE_FAULTEN2_SHIFT               22
#define FTM_COMBINE_FAULTEN2_WIDTH               1
#define FTM_COMBINE_FAULTEN2(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_FAULTEN2_SHIFT))&FTM_COMBINE_FAULTEN2_MASK)
#define FTM_COMBINE_COMBINE3_MASK                0x1000000u
#define FTM_COMBINE_COMBINE3_SHIFT               24
#define FTM_COMBINE_COMBINE3_WIDTH               1
#define FTM_COMBINE_COMBINE3(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_COMBINE3_SHIFT))&FTM_COMBINE_COMBINE3_MASK)
#define FTM_COMBINE_COMP3_MASK                   0x2000000u
#define FTM_COMBINE_COMP3_SHIFT                  25
#define FTM_COMBINE_COMP3_WIDTH                  1
#define FTM_COMBINE_COMP3(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_COMP3_SHIFT))&FTM_COMBINE_COMP3_MASK)
#define FTM_COMBINE_DECAPEN3_MASK                0x4000000u
#define FTM_COMBINE_DECAPEN3_SHIFT               26
#define FTM_COMBINE_DECAPEN3_WIDTH               1
#define FTM_COMBINE_DECAPEN3(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAPEN3_SHIFT))&FTM_COMBINE_DECAPEN3_MASK)
#define FTM_COMBINE_DECAP3_MASK                  0x8000000u
#define FTM_COMBINE_DECAP3_SHIFT                 27
#define FTM_COMBINE_DECAP3_WIDTH                 1
#define FTM_COMBINE_DECAP3(x)                    (((uint32)(((uint32)(x))<<FTM_COMBINE_DECAP3_SHIFT))&FTM_COMBINE_DECAP3_MASK)
#define FTM_COMBINE_DTEN3_MASK                   0x10000000u
#define FTM_COMBINE_DTEN3_SHIFT                  28
#define FTM_COMBINE_DTEN3_WIDTH                  1
#define FTM_COMBINE_DTEN3(x)                     (((uint32)(((uint32)(x))<<FTM_COMBINE_DTEN3_SHIFT))&FTM_COMBINE_DTEN3_MASK)
#define FTM_COMBINE_SYNCEN3_MASK                 0x20000000u
#define FTM_COMBINE_SYNCEN3_SHIFT                29
#define FTM_COMBINE_SYNCEN3_WIDTH                1
#define FTM_COMBINE_SYNCEN3(x)                   (((uint32)(((uint32)(x))<<FTM_COMBINE_SYNCEN3_SHIFT))&FTM_COMBINE_SYNCEN3_MASK)
#define FTM_COMBINE_FAULTEN3_MASK                0x40000000u
#define FTM_COMBINE_FAULTEN3_SHIFT               30
#define FTM_COMBINE_FAULTEN3_WIDTH               1
#define FTM_COMBINE_FAULTEN3(x)                  (((uint32)(((uint32)(x))<<FTM_COMBINE_FAULTEN3_SHIFT))&FTM_COMBINE_FAULTEN3_MASK)
/* DEADTIME Bit Fields */
#define FTM_DEADTIME_DTVAL_MASK                  0x3Fu
#define FTM_DEADTIME_DTVAL_SHIFT                 0
#define FTM_DEADTIME_DTVAL_WIDTH                 6
#define FTM_DEADTIME_DTVAL(x)                    (((uint32)(((uint32)(x))<<FTM_DEADTIME_DTVAL_SHIFT))&FTM_DEADTIME_DTVAL_MASK)
#define FTM_DEADTIME_DTPS_MASK                   0xC0u
#define FTM_DEADTIME_DTPS_SHIFT                  6
#define FTM_DEADTIME_DTPS_WIDTH                  2
#define FTM_DEADTIME_DTPS(x)                     (((uint32)(((uint32)(x))<<FTM_DEADTIME_DTPS_SHIFT))&FTM_DEADTIME_DTPS_MASK)
/* EXTTRIG Bit Fields */
#define FTM_EXTTRIG_CH2TRIG_MASK                 0x1u
#define FTM_EXTTRIG_CH2TRIG_SHIFT                0
#define FTM_EXTTRIG_CH2TRIG_WIDTH                1
#define FTM_EXTTRIG_CH2TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH2TRIG_SHIFT))&FTM_EXTTRIG_CH2TRIG_MASK)
#define FTM_EXTTRIG_CH3TRIG_MASK                 0x2u
#define FTM_EXTTRIG_CH3TRIG_SHIFT                1
#define FTM_EXTTRIG_CH3TRIG_WIDTH                1
#define FTM_EXTTRIG_CH3TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH3TRIG_SHIFT))&FTM_EXTTRIG_CH3TRIG_MASK)
#define FTM_EXTTRIG_CH4TRIG_MASK                 0x4u
#define FTM_EXTTRIG_CH4TRIG_SHIFT                2
#define FTM_EXTTRIG_CH4TRIG_WIDTH                1
#define FTM_EXTTRIG_CH4TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH4TRIG_SHIFT))&FTM_EXTTRIG_CH4TRIG_MASK)
#define FTM_EXTTRIG_CH5TRIG_MASK                 0x8u
#define FTM_EXTTRIG_CH5TRIG_SHIFT                3
#define FTM_EXTTRIG_CH5TRIG_WIDTH                1
#define FTM_EXTTRIG_CH5TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH5TRIG_SHIFT))&FTM_EXTTRIG_CH5TRIG_MASK)
#define FTM_EXTTRIG_CH0TRIG_MASK                 0x10u
#define FTM_EXTTRIG_CH0TRIG_SHIFT                4
#define FTM_EXTTRIG_CH0TRIG_WIDTH                1
#define FTM_EXTTRIG_CH0TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH0TRIG_SHIFT))&FTM_EXTTRIG_CH0TRIG_MASK)
#define FTM_EXTTRIG_CH1TRIG_MASK                 0x20u
#define FTM_EXTTRIG_CH1TRIG_SHIFT                5
#define FTM_EXTTRIG_CH1TRIG_WIDTH                1
#define FTM_EXTTRIG_CH1TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH1TRIG_SHIFT))&FTM_EXTTRIG_CH1TRIG_MASK)
#define FTM_EXTTRIG_INITTRIGEN_MASK              0x40u
#define FTM_EXTTRIG_INITTRIGEN_SHIFT             6
#define FTM_EXTTRIG_INITTRIGEN_WIDTH             1
#define FTM_EXTTRIG_INITTRIGEN(x)                (((uint32)(((uint32)(x))<<FTM_EXTTRIG_INITTRIGEN_SHIFT))&FTM_EXTTRIG_INITTRIGEN_MASK)
#define FTM_EXTTRIG_TRIGF_MASK                   0x80u
#define FTM_EXTTRIG_TRIGF_SHIFT                  7
#define FTM_EXTTRIG_TRIGF_WIDTH                  1
#define FTM_EXTTRIG_TRIGF(x)                     (((uint32)(((uint32)(x))<<FTM_EXTTRIG_TRIGF_SHIFT))&FTM_EXTTRIG_TRIGF_MASK)
#define FTM_EXTTRIG_CH6TRIG_MASK                 0x100u
#define FTM_EXTTRIG_CH6TRIG_SHIFT                8
#define FTM_EXTTRIG_CH6TRIG_WIDTH                1
#define FTM_EXTTRIG_CH6TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH6TRIG_SHIFT))&FTM_EXTTRIG_CH6TRIG_MASK)
#define FTM_EXTTRIG_CH7TRIG_MASK                 0x200u
#define FTM_EXTTRIG_CH7TRIG_SHIFT                9
#define FTM_EXTTRIG_CH7TRIG_WIDTH                1
#define FTM_EXTTRIG_CH7TRIG(x)                   (((uint32)(((uint32)(x))<<FTM_EXTTRIG_CH7TRIG_SHIFT))&FTM_EXTTRIG_CH7TRIG_MASK)
/* POL Bit Fields */
#define FTM_POL_POL0_MASK                        0x1u
#define FTM_POL_POL0_SHIFT                       0
#define FTM_POL_POL0_WIDTH                       1
#define FTM_POL_POL0(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL0_SHIFT))&FTM_POL_POL0_MASK)
#define FTM_POL_POL1_MASK                        0x2u
#define FTM_POL_POL1_SHIFT                       1
#define FTM_POL_POL1_WIDTH                       1
#define FTM_POL_POL1(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL1_SHIFT))&FTM_POL_POL1_MASK)
#define FTM_POL_POL2_MASK                        0x4u
#define FTM_POL_POL2_SHIFT                       2
#define FTM_POL_POL2_WIDTH                       1
#define FTM_POL_POL2(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL2_SHIFT))&FTM_POL_POL2_MASK)
#define FTM_POL_POL3_MASK                        0x8u
#define FTM_POL_POL3_SHIFT                       3
#define FTM_POL_POL3_WIDTH                       1
#define FTM_POL_POL3(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL3_SHIFT))&FTM_POL_POL3_MASK)
#define FTM_POL_POL4_MASK                        0x10u
#define FTM_POL_POL4_SHIFT                       4
#define FTM_POL_POL4_WIDTH                       1
#define FTM_POL_POL4(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL4_SHIFT))&FTM_POL_POL4_MASK)
#define FTM_POL_POL5_MASK                        0x20u
#define FTM_POL_POL5_SHIFT                       5
#define FTM_POL_POL5_WIDTH                       1
#define FTM_POL_POL5(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL5_SHIFT))&FTM_POL_POL5_MASK)
#define FTM_POL_POL6_MASK                        0x40u
#define FTM_POL_POL6_SHIFT                       6
#define FTM_POL_POL6_WIDTH                       1
#define FTM_POL_POL6(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL6_SHIFT))&FTM_POL_POL6_MASK)
#define FTM_POL_POL7_MASK                        0x80u
#define FTM_POL_POL7_SHIFT                       7
#define FTM_POL_POL7_WIDTH                       1
#define FTM_POL_POL7(x)                          (((uint32)(((uint32)(x))<<FTM_POL_POL7_SHIFT))&FTM_POL_POL7_MASK)
/* FMS Bit Fields */
#define FTM_FMS_FAULTF0_MASK                     0x1u
#define FTM_FMS_FAULTF0_SHIFT                    0
#define FTM_FMS_FAULTF0_WIDTH                    1
#define FTM_FMS_FAULTF0(x)                       (((uint32)(((uint32)(x))<<FTM_FMS_FAULTF0_SHIFT))&FTM_FMS_FAULTF0_MASK)
#define FTM_FMS_FAULTF1_MASK                     0x2u
#define FTM_FMS_FAULTF1_SHIFT                    1
#define FTM_FMS_FAULTF1_WIDTH                    1
#define FTM_FMS_FAULTF1(x)                       (((uint32)(((uint32)(x))<<FTM_FMS_FAULTF1_SHIFT))&FTM_FMS_FAULTF1_MASK)
#define FTM_FMS_FAULTF2_MASK                     0x4u
#define FTM_FMS_FAULTF2_SHIFT                    2
#define FTM_FMS_FAULTF2_WIDTH                    1
#define FTM_FMS_FAULTF2(x)                       (((uint32)(((uint32)(x))<<FTM_FMS_FAULTF2_SHIFT))&FTM_FMS_FAULTF2_MASK)
#define FTM_FMS_FAULTF3_MASK                     0x8u
#define FTM_FMS_FAULTF3_SHIFT                    3
#define FTM_FMS_FAULTF3_WIDTH                    1
#define FTM_FMS_FAULTF3(x)                       (((uint32)(((uint32)(x))<<FTM_FMS_FAULTF3_SHIFT))&FTM_FMS_FAULTF3_MASK)
#define FTM_FMS_FAULTIN_MASK                     0x20u
#define FTM_FMS_FAULTIN_SHIFT                    5
#define FTM_FMS_FAULTIN_WIDTH                    1
#define FTM_FMS_FAULTIN(x)                       (((uint32)(((uint32)(x))<<FTM_FMS_FAULTIN_SHIFT))&FTM_FMS_FAULTIN_MASK)
#define FTM_FMS_WPEN_MASK                        0x40u
#define FTM_FMS_WPEN_SHIFT                       6
#define FTM_FMS_WPEN_WIDTH                       1
#define FTM_FMS_WPEN(x)                          (((uint32)(((uint32)(x))<<FTM_FMS_WPEN_SHIFT))&FTM_FMS_WPEN_MASK)
#define FTM_FMS_FAULTF_MASK                      0x80u
#define FTM_FMS_FAULTF_SHIFT                     7
#define FTM_FMS_FAULTF_WIDTH                     1
#define FTM_FMS_FAULTF(x)                        (((uint32)(((uint32)(x))<<FTM_FMS_FAULTF_SHIFT))&FTM_FMS_FAULTF_MASK)
/* FILTER Bit Fields */
#define FTM_FILTER_CH0FVAL_MASK                  0xFu
#define FTM_FILTER_CH0FVAL_SHIFT                 0
#define FTM_FILTER_CH0FVAL_WIDTH                 4
#define FTM_FILTER_CH0FVAL(x)                    (((uint32)(((uint32)(x))<<FTM_FILTER_CH0FVAL_SHIFT))&FTM_FILTER_CH0FVAL_MASK)
#define FTM_FILTER_CH1FVAL_MASK                  0xF0u
#define FTM_FILTER_CH1FVAL_SHIFT                 4
#define FTM_FILTER_CH1FVAL_WIDTH                 4
#define FTM_FILTER_CH1FVAL(x)                    (((uint32)(((uint32)(x))<<FTM_FILTER_CH1FVAL_SHIFT))&FTM_FILTER_CH1FVAL_MASK)
#define FTM_FILTER_CH2FVAL_MASK                  0xF00u
#define FTM_FILTER_CH2FVAL_SHIFT                 8
#define FTM_FILTER_CH2FVAL_WIDTH                 4
#define FTM_FILTER_CH2FVAL(x)                    (((uint32)(((uint32)(x))<<FTM_FILTER_CH2FVAL_SHIFT))&FTM_FILTER_CH2FVAL_MASK)
#define FTM_FILTER_CH3FVAL_MASK                  0xF000u
#define FTM_FILTER_CH3FVAL_SHIFT                 12
#define FTM_FILTER_CH3FVAL_WIDTH                 4
#define FTM_FILTER_CH3FVAL(x)                    (((uint32)(((uint32)(x))<<FTM_FILTER_CH3FVAL_SHIFT))&FTM_FILTER_CH3FVAL_MASK)
/* FLTCTRL Bit Fields */
#define FTM_FLTCTRL_FAULT0EN_MASK                0x1u
#define FTM_FLTCTRL_FAULT0EN_SHIFT               0
#define FTM_FLTCTRL_FAULT0EN_WIDTH               1
#define FTM_FLTCTRL_FAULT0EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FAULT0EN_SHIFT))&FTM_FLTCTRL_FAULT0EN_MASK)
#define FTM_FLTCTRL_FAULT1EN_MASK                0x2u
#define FTM_FLTCTRL_FAULT1EN_SHIFT               1
#define FTM_FLTCTRL_FAULT1EN_WIDTH               1
#define FTM_FLTCTRL_FAULT1EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FAULT1EN_SHIFT))&FTM_FLTCTRL_FAULT1EN_MASK)
#define FTM_FLTCTRL_FAULT2EN_MASK                0x4u
#define FTM_FLTCTRL_FAULT2EN_SHIFT               2
#define FTM_FLTCTRL_FAULT2EN_WIDTH               1
#define FTM_FLTCTRL_FAULT2EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FAULT2EN_SHIFT))&FTM_FLTCTRL_FAULT2EN_MASK)
#define FTM_FLTCTRL_FAULT3EN_MASK                0x8u
#define FTM_FLTCTRL_FAULT3EN_SHIFT               3
#define FTM_FLTCTRL_FAULT3EN_WIDTH               1
#define FTM_FLTCTRL_FAULT3EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FAULT3EN_SHIFT))&FTM_FLTCTRL_FAULT3EN_MASK)
#define FTM_FLTCTRL_FFLTR0EN_MASK                0x10u
#define FTM_FLTCTRL_FFLTR0EN_SHIFT               4
#define FTM_FLTCTRL_FFLTR0EN_WIDTH               1
#define FTM_FLTCTRL_FFLTR0EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FFLTR0EN_SHIFT))&FTM_FLTCTRL_FFLTR0EN_MASK)
#define FTM_FLTCTRL_FFLTR1EN_MASK                0x20u
#define FTM_FLTCTRL_FFLTR1EN_SHIFT               5
#define FTM_FLTCTRL_FFLTR1EN_WIDTH               1
#define FTM_FLTCTRL_FFLTR1EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FFLTR1EN_SHIFT))&FTM_FLTCTRL_FFLTR1EN_MASK)
#define FTM_FLTCTRL_FFLTR2EN_MASK                0x40u
#define FTM_FLTCTRL_FFLTR2EN_SHIFT               6
#define FTM_FLTCTRL_FFLTR2EN_WIDTH               1
#define FTM_FLTCTRL_FFLTR2EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FFLTR2EN_SHIFT))&FTM_FLTCTRL_FFLTR2EN_MASK)
#define FTM_FLTCTRL_FFLTR3EN_MASK                0x80u
#define FTM_FLTCTRL_FFLTR3EN_SHIFT               7
#define FTM_FLTCTRL_FFLTR3EN_WIDTH               1
#define FTM_FLTCTRL_FFLTR3EN(x)                  (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FFLTR3EN_SHIFT))&FTM_FLTCTRL_FFLTR3EN_MASK)
#define FTM_FLTCTRL_FFVAL_MASK                   0xF00u
#define FTM_FLTCTRL_FFVAL_SHIFT                  8
#define FTM_FLTCTRL_FFVAL_WIDTH                  4
#define FTM_FLTCTRL_FFVAL(x)                     (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FFVAL_SHIFT))&FTM_FLTCTRL_FFVAL_MASK)
#define FTM_FLTCTRL_FSTATE_MASK                  0x8000u
#define FTM_FLTCTRL_FSTATE_SHIFT                 15
#define FTM_FLTCTRL_FSTATE_WIDTH                 1
#define FTM_FLTCTRL_FSTATE(x)                    (((uint32)(((uint32)(x))<<FTM_FLTCTRL_FSTATE_SHIFT))&FTM_FLTCTRL_FSTATE_MASK)
/* QDCTRL Bit Fields */
#define FTM_QDCTRL_QUADEN_MASK                   0x1u
#define FTM_QDCTRL_QUADEN_SHIFT                  0
#define FTM_QDCTRL_QUADEN_WIDTH                  1
#define FTM_QDCTRL_QUADEN(x)                     (((uint32)(((uint32)(x))<<FTM_QDCTRL_QUADEN_SHIFT))&FTM_QDCTRL_QUADEN_MASK)
#define FTM_QDCTRL_TOFDIR_MASK                   0x2u
#define FTM_QDCTRL_TOFDIR_SHIFT                  1
#define FTM_QDCTRL_TOFDIR_WIDTH                  1
#define FTM_QDCTRL_TOFDIR(x)                     (((uint32)(((uint32)(x))<<FTM_QDCTRL_TOFDIR_SHIFT))&FTM_QDCTRL_TOFDIR_MASK)
#define FTM_QDCTRL_QUADIR_MASK                   0x4u
#define FTM_QDCTRL_QUADIR_SHIFT                  2
#define FTM_QDCTRL_QUADIR_WIDTH                  1
#define FTM_QDCTRL_QUADIR(x)                     (((uint32)(((uint32)(x))<<FTM_QDCTRL_QUADIR_SHIFT))&FTM_QDCTRL_QUADIR_MASK)
#define FTM_QDCTRL_QUADMODE_MASK                 0x8u
#define FTM_QDCTRL_QUADMODE_SHIFT                3
#define FTM_QDCTRL_QUADMODE_WIDTH                1
#define FTM_QDCTRL_QUADMODE(x)                   (((uint32)(((uint32)(x))<<FTM_QDCTRL_QUADMODE_SHIFT))&FTM_QDCTRL_QUADMODE_MASK)
#define FTM_QDCTRL_PHBPOL_MASK                   0x10u
#define FTM_QDCTRL_PHBPOL_SHIFT                  4
#define FTM_QDCTRL_PHBPOL_WIDTH                  1
#define FTM_QDCTRL_PHBPOL(x)                     (((uint32)(((uint32)(x))<<FTM_QDCTRL_PHBPOL_SHIFT))&FTM_QDCTRL_PHBPOL_MASK)
#define FTM_QDCTRL_PHAPOL_MASK                   0x20u
#define FTM_QDCTRL_PHAPOL_SHIFT                  5
#define FTM_QDCTRL_PHAPOL_WIDTH                  1
#define FTM_QDCTRL_PHAPOL(x)                     (((uint32)(((uint32)(x))<<FTM_QDCTRL_PHAPOL_SHIFT))&FTM_QDCTRL_PHAPOL_MASK)
#define FTM_QDCTRL_PHBFLTREN_MASK                0x40u
#define FTM_QDCTRL_PHBFLTREN_SHIFT               6
#define FTM_QDCTRL_PHBFLTREN_WIDTH               1
#define FTM_QDCTRL_PHBFLTREN(x)                  (((uint32)(((uint32)(x))<<FTM_QDCTRL_PHBFLTREN_SHIFT))&FTM_QDCTRL_PHBFLTREN_MASK)
#define FTM_QDCTRL_PHAFLTREN_MASK                0x80u
#define FTM_QDCTRL_PHAFLTREN_SHIFT               7
#define FTM_QDCTRL_PHAFLTREN_WIDTH               1
#define FTM_QDCTRL_PHAFLTREN(x)                  (((uint32)(((uint32)(x))<<FTM_QDCTRL_PHAFLTREN_SHIFT))&FTM_QDCTRL_PHAFLTREN_MASK)
/* CONF Bit Fields */
#define FTM_CONF_LDFQ_MASK                       0x1Fu
#define FTM_CONF_LDFQ_SHIFT                      0
#define FTM_CONF_LDFQ_WIDTH                      5
#define FTM_CONF_LDFQ(x)                         (((uint32)(((uint32)(x))<<FTM_CONF_LDFQ_SHIFT))&FTM_CONF_LDFQ_MASK)
#define FTM_CONF_BDMMODE_MASK                    0xC0u
#define FTM_CONF_BDMMODE_SHIFT                   6
#define FTM_CONF_BDMMODE_WIDTH                   2
#define FTM_CONF_BDMMODE(x)                      (((uint32)(((uint32)(x))<<FTM_CONF_BDMMODE_SHIFT))&FTM_CONF_BDMMODE_MASK)
#define FTM_CONF_GTBEEN_MASK                     0x200u
#define FTM_CONF_GTBEEN_SHIFT                    9
#define FTM_CONF_GTBEEN_WIDTH                    1
#define FTM_CONF_GTBEEN(x)                       (((uint32)(((uint32)(x))<<FTM_CONF_GTBEEN_SHIFT))&FTM_CONF_GTBEEN_MASK)
#define FTM_CONF_GTBEOUT_MASK                    0x400u
#define FTM_CONF_GTBEOUT_SHIFT                   10
#define FTM_CONF_GTBEOUT_WIDTH                   1
#define FTM_CONF_GTBEOUT(x)                      (((uint32)(((uint32)(x))<<FTM_CONF_GTBEOUT_SHIFT))&FTM_CONF_GTBEOUT_MASK)
#define FTM_CONF_ITRIGR_MASK                     0x800u
#define FTM_CONF_ITRIGR_SHIFT                    11
#define FTM_CONF_ITRIGR_WIDTH                    1
#define FTM_CONF_ITRIGR(x)                       (((uint32)(((uint32)(x))<<FTM_CONF_ITRIGR_SHIFT))&FTM_CONF_ITRIGR_MASK)
/* FLTPOL Bit Fields */
#define FTM_FLTPOL_FLT0POL_MASK                  0x1u
#define FTM_FLTPOL_FLT0POL_SHIFT                 0
#define FTM_FLTPOL_FLT0POL_WIDTH                 1
#define FTM_FLTPOL_FLT0POL(x)                    (((uint32)(((uint32)(x))<<FTM_FLTPOL_FLT0POL_SHIFT))&FTM_FLTPOL_FLT0POL_MASK)
#define FTM_FLTPOL_FLT1POL_MASK                  0x2u
#define FTM_FLTPOL_FLT1POL_SHIFT                 1
#define FTM_FLTPOL_FLT1POL_WIDTH                 1
#define FTM_FLTPOL_FLT1POL(x)                    (((uint32)(((uint32)(x))<<FTM_FLTPOL_FLT1POL_SHIFT))&FTM_FLTPOL_FLT1POL_MASK)
#define FTM_FLTPOL_FLT2POL_MASK                  0x4u
#define FTM_FLTPOL_FLT2POL_SHIFT                 2
#define FTM_FLTPOL_FLT2POL_WIDTH                 1
#define FTM_FLTPOL_FLT2POL(x)                    (((uint32)(((uint32)(x))<<FTM_FLTPOL_FLT2POL_SHIFT))&FTM_FLTPOL_FLT2POL_MASK)
#define FTM_FLTPOL_FLT3POL_MASK                  0x8u
#define FTM_FLTPOL_FLT3POL_SHIFT                 3
#define FTM_FLTPOL_FLT3POL_WIDTH                 1
#define FTM_FLTPOL_FLT3POL(x)                    (((uint32)(((uint32)(x))<<FTM_FLTPOL_FLT3POL_SHIFT))&FTM_FLTPOL_FLT3POL_MASK)
/* SYNCONF Bit Fields */
#define FTM_SYNCONF_HWTRIGMODE_MASK              0x1u
#define FTM_SYNCONF_HWTRIGMODE_SHIFT             0
#define FTM_SYNCONF_HWTRIGMODE_WIDTH             1
#define FTM_SYNCONF_HWTRIGMODE(x)                (((uint32)(((uint32)(x))<<FTM_SYNCONF_HWTRIGMODE_SHIFT))&FTM_SYNCONF_HWTRIGMODE_MASK)
#define FTM_SYNCONF_CNTINC_MASK                  0x4u
#define FTM_SYNCONF_CNTINC_SHIFT                 2
#define FTM_SYNCONF_CNTINC_WIDTH                 1
#define FTM_SYNCONF_CNTINC(x)                    (((uint32)(((uint32)(x))<<FTM_SYNCONF_CNTINC_SHIFT))&FTM_SYNCONF_CNTINC_MASK)
#define FTM_SYNCONF_INVC_MASK                    0x10u
#define FTM_SYNCONF_INVC_SHIFT                   4
#define FTM_SYNCONF_INVC_WIDTH                   1
#define FTM_SYNCONF_INVC(x)                      (((uint32)(((uint32)(x))<<FTM_SYNCONF_INVC_SHIFT))&FTM_SYNCONF_INVC_MASK)
#define FTM_SYNCONF_SWOC_MASK                    0x20u
#define FTM_SYNCONF_SWOC_SHIFT                   5
#define FTM_SYNCONF_SWOC_WIDTH                   1
#define FTM_SYNCONF_SWOC(x)                      (((uint32)(((uint32)(x))<<FTM_SYNCONF_SWOC_SHIFT))&FTM_SYNCONF_SWOC_MASK)
#define FTM_SYNCONF_SYNCMODE_MASK                0x80u
#define FTM_SYNCONF_SYNCMODE_SHIFT               7
#define FTM_SYNCONF_SYNCMODE_WIDTH               1
#define FTM_SYNCONF_SYNCMODE(x)                  (((uint32)(((uint32)(x))<<FTM_SYNCONF_SYNCMODE_SHIFT))&FTM_SYNCONF_SYNCMODE_MASK)
#define FTM_SYNCONF_SWRSTCNT_MASK                0x100u
#define FTM_SYNCONF_SWRSTCNT_SHIFT               8
#define FTM_SYNCONF_SWRSTCNT_WIDTH               1
#define FTM_SYNCONF_SWRSTCNT(x)                  (((uint32)(((uint32)(x))<<FTM_SYNCONF_SWRSTCNT_SHIFT))&FTM_SYNCONF_SWRSTCNT_MASK)
#define FTM_SYNCONF_SWWRBUF_MASK                 0x200u
#define FTM_SYNCONF_SWWRBUF_SHIFT                9
#define FTM_SYNCONF_SWWRBUF_WIDTH                1
#define FTM_SYNCONF_SWWRBUF(x)                   (((uint32)(((uint32)(x))<<FTM_SYNCONF_SWWRBUF_SHIFT))&FTM_SYNCONF_SWWRBUF_MASK)
#define FTM_SYNCONF_SWOM_MASK                    0x400u
#define FTM_SYNCONF_SWOM_SHIFT                   10
#define FTM_SYNCONF_SWOM_WIDTH                   1
#define FTM_SYNCONF_SWOM(x)                      (((uint32)(((uint32)(x))<<FTM_SYNCONF_SWOM_SHIFT))&FTM_SYNCONF_SWOM_MASK)
#define FTM_SYNCONF_SWINVC_MASK                  0x800u
#define FTM_SYNCONF_SWINVC_SHIFT                 11
#define FTM_SYNCONF_SWINVC_WIDTH                 1
#define FTM_SYNCONF_SWINVC(x)                    (((uint32)(((uint32)(x))<<FTM_SYNCONF_SWINVC_SHIFT))&FTM_SYNCONF_SWINVC_MASK)
#define FTM_SYNCONF_SWSOC_MASK                   0x1000u
#define FTM_SYNCONF_SWSOC_SHIFT                  12
#define FTM_SYNCONF_SWSOC_WIDTH                  1
#define FTM_SYNCONF_SWSOC(x)                     (((uint32)(((uint32)(x))<<FTM_SYNCONF_SWSOC_SHIFT))&FTM_SYNCONF_SWSOC_MASK)
#define FTM_SYNCONF_HWRSTCNT_MASK                0x10000u
#define FTM_SYNCONF_HWRSTCNT_SHIFT               16
#define FTM_SYNCONF_HWRSTCNT_WIDTH               1
#define FTM_SYNCONF_HWRSTCNT(x)                  (((uint32)(((uint32)(x))<<FTM_SYNCONF_HWRSTCNT_SHIFT))&FTM_SYNCONF_HWRSTCNT_MASK)
#define FTM_SYNCONF_HWWRBUF_MASK                 0x20000u
#define FTM_SYNCONF_HWWRBUF_SHIFT                17
#define FTM_SYNCONF_HWWRBUF_WIDTH                1
#define FTM_SYNCONF_HWWRBUF(x)                   (((uint32)(((uint32)(x))<<FTM_SYNCONF_HWWRBUF_SHIFT))&FTM_SYNCONF_HWWRBUF_MASK)
#define FTM_SYNCONF_HWOM_MASK                    0x40000u
#define FTM_SYNCONF_HWOM_SHIFT                   18
#define FTM_SYNCONF_HWOM_WIDTH                   1
#define FTM_SYNCONF_HWOM(x)                      (((uint32)(((uint32)(x))<<FTM_SYNCONF_HWOM_SHIFT))&FTM_SYNCONF_HWOM_MASK)
#define FTM_SYNCONF_HWINVC_MASK                  0x80000u
#define FTM_SYNCONF_HWINVC_SHIFT                 19
#define FTM_SYNCONF_HWINVC_WIDTH                 1
#define FTM_SYNCONF_HWINVC(x)                    (((uint32)(((uint32)(x))<<FTM_SYNCONF_HWINVC_SHIFT))&FTM_SYNCONF_HWINVC_MASK)
#define FTM_SYNCONF_HWSOC_MASK                   0x100000u
#define FTM_SYNCONF_HWSOC_SHIFT                  20
#define FTM_SYNCONF_HWSOC_WIDTH                  1
#define FTM_SYNCONF_HWSOC(x)                     (((uint32)(((uint32)(x))<<FTM_SYNCONF_HWSOC_SHIFT))&FTM_SYNCONF_HWSOC_MASK)
/* INVCTRL Bit Fields */
#define FTM_INVCTRL_INV0EN_MASK                  0x1u
#define FTM_INVCTRL_INV0EN_SHIFT                 0
#define FTM_INVCTRL_INV0EN_WIDTH                 1
#define FTM_INVCTRL_INV0EN(x)                    (((uint32)(((uint32)(x))<<FTM_INVCTRL_INV0EN_SHIFT))&FTM_INVCTRL_INV0EN_MASK)
#define FTM_INVCTRL_INV1EN_MASK                  0x2u
#define FTM_INVCTRL_INV1EN_SHIFT                 1
#define FTM_INVCTRL_INV1EN_WIDTH                 1
#define FTM_INVCTRL_INV1EN(x)                    (((uint32)(((uint32)(x))<<FTM_INVCTRL_INV1EN_SHIFT))&FTM_INVCTRL_INV1EN_MASK)
#define FTM_INVCTRL_INV2EN_MASK                  0x4u
#define FTM_INVCTRL_INV2EN_SHIFT                 2
#define FTM_INVCTRL_INV2EN_WIDTH                 1
#define FTM_INVCTRL_INV2EN(x)                    (((uint32)(((uint32)(x))<<FTM_INVCTRL_INV2EN_SHIFT))&FTM_INVCTRL_INV2EN_MASK)
#define FTM_INVCTRL_INV3EN_MASK                  0x8u
#define FTM_INVCTRL_INV3EN_SHIFT                 3
#define FTM_INVCTRL_INV3EN_WIDTH                 1
#define FTM_INVCTRL_INV3EN(x)                    (((uint32)(((uint32)(x))<<FTM_INVCTRL_INV3EN_SHIFT))&FTM_INVCTRL_INV3EN_MASK)
/* SWOCTRL Bit Fields */
#define FTM_SWOCTRL_CH0OC_MASK                   0x1u
#define FTM_SWOCTRL_CH0OC_SHIFT                  0
#define FTM_SWOCTRL_CH0OC_WIDTH                  1
#define FTM_SWOCTRL_CH0OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH0OC_SHIFT))&FTM_SWOCTRL_CH0OC_MASK)
#define FTM_SWOCTRL_CH1OC_MASK                   0x2u
#define FTM_SWOCTRL_CH1OC_SHIFT                  1
#define FTM_SWOCTRL_CH1OC_WIDTH                  1
#define FTM_SWOCTRL_CH1OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH1OC_SHIFT))&FTM_SWOCTRL_CH1OC_MASK)
#define FTM_SWOCTRL_CH2OC_MASK                   0x4u
#define FTM_SWOCTRL_CH2OC_SHIFT                  2
#define FTM_SWOCTRL_CH2OC_WIDTH                  1
#define FTM_SWOCTRL_CH2OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH2OC_SHIFT))&FTM_SWOCTRL_CH2OC_MASK)
#define FTM_SWOCTRL_CH3OC_MASK                   0x8u
#define FTM_SWOCTRL_CH3OC_SHIFT                  3
#define FTM_SWOCTRL_CH3OC_WIDTH                  1
#define FTM_SWOCTRL_CH3OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH3OC_SHIFT))&FTM_SWOCTRL_CH3OC_MASK)
#define FTM_SWOCTRL_CH4OC_MASK                   0x10u
#define FTM_SWOCTRL_CH4OC_SHIFT                  4
#define FTM_SWOCTRL_CH4OC_WIDTH                  1
#define FTM_SWOCTRL_CH4OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH4OC_SHIFT))&FTM_SWOCTRL_CH4OC_MASK)
#define FTM_SWOCTRL_CH5OC_MASK                   0x20u
#define FTM_SWOCTRL_CH5OC_SHIFT                  5
#define FTM_SWOCTRL_CH5OC_WIDTH                  1
#define FTM_SWOCTRL_CH5OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH5OC_SHIFT))&FTM_SWOCTRL_CH5OC_MASK)
#define FTM_SWOCTRL_CH6OC_MASK                   0x40u
#define FTM_SWOCTRL_CH6OC_SHIFT                  6
#define FTM_SWOCTRL_CH6OC_WIDTH                  1
#define FTM_SWOCTRL_CH6OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH6OC_SHIFT))&FTM_SWOCTRL_CH6OC_MASK)
#define FTM_SWOCTRL_CH7OC_MASK                   0x80u
#define FTM_SWOCTRL_CH7OC_SHIFT                  7
#define FTM_SWOCTRL_CH7OC_WIDTH                  1
#define FTM_SWOCTRL_CH7OC(x)                     (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH7OC_SHIFT))&FTM_SWOCTRL_CH7OC_MASK)
#define FTM_SWOCTRL_CH0OCV_MASK                  0x100u
#define FTM_SWOCTRL_CH0OCV_SHIFT                 8
#define FTM_SWOCTRL_CH0OCV_WIDTH                 1
#define FTM_SWOCTRL_CH0OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH0OCV_SHIFT))&FTM_SWOCTRL_CH0OCV_MASK)
#define FTM_SWOCTRL_CH1OCV_MASK                  0x200u
#define FTM_SWOCTRL_CH1OCV_SHIFT                 9
#define FTM_SWOCTRL_CH1OCV_WIDTH                 1
#define FTM_SWOCTRL_CH1OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH1OCV_SHIFT))&FTM_SWOCTRL_CH1OCV_MASK)
#define FTM_SWOCTRL_CH2OCV_MASK                  0x400u
#define FTM_SWOCTRL_CH2OCV_SHIFT                 10
#define FTM_SWOCTRL_CH2OCV_WIDTH                 1
#define FTM_SWOCTRL_CH2OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH2OCV_SHIFT))&FTM_SWOCTRL_CH2OCV_MASK)
#define FTM_SWOCTRL_CH3OCV_MASK                  0x800u
#define FTM_SWOCTRL_CH3OCV_SHIFT                 11
#define FTM_SWOCTRL_CH3OCV_WIDTH                 1
#define FTM_SWOCTRL_CH3OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH3OCV_SHIFT))&FTM_SWOCTRL_CH3OCV_MASK)
#define FTM_SWOCTRL_CH4OCV_MASK                  0x1000u
#define FTM_SWOCTRL_CH4OCV_SHIFT                 12
#define FTM_SWOCTRL_CH4OCV_WIDTH                 1
#define FTM_SWOCTRL_CH4OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH4OCV_SHIFT))&FTM_SWOCTRL_CH4OCV_MASK)
#define FTM_SWOCTRL_CH5OCV_MASK                  0x2000u
#define FTM_SWOCTRL_CH5OCV_SHIFT                 13
#define FTM_SWOCTRL_CH5OCV_WIDTH                 1
#define FTM_SWOCTRL_CH5OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH5OCV_SHIFT))&FTM_SWOCTRL_CH5OCV_MASK)
#define FTM_SWOCTRL_CH6OCV_MASK                  0x4000u
#define FTM_SWOCTRL_CH6OCV_SHIFT                 14
#define FTM_SWOCTRL_CH6OCV_WIDTH                 1
#define FTM_SWOCTRL_CH6OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH6OCV_SHIFT))&FTM_SWOCTRL_CH6OCV_MASK)
#define FTM_SWOCTRL_CH7OCV_MASK                  0x8000u
#define FTM_SWOCTRL_CH7OCV_SHIFT                 15
#define FTM_SWOCTRL_CH7OCV_WIDTH                 1
#define FTM_SWOCTRL_CH7OCV(x)                    (((uint32)(((uint32)(x))<<FTM_SWOCTRL_CH7OCV_SHIFT))&FTM_SWOCTRL_CH7OCV_MASK)
/* PWMLOAD Bit Fields */
#define FTM_PWMLOAD_CH0SEL_MASK                  0x1u
#define FTM_PWMLOAD_CH0SEL_SHIFT                 0
#define FTM_PWMLOAD_CH0SEL_WIDTH                 1
#define FTM_PWMLOAD_CH0SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH0SEL_SHIFT))&FTM_PWMLOAD_CH0SEL_MASK)
#define FTM_PWMLOAD_CH1SEL_MASK                  0x2u
#define FTM_PWMLOAD_CH1SEL_SHIFT                 1
#define FTM_PWMLOAD_CH1SEL_WIDTH                 1
#define FTM_PWMLOAD_CH1SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH1SEL_SHIFT))&FTM_PWMLOAD_CH1SEL_MASK)
#define FTM_PWMLOAD_CH2SEL_MASK                  0x4u
#define FTM_PWMLOAD_CH2SEL_SHIFT                 2
#define FTM_PWMLOAD_CH2SEL_WIDTH                 1
#define FTM_PWMLOAD_CH2SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH2SEL_SHIFT))&FTM_PWMLOAD_CH2SEL_MASK)
#define FTM_PWMLOAD_CH3SEL_MASK                  0x8u
#define FTM_PWMLOAD_CH3SEL_SHIFT                 3
#define FTM_PWMLOAD_CH3SEL_WIDTH                 1
#define FTM_PWMLOAD_CH3SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH3SEL_SHIFT))&FTM_PWMLOAD_CH3SEL_MASK)
#define FTM_PWMLOAD_CH4SEL_MASK                  0x10u
#define FTM_PWMLOAD_CH4SEL_SHIFT                 4
#define FTM_PWMLOAD_CH4SEL_WIDTH                 1
#define FTM_PWMLOAD_CH4SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH4SEL_SHIFT))&FTM_PWMLOAD_CH4SEL_MASK)
#define FTM_PWMLOAD_CH5SEL_MASK                  0x20u
#define FTM_PWMLOAD_CH5SEL_SHIFT                 5
#define FTM_PWMLOAD_CH5SEL_WIDTH                 1
#define FTM_PWMLOAD_CH5SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH5SEL_SHIFT))&FTM_PWMLOAD_CH5SEL_MASK)
#define FTM_PWMLOAD_CH6SEL_MASK                  0x40u
#define FTM_PWMLOAD_CH6SEL_SHIFT                 6
#define FTM_PWMLOAD_CH6SEL_WIDTH                 1
#define FTM_PWMLOAD_CH6SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH6SEL_SHIFT))&FTM_PWMLOAD_CH6SEL_MASK)
#define FTM_PWMLOAD_CH7SEL_MASK                  0x80u
#define FTM_PWMLOAD_CH7SEL_SHIFT                 7
#define FTM_PWMLOAD_CH7SEL_WIDTH                 1
#define FTM_PWMLOAD_CH7SEL(x)                    (((uint32)(((uint32)(x))<<FTM_PWMLOAD_CH7SEL_SHIFT))&FTM_PWMLOAD_CH7SEL_MASK)
#define FTM_PWMLOAD_HCSEL_MASK                   0x100u
#define FTM_PWMLOAD_HCSEL_SHIFT                  8
#define FTM_PWMLOAD_HCSEL_WIDTH                  1
#define FTM_PWMLOAD_HCSEL(x)                     (((uint32)(((uint32)(x))<<FTM_PWMLOAD_HCSEL_SHIFT))&FTM_PWMLOAD_HCSEL_MASK)
#define FTM_PWMLOAD_LDOK_MASK                    0x200u
#define FTM_PWMLOAD_LDOK_SHIFT                   9
#define FTM_PWMLOAD_LDOK_WIDTH                   1
#define FTM_PWMLOAD_LDOK(x)                      (((uint32)(((uint32)(x))<<FTM_PWMLOAD_LDOK_SHIFT))&FTM_PWMLOAD_LDOK_MASK)
#define FTM_PWMLOAD_GLEN_MASK                    0x400u
#define FTM_PWMLOAD_GLEN_SHIFT                   10
#define FTM_PWMLOAD_GLEN_WIDTH                   1
#define FTM_PWMLOAD_GLEN(x)                      (((uint32)(((uint32)(x))<<FTM_PWMLOAD_GLEN_SHIFT))&FTM_PWMLOAD_GLEN_MASK)
#define FTM_PWMLOAD_GLDOK_MASK                   0x800u
#define FTM_PWMLOAD_GLDOK_SHIFT                  11
#define FTM_PWMLOAD_GLDOK_WIDTH                  1
#define FTM_PWMLOAD_GLDOK(x)                     (((uint32)(((uint32)(x))<<FTM_PWMLOAD_GLDOK_SHIFT))&FTM_PWMLOAD_GLDOK_MASK)
/* HCR Bit Fields */
#define FTM_HCR_HCVAL_MASK                       0xFFFFu
#define FTM_HCR_HCVAL_SHIFT                      0
#define FTM_HCR_HCVAL_WIDTH                      16
#define FTM_HCR_HCVAL(x)                         (((uint32)(((uint32)(x))<<FTM_HCR_HCVAL_SHIFT))&FTM_HCR_HCVAL_MASK)

/*!
 * @}
 */ /* end of group FTM_Register_Masks */


/* FTM - Peripheral instance base addresses */
/** Peripheral FTM0 base address */
#define FTM0_BASE                                (0x40038000u)
/** Peripheral FTM0 base pointer */
#define FTM0                                     ((FTM_Type *)FTM0_BASE)
#define FTM0_BASE_PTR                            (FTM0)
/** Peripheral FTM1 base address */
#define FTM1_BASE                                (0x40039000u)
/** Peripheral FTM1 base pointer */
#define FTM1                                     ((FTM_Type *)FTM1_BASE)
#define FTM1_BASE_PTR                            (FTM1)
/** Peripheral FTM2 base address */
#define FTM2_BASE                                (0x4003A000u)
/** Peripheral FTM2 base pointer */
#define FTM2                                     ((FTM_Type *)FTM2_BASE)
#define FTM2_BASE_PTR                            (FTM2)
/** Peripheral FTM3 base address */
#define FTM3_BASE                                (0x40026000u)
/** Peripheral FTM3 base pointer */
#define FTM3                                     ((FTM_Type *)FTM3_BASE)
#define FTM3_BASE_PTR                            (FTM3)
/** Array initializer of FTM peripheral base addresses */
#define FTM_BASE_ADDRS                           { FTM0_BASE, FTM1_BASE, FTM2_BASE, FTM3_BASE }
/** Array initializer of FTM peripheral base pointers */
#define FTM_BASE_PTRS                            { FTM0, FTM1, FTM2, FTM3 }

/* ----------------------------------------------------------------------------
   -- FTM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FTM_Register_Accessor_Macros FTM - Register accessor macros
 * @{
 */


/* FTM - Register instance definitions */
/* FTM0 */
#define FTM0_SC                                  FTM_SC_REG(FTM0)
#define FTM0_CNT                                 FTM_CNT_REG(FTM0)
#define FTM0_MOD                                 FTM_MOD_REG(FTM0)
#define FTM0_C0SC                                FTM_C0SC_REG(FTM0)
#define FTM0_C0V                                 FTM_C0V_REG(FTM0)
#define FTM0_C1SC                                FTM_C1SC_REG(FTM0)
#define FTM0_C1V                                 FTM_C1V_REG(FTM0)
#define FTM0_C2SC                                FTM_C2SC_REG(FTM0)
#define FTM0_C2V                                 FTM_C2V_REG(FTM0)
#define FTM0_C3SC                                FTM_C3SC_REG(FTM0)
#define FTM0_C3V                                 FTM_C3V_REG(FTM0)
#define FTM0_C4SC                                FTM_C4SC_REG(FTM0)
#define FTM0_C4V                                 FTM_C4V_REG(FTM0)
#define FTM0_C5SC                                FTM_C5SC_REG(FTM0)
#define FTM0_C5V                                 FTM_C5V_REG(FTM0)
#define FTM0_C6SC                                FTM_C6SC_REG(FTM0)
#define FTM0_C6V                                 FTM_C6V_REG(FTM0)
#define FTM0_C7SC                                FTM_C7SC_REG(FTM0)
#define FTM0_C7V                                 FTM_C7V_REG(FTM0)
#define FTM0_CNTIN                               FTM_CNTIN_REG(FTM0)
#define FTM0_STATUS                              FTM_STATUS_REG(FTM0)
#define FTM0_MODE                                FTM_MODE_REG(FTM0)
#define FTM0_SYNC                                FTM_SYNC_REG(FTM0)
#define FTM0_OUTINIT                             FTM_OUTINIT_REG(FTM0)
#define FTM0_OUTMASK                             FTM_OUTMASK_REG(FTM0)
#define FTM0_COMBINE                             FTM_COMBINE_REG(FTM0)
#define FTM0_DEADTIME                            FTM_DEADTIME_REG(FTM0)
#define FTM0_EXTTRIG                             FTM_EXTTRIG_REG(FTM0)
#define FTM0_POL                                 FTM_POL_REG(FTM0)
#define FTM0_FMS                                 FTM_FMS_REG(FTM0)
#define FTM0_FILTER                              FTM_FILTER_REG(FTM0)
#define FTM0_FLTCTRL                             FTM_FLTCTRL_REG(FTM0)
#define FTM0_QDCTRL                              FTM_QDCTRL_REG(FTM0)
#define FTM0_CONF                                FTM_CONF_REG(FTM0)
#define FTM0_FLTPOL                              FTM_FLTPOL_REG(FTM0)
#define FTM0_SYNCONF                             FTM_SYNCONF_REG(FTM0)
#define FTM0_INVCTRL                             FTM_INVCTRL_REG(FTM0)
#define FTM0_SWOCTRL                             FTM_SWOCTRL_REG(FTM0)
#define FTM0_PWMLOAD                             FTM_PWMLOAD_REG(FTM0)
#define FTM0_HCR                                 FTM_HCR_REG(FTM0)
/* FTM1 */
#define FTM1_SC                                  FTM_SC_REG(FTM1)
#define FTM1_CNT                                 FTM_CNT_REG(FTM1)
#define FTM1_MOD                                 FTM_MOD_REG(FTM1)
#define FTM1_C0SC                                FTM_C0SC_REG(FTM1)
#define FTM1_C0V                                 FTM_C0V_REG(FTM1)
#define FTM1_C1SC                                FTM_C1SC_REG(FTM1)
#define FTM1_C1V                                 FTM_C1V_REG(FTM1)
#define FTM1_C2SC                                FTM_C2SC_REG(FTM1)
#define FTM1_C2V                                 FTM_C2V_REG(FTM1)
#define FTM1_C3SC                                FTM_C3SC_REG(FTM1)
#define FTM1_C3V                                 FTM_C3V_REG(FTM1)
#define FTM1_C4SC                                FTM_C4SC_REG(FTM1)
#define FTM1_C4V                                 FTM_C4V_REG(FTM1)
#define FTM1_C5SC                                FTM_C5SC_REG(FTM1)
#define FTM1_C5V                                 FTM_C5V_REG(FTM1)
#define FTM1_C6SC                                FTM_C6SC_REG(FTM1)
#define FTM1_C6V                                 FTM_C6V_REG(FTM1)
#define FTM1_C7SC                                FTM_C7SC_REG(FTM1)
#define FTM1_C7V                                 FTM_C7V_REG(FTM1)
#define FTM1_CNTIN                               FTM_CNTIN_REG(FTM1)
#define FTM1_STATUS                              FTM_STATUS_REG(FTM1)
#define FTM1_MODE                                FTM_MODE_REG(FTM1)
#define FTM1_SYNC                                FTM_SYNC_REG(FTM1)
#define FTM1_OUTINIT                             FTM_OUTINIT_REG(FTM1)
#define FTM1_OUTMASK                             FTM_OUTMASK_REG(FTM1)
#define FTM1_COMBINE                             FTM_COMBINE_REG(FTM1)
#define FTM1_DEADTIME                            FTM_DEADTIME_REG(FTM1)
#define FTM1_EXTTRIG                             FTM_EXTTRIG_REG(FTM1)
#define FTM1_POL                                 FTM_POL_REG(FTM1)
#define FTM1_FMS                                 FTM_FMS_REG(FTM1)
#define FTM1_FILTER                              FTM_FILTER_REG(FTM1)
#define FTM1_FLTCTRL                             FTM_FLTCTRL_REG(FTM1)
#define FTM1_QDCTRL                              FTM_QDCTRL_REG(FTM1)
#define FTM1_CONF                                FTM_CONF_REG(FTM1)
#define FTM1_FLTPOL                              FTM_FLTPOL_REG(FTM1)
#define FTM1_SYNCONF                             FTM_SYNCONF_REG(FTM1)
#define FTM1_INVCTRL                             FTM_INVCTRL_REG(FTM1)
#define FTM1_SWOCTRL                             FTM_SWOCTRL_REG(FTM1)
#define FTM1_PWMLOAD                             FTM_PWMLOAD_REG(FTM1)
#define FTM1_HCR                                 FTM_HCR_REG(FTM1)
/* FTM2 */
#define FTM2_SC                                  FTM_SC_REG(FTM2)
#define FTM2_CNT                                 FTM_CNT_REG(FTM2)
#define FTM2_MOD                                 FTM_MOD_REG(FTM2)
#define FTM2_C0SC                                FTM_C0SC_REG(FTM2)
#define FTM2_C0V                                 FTM_C0V_REG(FTM2)
#define FTM2_C1SC                                FTM_C1SC_REG(FTM2)
#define FTM2_C1V                                 FTM_C1V_REG(FTM2)
#define FTM2_C2SC                                FTM_C2SC_REG(FTM2)
#define FTM2_C2V                                 FTM_C2V_REG(FTM2)
#define FTM2_C3SC                                FTM_C3SC_REG(FTM2)
#define FTM2_C3V                                 FTM_C3V_REG(FTM2)
#define FTM2_C4SC                                FTM_C4SC_REG(FTM2)
#define FTM2_C4V                                 FTM_C4V_REG(FTM2)
#define FTM2_C5SC                                FTM_C5SC_REG(FTM2)
#define FTM2_C5V                                 FTM_C5V_REG(FTM2)
#define FTM2_C6SC                                FTM_C6SC_REG(FTM2)
#define FTM2_C6V                                 FTM_C6V_REG(FTM2)
#define FTM2_C7SC                                FTM_C7SC_REG(FTM2)
#define FTM2_C7V                                 FTM_C7V_REG(FTM2)
#define FTM2_CNTIN                               FTM_CNTIN_REG(FTM2)
#define FTM2_STATUS                              FTM_STATUS_REG(FTM2)
#define FTM2_MODE                                FTM_MODE_REG(FTM2)
#define FTM2_SYNC                                FTM_SYNC_REG(FTM2)
#define FTM2_OUTINIT                             FTM_OUTINIT_REG(FTM2)
#define FTM2_OUTMASK                             FTM_OUTMASK_REG(FTM2)
#define FTM2_COMBINE                             FTM_COMBINE_REG(FTM2)
#define FTM2_DEADTIME                            FTM_DEADTIME_REG(FTM2)
#define FTM2_EXTTRIG                             FTM_EXTTRIG_REG(FTM2)
#define FTM2_POL                                 FTM_POL_REG(FTM2)
#define FTM2_FMS                                 FTM_FMS_REG(FTM2)
#define FTM2_FILTER                              FTM_FILTER_REG(FTM2)
#define FTM2_FLTCTRL                             FTM_FLTCTRL_REG(FTM2)
#define FTM2_QDCTRL                              FTM_QDCTRL_REG(FTM2)
#define FTM2_CONF                                FTM_CONF_REG(FTM2)
#define FTM2_FLTPOL                              FTM_FLTPOL_REG(FTM2)
#define FTM2_SYNCONF                             FTM_SYNCONF_REG(FTM2)
#define FTM2_INVCTRL                             FTM_INVCTRL_REG(FTM2)
#define FTM2_SWOCTRL                             FTM_SWOCTRL_REG(FTM2)
#define FTM2_PWMLOAD                             FTM_PWMLOAD_REG(FTM2)
#define FTM2_HCR                                 FTM_HCR_REG(FTM2)
/* FTM3 */
#define FTM3_SC                                  FTM_SC_REG(FTM3)
#define FTM3_CNT                                 FTM_CNT_REG(FTM3)
#define FTM3_MOD                                 FTM_MOD_REG(FTM3)
#define FTM3_C0SC                                FTM_C0SC_REG(FTM3)
#define FTM3_C0V                                 FTM_C0V_REG(FTM3)
#define FTM3_C1SC                                FTM_C1SC_REG(FTM3)
#define FTM3_C1V                                 FTM_C1V_REG(FTM3)
#define FTM3_C2SC                                FTM_C2SC_REG(FTM3)
#define FTM3_C2V                                 FTM_C2V_REG(FTM3)
#define FTM3_C3SC                                FTM_C3SC_REG(FTM3)
#define FTM3_C3V                                 FTM_C3V_REG(FTM3)
#define FTM3_C4SC                                FTM_C4SC_REG(FTM3)
#define FTM3_C4V                                 FTM_C4V_REG(FTM3)
#define FTM3_C5SC                                FTM_C5SC_REG(FTM3)
#define FTM3_C5V                                 FTM_C5V_REG(FTM3)
#define FTM3_C6SC                                FTM_C6SC_REG(FTM3)
#define FTM3_C6V                                 FTM_C6V_REG(FTM3)
#define FTM3_C7SC                                FTM_C7SC_REG(FTM3)
#define FTM3_C7V                                 FTM_C7V_REG(FTM3)
#define FTM3_CNTIN                               FTM_CNTIN_REG(FTM3)
#define FTM3_STATUS                              FTM_STATUS_REG(FTM3)
#define FTM3_MODE                                FTM_MODE_REG(FTM3)
#define FTM3_SYNC                                FTM_SYNC_REG(FTM3)
#define FTM3_OUTINIT                             FTM_OUTINIT_REG(FTM3)
#define FTM3_OUTMASK                             FTM_OUTMASK_REG(FTM3)
#define FTM3_COMBINE                             FTM_COMBINE_REG(FTM3)
#define FTM3_DEADTIME                            FTM_DEADTIME_REG(FTM3)
#define FTM3_EXTTRIG                             FTM_EXTTRIG_REG(FTM3)
#define FTM3_POL                                 FTM_POL_REG(FTM3)
#define FTM3_FMS                                 FTM_FMS_REG(FTM3)
#define FTM3_FILTER                              FTM_FILTER_REG(FTM3)
#define FTM3_FLTCTRL                             FTM_FLTCTRL_REG(FTM3)
#define FTM3_QDCTRL                              FTM_QDCTRL_REG(FTM3)
#define FTM3_CONF                                FTM_CONF_REG(FTM3)
#define FTM3_FLTPOL                              FTM_FLTPOL_REG(FTM3)
#define FTM3_SYNCONF                             FTM_SYNCONF_REG(FTM3)
#define FTM3_INVCTRL                             FTM_INVCTRL_REG(FTM3)
#define FTM3_SWOCTRL                             FTM_SWOCTRL_REG(FTM3)
#define FTM3_PWMLOAD                             FTM_PWMLOAD_REG(FTM3)
#define FTM3_HCR                                 FTM_HCR_REG(FTM3)

/*!
 * @}
 */ /* end of group FTM_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group FTM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- GPIO Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GPIO_Peripheral_Access_Layer GPIO Peripheral Access Layer
 * @{
 */

/** GPIO - Register Layout Typedef */
typedef struct {
  __IO uint32 PDOR;                                /**< Port Data Output Register, offset: 0x0 */
  __O  uint32 PSOR;                                /**< Port Set Output Register, offset: 0x4 */
  __O  uint32 PCOR;                                /**< Port Clear Output Register, offset: 0x8 */
  __O  uint32 PTOR;                                /**< Port Toggle Output Register, offset: 0xC */
  __I  uint32 PDIR;                                /**< Port Data Input Register, offset: 0x10 */
  __IO uint32 PDDR;                                /**< Port Data Direction Register, offset: 0x14 */
} GPIO_Type, *GPIO_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- GPIO - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GPIO_Register_Accessor_Macros GPIO - Register accessor macros
 * @{
 */


/* GPIO - Register accessors */
#define GPIO_PDOR_REG(base)                      ((base)->PDOR)
#define GPIO_PSOR_REG(base)                      ((base)->PSOR)
#define GPIO_PCOR_REG(base)                      ((base)->PCOR)
#define GPIO_PTOR_REG(base)                      ((base)->PTOR)
#define GPIO_PDIR_REG(base)                      ((base)->PDIR)
#define GPIO_PDDR_REG(base)                      ((base)->PDDR)

/*!
 * @}
 */ /* end of group GPIO_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- GPIO Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GPIO_Register_Masks GPIO Register Masks
 * @{
 */

/* PDOR Bit Fields */
#define GPIO_PDOR_PDO_MASK                       0xFFFFFFFFu
#define GPIO_PDOR_PDO_SHIFT                      0
#define GPIO_PDOR_PDO_WIDTH                      32
#define GPIO_PDOR_PDO(x)                         (((uint32)(((uint32)(x))<<GPIO_PDOR_PDO_SHIFT))&GPIO_PDOR_PDO_MASK)
/* PSOR Bit Fields */
#define GPIO_PSOR_PTSO_MASK                      0xFFFFFFFFu
#define GPIO_PSOR_PTSO_SHIFT                     0
#define GPIO_PSOR_PTSO_WIDTH                     32
#define GPIO_PSOR_PTSO(x)                        (((uint32)(((uint32)(x))<<GPIO_PSOR_PTSO_SHIFT))&GPIO_PSOR_PTSO_MASK)
/* PCOR Bit Fields */
#define GPIO_PCOR_PTCO_MASK                      0xFFFFFFFFu
#define GPIO_PCOR_PTCO_SHIFT                     0
#define GPIO_PCOR_PTCO_WIDTH                     32
#define GPIO_PCOR_PTCO(x)                        (((uint32)(((uint32)(x))<<GPIO_PCOR_PTCO_SHIFT))&GPIO_PCOR_PTCO_MASK)
/* PTOR Bit Fields */
#define GPIO_PTOR_PTTO_MASK                      0xFFFFFFFFu
#define GPIO_PTOR_PTTO_SHIFT                     0
#define GPIO_PTOR_PTTO_WIDTH                     32
#define GPIO_PTOR_PTTO(x)                        (((uint32)(((uint32)(x))<<GPIO_PTOR_PTTO_SHIFT))&GPIO_PTOR_PTTO_MASK)
/* PDIR Bit Fields */
#define GPIO_PDIR_PDI_MASK                       0xFFFFFFFFu
#define GPIO_PDIR_PDI_SHIFT                      0
#define GPIO_PDIR_PDI_WIDTH                      32
#define GPIO_PDIR_PDI(x)                         (((uint32)(((uint32)(x))<<GPIO_PDIR_PDI_SHIFT))&GPIO_PDIR_PDI_MASK)
/* PDDR Bit Fields */
#define GPIO_PDDR_PDD_MASK                       0xFFFFFFFFu
#define GPIO_PDDR_PDD_SHIFT                      0
#define GPIO_PDDR_PDD_WIDTH                      32
#define GPIO_PDDR_PDD(x)                         (((uint32)(((uint32)(x))<<GPIO_PDDR_PDD_SHIFT))&GPIO_PDDR_PDD_MASK)

/*!
 * @}
 */ /* end of group GPIO_Register_Masks */


/* GPIO - Peripheral instance base addresses */
/** Peripheral PTA base address */
#define PTA_BASE                                 (0x400FF000u)
/** Peripheral PTA base pointer */
#define PTA                                      ((GPIO_Type *)PTA_BASE)
#define PTA_BASE_PTR                             (PTA)
/** Peripheral PTB base address */
#define PTB_BASE                                 (0x400FF040u)
/** Peripheral PTB base pointer */
#define PTB                                      ((GPIO_Type *)PTB_BASE)
#define PTB_BASE_PTR                             (PTB)
/** Peripheral PTC base address */
#define PTC_BASE                                 (0x400FF080u)
/** Peripheral PTC base pointer */
#define PTC                                      ((GPIO_Type *)PTC_BASE)
#define PTC_BASE_PTR                             (PTC)
/** Peripheral PTD base address */
#define PTD_BASE                                 (0x400FF0C0u)
/** Peripheral PTD base pointer */
#define PTD                                      ((GPIO_Type *)PTD_BASE)
#define PTD_BASE_PTR                             (PTD)
/** Peripheral PTE base address */
#define PTE_BASE                                 (0x400FF100u)
/** Peripheral PTE base pointer */
#define PTE                                      ((GPIO_Type *)PTE_BASE)
#define PTE_BASE_PTR                             (PTE)
/** Array initializer of GPIO peripheral base addresses */
#define GPIO_BASE_ADDRS                          { PTA_BASE, PTB_BASE, PTC_BASE, PTD_BASE, PTE_BASE }
/** Array initializer of GPIO peripheral base pointers */
#define GPIO_BASE_PTRS                           { PTA, PTB, PTC, PTD, PTE }

/* ----------------------------------------------------------------------------
   -- GPIO - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GPIO_Register_Accessor_Macros GPIO - Register accessor macros
 * @{
 */


/* GPIO - Register instance definitions */
/* PTA */
#define GPIOA_PDOR                               GPIO_PDOR_REG(PTA)
#define GPIOA_PSOR                               GPIO_PSOR_REG(PTA)
#define GPIOA_PCOR                               GPIO_PCOR_REG(PTA)
#define GPIOA_PTOR                               GPIO_PTOR_REG(PTA)
#define GPIOA_PDIR                               GPIO_PDIR_REG(PTA)
#define GPIOA_PDDR                               GPIO_PDDR_REG(PTA)
/* PTB */
#define GPIOB_PDOR                               GPIO_PDOR_REG(PTB)
#define GPIOB_PSOR                               GPIO_PSOR_REG(PTB)
#define GPIOB_PCOR                               GPIO_PCOR_REG(PTB)
#define GPIOB_PTOR                               GPIO_PTOR_REG(PTB)
#define GPIOB_PDIR                               GPIO_PDIR_REG(PTB)
#define GPIOB_PDDR                               GPIO_PDDR_REG(PTB)
/* PTC */
#define GPIOC_PDOR                               GPIO_PDOR_REG(PTC)
#define GPIOC_PSOR                               GPIO_PSOR_REG(PTC)
#define GPIOC_PCOR                               GPIO_PCOR_REG(PTC)
#define GPIOC_PTOR                               GPIO_PTOR_REG(PTC)
#define GPIOC_PDIR                               GPIO_PDIR_REG(PTC)
#define GPIOC_PDDR                               GPIO_PDDR_REG(PTC)
/* PTD */
#define GPIOD_PDOR                               GPIO_PDOR_REG(PTD)
#define GPIOD_PSOR                               GPIO_PSOR_REG(PTD)
#define GPIOD_PCOR                               GPIO_PCOR_REG(PTD)
#define GPIOD_PTOR                               GPIO_PTOR_REG(PTD)
#define GPIOD_PDIR                               GPIO_PDIR_REG(PTD)
#define GPIOD_PDDR                               GPIO_PDDR_REG(PTD)
/* PTE */
#define GPIOE_PDOR                               GPIO_PDOR_REG(PTE)
#define GPIOE_PSOR                               GPIO_PSOR_REG(PTE)
#define GPIOE_PCOR                               GPIO_PCOR_REG(PTE)
#define GPIOE_PTOR                               GPIO_PTOR_REG(PTE)
#define GPIOE_PDIR                               GPIO_PDIR_REG(PTE)
#define GPIOE_PDDR                               GPIO_PDDR_REG(PTE)

/*!
 * @}
 */ /* end of group GPIO_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group GPIO_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LMEM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LMEM_Peripheral_Access_Layer LMEM Peripheral Access Layer
 * @{
 */

/** LMEM - Register Layout Typedef */
typedef struct {
  __IO uint32 PCCCR;                               /**< Cache control register, offset: 0x0 */
  __IO uint32 PCCLCR;                              /**< Cache line control register, offset: 0x4 */
  __IO uint32 PCCSAR;                              /**< Cache search address register, offset: 0x8 */
  __IO uint32 PCCCVR;                              /**< Cache read/write value register, offset: 0xC */
       uint8 RESERVED_0[16];
  __IO uint32 PCCRMR;                              /**< Cache regions mode register, offset: 0x20 */
} LMEM_Type, *LMEM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LMEM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LMEM_Register_Accessor_Macros LMEM - Register accessor macros
 * @{
 */


/* LMEM - Register accessors */
#define LMEM_PCCCR_REG(base)                     ((base)->PCCCR)
#define LMEM_PCCLCR_REG(base)                    ((base)->PCCLCR)
#define LMEM_PCCSAR_REG(base)                    ((base)->PCCSAR)
#define LMEM_PCCCVR_REG(base)                    ((base)->PCCCVR)
#define LMEM_PCCRMR_REG(base)                    ((base)->PCCRMR)

/*!
 * @}
 */ /* end of group LMEM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LMEM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LMEM_Register_Masks LMEM Register Masks
 * @{
 */

/* PCCCR Bit Fields */
#define LMEM_PCCCR_ENCACHE_MASK                  0x1u
#define LMEM_PCCCR_ENCACHE_SHIFT                 0
#define LMEM_PCCCR_ENCACHE_WIDTH                 1
#define LMEM_PCCCR_ENCACHE(x)                    (((uint32)(((uint32)(x))<<LMEM_PCCCR_ENCACHE_SHIFT))&LMEM_PCCCR_ENCACHE_MASK)
#define LMEM_PCCCR_ENWRBUF_MASK                  0x2u
#define LMEM_PCCCR_ENWRBUF_SHIFT                 1
#define LMEM_PCCCR_ENWRBUF_WIDTH                 1
#define LMEM_PCCCR_ENWRBUF(x)                    (((uint32)(((uint32)(x))<<LMEM_PCCCR_ENWRBUF_SHIFT))&LMEM_PCCCR_ENWRBUF_MASK)
#define LMEM_PCCCR_PCCR2_MASK                    0x4u
#define LMEM_PCCCR_PCCR2_SHIFT                   2
#define LMEM_PCCCR_PCCR2_WIDTH                   1
#define LMEM_PCCCR_PCCR2(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCCR_PCCR2_SHIFT))&LMEM_PCCCR_PCCR2_MASK)
#define LMEM_PCCCR_PCCR3_MASK                    0x8u
#define LMEM_PCCCR_PCCR3_SHIFT                   3
#define LMEM_PCCCR_PCCR3_WIDTH                   1
#define LMEM_PCCCR_PCCR3(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCCR_PCCR3_SHIFT))&LMEM_PCCCR_PCCR3_MASK)
#define LMEM_PCCCR_INVW0_MASK                    0x1000000u
#define LMEM_PCCCR_INVW0_SHIFT                   24
#define LMEM_PCCCR_INVW0_WIDTH                   1
#define LMEM_PCCCR_INVW0(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCCR_INVW0_SHIFT))&LMEM_PCCCR_INVW0_MASK)
#define LMEM_PCCCR_PUSHW0_MASK                   0x2000000u
#define LMEM_PCCCR_PUSHW0_SHIFT                  25
#define LMEM_PCCCR_PUSHW0_WIDTH                  1
#define LMEM_PCCCR_PUSHW0(x)                     (((uint32)(((uint32)(x))<<LMEM_PCCCR_PUSHW0_SHIFT))&LMEM_PCCCR_PUSHW0_MASK)
#define LMEM_PCCCR_INVW1_MASK                    0x4000000u
#define LMEM_PCCCR_INVW1_SHIFT                   26
#define LMEM_PCCCR_INVW1_WIDTH                   1
#define LMEM_PCCCR_INVW1(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCCR_INVW1_SHIFT))&LMEM_PCCCR_INVW1_MASK)
#define LMEM_PCCCR_PUSHW1_MASK                   0x8000000u
#define LMEM_PCCCR_PUSHW1_SHIFT                  27
#define LMEM_PCCCR_PUSHW1_WIDTH                  1
#define LMEM_PCCCR_PUSHW1(x)                     (((uint32)(((uint32)(x))<<LMEM_PCCCR_PUSHW1_SHIFT))&LMEM_PCCCR_PUSHW1_MASK)
#define LMEM_PCCCR_GO_MASK                       0x80000000u
#define LMEM_PCCCR_GO_SHIFT                      31
#define LMEM_PCCCR_GO_WIDTH                      1
#define LMEM_PCCCR_GO(x)                         (((uint32)(((uint32)(x))<<LMEM_PCCCR_GO_SHIFT))&LMEM_PCCCR_GO_MASK)
/* PCCLCR Bit Fields */
#define LMEM_PCCLCR_LGO_MASK                     0x1u
#define LMEM_PCCLCR_LGO_SHIFT                    0
#define LMEM_PCCLCR_LGO_WIDTH                    1
#define LMEM_PCCLCR_LGO(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCLCR_LGO_SHIFT))&LMEM_PCCLCR_LGO_MASK)
#define LMEM_PCCLCR_CACHEADDR_MASK               0xFFCu
#define LMEM_PCCLCR_CACHEADDR_SHIFT              2
#define LMEM_PCCLCR_CACHEADDR_WIDTH              10
#define LMEM_PCCLCR_CACHEADDR(x)                 (((uint32)(((uint32)(x))<<LMEM_PCCLCR_CACHEADDR_SHIFT))&LMEM_PCCLCR_CACHEADDR_MASK)
#define LMEM_PCCLCR_WSEL_MASK                    0x4000u
#define LMEM_PCCLCR_WSEL_SHIFT                   14
#define LMEM_PCCLCR_WSEL_WIDTH                   1
#define LMEM_PCCLCR_WSEL(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCLCR_WSEL_SHIFT))&LMEM_PCCLCR_WSEL_MASK)
#define LMEM_PCCLCR_TDSEL_MASK                   0x10000u
#define LMEM_PCCLCR_TDSEL_SHIFT                  16
#define LMEM_PCCLCR_TDSEL_WIDTH                  1
#define LMEM_PCCLCR_TDSEL(x)                     (((uint32)(((uint32)(x))<<LMEM_PCCLCR_TDSEL_SHIFT))&LMEM_PCCLCR_TDSEL_MASK)
#define LMEM_PCCLCR_LCIVB_MASK                   0x100000u
#define LMEM_PCCLCR_LCIVB_SHIFT                  20
#define LMEM_PCCLCR_LCIVB_WIDTH                  1
#define LMEM_PCCLCR_LCIVB(x)                     (((uint32)(((uint32)(x))<<LMEM_PCCLCR_LCIVB_SHIFT))&LMEM_PCCLCR_LCIVB_MASK)
#define LMEM_PCCLCR_LCIMB_MASK                   0x200000u
#define LMEM_PCCLCR_LCIMB_SHIFT                  21
#define LMEM_PCCLCR_LCIMB_WIDTH                  1
#define LMEM_PCCLCR_LCIMB(x)                     (((uint32)(((uint32)(x))<<LMEM_PCCLCR_LCIMB_SHIFT))&LMEM_PCCLCR_LCIMB_MASK)
#define LMEM_PCCLCR_LCWAY_MASK                   0x400000u
#define LMEM_PCCLCR_LCWAY_SHIFT                  22
#define LMEM_PCCLCR_LCWAY_WIDTH                  1
#define LMEM_PCCLCR_LCWAY(x)                     (((uint32)(((uint32)(x))<<LMEM_PCCLCR_LCWAY_SHIFT))&LMEM_PCCLCR_LCWAY_MASK)
#define LMEM_PCCLCR_LCMD_MASK                    0x3000000u
#define LMEM_PCCLCR_LCMD_SHIFT                   24
#define LMEM_PCCLCR_LCMD_WIDTH                   2
#define LMEM_PCCLCR_LCMD(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCLCR_LCMD_SHIFT))&LMEM_PCCLCR_LCMD_MASK)
#define LMEM_PCCLCR_LADSEL_MASK                  0x4000000u
#define LMEM_PCCLCR_LADSEL_SHIFT                 26
#define LMEM_PCCLCR_LADSEL_WIDTH                 1
#define LMEM_PCCLCR_LADSEL(x)                    (((uint32)(((uint32)(x))<<LMEM_PCCLCR_LADSEL_SHIFT))&LMEM_PCCLCR_LADSEL_MASK)
#define LMEM_PCCLCR_LACC_MASK                    0x8000000u
#define LMEM_PCCLCR_LACC_SHIFT                   27
#define LMEM_PCCLCR_LACC_WIDTH                   1
#define LMEM_PCCLCR_LACC(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCLCR_LACC_SHIFT))&LMEM_PCCLCR_LACC_MASK)
/* PCCSAR Bit Fields */
#define LMEM_PCCSAR_LGO_MASK                     0x1u
#define LMEM_PCCSAR_LGO_SHIFT                    0
#define LMEM_PCCSAR_LGO_WIDTH                    1
#define LMEM_PCCSAR_LGO(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCSAR_LGO_SHIFT))&LMEM_PCCSAR_LGO_MASK)
#define LMEM_PCCSAR_PHYADDR_MASK                 0xFFFFFFFCu
#define LMEM_PCCSAR_PHYADDR_SHIFT                2
#define LMEM_PCCSAR_PHYADDR_WIDTH                30
#define LMEM_PCCSAR_PHYADDR(x)                   (((uint32)(((uint32)(x))<<LMEM_PCCSAR_PHYADDR_SHIFT))&LMEM_PCCSAR_PHYADDR_MASK)
/* PCCCVR Bit Fields */
#define LMEM_PCCCVR_DATA_MASK                    0xFFFFFFFFu
#define LMEM_PCCCVR_DATA_SHIFT                   0
#define LMEM_PCCCVR_DATA_WIDTH                   32
#define LMEM_PCCCVR_DATA(x)                      (((uint32)(((uint32)(x))<<LMEM_PCCCVR_DATA_SHIFT))&LMEM_PCCCVR_DATA_MASK)
/* PCCRMR Bit Fields */
#define LMEM_PCCRMR_R15_MASK                     0x3u
#define LMEM_PCCRMR_R15_SHIFT                    0
#define LMEM_PCCRMR_R15_WIDTH                    2
#define LMEM_PCCRMR_R15(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R15_SHIFT))&LMEM_PCCRMR_R15_MASK)
#define LMEM_PCCRMR_R14_MASK                     0xCu
#define LMEM_PCCRMR_R14_SHIFT                    2
#define LMEM_PCCRMR_R14_WIDTH                    2
#define LMEM_PCCRMR_R14(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R14_SHIFT))&LMEM_PCCRMR_R14_MASK)
#define LMEM_PCCRMR_R13_MASK                     0x30u
#define LMEM_PCCRMR_R13_SHIFT                    4
#define LMEM_PCCRMR_R13_WIDTH                    2
#define LMEM_PCCRMR_R13(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R13_SHIFT))&LMEM_PCCRMR_R13_MASK)
#define LMEM_PCCRMR_R12_MASK                     0xC0u
#define LMEM_PCCRMR_R12_SHIFT                    6
#define LMEM_PCCRMR_R12_WIDTH                    2
#define LMEM_PCCRMR_R12(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R12_SHIFT))&LMEM_PCCRMR_R12_MASK)
#define LMEM_PCCRMR_R11_MASK                     0x300u
#define LMEM_PCCRMR_R11_SHIFT                    8
#define LMEM_PCCRMR_R11_WIDTH                    2
#define LMEM_PCCRMR_R11(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R11_SHIFT))&LMEM_PCCRMR_R11_MASK)
#define LMEM_PCCRMR_R10_MASK                     0xC00u
#define LMEM_PCCRMR_R10_SHIFT                    10
#define LMEM_PCCRMR_R10_WIDTH                    2
#define LMEM_PCCRMR_R10(x)                       (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R10_SHIFT))&LMEM_PCCRMR_R10_MASK)
#define LMEM_PCCRMR_R9_MASK                      0x3000u
#define LMEM_PCCRMR_R9_SHIFT                     12
#define LMEM_PCCRMR_R9_WIDTH                     2
#define LMEM_PCCRMR_R9(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R9_SHIFT))&LMEM_PCCRMR_R9_MASK)
#define LMEM_PCCRMR_R8_MASK                      0xC000u
#define LMEM_PCCRMR_R8_SHIFT                     14
#define LMEM_PCCRMR_R8_WIDTH                     2
#define LMEM_PCCRMR_R8(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R8_SHIFT))&LMEM_PCCRMR_R8_MASK)
#define LMEM_PCCRMR_R7_MASK                      0x30000u
#define LMEM_PCCRMR_R7_SHIFT                     16
#define LMEM_PCCRMR_R7_WIDTH                     2
#define LMEM_PCCRMR_R7(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R7_SHIFT))&LMEM_PCCRMR_R7_MASK)
#define LMEM_PCCRMR_R6_MASK                      0xC0000u
#define LMEM_PCCRMR_R6_SHIFT                     18
#define LMEM_PCCRMR_R6_WIDTH                     2
#define LMEM_PCCRMR_R6(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R6_SHIFT))&LMEM_PCCRMR_R6_MASK)
#define LMEM_PCCRMR_R5_MASK                      0x300000u
#define LMEM_PCCRMR_R5_SHIFT                     20
#define LMEM_PCCRMR_R5_WIDTH                     2
#define LMEM_PCCRMR_R5(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R5_SHIFT))&LMEM_PCCRMR_R5_MASK)
#define LMEM_PCCRMR_R4_MASK                      0xC00000u
#define LMEM_PCCRMR_R4_SHIFT                     22
#define LMEM_PCCRMR_R4_WIDTH                     2
#define LMEM_PCCRMR_R4(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R4_SHIFT))&LMEM_PCCRMR_R4_MASK)
#define LMEM_PCCRMR_R3_MASK                      0x3000000u
#define LMEM_PCCRMR_R3_SHIFT                     24
#define LMEM_PCCRMR_R3_WIDTH                     2
#define LMEM_PCCRMR_R3(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R3_SHIFT))&LMEM_PCCRMR_R3_MASK)
#define LMEM_PCCRMR_R2_MASK                      0xC000000u
#define LMEM_PCCRMR_R2_SHIFT                     26
#define LMEM_PCCRMR_R2_WIDTH                     2
#define LMEM_PCCRMR_R2(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R2_SHIFT))&LMEM_PCCRMR_R2_MASK)
#define LMEM_PCCRMR_R1_MASK                      0x30000000u
#define LMEM_PCCRMR_R1_SHIFT                     28
#define LMEM_PCCRMR_R1_WIDTH                     2
#define LMEM_PCCRMR_R1(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R1_SHIFT))&LMEM_PCCRMR_R1_MASK)
#define LMEM_PCCRMR_R0_MASK                      0xC0000000u
#define LMEM_PCCRMR_R0_SHIFT                     30
#define LMEM_PCCRMR_R0_WIDTH                     2
#define LMEM_PCCRMR_R0(x)                        (((uint32)(((uint32)(x))<<LMEM_PCCRMR_R0_SHIFT))&LMEM_PCCRMR_R0_MASK)

/*!
 * @}
 */ /* end of group LMEM_Register_Masks */


/* LMEM - Peripheral instance base addresses */
/** Peripheral LMEM base address */
#define LMEM_BASE                                (0xE0082000u)
/** Peripheral LMEM base pointer */
#define LMEM                                     ((LMEM_Type *)LMEM_BASE)
#define LMEM_BASE_PTR                            (LMEM)
/** Array initializer of LMEM peripheral base addresses */
#define LMEM_BASE_ADDRS                          { LMEM_BASE }
/** Array initializer of LMEM peripheral base pointers */
#define LMEM_BASE_PTRS                           { LMEM }

/* ----------------------------------------------------------------------------
   -- LMEM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LMEM_Register_Accessor_Macros LMEM - Register accessor macros
 * @{
 */


/* LMEM - Register instance definitions */
/* LMEM */
#define LMEM_PCCCR                               LMEM_PCCCR_REG(LMEM)
#define LMEM_PCCLCR                              LMEM_PCCLCR_REG(LMEM)
#define LMEM_PCCSAR                              LMEM_PCCSAR_REG(LMEM)
#define LMEM_PCCCVR                              LMEM_PCCCVR_REG(LMEM)
#define LMEM_PCCRMR                              LMEM_PCCRMR_REG(LMEM)

/*!
 * @}
 */ /* end of group LMEM_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group LMEM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LPI2C Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPI2C_Peripheral_Access_Layer LPI2C Peripheral Access Layer
 * @{
 */

/** LPI2C - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< Parameter Register, offset: 0x4 */
       uint8 RESERVED_0[8];
  __IO uint32 MCR;                                 /**< Master Control Register, offset: 0x10 */
  __IO uint32 MSR;                                 /**< Master Status Register, offset: 0x14 */
  __IO uint32 MIER;                                /**< Master Interrupt Enable Register, offset: 0x18 */
  __IO uint32 MDER;                                /**< Master DMA Enable Register, offset: 0x1C */
  __IO uint32 MCFGR0;                              /**< Master Configuration Register 0, offset: 0x20 */
  __IO uint32 MCFGR1;                              /**< Master Configuration Register 1, offset: 0x24 */
  __IO uint32 MCFGR2;                              /**< Master Configuration Register 2, offset: 0x28 */
  __IO uint32 MCFGR3;                              /**< Master Configuration Register 3, offset: 0x2C */
       uint8 RESERVED_1[16];
  __IO uint32 MDMR;                                /**< Master Data Match Register, offset: 0x40 */
       uint8 RESERVED_2[4];
  __IO uint32 MCCR0;                               /**< Master Clock Configuration Register 0, offset: 0x48 */
       uint8 RESERVED_3[4];
  __IO uint32 MCCR1;                               /**< Master Clock Configuration Register 1, offset: 0x50 */
       uint8 RESERVED_4[4];
  __IO uint32 MFCR;                                /**< Master FIFO Control Register, offset: 0x58 */
  __I  uint32 MFSR;                                /**< Master FIFO Status Register, offset: 0x5C */
  __O  uint32 MTDR;                                /**< Master Transmit Data Register, offset: 0x60 */
       uint8 RESERVED_5[12];
  __I  uint32 MRDR;                                /**< Master Receive Data Register, offset: 0x70 */
       uint8 RESERVED_6[156];
  __IO uint32 SCR;                                 /**< Slave Control Register, offset: 0x110 */
  __IO uint32 SSR;                                 /**< Slave Status Register, offset: 0x114 */
  __IO uint32 SIER;                                /**< Slave Interrupt Enable Register, offset: 0x118 */
  __IO uint32 SDER;                                /**< Slave DMA Enable Register, offset: 0x11C */
       uint8 RESERVED_7[4];
  __IO uint32 SCFGR1;                              /**< Slave Configuration Register 1, offset: 0x124 */
  __IO uint32 SCFGR2;                              /**< Slave Configuration Register 2, offset: 0x128 */
       uint8 RESERVED_8[20];
  __IO uint32 SAMR;                                /**< Slave Address Match Register, offset: 0x140 */
       uint8 RESERVED_9[12];
  __I  uint32 SASR;                                /**< Slave Address Status Register, offset: 0x150 */
  __IO uint32 STAR;                                /**< Slave Transmit ACK Register, offset: 0x154 */
       uint8 RESERVED_10[8];
  __O  uint32 STDR;                                /**< Slave Transmit Data Register, offset: 0x160 */
       uint8 RESERVED_11[12];
  __I  uint32 SRDR;                                /**< Slave Receive Data Register, offset: 0x170 */
} LPI2C_Type, *LPI2C_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LPI2C - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPI2C_Register_Accessor_Macros LPI2C - Register accessor macros
 * @{
 */


/* LPI2C - Register accessors */
#define LPI2C_VERID_REG(base)                    ((base)->VERID)
#define LPI2C_PARAM_REG(base)                    ((base)->PARAM)
#define LPI2C_MCR_REG(base)                      ((base)->MCR)
#define LPI2C_MSR_REG(base)                      ((base)->MSR)
#define LPI2C_MIER_REG(base)                     ((base)->MIER)
#define LPI2C_MDER_REG(base)                     ((base)->MDER)
#define LPI2C_MCFGR0_REG(base)                   ((base)->MCFGR0)
#define LPI2C_MCFGR1_REG(base)                   ((base)->MCFGR1)
#define LPI2C_MCFGR2_REG(base)                   ((base)->MCFGR2)
#define LPI2C_MCFGR3_REG(base)                   ((base)->MCFGR3)
#define LPI2C_MDMR_REG(base)                     ((base)->MDMR)
#define LPI2C_MCCR0_REG(base)                    ((base)->MCCR0)
#define LPI2C_MCCR1_REG(base)                    ((base)->MCCR1)
#define LPI2C_MFCR_REG(base)                     ((base)->MFCR)
#define LPI2C_MFSR_REG(base)                     ((base)->MFSR)
#define LPI2C_MTDR_REG(base)                     ((base)->MTDR)
#define LPI2C_MRDR_REG(base)                     ((base)->MRDR)
#define LPI2C_SCR_REG(base)                      ((base)->SCR)
#define LPI2C_SSR_REG(base)                      ((base)->SSR)
#define LPI2C_SIER_REG(base)                     ((base)->SIER)
#define LPI2C_SDER_REG(base)                     ((base)->SDER)
#define LPI2C_SCFGR1_REG(base)                   ((base)->SCFGR1)
#define LPI2C_SCFGR2_REG(base)                   ((base)->SCFGR2)
#define LPI2C_SAMR_REG(base)                     ((base)->SAMR)
#define LPI2C_SASR_REG(base)                     ((base)->SASR)
#define LPI2C_STAR_REG(base)                     ((base)->STAR)
#define LPI2C_STDR_REG(base)                     ((base)->STDR)
#define LPI2C_SRDR_REG(base)                     ((base)->SRDR)

/*!
 * @}
 */ /* end of group LPI2C_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LPI2C Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPI2C_Register_Masks LPI2C Register Masks
 * @{
 */

/* VERID Bit Fields */
#define LPI2C_VERID_FEATURE_MASK                 0xFFFFu
#define LPI2C_VERID_FEATURE_SHIFT                0
#define LPI2C_VERID_FEATURE_WIDTH                16
#define LPI2C_VERID_FEATURE(x)                   (((uint32)(((uint32)(x))<<LPI2C_VERID_FEATURE_SHIFT))&LPI2C_VERID_FEATURE_MASK)
#define LPI2C_VERID_MINOR_MASK                   0xFF0000u
#define LPI2C_VERID_MINOR_SHIFT                  16
#define LPI2C_VERID_MINOR_WIDTH                  8
#define LPI2C_VERID_MINOR(x)                     (((uint32)(((uint32)(x))<<LPI2C_VERID_MINOR_SHIFT))&LPI2C_VERID_MINOR_MASK)
#define LPI2C_VERID_MAJOR_MASK                   0xFF000000u
#define LPI2C_VERID_MAJOR_SHIFT                  24
#define LPI2C_VERID_MAJOR_WIDTH                  8
#define LPI2C_VERID_MAJOR(x)                     (((uint32)(((uint32)(x))<<LPI2C_VERID_MAJOR_SHIFT))&LPI2C_VERID_MAJOR_MASK)
/* PARAM Bit Fields */
#define LPI2C_PARAM_MTXFIFO_MASK                 0xFu
#define LPI2C_PARAM_MTXFIFO_SHIFT                0
#define LPI2C_PARAM_MTXFIFO_WIDTH                4
#define LPI2C_PARAM_MTXFIFO(x)                   (((uint32)(((uint32)(x))<<LPI2C_PARAM_MTXFIFO_SHIFT))&LPI2C_PARAM_MTXFIFO_MASK)
#define LPI2C_PARAM_MRXFIFO_MASK                 0xF00u
#define LPI2C_PARAM_MRXFIFO_SHIFT                8
#define LPI2C_PARAM_MRXFIFO_WIDTH                4
#define LPI2C_PARAM_MRXFIFO(x)                   (((uint32)(((uint32)(x))<<LPI2C_PARAM_MRXFIFO_SHIFT))&LPI2C_PARAM_MRXFIFO_MASK)
/* MCR Bit Fields */
#define LPI2C_MCR_MEN_MASK                       0x1u
#define LPI2C_MCR_MEN_SHIFT                      0
#define LPI2C_MCR_MEN_WIDTH                      1
#define LPI2C_MCR_MEN(x)                         (((uint32)(((uint32)(x))<<LPI2C_MCR_MEN_SHIFT))&LPI2C_MCR_MEN_MASK)
#define LPI2C_MCR_RST_MASK                       0x2u
#define LPI2C_MCR_RST_SHIFT                      1
#define LPI2C_MCR_RST_WIDTH                      1
#define LPI2C_MCR_RST(x)                         (((uint32)(((uint32)(x))<<LPI2C_MCR_RST_SHIFT))&LPI2C_MCR_RST_MASK)
#define LPI2C_MCR_DOZEN_MASK                     0x4u
#define LPI2C_MCR_DOZEN_SHIFT                    2
#define LPI2C_MCR_DOZEN_WIDTH                    1
#define LPI2C_MCR_DOZEN(x)                       (((uint32)(((uint32)(x))<<LPI2C_MCR_DOZEN_SHIFT))&LPI2C_MCR_DOZEN_MASK)
#define LPI2C_MCR_DBGEN_MASK                     0x8u
#define LPI2C_MCR_DBGEN_SHIFT                    3
#define LPI2C_MCR_DBGEN_WIDTH                    1
#define LPI2C_MCR_DBGEN(x)                       (((uint32)(((uint32)(x))<<LPI2C_MCR_DBGEN_SHIFT))&LPI2C_MCR_DBGEN_MASK)
#define LPI2C_MCR_RTF_MASK                       0x100u
#define LPI2C_MCR_RTF_SHIFT                      8
#define LPI2C_MCR_RTF_WIDTH                      1
#define LPI2C_MCR_RTF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MCR_RTF_SHIFT))&LPI2C_MCR_RTF_MASK)
#define LPI2C_MCR_RRF_MASK                       0x200u
#define LPI2C_MCR_RRF_SHIFT                      9
#define LPI2C_MCR_RRF_WIDTH                      1
#define LPI2C_MCR_RRF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MCR_RRF_SHIFT))&LPI2C_MCR_RRF_MASK)
/* MSR Bit Fields */
#define LPI2C_MSR_TDF_MASK                       0x1u
#define LPI2C_MSR_TDF_SHIFT                      0
#define LPI2C_MSR_TDF_WIDTH                      1
#define LPI2C_MSR_TDF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_TDF_SHIFT))&LPI2C_MSR_TDF_MASK)
#define LPI2C_MSR_RDF_MASK                       0x2u
#define LPI2C_MSR_RDF_SHIFT                      1
#define LPI2C_MSR_RDF_WIDTH                      1
#define LPI2C_MSR_RDF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_RDF_SHIFT))&LPI2C_MSR_RDF_MASK)
#define LPI2C_MSR_EPF_MASK                       0x100u
#define LPI2C_MSR_EPF_SHIFT                      8
#define LPI2C_MSR_EPF_WIDTH                      1
#define LPI2C_MSR_EPF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_EPF_SHIFT))&LPI2C_MSR_EPF_MASK)
#define LPI2C_MSR_SDF_MASK                       0x200u
#define LPI2C_MSR_SDF_SHIFT                      9
#define LPI2C_MSR_SDF_WIDTH                      1
#define LPI2C_MSR_SDF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_SDF_SHIFT))&LPI2C_MSR_SDF_MASK)
#define LPI2C_MSR_NDF_MASK                       0x400u
#define LPI2C_MSR_NDF_SHIFT                      10
#define LPI2C_MSR_NDF_WIDTH                      1
#define LPI2C_MSR_NDF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_NDF_SHIFT))&LPI2C_MSR_NDF_MASK)
#define LPI2C_MSR_ALF_MASK                       0x800u
#define LPI2C_MSR_ALF_SHIFT                      11
#define LPI2C_MSR_ALF_WIDTH                      1
#define LPI2C_MSR_ALF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_ALF_SHIFT))&LPI2C_MSR_ALF_MASK)
#define LPI2C_MSR_FEF_MASK                       0x1000u
#define LPI2C_MSR_FEF_SHIFT                      12
#define LPI2C_MSR_FEF_WIDTH                      1
#define LPI2C_MSR_FEF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_FEF_SHIFT))&LPI2C_MSR_FEF_MASK)
#define LPI2C_MSR_PLTF_MASK                      0x2000u
#define LPI2C_MSR_PLTF_SHIFT                     13
#define LPI2C_MSR_PLTF_WIDTH                     1
#define LPI2C_MSR_PLTF(x)                        (((uint32)(((uint32)(x))<<LPI2C_MSR_PLTF_SHIFT))&LPI2C_MSR_PLTF_MASK)
#define LPI2C_MSR_DMF_MASK                       0x4000u
#define LPI2C_MSR_DMF_SHIFT                      14
#define LPI2C_MSR_DMF_WIDTH                      1
#define LPI2C_MSR_DMF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_DMF_SHIFT))&LPI2C_MSR_DMF_MASK)
#define LPI2C_MSR_MBF_MASK                       0x1000000u
#define LPI2C_MSR_MBF_SHIFT                      24
#define LPI2C_MSR_MBF_WIDTH                      1
#define LPI2C_MSR_MBF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_MBF_SHIFT))&LPI2C_MSR_MBF_MASK)
#define LPI2C_MSR_BBF_MASK                       0x2000000u
#define LPI2C_MSR_BBF_SHIFT                      25
#define LPI2C_MSR_BBF_WIDTH                      1
#define LPI2C_MSR_BBF(x)                         (((uint32)(((uint32)(x))<<LPI2C_MSR_BBF_SHIFT))&LPI2C_MSR_BBF_MASK)
/* MIER Bit Fields */
#define LPI2C_MIER_TDIE_MASK                     0x1u
#define LPI2C_MIER_TDIE_SHIFT                    0
#define LPI2C_MIER_TDIE_WIDTH                    1
#define LPI2C_MIER_TDIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_TDIE_SHIFT))&LPI2C_MIER_TDIE_MASK)
#define LPI2C_MIER_RDIE_MASK                     0x2u
#define LPI2C_MIER_RDIE_SHIFT                    1
#define LPI2C_MIER_RDIE_WIDTH                    1
#define LPI2C_MIER_RDIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_RDIE_SHIFT))&LPI2C_MIER_RDIE_MASK)
#define LPI2C_MIER_EPIE_MASK                     0x100u
#define LPI2C_MIER_EPIE_SHIFT                    8
#define LPI2C_MIER_EPIE_WIDTH                    1
#define LPI2C_MIER_EPIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_EPIE_SHIFT))&LPI2C_MIER_EPIE_MASK)
#define LPI2C_MIER_SDIE_MASK                     0x200u
#define LPI2C_MIER_SDIE_SHIFT                    9
#define LPI2C_MIER_SDIE_WIDTH                    1
#define LPI2C_MIER_SDIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_SDIE_SHIFT))&LPI2C_MIER_SDIE_MASK)
#define LPI2C_MIER_NDIE_MASK                     0x400u
#define LPI2C_MIER_NDIE_SHIFT                    10
#define LPI2C_MIER_NDIE_WIDTH                    1
#define LPI2C_MIER_NDIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_NDIE_SHIFT))&LPI2C_MIER_NDIE_MASK)
#define LPI2C_MIER_ALIE_MASK                     0x800u
#define LPI2C_MIER_ALIE_SHIFT                    11
#define LPI2C_MIER_ALIE_WIDTH                    1
#define LPI2C_MIER_ALIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_ALIE_SHIFT))&LPI2C_MIER_ALIE_MASK)
#define LPI2C_MIER_FEIE_MASK                     0x1000u
#define LPI2C_MIER_FEIE_SHIFT                    12
#define LPI2C_MIER_FEIE_WIDTH                    1
#define LPI2C_MIER_FEIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_FEIE_SHIFT))&LPI2C_MIER_FEIE_MASK)
#define LPI2C_MIER_PLTIE_MASK                    0x2000u
#define LPI2C_MIER_PLTIE_SHIFT                   13
#define LPI2C_MIER_PLTIE_WIDTH                   1
#define LPI2C_MIER_PLTIE(x)                      (((uint32)(((uint32)(x))<<LPI2C_MIER_PLTIE_SHIFT))&LPI2C_MIER_PLTIE_MASK)
#define LPI2C_MIER_DMIE_MASK                     0x4000u
#define LPI2C_MIER_DMIE_SHIFT                    14
#define LPI2C_MIER_DMIE_WIDTH                    1
#define LPI2C_MIER_DMIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MIER_DMIE_SHIFT))&LPI2C_MIER_DMIE_MASK)
/* MDER Bit Fields */
#define LPI2C_MDER_TDDE_MASK                     0x1u
#define LPI2C_MDER_TDDE_SHIFT                    0
#define LPI2C_MDER_TDDE_WIDTH                    1
#define LPI2C_MDER_TDDE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MDER_TDDE_SHIFT))&LPI2C_MDER_TDDE_MASK)
#define LPI2C_MDER_RDDE_MASK                     0x2u
#define LPI2C_MDER_RDDE_SHIFT                    1
#define LPI2C_MDER_RDDE_WIDTH                    1
#define LPI2C_MDER_RDDE(x)                       (((uint32)(((uint32)(x))<<LPI2C_MDER_RDDE_SHIFT))&LPI2C_MDER_RDDE_MASK)
/* MCFGR0 Bit Fields */
#define LPI2C_MCFGR0_HREN_MASK                   0x1u
#define LPI2C_MCFGR0_HREN_SHIFT                  0
#define LPI2C_MCFGR0_HREN_WIDTH                  1
#define LPI2C_MCFGR0_HREN(x)                     (((uint32)(((uint32)(x))<<LPI2C_MCFGR0_HREN_SHIFT))&LPI2C_MCFGR0_HREN_MASK)
#define LPI2C_MCFGR0_HRPOL_MASK                  0x2u
#define LPI2C_MCFGR0_HRPOL_SHIFT                 1
#define LPI2C_MCFGR0_HRPOL_WIDTH                 1
#define LPI2C_MCFGR0_HRPOL(x)                    (((uint32)(((uint32)(x))<<LPI2C_MCFGR0_HRPOL_SHIFT))&LPI2C_MCFGR0_HRPOL_MASK)
#define LPI2C_MCFGR0_HRSEL_MASK                  0x4u
#define LPI2C_MCFGR0_HRSEL_SHIFT                 2
#define LPI2C_MCFGR0_HRSEL_WIDTH                 1
#define LPI2C_MCFGR0_HRSEL(x)                    (((uint32)(((uint32)(x))<<LPI2C_MCFGR0_HRSEL_SHIFT))&LPI2C_MCFGR0_HRSEL_MASK)
#define LPI2C_MCFGR0_CIRFIFO_MASK                0x100u
#define LPI2C_MCFGR0_CIRFIFO_SHIFT               8
#define LPI2C_MCFGR0_CIRFIFO_WIDTH               1
#define LPI2C_MCFGR0_CIRFIFO(x)                  (((uint32)(((uint32)(x))<<LPI2C_MCFGR0_CIRFIFO_SHIFT))&LPI2C_MCFGR0_CIRFIFO_MASK)
#define LPI2C_MCFGR0_RDMO_MASK                   0x200u
#define LPI2C_MCFGR0_RDMO_SHIFT                  9
#define LPI2C_MCFGR0_RDMO_WIDTH                  1
#define LPI2C_MCFGR0_RDMO(x)                     (((uint32)(((uint32)(x))<<LPI2C_MCFGR0_RDMO_SHIFT))&LPI2C_MCFGR0_RDMO_MASK)
/* MCFGR1 Bit Fields */
#define LPI2C_MCFGR1_PRESCALE_MASK               0x7u
#define LPI2C_MCFGR1_PRESCALE_SHIFT              0
#define LPI2C_MCFGR1_PRESCALE_WIDTH              3
#define LPI2C_MCFGR1_PRESCALE(x)                 (((uint32)(((uint32)(x))<<LPI2C_MCFGR1_PRESCALE_SHIFT))&LPI2C_MCFGR1_PRESCALE_MASK)
#define LPI2C_MCFGR1_AUTOSTOP_MASK               0x100u
#define LPI2C_MCFGR1_AUTOSTOP_SHIFT              8
#define LPI2C_MCFGR1_AUTOSTOP_WIDTH              1
#define LPI2C_MCFGR1_AUTOSTOP(x)                 (((uint32)(((uint32)(x))<<LPI2C_MCFGR1_AUTOSTOP_SHIFT))&LPI2C_MCFGR1_AUTOSTOP_MASK)
#define LPI2C_MCFGR1_IGNACK_MASK                 0x200u
#define LPI2C_MCFGR1_IGNACK_SHIFT                9
#define LPI2C_MCFGR1_IGNACK_WIDTH                1
#define LPI2C_MCFGR1_IGNACK(x)                   (((uint32)(((uint32)(x))<<LPI2C_MCFGR1_IGNACK_SHIFT))&LPI2C_MCFGR1_IGNACK_MASK)
#define LPI2C_MCFGR1_TIMECFG_MASK                0x400u
#define LPI2C_MCFGR1_TIMECFG_SHIFT               10
#define LPI2C_MCFGR1_TIMECFG_WIDTH               1
#define LPI2C_MCFGR1_TIMECFG(x)                  (((uint32)(((uint32)(x))<<LPI2C_MCFGR1_TIMECFG_SHIFT))&LPI2C_MCFGR1_TIMECFG_MASK)
#define LPI2C_MCFGR1_MATCFG_MASK                 0x70000u
#define LPI2C_MCFGR1_MATCFG_SHIFT                16
#define LPI2C_MCFGR1_MATCFG_WIDTH                3
#define LPI2C_MCFGR1_MATCFG(x)                   (((uint32)(((uint32)(x))<<LPI2C_MCFGR1_MATCFG_SHIFT))&LPI2C_MCFGR1_MATCFG_MASK)
#define LPI2C_MCFGR1_PINCFG_MASK                 0x7000000u
#define LPI2C_MCFGR1_PINCFG_SHIFT                24
#define LPI2C_MCFGR1_PINCFG_WIDTH                3
#define LPI2C_MCFGR1_PINCFG(x)                   (((uint32)(((uint32)(x))<<LPI2C_MCFGR1_PINCFG_SHIFT))&LPI2C_MCFGR1_PINCFG_MASK)
/* MCFGR2 Bit Fields */
#define LPI2C_MCFGR2_BUSIDLE_MASK                0xFFFu
#define LPI2C_MCFGR2_BUSIDLE_SHIFT               0
#define LPI2C_MCFGR2_BUSIDLE_WIDTH               12
#define LPI2C_MCFGR2_BUSIDLE(x)                  (((uint32)(((uint32)(x))<<LPI2C_MCFGR2_BUSIDLE_SHIFT))&LPI2C_MCFGR2_BUSIDLE_MASK)
#define LPI2C_MCFGR2_FILTSCL_MASK                0xF0000u
#define LPI2C_MCFGR2_FILTSCL_SHIFT               16
#define LPI2C_MCFGR2_FILTSCL_WIDTH               4
#define LPI2C_MCFGR2_FILTSCL(x)                  (((uint32)(((uint32)(x))<<LPI2C_MCFGR2_FILTSCL_SHIFT))&LPI2C_MCFGR2_FILTSCL_MASK)
#define LPI2C_MCFGR2_FILTSDA_MASK                0xF000000u
#define LPI2C_MCFGR2_FILTSDA_SHIFT               24
#define LPI2C_MCFGR2_FILTSDA_WIDTH               4
#define LPI2C_MCFGR2_FILTSDA(x)                  (((uint32)(((uint32)(x))<<LPI2C_MCFGR2_FILTSDA_SHIFT))&LPI2C_MCFGR2_FILTSDA_MASK)
/* MCFGR3 Bit Fields */
#define LPI2C_MCFGR3_PINLOW_MASK                 0xFFF00u
#define LPI2C_MCFGR3_PINLOW_SHIFT                8
#define LPI2C_MCFGR3_PINLOW_WIDTH                12
#define LPI2C_MCFGR3_PINLOW(x)                   (((uint32)(((uint32)(x))<<LPI2C_MCFGR3_PINLOW_SHIFT))&LPI2C_MCFGR3_PINLOW_MASK)
/* MDMR Bit Fields */
#define LPI2C_MDMR_MATCH0_MASK                   0xFFu
#define LPI2C_MDMR_MATCH0_SHIFT                  0
#define LPI2C_MDMR_MATCH0_WIDTH                  8
#define LPI2C_MDMR_MATCH0(x)                     (((uint32)(((uint32)(x))<<LPI2C_MDMR_MATCH0_SHIFT))&LPI2C_MDMR_MATCH0_MASK)
#define LPI2C_MDMR_MATCH1_MASK                   0xFF0000u
#define LPI2C_MDMR_MATCH1_SHIFT                  16
#define LPI2C_MDMR_MATCH1_WIDTH                  8
#define LPI2C_MDMR_MATCH1(x)                     (((uint32)(((uint32)(x))<<LPI2C_MDMR_MATCH1_SHIFT))&LPI2C_MDMR_MATCH1_MASK)
/* MCCR0 Bit Fields */
#define LPI2C_MCCR0_CLKLO_MASK                   0x3Fu
#define LPI2C_MCCR0_CLKLO_SHIFT                  0
#define LPI2C_MCCR0_CLKLO_WIDTH                  6
#define LPI2C_MCCR0_CLKLO(x)                     (((uint32)(((uint32)(x))<<LPI2C_MCCR0_CLKLO_SHIFT))&LPI2C_MCCR0_CLKLO_MASK)
#define LPI2C_MCCR0_CLKHI_MASK                   0x3F00u
#define LPI2C_MCCR0_CLKHI_SHIFT                  8
#define LPI2C_MCCR0_CLKHI_WIDTH                  6
#define LPI2C_MCCR0_CLKHI(x)                     (((uint32)(((uint32)(x))<<LPI2C_MCCR0_CLKHI_SHIFT))&LPI2C_MCCR0_CLKHI_MASK)
#define LPI2C_MCCR0_SETHOLD_MASK                 0x3F0000u
#define LPI2C_MCCR0_SETHOLD_SHIFT                16
#define LPI2C_MCCR0_SETHOLD_WIDTH                6
#define LPI2C_MCCR0_SETHOLD(x)                   (((uint32)(((uint32)(x))<<LPI2C_MCCR0_SETHOLD_SHIFT))&LPI2C_MCCR0_SETHOLD_MASK)
#define LPI2C_MCCR0_DATAVD_MASK                  0x3F000000u
#define LPI2C_MCCR0_DATAVD_SHIFT                 24
#define LPI2C_MCCR0_DATAVD_WIDTH                 6
#define LPI2C_MCCR0_DATAVD(x)                    (((uint32)(((uint32)(x))<<LPI2C_MCCR0_DATAVD_SHIFT))&LPI2C_MCCR0_DATAVD_MASK)
/* MCCR1 Bit Fields */
#define LPI2C_MCCR1_CLKLO_MASK                   0x3Fu
#define LPI2C_MCCR1_CLKLO_SHIFT                  0
#define LPI2C_MCCR1_CLKLO_WIDTH                  6
#define LPI2C_MCCR1_CLKLO(x)                     (((uint32)(((uint32)(x))<<LPI2C_MCCR1_CLKLO_SHIFT))&LPI2C_MCCR1_CLKLO_MASK)
#define LPI2C_MCCR1_CLKHI_MASK                   0x3F00u
#define LPI2C_MCCR1_CLKHI_SHIFT                  8
#define LPI2C_MCCR1_CLKHI_WIDTH                  6
#define LPI2C_MCCR1_CLKHI(x)                     (((uint32)(((uint32)(x))<<LPI2C_MCCR1_CLKHI_SHIFT))&LPI2C_MCCR1_CLKHI_MASK)
#define LPI2C_MCCR1_SETHOLD_MASK                 0x3F0000u
#define LPI2C_MCCR1_SETHOLD_SHIFT                16
#define LPI2C_MCCR1_SETHOLD_WIDTH                6
#define LPI2C_MCCR1_SETHOLD(x)                   (((uint32)(((uint32)(x))<<LPI2C_MCCR1_SETHOLD_SHIFT))&LPI2C_MCCR1_SETHOLD_MASK)
#define LPI2C_MCCR1_DATAVD_MASK                  0x3F000000u
#define LPI2C_MCCR1_DATAVD_SHIFT                 24
#define LPI2C_MCCR1_DATAVD_WIDTH                 6
#define LPI2C_MCCR1_DATAVD(x)                    (((uint32)(((uint32)(x))<<LPI2C_MCCR1_DATAVD_SHIFT))&LPI2C_MCCR1_DATAVD_MASK)
/* MFCR Bit Fields */
#define LPI2C_MFCR_TXWATER_MASK                  0xFFu
#define LPI2C_MFCR_TXWATER_SHIFT                 0
#define LPI2C_MFCR_TXWATER_WIDTH                 8
#define LPI2C_MFCR_TXWATER(x)                    (((uint32)(((uint32)(x))<<LPI2C_MFCR_TXWATER_SHIFT))&LPI2C_MFCR_TXWATER_MASK)
#define LPI2C_MFCR_RXWATER_MASK                  0xFF0000u
#define LPI2C_MFCR_RXWATER_SHIFT                 16
#define LPI2C_MFCR_RXWATER_WIDTH                 8
#define LPI2C_MFCR_RXWATER(x)                    (((uint32)(((uint32)(x))<<LPI2C_MFCR_RXWATER_SHIFT))&LPI2C_MFCR_RXWATER_MASK)
/* MFSR Bit Fields */
#define LPI2C_MFSR_TXCOUNT_MASK                  0xFFu
#define LPI2C_MFSR_TXCOUNT_SHIFT                 0
#define LPI2C_MFSR_TXCOUNT_WIDTH                 8
#define LPI2C_MFSR_TXCOUNT(x)                    (((uint32)(((uint32)(x))<<LPI2C_MFSR_TXCOUNT_SHIFT))&LPI2C_MFSR_TXCOUNT_MASK)
#define LPI2C_MFSR_RXCOUNT_MASK                  0xFF0000u
#define LPI2C_MFSR_RXCOUNT_SHIFT                 16
#define LPI2C_MFSR_RXCOUNT_WIDTH                 8
#define LPI2C_MFSR_RXCOUNT(x)                    (((uint32)(((uint32)(x))<<LPI2C_MFSR_RXCOUNT_SHIFT))&LPI2C_MFSR_RXCOUNT_MASK)
/* MTDR Bit Fields */
#define LPI2C_MTDR_DATA_MASK                     0xFFu
#define LPI2C_MTDR_DATA_SHIFT                    0
#define LPI2C_MTDR_DATA_WIDTH                    8
#define LPI2C_MTDR_DATA(x)                       (((uint32)(((uint32)(x))<<LPI2C_MTDR_DATA_SHIFT))&LPI2C_MTDR_DATA_MASK)
#define LPI2C_MTDR_CMD_MASK                      0x700u
#define LPI2C_MTDR_CMD_SHIFT                     8
#define LPI2C_MTDR_CMD_WIDTH                     3
#define LPI2C_MTDR_CMD(x)                        (((uint32)(((uint32)(x))<<LPI2C_MTDR_CMD_SHIFT))&LPI2C_MTDR_CMD_MASK)
/* MRDR Bit Fields */
#define LPI2C_MRDR_DATA_MASK                     0xFFu
#define LPI2C_MRDR_DATA_SHIFT                    0
#define LPI2C_MRDR_DATA_WIDTH                    8
#define LPI2C_MRDR_DATA(x)                       (((uint32)(((uint32)(x))<<LPI2C_MRDR_DATA_SHIFT))&LPI2C_MRDR_DATA_MASK)
#define LPI2C_MRDR_RXEMPTY_MASK                  0x4000u
#define LPI2C_MRDR_RXEMPTY_SHIFT                 14
#define LPI2C_MRDR_RXEMPTY_WIDTH                 1
#define LPI2C_MRDR_RXEMPTY(x)                    (((uint32)(((uint32)(x))<<LPI2C_MRDR_RXEMPTY_SHIFT))&LPI2C_MRDR_RXEMPTY_MASK)
/* SCR Bit Fields */
#define LPI2C_SCR_SEN_MASK                       0x1u
#define LPI2C_SCR_SEN_SHIFT                      0
#define LPI2C_SCR_SEN_WIDTH                      1
#define LPI2C_SCR_SEN(x)                         (((uint32)(((uint32)(x))<<LPI2C_SCR_SEN_SHIFT))&LPI2C_SCR_SEN_MASK)
#define LPI2C_SCR_RST_MASK                       0x2u
#define LPI2C_SCR_RST_SHIFT                      1
#define LPI2C_SCR_RST_WIDTH                      1
#define LPI2C_SCR_RST(x)                         (((uint32)(((uint32)(x))<<LPI2C_SCR_RST_SHIFT))&LPI2C_SCR_RST_MASK)
#define LPI2C_SCR_FILTEN_MASK                    0x10u
#define LPI2C_SCR_FILTEN_SHIFT                   4
#define LPI2C_SCR_FILTEN_WIDTH                   1
#define LPI2C_SCR_FILTEN(x)                      (((uint32)(((uint32)(x))<<LPI2C_SCR_FILTEN_SHIFT))&LPI2C_SCR_FILTEN_MASK)
#define LPI2C_SCR_FILTDZ_MASK                    0x20u
#define LPI2C_SCR_FILTDZ_SHIFT                   5
#define LPI2C_SCR_FILTDZ_WIDTH                   1
#define LPI2C_SCR_FILTDZ(x)                      (((uint32)(((uint32)(x))<<LPI2C_SCR_FILTDZ_SHIFT))&LPI2C_SCR_FILTDZ_MASK)
#define LPI2C_SCR_RTF_MASK                       0x100u
#define LPI2C_SCR_RTF_SHIFT                      8
#define LPI2C_SCR_RTF_WIDTH                      1
#define LPI2C_SCR_RTF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SCR_RTF_SHIFT))&LPI2C_SCR_RTF_MASK)
#define LPI2C_SCR_RRF_MASK                       0x200u
#define LPI2C_SCR_RRF_SHIFT                      9
#define LPI2C_SCR_RRF_WIDTH                      1
#define LPI2C_SCR_RRF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SCR_RRF_SHIFT))&LPI2C_SCR_RRF_MASK)
/* SSR Bit Fields */
#define LPI2C_SSR_TDF_MASK                       0x1u
#define LPI2C_SSR_TDF_SHIFT                      0
#define LPI2C_SSR_TDF_WIDTH                      1
#define LPI2C_SSR_TDF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_TDF_SHIFT))&LPI2C_SSR_TDF_MASK)
#define LPI2C_SSR_RDF_MASK                       0x2u
#define LPI2C_SSR_RDF_SHIFT                      1
#define LPI2C_SSR_RDF_WIDTH                      1
#define LPI2C_SSR_RDF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_RDF_SHIFT))&LPI2C_SSR_RDF_MASK)
#define LPI2C_SSR_AVF_MASK                       0x4u
#define LPI2C_SSR_AVF_SHIFT                      2
#define LPI2C_SSR_AVF_WIDTH                      1
#define LPI2C_SSR_AVF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_AVF_SHIFT))&LPI2C_SSR_AVF_MASK)
#define LPI2C_SSR_TAF_MASK                       0x8u
#define LPI2C_SSR_TAF_SHIFT                      3
#define LPI2C_SSR_TAF_WIDTH                      1
#define LPI2C_SSR_TAF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_TAF_SHIFT))&LPI2C_SSR_TAF_MASK)
#define LPI2C_SSR_RSF_MASK                       0x100u
#define LPI2C_SSR_RSF_SHIFT                      8
#define LPI2C_SSR_RSF_WIDTH                      1
#define LPI2C_SSR_RSF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_RSF_SHIFT))&LPI2C_SSR_RSF_MASK)
#define LPI2C_SSR_SDF_MASK                       0x200u
#define LPI2C_SSR_SDF_SHIFT                      9
#define LPI2C_SSR_SDF_WIDTH                      1
#define LPI2C_SSR_SDF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_SDF_SHIFT))&LPI2C_SSR_SDF_MASK)
#define LPI2C_SSR_BEF_MASK                       0x400u
#define LPI2C_SSR_BEF_SHIFT                      10
#define LPI2C_SSR_BEF_WIDTH                      1
#define LPI2C_SSR_BEF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_BEF_SHIFT))&LPI2C_SSR_BEF_MASK)
#define LPI2C_SSR_FEF_MASK                       0x800u
#define LPI2C_SSR_FEF_SHIFT                      11
#define LPI2C_SSR_FEF_WIDTH                      1
#define LPI2C_SSR_FEF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_FEF_SHIFT))&LPI2C_SSR_FEF_MASK)
#define LPI2C_SSR_AM0F_MASK                      0x1000u
#define LPI2C_SSR_AM0F_SHIFT                     12
#define LPI2C_SSR_AM0F_WIDTH                     1
#define LPI2C_SSR_AM0F(x)                        (((uint32)(((uint32)(x))<<LPI2C_SSR_AM0F_SHIFT))&LPI2C_SSR_AM0F_MASK)
#define LPI2C_SSR_AM1F_MASK                      0x2000u
#define LPI2C_SSR_AM1F_SHIFT                     13
#define LPI2C_SSR_AM1F_WIDTH                     1
#define LPI2C_SSR_AM1F(x)                        (((uint32)(((uint32)(x))<<LPI2C_SSR_AM1F_SHIFT))&LPI2C_SSR_AM1F_MASK)
#define LPI2C_SSR_GCF_MASK                       0x4000u
#define LPI2C_SSR_GCF_SHIFT                      14
#define LPI2C_SSR_GCF_WIDTH                      1
#define LPI2C_SSR_GCF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_GCF_SHIFT))&LPI2C_SSR_GCF_MASK)
#define LPI2C_SSR_SARF_MASK                      0x8000u
#define LPI2C_SSR_SARF_SHIFT                     15
#define LPI2C_SSR_SARF_WIDTH                     1
#define LPI2C_SSR_SARF(x)                        (((uint32)(((uint32)(x))<<LPI2C_SSR_SARF_SHIFT))&LPI2C_SSR_SARF_MASK)
#define LPI2C_SSR_SBF_MASK                       0x1000000u
#define LPI2C_SSR_SBF_SHIFT                      24
#define LPI2C_SSR_SBF_WIDTH                      1
#define LPI2C_SSR_SBF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_SBF_SHIFT))&LPI2C_SSR_SBF_MASK)
#define LPI2C_SSR_BBF_MASK                       0x2000000u
#define LPI2C_SSR_BBF_SHIFT                      25
#define LPI2C_SSR_BBF_WIDTH                      1
#define LPI2C_SSR_BBF(x)                         (((uint32)(((uint32)(x))<<LPI2C_SSR_BBF_SHIFT))&LPI2C_SSR_BBF_MASK)
/* SIER Bit Fields */
#define LPI2C_SIER_TDIE_MASK                     0x1u
#define LPI2C_SIER_TDIE_SHIFT                    0
#define LPI2C_SIER_TDIE_WIDTH                    1
#define LPI2C_SIER_TDIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_TDIE_SHIFT))&LPI2C_SIER_TDIE_MASK)
#define LPI2C_SIER_RDIE_MASK                     0x2u
#define LPI2C_SIER_RDIE_SHIFT                    1
#define LPI2C_SIER_RDIE_WIDTH                    1
#define LPI2C_SIER_RDIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_RDIE_SHIFT))&LPI2C_SIER_RDIE_MASK)
#define LPI2C_SIER_AVIE_MASK                     0x4u
#define LPI2C_SIER_AVIE_SHIFT                    2
#define LPI2C_SIER_AVIE_WIDTH                    1
#define LPI2C_SIER_AVIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_AVIE_SHIFT))&LPI2C_SIER_AVIE_MASK)
#define LPI2C_SIER_TAIE_MASK                     0x8u
#define LPI2C_SIER_TAIE_SHIFT                    3
#define LPI2C_SIER_TAIE_WIDTH                    1
#define LPI2C_SIER_TAIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_TAIE_SHIFT))&LPI2C_SIER_TAIE_MASK)
#define LPI2C_SIER_RSIE_MASK                     0x100u
#define LPI2C_SIER_RSIE_SHIFT                    8
#define LPI2C_SIER_RSIE_WIDTH                    1
#define LPI2C_SIER_RSIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_RSIE_SHIFT))&LPI2C_SIER_RSIE_MASK)
#define LPI2C_SIER_SDIE_MASK                     0x200u
#define LPI2C_SIER_SDIE_SHIFT                    9
#define LPI2C_SIER_SDIE_WIDTH                    1
#define LPI2C_SIER_SDIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_SDIE_SHIFT))&LPI2C_SIER_SDIE_MASK)
#define LPI2C_SIER_BEIE_MASK                     0x400u
#define LPI2C_SIER_BEIE_SHIFT                    10
#define LPI2C_SIER_BEIE_WIDTH                    1
#define LPI2C_SIER_BEIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_BEIE_SHIFT))&LPI2C_SIER_BEIE_MASK)
#define LPI2C_SIER_FEIE_MASK                     0x800u
#define LPI2C_SIER_FEIE_SHIFT                    11
#define LPI2C_SIER_FEIE_WIDTH                    1
#define LPI2C_SIER_FEIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_FEIE_SHIFT))&LPI2C_SIER_FEIE_MASK)
#define LPI2C_SIER_AM0IE_MASK                    0x1000u
#define LPI2C_SIER_AM0IE_SHIFT                   12
#define LPI2C_SIER_AM0IE_WIDTH                   1
#define LPI2C_SIER_AM0IE(x)                      (((uint32)(((uint32)(x))<<LPI2C_SIER_AM0IE_SHIFT))&LPI2C_SIER_AM0IE_MASK)
#define LPI2C_SIER_AM1F_MASK                     0x2000u
#define LPI2C_SIER_AM1F_SHIFT                    13
#define LPI2C_SIER_AM1F_WIDTH                    1
#define LPI2C_SIER_AM1F(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_AM1F_SHIFT))&LPI2C_SIER_AM1F_MASK)
#define LPI2C_SIER_GCIE_MASK                     0x4000u
#define LPI2C_SIER_GCIE_SHIFT                    14
#define LPI2C_SIER_GCIE_WIDTH                    1
#define LPI2C_SIER_GCIE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SIER_GCIE_SHIFT))&LPI2C_SIER_GCIE_MASK)
#define LPI2C_SIER_SARIE_MASK                    0x8000u
#define LPI2C_SIER_SARIE_SHIFT                   15
#define LPI2C_SIER_SARIE_WIDTH                   1
#define LPI2C_SIER_SARIE(x)                      (((uint32)(((uint32)(x))<<LPI2C_SIER_SARIE_SHIFT))&LPI2C_SIER_SARIE_MASK)
/* SDER Bit Fields */
#define LPI2C_SDER_TDDE_MASK                     0x1u
#define LPI2C_SDER_TDDE_SHIFT                    0
#define LPI2C_SDER_TDDE_WIDTH                    1
#define LPI2C_SDER_TDDE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SDER_TDDE_SHIFT))&LPI2C_SDER_TDDE_MASK)
#define LPI2C_SDER_RDDE_MASK                     0x2u
#define LPI2C_SDER_RDDE_SHIFT                    1
#define LPI2C_SDER_RDDE_WIDTH                    1
#define LPI2C_SDER_RDDE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SDER_RDDE_SHIFT))&LPI2C_SDER_RDDE_MASK)
#define LPI2C_SDER_AVDE_MASK                     0x4u
#define LPI2C_SDER_AVDE_SHIFT                    2
#define LPI2C_SDER_AVDE_WIDTH                    1
#define LPI2C_SDER_AVDE(x)                       (((uint32)(((uint32)(x))<<LPI2C_SDER_AVDE_SHIFT))&LPI2C_SDER_AVDE_MASK)
/* SCFGR1 Bit Fields */
#define LPI2C_SCFGR1_ADRSTALL_MASK               0x1u
#define LPI2C_SCFGR1_ADRSTALL_SHIFT              0
#define LPI2C_SCFGR1_ADRSTALL_WIDTH              1
#define LPI2C_SCFGR1_ADRSTALL(x)                 (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_ADRSTALL_SHIFT))&LPI2C_SCFGR1_ADRSTALL_MASK)
#define LPI2C_SCFGR1_RXSTALL_MASK                0x2u
#define LPI2C_SCFGR1_RXSTALL_SHIFT               1
#define LPI2C_SCFGR1_RXSTALL_WIDTH               1
#define LPI2C_SCFGR1_RXSTALL(x)                  (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_RXSTALL_SHIFT))&LPI2C_SCFGR1_RXSTALL_MASK)
#define LPI2C_SCFGR1_TXDSTALL_MASK               0x4u
#define LPI2C_SCFGR1_TXDSTALL_SHIFT              2
#define LPI2C_SCFGR1_TXDSTALL_WIDTH              1
#define LPI2C_SCFGR1_TXDSTALL(x)                 (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_TXDSTALL_SHIFT))&LPI2C_SCFGR1_TXDSTALL_MASK)
#define LPI2C_SCFGR1_ACKSTALL_MASK               0x8u
#define LPI2C_SCFGR1_ACKSTALL_SHIFT              3
#define LPI2C_SCFGR1_ACKSTALL_WIDTH              1
#define LPI2C_SCFGR1_ACKSTALL(x)                 (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_ACKSTALL_SHIFT))&LPI2C_SCFGR1_ACKSTALL_MASK)
#define LPI2C_SCFGR1_GCEN_MASK                   0x100u
#define LPI2C_SCFGR1_GCEN_SHIFT                  8
#define LPI2C_SCFGR1_GCEN_WIDTH                  1
#define LPI2C_SCFGR1_GCEN(x)                     (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_GCEN_SHIFT))&LPI2C_SCFGR1_GCEN_MASK)
#define LPI2C_SCFGR1_SAEN_MASK                   0x200u
#define LPI2C_SCFGR1_SAEN_SHIFT                  9
#define LPI2C_SCFGR1_SAEN_WIDTH                  1
#define LPI2C_SCFGR1_SAEN(x)                     (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_SAEN_SHIFT))&LPI2C_SCFGR1_SAEN_MASK)
#define LPI2C_SCFGR1_TXCFG_MASK                  0x400u
#define LPI2C_SCFGR1_TXCFG_SHIFT                 10
#define LPI2C_SCFGR1_TXCFG_WIDTH                 1
#define LPI2C_SCFGR1_TXCFG(x)                    (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_TXCFG_SHIFT))&LPI2C_SCFGR1_TXCFG_MASK)
#define LPI2C_SCFGR1_RXCFG_MASK                  0x800u
#define LPI2C_SCFGR1_RXCFG_SHIFT                 11
#define LPI2C_SCFGR1_RXCFG_WIDTH                 1
#define LPI2C_SCFGR1_RXCFG(x)                    (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_RXCFG_SHIFT))&LPI2C_SCFGR1_RXCFG_MASK)
#define LPI2C_SCFGR1_IGNACK_MASK                 0x1000u
#define LPI2C_SCFGR1_IGNACK_SHIFT                12
#define LPI2C_SCFGR1_IGNACK_WIDTH                1
#define LPI2C_SCFGR1_IGNACK(x)                   (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_IGNACK_SHIFT))&LPI2C_SCFGR1_IGNACK_MASK)
#define LPI2C_SCFGR1_HSMEN_MASK                  0x2000u
#define LPI2C_SCFGR1_HSMEN_SHIFT                 13
#define LPI2C_SCFGR1_HSMEN_WIDTH                 1
#define LPI2C_SCFGR1_HSMEN(x)                    (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_HSMEN_SHIFT))&LPI2C_SCFGR1_HSMEN_MASK)
#define LPI2C_SCFGR1_ADDRCFG_MASK                0x70000u
#define LPI2C_SCFGR1_ADDRCFG_SHIFT               16
#define LPI2C_SCFGR1_ADDRCFG_WIDTH               3
#define LPI2C_SCFGR1_ADDRCFG(x)                  (((uint32)(((uint32)(x))<<LPI2C_SCFGR1_ADDRCFG_SHIFT))&LPI2C_SCFGR1_ADDRCFG_MASK)
/* SCFGR2 Bit Fields */
#define LPI2C_SCFGR2_CLKHOLD_MASK                0xFu
#define LPI2C_SCFGR2_CLKHOLD_SHIFT               0
#define LPI2C_SCFGR2_CLKHOLD_WIDTH               4
#define LPI2C_SCFGR2_CLKHOLD(x)                  (((uint32)(((uint32)(x))<<LPI2C_SCFGR2_CLKHOLD_SHIFT))&LPI2C_SCFGR2_CLKHOLD_MASK)
#define LPI2C_SCFGR2_DATAVD_MASK                 0x3F00u
#define LPI2C_SCFGR2_DATAVD_SHIFT                8
#define LPI2C_SCFGR2_DATAVD_WIDTH                6
#define LPI2C_SCFGR2_DATAVD(x)                   (((uint32)(((uint32)(x))<<LPI2C_SCFGR2_DATAVD_SHIFT))&LPI2C_SCFGR2_DATAVD_MASK)
#define LPI2C_SCFGR2_FILTSCL_MASK                0xF0000u
#define LPI2C_SCFGR2_FILTSCL_SHIFT               16
#define LPI2C_SCFGR2_FILTSCL_WIDTH               4
#define LPI2C_SCFGR2_FILTSCL(x)                  (((uint32)(((uint32)(x))<<LPI2C_SCFGR2_FILTSCL_SHIFT))&LPI2C_SCFGR2_FILTSCL_MASK)
#define LPI2C_SCFGR2_FILTSDA_MASK                0xF000000u
#define LPI2C_SCFGR2_FILTSDA_SHIFT               24
#define LPI2C_SCFGR2_FILTSDA_WIDTH               4
#define LPI2C_SCFGR2_FILTSDA(x)                  (((uint32)(((uint32)(x))<<LPI2C_SCFGR2_FILTSDA_SHIFT))&LPI2C_SCFGR2_FILTSDA_MASK)
/* SAMR Bit Fields */
#define LPI2C_SAMR_ADDR0_MASK                    0x7FEu
#define LPI2C_SAMR_ADDR0_SHIFT                   1
#define LPI2C_SAMR_ADDR0_WIDTH                   10
#define LPI2C_SAMR_ADDR0(x)                      (((uint32)(((uint32)(x))<<LPI2C_SAMR_ADDR0_SHIFT))&LPI2C_SAMR_ADDR0_MASK)
#define LPI2C_SAMR_ADDR1_MASK                    0x7FE0000u
#define LPI2C_SAMR_ADDR1_SHIFT                   17
#define LPI2C_SAMR_ADDR1_WIDTH                   10
#define LPI2C_SAMR_ADDR1(x)                      (((uint32)(((uint32)(x))<<LPI2C_SAMR_ADDR1_SHIFT))&LPI2C_SAMR_ADDR1_MASK)
/* SASR Bit Fields */
#define LPI2C_SASR_RADDR_MASK                    0x7FFu
#define LPI2C_SASR_RADDR_SHIFT                   0
#define LPI2C_SASR_RADDR_WIDTH                   11
#define LPI2C_SASR_RADDR(x)                      (((uint32)(((uint32)(x))<<LPI2C_SASR_RADDR_SHIFT))&LPI2C_SASR_RADDR_MASK)
#define LPI2C_SASR_ANV_MASK                      0x4000u
#define LPI2C_SASR_ANV_SHIFT                     14
#define LPI2C_SASR_ANV_WIDTH                     1
#define LPI2C_SASR_ANV(x)                        (((uint32)(((uint32)(x))<<LPI2C_SASR_ANV_SHIFT))&LPI2C_SASR_ANV_MASK)
/* STAR Bit Fields */
#define LPI2C_STAR_TXNACK_MASK                   0x1u
#define LPI2C_STAR_TXNACK_SHIFT                  0
#define LPI2C_STAR_TXNACK_WIDTH                  1
#define LPI2C_STAR_TXNACK(x)                     (((uint32)(((uint32)(x))<<LPI2C_STAR_TXNACK_SHIFT))&LPI2C_STAR_TXNACK_MASK)
/* STDR Bit Fields */
#define LPI2C_STDR_DATA_MASK                     0xFFu
#define LPI2C_STDR_DATA_SHIFT                    0
#define LPI2C_STDR_DATA_WIDTH                    8
#define LPI2C_STDR_DATA(x)                       (((uint32)(((uint32)(x))<<LPI2C_STDR_DATA_SHIFT))&LPI2C_STDR_DATA_MASK)
/* SRDR Bit Fields */
#define LPI2C_SRDR_DATA_MASK                     0xFFu
#define LPI2C_SRDR_DATA_SHIFT                    0
#define LPI2C_SRDR_DATA_WIDTH                    8
#define LPI2C_SRDR_DATA(x)                       (((uint32)(((uint32)(x))<<LPI2C_SRDR_DATA_SHIFT))&LPI2C_SRDR_DATA_MASK)
#define LPI2C_SRDR_RXEMPTY_MASK                  0x4000u
#define LPI2C_SRDR_RXEMPTY_SHIFT                 14
#define LPI2C_SRDR_RXEMPTY_WIDTH                 1
#define LPI2C_SRDR_RXEMPTY(x)                    (((uint32)(((uint32)(x))<<LPI2C_SRDR_RXEMPTY_SHIFT))&LPI2C_SRDR_RXEMPTY_MASK)
#define LPI2C_SRDR_SOF_MASK                      0x8000u
#define LPI2C_SRDR_SOF_SHIFT                     15
#define LPI2C_SRDR_SOF_WIDTH                     1
#define LPI2C_SRDR_SOF(x)                        (((uint32)(((uint32)(x))<<LPI2C_SRDR_SOF_SHIFT))&LPI2C_SRDR_SOF_MASK)

/*!
 * @}
 */ /* end of group LPI2C_Register_Masks */


/* LPI2C - Peripheral instance base addresses */
/** Peripheral LPI2C0 base address */
#define LPI2C0_BASE                              (0x40066000u)
/** Peripheral LPI2C0 base pointer */
#define LPI2C0                                   ((LPI2C_Type *)LPI2C0_BASE)
#define LPI2C0_BASE_PTR                          (LPI2C0)
/** Peripheral LPI2C1 base address */
#define LPI2C1_BASE                              (0x40067000u)
/** Peripheral LPI2C1 base pointer */
#define LPI2C1                                   ((LPI2C_Type *)LPI2C1_BASE)
#define LPI2C1_BASE_PTR                          (LPI2C1)
/** Array initializer of LPI2C peripheral base addresses */
#define LPI2C_BASE_ADDRS                         { LPI2C0_BASE, LPI2C1_BASE }
/** Array initializer of LPI2C peripheral base pointers */
#define LPI2C_BASE_PTRS                          { LPI2C0, LPI2C1 }

/* ----------------------------------------------------------------------------
   -- LPI2C - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPI2C_Register_Accessor_Macros LPI2C - Register accessor macros
 * @{
 */


/* LPI2C - Register instance definitions */
/* LPI2C0 */
#define LPI2C0_VERID                             LPI2C_VERID_REG(LPI2C0)
#define LPI2C0_PARAM                             LPI2C_PARAM_REG(LPI2C0)
#define LPI2C0_MCR                               LPI2C_MCR_REG(LPI2C0)
#define LPI2C0_MSR                               LPI2C_MSR_REG(LPI2C0)
#define LPI2C0_MIER                              LPI2C_MIER_REG(LPI2C0)
#define LPI2C0_MDER                              LPI2C_MDER_REG(LPI2C0)
#define LPI2C0_MCFGR0                            LPI2C_MCFGR0_REG(LPI2C0)
#define LPI2C0_MCFGR1                            LPI2C_MCFGR1_REG(LPI2C0)
#define LPI2C0_MCFGR2                            LPI2C_MCFGR2_REG(LPI2C0)
#define LPI2C0_MCFGR3                            LPI2C_MCFGR3_REG(LPI2C0)
#define LPI2C0_MDMR                              LPI2C_MDMR_REG(LPI2C0)
#define LPI2C0_MCCR0                             LPI2C_MCCR0_REG(LPI2C0)
#define LPI2C0_MCCR1                             LPI2C_MCCR1_REG(LPI2C0)
#define LPI2C0_MFCR                              LPI2C_MFCR_REG(LPI2C0)
#define LPI2C0_MFSR                              LPI2C_MFSR_REG(LPI2C0)
#define LPI2C0_MTDR                              LPI2C_MTDR_REG(LPI2C0)
#define LPI2C0_MRDR                              LPI2C_MRDR_REG(LPI2C0)
#define LPI2C0_SCR                               LPI2C_SCR_REG(LPI2C0)
#define LPI2C0_SSR                               LPI2C_SSR_REG(LPI2C0)
#define LPI2C0_SIER                              LPI2C_SIER_REG(LPI2C0)
#define LPI2C0_SDER                              LPI2C_SDER_REG(LPI2C0)
#define LPI2C0_SCFGR1                            LPI2C_SCFGR1_REG(LPI2C0)
#define LPI2C0_SCFGR2                            LPI2C_SCFGR2_REG(LPI2C0)
#define LPI2C0_SAMR                              LPI2C_SAMR_REG(LPI2C0)
#define LPI2C0_SASR                              LPI2C_SASR_REG(LPI2C0)
#define LPI2C0_STAR                              LPI2C_STAR_REG(LPI2C0)
#define LPI2C0_STDR                              LPI2C_STDR_REG(LPI2C0)
#define LPI2C0_SRDR                              LPI2C_SRDR_REG(LPI2C0)
/* LPI2C1 */
#define LPI2C1_VERID                             LPI2C_VERID_REG(LPI2C1)
#define LPI2C1_PARAM                             LPI2C_PARAM_REG(LPI2C1)
#define LPI2C1_MCR                               LPI2C_MCR_REG(LPI2C1)
#define LPI2C1_MSR                               LPI2C_MSR_REG(LPI2C1)
#define LPI2C1_MIER                              LPI2C_MIER_REG(LPI2C1)
#define LPI2C1_MDER                              LPI2C_MDER_REG(LPI2C1)
#define LPI2C1_MCFGR0                            LPI2C_MCFGR0_REG(LPI2C1)
#define LPI2C1_MCFGR1                            LPI2C_MCFGR1_REG(LPI2C1)
#define LPI2C1_MCFGR2                            LPI2C_MCFGR2_REG(LPI2C1)
#define LPI2C1_MCFGR3                            LPI2C_MCFGR3_REG(LPI2C1)
#define LPI2C1_MDMR                              LPI2C_MDMR_REG(LPI2C1)
#define LPI2C1_MCCR0                             LPI2C_MCCR0_REG(LPI2C1)
#define LPI2C1_MCCR1                             LPI2C_MCCR1_REG(LPI2C1)
#define LPI2C1_MFCR                              LPI2C_MFCR_REG(LPI2C1)
#define LPI2C1_MFSR                              LPI2C_MFSR_REG(LPI2C1)
#define LPI2C1_MTDR                              LPI2C_MTDR_REG(LPI2C1)
#define LPI2C1_MRDR                              LPI2C_MRDR_REG(LPI2C1)
#define LPI2C1_SCR                               LPI2C_SCR_REG(LPI2C1)
#define LPI2C1_SSR                               LPI2C_SSR_REG(LPI2C1)
#define LPI2C1_SIER                              LPI2C_SIER_REG(LPI2C1)
#define LPI2C1_SDER                              LPI2C_SDER_REG(LPI2C1)
#define LPI2C1_SCFGR1                            LPI2C_SCFGR1_REG(LPI2C1)
#define LPI2C1_SCFGR2                            LPI2C_SCFGR2_REG(LPI2C1)
#define LPI2C1_SAMR                              LPI2C_SAMR_REG(LPI2C1)
#define LPI2C1_SASR                              LPI2C_SASR_REG(LPI2C1)
#define LPI2C1_STAR                              LPI2C_STAR_REG(LPI2C1)
#define LPI2C1_STDR                              LPI2C_STDR_REG(LPI2C1)
#define LPI2C1_SRDR                              LPI2C_SRDR_REG(LPI2C1)

/*!
 * @}
 */ /* end of group LPI2C_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group LPI2C_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LPIT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPIT_Peripheral_Access_Layer LPIT Peripheral Access Layer
 * @{
 */

/** LPIT - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< Parameter Register, offset: 0x4 */
  __IO uint32 MCR;                                 /**< Module Control Register, offset: 0x8 */
  __IO uint32 MSR;                                 /**< Module Status Register, offset: 0xC */
  __IO uint32 MIER;                                /**< Module Interrupt Enable Register, offset: 0x10 */
  __IO uint32 SETTEN;                              /**< Set Timer Enable Register, offset: 0x14 */
  __IO uint32 CLRTEN;                              /**< Clear Timer Enable Register, offset: 0x18 */
  __I  uint32 RSVD;                                /**< Reserved Register, offset: 0x1C */
  __IO uint32 TVAL0;                               /**< Timer Value Register, offset: 0x20 */
  __I  uint32 CVAL0;                               /**< Current Timer Value, offset: 0x24 */
  __IO uint32 TCTRL0;                              /**< Timer Control Register, offset: 0x28 */
  __I  uint32 RFU0;                                /**< Reserved for Future Use, offset: 0x2C */
  __IO uint32 TVAL1;                               /**< Timer Value Register, offset: 0x30 */
  __I  uint32 CVAL1;                               /**< Current Timer Value, offset: 0x34 */
  __IO uint32 TCTRL1;                              /**< Timer Control Register, offset: 0x38 */
  __I  uint32 RFU1;                                /**< Reserved for Future Use, offset: 0x3C */
  __IO uint32 TVAL2;                               /**< Timer Value Register, offset: 0x40 */
  __I  uint32 CVAL2;                               /**< Current Timer Value, offset: 0x44 */
  __IO uint32 TCTRL2;                              /**< Timer Control Register, offset: 0x48 */
  __I  uint32 RFU2;                                /**< Reserved for Future Use, offset: 0x4C */
  __IO uint32 TVAL3;                               /**< Timer Value Register, offset: 0x50 */
  __I  uint32 CVAL3;                               /**< Current Timer Value, offset: 0x54 */
  __IO uint32 TCTRL3;                              /**< Timer Control Register, offset: 0x58 */
  __I  uint32 RFU3;                                /**< Reserved for Future Use, offset: 0x5C */
} LPIT_Type, *LPIT_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LPIT - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPIT_Register_Accessor_Macros LPIT - Register accessor macros
 * @{
 */


/* LPIT - Register accessors */
#define LPIT_VERID_REG(base)                     ((base)->VERID)
#define LPIT_PARAM_REG(base)                     ((base)->PARAM)
#define LPIT_MCR_REG(base)                       ((base)->MCR)
#define LPIT_MSR_REG(base)                       ((base)->MSR)
#define LPIT_MIER_REG(base)                      ((base)->MIER)
#define LPIT_SETTEN_REG(base)                    ((base)->SETTEN)
#define LPIT_CLRTEN_REG(base)                    ((base)->CLRTEN)
#define LPIT_RSVD_REG(base)                      ((base)->RSVD)
#define LPIT_TVAL0_REG(base)                     ((base)->TVAL0)
#define LPIT_CVAL0_REG(base)                     ((base)->CVAL0)
#define LPIT_TCTRL0_REG(base)                    ((base)->TCTRL0)
#define LPIT_RFU0_REG(base)                      ((base)->RFU0)
#define LPIT_TVAL1_REG(base)                     ((base)->TVAL1)
#define LPIT_CVAL1_REG(base)                     ((base)->CVAL1)
#define LPIT_TCTRL1_REG(base)                    ((base)->TCTRL1)
#define LPIT_RFU1_REG(base)                      ((base)->RFU1)
#define LPIT_TVAL2_REG(base)                     ((base)->TVAL2)
#define LPIT_CVAL2_REG(base)                     ((base)->CVAL2)
#define LPIT_TCTRL2_REG(base)                    ((base)->TCTRL2)
#define LPIT_RFU2_REG(base)                      ((base)->RFU2)
#define LPIT_TVAL3_REG(base)                     ((base)->TVAL3)
#define LPIT_CVAL3_REG(base)                     ((base)->CVAL3)
#define LPIT_TCTRL3_REG(base)                    ((base)->TCTRL3)
#define LPIT_RFU3_REG(base)                      ((base)->RFU3)

/*!
 * @}
 */ /* end of group LPIT_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LPIT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPIT_Register_Masks LPIT Register Masks
 * @{
 */

/* VERID Bit Fields */
#define LPIT_VERID_FEATURE_MASK                  0xFFFFu
#define LPIT_VERID_FEATURE_SHIFT                 0
#define LPIT_VERID_FEATURE_WIDTH                 16
#define LPIT_VERID_FEATURE(x)                    (((uint32)(((uint32)(x))<<LPIT_VERID_FEATURE_SHIFT))&LPIT_VERID_FEATURE_MASK)
#define LPIT_VERID_MINOR_MASK                    0xFF0000u
#define LPIT_VERID_MINOR_SHIFT                   16
#define LPIT_VERID_MINOR_WIDTH                   8
#define LPIT_VERID_MINOR(x)                      (((uint32)(((uint32)(x))<<LPIT_VERID_MINOR_SHIFT))&LPIT_VERID_MINOR_MASK)
#define LPIT_VERID_MAJOR_MASK                    0xFF000000u
#define LPIT_VERID_MAJOR_SHIFT                   24
#define LPIT_VERID_MAJOR_WIDTH                   8
#define LPIT_VERID_MAJOR(x)                      (((uint32)(((uint32)(x))<<LPIT_VERID_MAJOR_SHIFT))&LPIT_VERID_MAJOR_MASK)
/* PARAM Bit Fields */
#define LPIT_PARAM_CHANNEL_MASK                  0xFFu
#define LPIT_PARAM_CHANNEL_SHIFT                 0
#define LPIT_PARAM_CHANNEL_WIDTH                 8
#define LPIT_PARAM_CHANNEL(x)                    (((uint32)(((uint32)(x))<<LPIT_PARAM_CHANNEL_SHIFT))&LPIT_PARAM_CHANNEL_MASK)
#define LPIT_PARAM_EXT_TRIG_MASK                 0xFF00u
#define LPIT_PARAM_EXT_TRIG_SHIFT                8
#define LPIT_PARAM_EXT_TRIG_WIDTH                8
#define LPIT_PARAM_EXT_TRIG(x)                   (((uint32)(((uint32)(x))<<LPIT_PARAM_EXT_TRIG_SHIFT))&LPIT_PARAM_EXT_TRIG_MASK)
/* MCR Bit Fields */
#define LPIT_MCR_M_CEN_MASK                      0x1u
#define LPIT_MCR_M_CEN_SHIFT                     0
#define LPIT_MCR_M_CEN_WIDTH                     1
#define LPIT_MCR_M_CEN(x)                        (((uint32)(((uint32)(x))<<LPIT_MCR_M_CEN_SHIFT))&LPIT_MCR_M_CEN_MASK)
#define LPIT_MCR_SW_RST_MASK                     0x2u
#define LPIT_MCR_SW_RST_SHIFT                    1
#define LPIT_MCR_SW_RST_WIDTH                    1
#define LPIT_MCR_SW_RST(x)                       (((uint32)(((uint32)(x))<<LPIT_MCR_SW_RST_SHIFT))&LPIT_MCR_SW_RST_MASK)
#define LPIT_MCR_DOZE_EN_MASK                    0x4u
#define LPIT_MCR_DOZE_EN_SHIFT                   2
#define LPIT_MCR_DOZE_EN_WIDTH                   1
#define LPIT_MCR_DOZE_EN(x)                      (((uint32)(((uint32)(x))<<LPIT_MCR_DOZE_EN_SHIFT))&LPIT_MCR_DOZE_EN_MASK)
#define LPIT_MCR_DBG_EN_MASK                     0x8u
#define LPIT_MCR_DBG_EN_SHIFT                    3
#define LPIT_MCR_DBG_EN_WIDTH                    1
#define LPIT_MCR_DBG_EN(x)                       (((uint32)(((uint32)(x))<<LPIT_MCR_DBG_EN_SHIFT))&LPIT_MCR_DBG_EN_MASK)
/* MSR Bit Fields */
#define LPIT_MSR_TIF0_MASK                       0x1u
#define LPIT_MSR_TIF0_SHIFT                      0
#define LPIT_MSR_TIF0_WIDTH                      1
#define LPIT_MSR_TIF0(x)                         (((uint32)(((uint32)(x))<<LPIT_MSR_TIF0_SHIFT))&LPIT_MSR_TIF0_MASK)
#define LPIT_MSR_TIF1_MASK                       0x2u
#define LPIT_MSR_TIF1_SHIFT                      1
#define LPIT_MSR_TIF1_WIDTH                      1
#define LPIT_MSR_TIF1(x)                         (((uint32)(((uint32)(x))<<LPIT_MSR_TIF1_SHIFT))&LPIT_MSR_TIF1_MASK)
#define LPIT_MSR_TIF2_MASK                       0x4u
#define LPIT_MSR_TIF2_SHIFT                      2
#define LPIT_MSR_TIF2_WIDTH                      1
#define LPIT_MSR_TIF2(x)                         (((uint32)(((uint32)(x))<<LPIT_MSR_TIF2_SHIFT))&LPIT_MSR_TIF2_MASK)
#define LPIT_MSR_TIF3_MASK                       0x8u
#define LPIT_MSR_TIF3_SHIFT                      3
#define LPIT_MSR_TIF3_WIDTH                      1
#define LPIT_MSR_TIF3(x)                         (((uint32)(((uint32)(x))<<LPIT_MSR_TIF3_SHIFT))&LPIT_MSR_TIF3_MASK)
/* MIER Bit Fields */
#define LPIT_MIER_TIE0_MASK                      0x1u
#define LPIT_MIER_TIE0_SHIFT                     0
#define LPIT_MIER_TIE0_WIDTH                     1
#define LPIT_MIER_TIE0(x)                        (((uint32)(((uint32)(x))<<LPIT_MIER_TIE0_SHIFT))&LPIT_MIER_TIE0_MASK)
#define LPIT_MIER_TIE1_MASK                      0x2u
#define LPIT_MIER_TIE1_SHIFT                     1
#define LPIT_MIER_TIE1_WIDTH                     1
#define LPIT_MIER_TIE1(x)                        (((uint32)(((uint32)(x))<<LPIT_MIER_TIE1_SHIFT))&LPIT_MIER_TIE1_MASK)
#define LPIT_MIER_TIE2_MASK                      0x4u
#define LPIT_MIER_TIE2_SHIFT                     2
#define LPIT_MIER_TIE2_WIDTH                     1
#define LPIT_MIER_TIE2(x)                        (((uint32)(((uint32)(x))<<LPIT_MIER_TIE2_SHIFT))&LPIT_MIER_TIE2_MASK)
#define LPIT_MIER_TIE3_MASK                      0x8u
#define LPIT_MIER_TIE3_SHIFT                     3
#define LPIT_MIER_TIE3_WIDTH                     1
#define LPIT_MIER_TIE3(x)                        (((uint32)(((uint32)(x))<<LPIT_MIER_TIE3_SHIFT))&LPIT_MIER_TIE3_MASK)
/* SETTEN Bit Fields */
#define LPIT_SETTEN_SET_T_EN_0_MASK              0x1u
#define LPIT_SETTEN_SET_T_EN_0_SHIFT             0
#define LPIT_SETTEN_SET_T_EN_0_WIDTH             1
#define LPIT_SETTEN_SET_T_EN_0(x)                (((uint32)(((uint32)(x))<<LPIT_SETTEN_SET_T_EN_0_SHIFT))&LPIT_SETTEN_SET_T_EN_0_MASK)
#define LPIT_SETTEN_SET_T_EN_1_MASK              0x2u
#define LPIT_SETTEN_SET_T_EN_1_SHIFT             1
#define LPIT_SETTEN_SET_T_EN_1_WIDTH             1
#define LPIT_SETTEN_SET_T_EN_1(x)                (((uint32)(((uint32)(x))<<LPIT_SETTEN_SET_T_EN_1_SHIFT))&LPIT_SETTEN_SET_T_EN_1_MASK)
#define LPIT_SETTEN_SET_T_EN_2_MASK              0x4u
#define LPIT_SETTEN_SET_T_EN_2_SHIFT             2
#define LPIT_SETTEN_SET_T_EN_2_WIDTH             1
#define LPIT_SETTEN_SET_T_EN_2(x)                (((uint32)(((uint32)(x))<<LPIT_SETTEN_SET_T_EN_2_SHIFT))&LPIT_SETTEN_SET_T_EN_2_MASK)
#define LPIT_SETTEN_SET_T_EN_3_MASK              0x8u
#define LPIT_SETTEN_SET_T_EN_3_SHIFT             3
#define LPIT_SETTEN_SET_T_EN_3_WIDTH             1
#define LPIT_SETTEN_SET_T_EN_3(x)                (((uint32)(((uint32)(x))<<LPIT_SETTEN_SET_T_EN_3_SHIFT))&LPIT_SETTEN_SET_T_EN_3_MASK)
/* CLRTEN Bit Fields */
#define LPIT_CLRTEN_CLR_T_EN_0_MASK              0x1u
#define LPIT_CLRTEN_CLR_T_EN_0_SHIFT             0
#define LPIT_CLRTEN_CLR_T_EN_0_WIDTH             1
#define LPIT_CLRTEN_CLR_T_EN_0(x)                (((uint32)(((uint32)(x))<<LPIT_CLRTEN_CLR_T_EN_0_SHIFT))&LPIT_CLRTEN_CLR_T_EN_0_MASK)
#define LPIT_CLRTEN_CLR_T_EN_1_MASK              0x2u
#define LPIT_CLRTEN_CLR_T_EN_1_SHIFT             1
#define LPIT_CLRTEN_CLR_T_EN_1_WIDTH             1
#define LPIT_CLRTEN_CLR_T_EN_1(x)                (((uint32)(((uint32)(x))<<LPIT_CLRTEN_CLR_T_EN_1_SHIFT))&LPIT_CLRTEN_CLR_T_EN_1_MASK)
#define LPIT_CLRTEN_CLR_T_EN_2_MASK              0x4u
#define LPIT_CLRTEN_CLR_T_EN_2_SHIFT             2
#define LPIT_CLRTEN_CLR_T_EN_2_WIDTH             1
#define LPIT_CLRTEN_CLR_T_EN_2(x)                (((uint32)(((uint32)(x))<<LPIT_CLRTEN_CLR_T_EN_2_SHIFT))&LPIT_CLRTEN_CLR_T_EN_2_MASK)
#define LPIT_CLRTEN_CLR_T_EN_3_MASK              0x8u
#define LPIT_CLRTEN_CLR_T_EN_3_SHIFT             3
#define LPIT_CLRTEN_CLR_T_EN_3_WIDTH             1
#define LPIT_CLRTEN_CLR_T_EN_3(x)                (((uint32)(((uint32)(x))<<LPIT_CLRTEN_CLR_T_EN_3_SHIFT))&LPIT_CLRTEN_CLR_T_EN_3_MASK)
/* TVAL0 Bit Fields */
#define LPIT_TVAL0_TMR_VAL_MASK                  0xFFFFFFFFu
#define LPIT_TVAL0_TMR_VAL_SHIFT                 0
#define LPIT_TVAL0_TMR_VAL_WIDTH                 32
#define LPIT_TVAL0_TMR_VAL(x)                    (((uint32)(((uint32)(x))<<LPIT_TVAL0_TMR_VAL_SHIFT))&LPIT_TVAL0_TMR_VAL_MASK)
/* CVAL0 Bit Fields */
#define LPIT_CVAL0_TMR_CUR_VAL_MASK              0xFFFFFFFFu
#define LPIT_CVAL0_TMR_CUR_VAL_SHIFT             0
#define LPIT_CVAL0_TMR_CUR_VAL_WIDTH             32
#define LPIT_CVAL0_TMR_CUR_VAL(x)                (((uint32)(((uint32)(x))<<LPIT_CVAL0_TMR_CUR_VAL_SHIFT))&LPIT_CVAL0_TMR_CUR_VAL_MASK)
/* TCTRL0 Bit Fields */
#define LPIT_TCTRL0_T_EN_MASK                    0x1u
#define LPIT_TCTRL0_T_EN_SHIFT                   0
#define LPIT_TCTRL0_T_EN_WIDTH                   1
#define LPIT_TCTRL0_T_EN(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL0_T_EN_SHIFT))&LPIT_TCTRL0_T_EN_MASK)
#define LPIT_TCTRL0_CHAIN_MASK                   0x2u
#define LPIT_TCTRL0_CHAIN_SHIFT                  1
#define LPIT_TCTRL0_CHAIN_WIDTH                  1
#define LPIT_TCTRL0_CHAIN(x)                     (((uint32)(((uint32)(x))<<LPIT_TCTRL0_CHAIN_SHIFT))&LPIT_TCTRL0_CHAIN_MASK)
#define LPIT_TCTRL0_MODE_MASK                    0xCu
#define LPIT_TCTRL0_MODE_SHIFT                   2
#define LPIT_TCTRL0_MODE_WIDTH                   2
#define LPIT_TCTRL0_MODE(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL0_MODE_SHIFT))&LPIT_TCTRL0_MODE_MASK)
#define LPIT_TCTRL0_TSOT_MASK                    0x10000u
#define LPIT_TCTRL0_TSOT_SHIFT                   16
#define LPIT_TCTRL0_TSOT_WIDTH                   1
#define LPIT_TCTRL0_TSOT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL0_TSOT_SHIFT))&LPIT_TCTRL0_TSOT_MASK)
#define LPIT_TCTRL0_TSOI_MASK                    0x20000u
#define LPIT_TCTRL0_TSOI_SHIFT                   17
#define LPIT_TCTRL0_TSOI_WIDTH                   1
#define LPIT_TCTRL0_TSOI(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL0_TSOI_SHIFT))&LPIT_TCTRL0_TSOI_MASK)
#define LPIT_TCTRL0_TROT_MASK                    0x40000u
#define LPIT_TCTRL0_TROT_SHIFT                   18
#define LPIT_TCTRL0_TROT_WIDTH                   1
#define LPIT_TCTRL0_TROT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL0_TROT_SHIFT))&LPIT_TCTRL0_TROT_MASK)
#define LPIT_TCTRL0_TRG_SRC_MASK                 0x800000u
#define LPIT_TCTRL0_TRG_SRC_SHIFT                23
#define LPIT_TCTRL0_TRG_SRC_WIDTH                1
#define LPIT_TCTRL0_TRG_SRC(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL0_TRG_SRC_SHIFT))&LPIT_TCTRL0_TRG_SRC_MASK)
#define LPIT_TCTRL0_TRG_SEL_MASK                 0xF000000u
#define LPIT_TCTRL0_TRG_SEL_SHIFT                24
#define LPIT_TCTRL0_TRG_SEL_WIDTH                4
#define LPIT_TCTRL0_TRG_SEL(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL0_TRG_SEL_SHIFT))&LPIT_TCTRL0_TRG_SEL_MASK)
/* TVAL1 Bit Fields */
#define LPIT_TVAL1_TMR_VAL_MASK                  0xFFFFFFFFu
#define LPIT_TVAL1_TMR_VAL_SHIFT                 0
#define LPIT_TVAL1_TMR_VAL_WIDTH                 32
#define LPIT_TVAL1_TMR_VAL(x)                    (((uint32)(((uint32)(x))<<LPIT_TVAL1_TMR_VAL_SHIFT))&LPIT_TVAL1_TMR_VAL_MASK)
/* CVAL1 Bit Fields */
#define LPIT_CVAL1_TMR_CUR_VAL_MASK              0xFFFFFFFFu
#define LPIT_CVAL1_TMR_CUR_VAL_SHIFT             0
#define LPIT_CVAL1_TMR_CUR_VAL_WIDTH             32
#define LPIT_CVAL1_TMR_CUR_VAL(x)                (((uint32)(((uint32)(x))<<LPIT_CVAL1_TMR_CUR_VAL_SHIFT))&LPIT_CVAL1_TMR_CUR_VAL_MASK)
/* TCTRL1 Bit Fields */
#define LPIT_TCTRL1_T_EN_MASK                    0x1u
#define LPIT_TCTRL1_T_EN_SHIFT                   0
#define LPIT_TCTRL1_T_EN_WIDTH                   1
#define LPIT_TCTRL1_T_EN(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL1_T_EN_SHIFT))&LPIT_TCTRL1_T_EN_MASK)
#define LPIT_TCTRL1_CHAIN_MASK                   0x2u
#define LPIT_TCTRL1_CHAIN_SHIFT                  1
#define LPIT_TCTRL1_CHAIN_WIDTH                  1
#define LPIT_TCTRL1_CHAIN(x)                     (((uint32)(((uint32)(x))<<LPIT_TCTRL1_CHAIN_SHIFT))&LPIT_TCTRL1_CHAIN_MASK)
#define LPIT_TCTRL1_MODE_MASK                    0xCu
#define LPIT_TCTRL1_MODE_SHIFT                   2
#define LPIT_TCTRL1_MODE_WIDTH                   2
#define LPIT_TCTRL1_MODE(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL1_MODE_SHIFT))&LPIT_TCTRL1_MODE_MASK)
#define LPIT_TCTRL1_TSOT_MASK                    0x10000u
#define LPIT_TCTRL1_TSOT_SHIFT                   16
#define LPIT_TCTRL1_TSOT_WIDTH                   1
#define LPIT_TCTRL1_TSOT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL1_TSOT_SHIFT))&LPIT_TCTRL1_TSOT_MASK)
#define LPIT_TCTRL1_TSOI_MASK                    0x20000u
#define LPIT_TCTRL1_TSOI_SHIFT                   17
#define LPIT_TCTRL1_TSOI_WIDTH                   1
#define LPIT_TCTRL1_TSOI(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL1_TSOI_SHIFT))&LPIT_TCTRL1_TSOI_MASK)
#define LPIT_TCTRL1_TROT_MASK                    0x40000u
#define LPIT_TCTRL1_TROT_SHIFT                   18
#define LPIT_TCTRL1_TROT_WIDTH                   1
#define LPIT_TCTRL1_TROT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL1_TROT_SHIFT))&LPIT_TCTRL1_TROT_MASK)
#define LPIT_TCTRL1_TRG_SRC_MASK                 0x800000u
#define LPIT_TCTRL1_TRG_SRC_SHIFT                23
#define LPIT_TCTRL1_TRG_SRC_WIDTH                1
#define LPIT_TCTRL1_TRG_SRC(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL1_TRG_SRC_SHIFT))&LPIT_TCTRL1_TRG_SRC_MASK)
#define LPIT_TCTRL1_TRG_SEL_MASK                 0xF000000u
#define LPIT_TCTRL1_TRG_SEL_SHIFT                24
#define LPIT_TCTRL1_TRG_SEL_WIDTH                4
#define LPIT_TCTRL1_TRG_SEL(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL1_TRG_SEL_SHIFT))&LPIT_TCTRL1_TRG_SEL_MASK)
/* TVAL2 Bit Fields */
#define LPIT_TVAL2_TMR_VAL_MASK                  0xFFFFFFFFu
#define LPIT_TVAL2_TMR_VAL_SHIFT                 0
#define LPIT_TVAL2_TMR_VAL_WIDTH                 32
#define LPIT_TVAL2_TMR_VAL(x)                    (((uint32)(((uint32)(x))<<LPIT_TVAL2_TMR_VAL_SHIFT))&LPIT_TVAL2_TMR_VAL_MASK)
/* CVAL2 Bit Fields */
#define LPIT_CVAL2_TMR_CUR_VAL_MASK              0xFFFFFFFFu
#define LPIT_CVAL2_TMR_CUR_VAL_SHIFT             0
#define LPIT_CVAL2_TMR_CUR_VAL_WIDTH             32
#define LPIT_CVAL2_TMR_CUR_VAL(x)                (((uint32)(((uint32)(x))<<LPIT_CVAL2_TMR_CUR_VAL_SHIFT))&LPIT_CVAL2_TMR_CUR_VAL_MASK)
/* TCTRL2 Bit Fields */
#define LPIT_TCTRL2_T_EN_MASK                    0x1u
#define LPIT_TCTRL2_T_EN_SHIFT                   0
#define LPIT_TCTRL2_T_EN_WIDTH                   1
#define LPIT_TCTRL2_T_EN(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL2_T_EN_SHIFT))&LPIT_TCTRL2_T_EN_MASK)
#define LPIT_TCTRL2_CHAIN_MASK                   0x2u
#define LPIT_TCTRL2_CHAIN_SHIFT                  1
#define LPIT_TCTRL2_CHAIN_WIDTH                  1
#define LPIT_TCTRL2_CHAIN(x)                     (((uint32)(((uint32)(x))<<LPIT_TCTRL2_CHAIN_SHIFT))&LPIT_TCTRL2_CHAIN_MASK)
#define LPIT_TCTRL2_MODE_MASK                    0xCu
#define LPIT_TCTRL2_MODE_SHIFT                   2
#define LPIT_TCTRL2_MODE_WIDTH                   2
#define LPIT_TCTRL2_MODE(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL2_MODE_SHIFT))&LPIT_TCTRL2_MODE_MASK)
#define LPIT_TCTRL2_TSOT_MASK                    0x10000u
#define LPIT_TCTRL2_TSOT_SHIFT                   16
#define LPIT_TCTRL2_TSOT_WIDTH                   1
#define LPIT_TCTRL2_TSOT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL2_TSOT_SHIFT))&LPIT_TCTRL2_TSOT_MASK)
#define LPIT_TCTRL2_TSOI_MASK                    0x20000u
#define LPIT_TCTRL2_TSOI_SHIFT                   17
#define LPIT_TCTRL2_TSOI_WIDTH                   1
#define LPIT_TCTRL2_TSOI(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL2_TSOI_SHIFT))&LPIT_TCTRL2_TSOI_MASK)
#define LPIT_TCTRL2_TROT_MASK                    0x40000u
#define LPIT_TCTRL2_TROT_SHIFT                   18
#define LPIT_TCTRL2_TROT_WIDTH                   1
#define LPIT_TCTRL2_TROT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL2_TROT_SHIFT))&LPIT_TCTRL2_TROT_MASK)
#define LPIT_TCTRL2_TRG_SRC_MASK                 0x800000u
#define LPIT_TCTRL2_TRG_SRC_SHIFT                23
#define LPIT_TCTRL2_TRG_SRC_WIDTH                1
#define LPIT_TCTRL2_TRG_SRC(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL2_TRG_SRC_SHIFT))&LPIT_TCTRL2_TRG_SRC_MASK)
#define LPIT_TCTRL2_TRG_SEL_MASK                 0xF000000u
#define LPIT_TCTRL2_TRG_SEL_SHIFT                24
#define LPIT_TCTRL2_TRG_SEL_WIDTH                4
#define LPIT_TCTRL2_TRG_SEL(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL2_TRG_SEL_SHIFT))&LPIT_TCTRL2_TRG_SEL_MASK)
/* TVAL3 Bit Fields */
#define LPIT_TVAL3_TMR_VAL_MASK                  0xFFFFFFFFu
#define LPIT_TVAL3_TMR_VAL_SHIFT                 0
#define LPIT_TVAL3_TMR_VAL_WIDTH                 32
#define LPIT_TVAL3_TMR_VAL(x)                    (((uint32)(((uint32)(x))<<LPIT_TVAL3_TMR_VAL_SHIFT))&LPIT_TVAL3_TMR_VAL_MASK)
/* CVAL3 Bit Fields */
#define LPIT_CVAL3_TMR_CUR_VAL_MASK              0xFFFFFFFFu
#define LPIT_CVAL3_TMR_CUR_VAL_SHIFT             0
#define LPIT_CVAL3_TMR_CUR_VAL_WIDTH             32
#define LPIT_CVAL3_TMR_CUR_VAL(x)                (((uint32)(((uint32)(x))<<LPIT_CVAL3_TMR_CUR_VAL_SHIFT))&LPIT_CVAL3_TMR_CUR_VAL_MASK)
/* TCTRL3 Bit Fields */
#define LPIT_TCTRL3_T_EN_MASK                    0x1u
#define LPIT_TCTRL3_T_EN_SHIFT                   0
#define LPIT_TCTRL3_T_EN_WIDTH                   1
#define LPIT_TCTRL3_T_EN(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL3_T_EN_SHIFT))&LPIT_TCTRL3_T_EN_MASK)
#define LPIT_TCTRL3_CHAIN_MASK                   0x2u
#define LPIT_TCTRL3_CHAIN_SHIFT                  1
#define LPIT_TCTRL3_CHAIN_WIDTH                  1
#define LPIT_TCTRL3_CHAIN(x)                     (((uint32)(((uint32)(x))<<LPIT_TCTRL3_CHAIN_SHIFT))&LPIT_TCTRL3_CHAIN_MASK)
#define LPIT_TCTRL3_MODE_MASK                    0xCu
#define LPIT_TCTRL3_MODE_SHIFT                   2
#define LPIT_TCTRL3_MODE_WIDTH                   2
#define LPIT_TCTRL3_MODE(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL3_MODE_SHIFT))&LPIT_TCTRL3_MODE_MASK)
#define LPIT_TCTRL3_TSOT_MASK                    0x10000u
#define LPIT_TCTRL3_TSOT_SHIFT                   16
#define LPIT_TCTRL3_TSOT_WIDTH                   1
#define LPIT_TCTRL3_TSOT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL3_TSOT_SHIFT))&LPIT_TCTRL3_TSOT_MASK)
#define LPIT_TCTRL3_TSOI_MASK                    0x20000u
#define LPIT_TCTRL3_TSOI_SHIFT                   17
#define LPIT_TCTRL3_TSOI_WIDTH                   1
#define LPIT_TCTRL3_TSOI(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL3_TSOI_SHIFT))&LPIT_TCTRL3_TSOI_MASK)
#define LPIT_TCTRL3_TROT_MASK                    0x40000u
#define LPIT_TCTRL3_TROT_SHIFT                   18
#define LPIT_TCTRL3_TROT_WIDTH                   1
#define LPIT_TCTRL3_TROT(x)                      (((uint32)(((uint32)(x))<<LPIT_TCTRL3_TROT_SHIFT))&LPIT_TCTRL3_TROT_MASK)
#define LPIT_TCTRL3_TRG_SRC_MASK                 0x800000u
#define LPIT_TCTRL3_TRG_SRC_SHIFT                23
#define LPIT_TCTRL3_TRG_SRC_WIDTH                1
#define LPIT_TCTRL3_TRG_SRC(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL3_TRG_SRC_SHIFT))&LPIT_TCTRL3_TRG_SRC_MASK)
#define LPIT_TCTRL3_TRG_SEL_MASK                 0xF000000u
#define LPIT_TCTRL3_TRG_SEL_SHIFT                24
#define LPIT_TCTRL3_TRG_SEL_WIDTH                4
#define LPIT_TCTRL3_TRG_SEL(x)                   (((uint32)(((uint32)(x))<<LPIT_TCTRL3_TRG_SEL_SHIFT))&LPIT_TCTRL3_TRG_SEL_MASK)

/*!
 * @}
 */ /* end of group LPIT_Register_Masks */


/* LPIT - Peripheral instance base addresses */
/** Peripheral LPIT0 base address */
#define LPIT0_BASE                               (0x40037000u)
/** Peripheral LPIT0 base pointer */
#define LPIT0                                    ((LPIT_Type *)LPIT0_BASE)
#define LPIT0_BASE_PTR                           (LPIT0)
/** Array initializer of LPIT peripheral base addresses */
#define LPIT_BASE_ADDRS                          { LPIT0_BASE }
/** Array initializer of LPIT peripheral base pointers */
#define LPIT_BASE_PTRS                           { LPIT0 }

/* ----------------------------------------------------------------------------
   -- LPIT - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPIT_Register_Accessor_Macros LPIT - Register accessor macros
 * @{
 */


/* LPIT - Register instance definitions */
/* LPIT0 */
#define LPIT0_VERID                              LPIT_VERID_REG(LPIT0)
#define LPIT0_PARAM                              LPIT_PARAM_REG(LPIT0)
#define LPIT0_MCR                                LPIT_MCR_REG(LPIT0)
#define LPIT0_MSR                                LPIT_MSR_REG(LPIT0)
#define LPIT0_MIER                               LPIT_MIER_REG(LPIT0)
#define LPIT0_SETTEN                             LPIT_SETTEN_REG(LPIT0)
#define LPIT0_CLRTEN                             LPIT_CLRTEN_REG(LPIT0)
#define LPIT0_RSVD                               LPIT_RSVD_REG(LPIT0)
#define LPIT0_TVAL0                              LPIT_TVAL0_REG(LPIT0)
#define LPIT0_CVAL0                              LPIT_CVAL0_REG(LPIT0)
#define LPIT0_TCTRL0                             LPIT_TCTRL0_REG(LPIT0)
#define LPIT0_RFU0                               LPIT_RFU0_REG(LPIT0)
#define LPIT0_TVAL1                              LPIT_TVAL1_REG(LPIT0)
#define LPIT0_CVAL1                              LPIT_CVAL1_REG(LPIT0)
#define LPIT0_TCTRL1                             LPIT_TCTRL1_REG(LPIT0)
#define LPIT0_RFU1                               LPIT_RFU1_REG(LPIT0)
#define LPIT0_TVAL2                              LPIT_TVAL2_REG(LPIT0)
#define LPIT0_CVAL2                              LPIT_CVAL2_REG(LPIT0)
#define LPIT0_TCTRL2                             LPIT_TCTRL2_REG(LPIT0)
#define LPIT0_RFU2                               LPIT_RFU2_REG(LPIT0)
#define LPIT0_TVAL3                              LPIT_TVAL3_REG(LPIT0)
#define LPIT0_CVAL3                              LPIT_CVAL3_REG(LPIT0)
#define LPIT0_TCTRL3                             LPIT_TCTRL3_REG(LPIT0)
#define LPIT0_RFU3                               LPIT_RFU3_REG(LPIT0)

/*!
 * @}
 */ /* end of group LPIT_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group LPIT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LPSPI Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPSPI_Peripheral_Access_Layer LPSPI Peripheral Access Layer
 * @{
 */

/** LPSPI - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< Parameter Register, offset: 0x4 */
       uint8 RESERVED_0[8];
  __IO uint32 CR;                                  /**< Control Register, offset: 0x10 */
  __IO uint32 SR;                                  /**< Status Register, offset: 0x14 */
  __IO uint32 IER;                                 /**< Interrupt Enable Register, offset: 0x18 */
  __IO uint32 DER;                                 /**< DMA Enable Register, offset: 0x1C */
  __IO uint32 CFGR0;                               /**< Configuration Register 0, offset: 0x20 */
  __IO uint32 CFGR1;                               /**< Configuration Register 1, offset: 0x24 */
       uint8 RESERVED_1[8];
  __IO uint32 DMR0;                                /**< Data Match Register 0, offset: 0x30 */
  __IO uint32 DMR1;                                /**< Data Match Register 1, offset: 0x34 */
       uint8 RESERVED_2[8];
  __IO uint32 CCR;                                 /**< Clock Configuration Register, offset: 0x40 */
       uint8 RESERVED_3[20];
  __IO uint32 FCR;                                 /**< FIFO Control Register, offset: 0x58 */
  __I  uint32 FSR;                                 /**< FIFO Status Register, offset: 0x5C */
  __IO uint32 TCR;                                 /**< Transmit Command Register, offset: 0x60 */
  __O  uint32 TDR;                                 /**< Transmit Data Register, offset: 0x64 */
       uint8 RESERVED_4[8];
  __I  uint32 RSR;                                 /**< Receive Status Register, offset: 0x70 */
  __I  uint32 RDR;                                 /**< Receive Data Register, offset: 0x74 */
} LPSPI_Type, *LPSPI_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LPSPI - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPSPI_Register_Accessor_Macros LPSPI - Register accessor macros
 * @{
 */


/* LPSPI - Register accessors */
#define LPSPI_VERID_REG(base)                    ((base)->VERID)
#define LPSPI_PARAM_REG(base)                    ((base)->PARAM)
#define LPSPI_CR_REG(base)                       ((base)->CR)
#define LPSPI_SR_REG(base)                       ((base)->SR)
#define LPSPI_IER_REG(base)                      ((base)->IER)
#define LPSPI_DER_REG(base)                      ((base)->DER)
#define LPSPI_CFGR0_REG(base)                    ((base)->CFGR0)
#define LPSPI_CFGR1_REG(base)                    ((base)->CFGR1)
#define LPSPI_DMR0_REG(base)                     ((base)->DMR0)
#define LPSPI_DMR1_REG(base)                     ((base)->DMR1)
#define LPSPI_CCR_REG(base)                      ((base)->CCR)
#define LPSPI_FCR_REG(base)                      ((base)->FCR)
#define LPSPI_FSR_REG(base)                      ((base)->FSR)
#define LPSPI_TCR_REG(base)                      ((base)->TCR)
#define LPSPI_TDR_REG(base)                      ((base)->TDR)
#define LPSPI_RSR_REG(base)                      ((base)->RSR)
#define LPSPI_RDR_REG(base)                      ((base)->RDR)

/*!
 * @}
 */ /* end of group LPSPI_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LPSPI Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPSPI_Register_Masks LPSPI Register Masks
 * @{
 */

/* VERID Bit Fields */
#define LPSPI_VERID_FEATURE_MASK                 0xFFFFu
#define LPSPI_VERID_FEATURE_SHIFT                0
#define LPSPI_VERID_FEATURE_WIDTH                16
#define LPSPI_VERID_FEATURE(x)                   (((uint32)(((uint32)(x))<<LPSPI_VERID_FEATURE_SHIFT))&LPSPI_VERID_FEATURE_MASK)
#define LPSPI_VERID_MINOR_MASK                   0xFF0000u
#define LPSPI_VERID_MINOR_SHIFT                  16
#define LPSPI_VERID_MINOR_WIDTH                  8
#define LPSPI_VERID_MINOR(x)                     (((uint32)(((uint32)(x))<<LPSPI_VERID_MINOR_SHIFT))&LPSPI_VERID_MINOR_MASK)
#define LPSPI_VERID_MAJOR_MASK                   0xFF000000u
#define LPSPI_VERID_MAJOR_SHIFT                  24
#define LPSPI_VERID_MAJOR_WIDTH                  8
#define LPSPI_VERID_MAJOR(x)                     (((uint32)(((uint32)(x))<<LPSPI_VERID_MAJOR_SHIFT))&LPSPI_VERID_MAJOR_MASK)
/* PARAM Bit Fields */
#define LPSPI_PARAM_TXFIFO_MASK                  0xFFu
#define LPSPI_PARAM_TXFIFO_SHIFT                 0
#define LPSPI_PARAM_TXFIFO_WIDTH                 8
#define LPSPI_PARAM_TXFIFO(x)                    (((uint32)(((uint32)(x))<<LPSPI_PARAM_TXFIFO_SHIFT))&LPSPI_PARAM_TXFIFO_MASK)
#define LPSPI_PARAM_RXFIFO_MASK                  0xFF00u
#define LPSPI_PARAM_RXFIFO_SHIFT                 8
#define LPSPI_PARAM_RXFIFO_WIDTH                 8
#define LPSPI_PARAM_RXFIFO(x)                    (((uint32)(((uint32)(x))<<LPSPI_PARAM_RXFIFO_SHIFT))&LPSPI_PARAM_RXFIFO_MASK)
/* CR Bit Fields */
#define LPSPI_CR_MEN_MASK                        0x1u
#define LPSPI_CR_MEN_SHIFT                       0
#define LPSPI_CR_MEN_WIDTH                       1
#define LPSPI_CR_MEN(x)                          (((uint32)(((uint32)(x))<<LPSPI_CR_MEN_SHIFT))&LPSPI_CR_MEN_MASK)
#define LPSPI_CR_RST_MASK                        0x2u
#define LPSPI_CR_RST_SHIFT                       1
#define LPSPI_CR_RST_WIDTH                       1
#define LPSPI_CR_RST(x)                          (((uint32)(((uint32)(x))<<LPSPI_CR_RST_SHIFT))&LPSPI_CR_RST_MASK)
#define LPSPI_CR_DOZEN_MASK                      0x4u
#define LPSPI_CR_DOZEN_SHIFT                     2
#define LPSPI_CR_DOZEN_WIDTH                     1
#define LPSPI_CR_DOZEN(x)                        (((uint32)(((uint32)(x))<<LPSPI_CR_DOZEN_SHIFT))&LPSPI_CR_DOZEN_MASK)
#define LPSPI_CR_DBGEN_MASK                      0x8u
#define LPSPI_CR_DBGEN_SHIFT                     3
#define LPSPI_CR_DBGEN_WIDTH                     1
#define LPSPI_CR_DBGEN(x)                        (((uint32)(((uint32)(x))<<LPSPI_CR_DBGEN_SHIFT))&LPSPI_CR_DBGEN_MASK)
#define LPSPI_CR_RTF_MASK                        0x100u
#define LPSPI_CR_RTF_SHIFT                       8
#define LPSPI_CR_RTF_WIDTH                       1
#define LPSPI_CR_RTF(x)                          (((uint32)(((uint32)(x))<<LPSPI_CR_RTF_SHIFT))&LPSPI_CR_RTF_MASK)
#define LPSPI_CR_RRF_MASK                        0x200u
#define LPSPI_CR_RRF_SHIFT                       9
#define LPSPI_CR_RRF_WIDTH                       1
#define LPSPI_CR_RRF(x)                          (((uint32)(((uint32)(x))<<LPSPI_CR_RRF_SHIFT))&LPSPI_CR_RRF_MASK)
/* SR Bit Fields */
#define LPSPI_SR_TDF_MASK                        0x1u
#define LPSPI_SR_TDF_SHIFT                       0
#define LPSPI_SR_TDF_WIDTH                       1
#define LPSPI_SR_TDF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_TDF_SHIFT))&LPSPI_SR_TDF_MASK)
#define LPSPI_SR_RDF_MASK                        0x2u
#define LPSPI_SR_RDF_SHIFT                       1
#define LPSPI_SR_RDF_WIDTH                       1
#define LPSPI_SR_RDF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_RDF_SHIFT))&LPSPI_SR_RDF_MASK)
#define LPSPI_SR_WCF_MASK                        0x100u
#define LPSPI_SR_WCF_SHIFT                       8
#define LPSPI_SR_WCF_WIDTH                       1
#define LPSPI_SR_WCF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_WCF_SHIFT))&LPSPI_SR_WCF_MASK)
#define LPSPI_SR_FCF_MASK                        0x200u
#define LPSPI_SR_FCF_SHIFT                       9
#define LPSPI_SR_FCF_WIDTH                       1
#define LPSPI_SR_FCF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_FCF_SHIFT))&LPSPI_SR_FCF_MASK)
#define LPSPI_SR_TCF_MASK                        0x400u
#define LPSPI_SR_TCF_SHIFT                       10
#define LPSPI_SR_TCF_WIDTH                       1
#define LPSPI_SR_TCF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_TCF_SHIFT))&LPSPI_SR_TCF_MASK)
#define LPSPI_SR_TEF_MASK                        0x800u
#define LPSPI_SR_TEF_SHIFT                       11
#define LPSPI_SR_TEF_WIDTH                       1
#define LPSPI_SR_TEF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_TEF_SHIFT))&LPSPI_SR_TEF_MASK)
#define LPSPI_SR_REF_MASK                        0x1000u
#define LPSPI_SR_REF_SHIFT                       12
#define LPSPI_SR_REF_WIDTH                       1
#define LPSPI_SR_REF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_REF_SHIFT))&LPSPI_SR_REF_MASK)
#define LPSPI_SR_DMF_MASK                        0x2000u
#define LPSPI_SR_DMF_SHIFT                       13
#define LPSPI_SR_DMF_WIDTH                       1
#define LPSPI_SR_DMF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_DMF_SHIFT))&LPSPI_SR_DMF_MASK)
#define LPSPI_SR_MBF_MASK                        0x1000000u
#define LPSPI_SR_MBF_SHIFT                       24
#define LPSPI_SR_MBF_WIDTH                       1
#define LPSPI_SR_MBF(x)                          (((uint32)(((uint32)(x))<<LPSPI_SR_MBF_SHIFT))&LPSPI_SR_MBF_MASK)
/* IER Bit Fields */
#define LPSPI_IER_TDIE_MASK                      0x1u
#define LPSPI_IER_TDIE_SHIFT                     0
#define LPSPI_IER_TDIE_WIDTH                     1
#define LPSPI_IER_TDIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_TDIE_SHIFT))&LPSPI_IER_TDIE_MASK)
#define LPSPI_IER_RDIE_MASK                      0x2u
#define LPSPI_IER_RDIE_SHIFT                     1
#define LPSPI_IER_RDIE_WIDTH                     1
#define LPSPI_IER_RDIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_RDIE_SHIFT))&LPSPI_IER_RDIE_MASK)
#define LPSPI_IER_WCIE_MASK                      0x100u
#define LPSPI_IER_WCIE_SHIFT                     8
#define LPSPI_IER_WCIE_WIDTH                     1
#define LPSPI_IER_WCIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_WCIE_SHIFT))&LPSPI_IER_WCIE_MASK)
#define LPSPI_IER_FCIE_MASK                      0x200u
#define LPSPI_IER_FCIE_SHIFT                     9
#define LPSPI_IER_FCIE_WIDTH                     1
#define LPSPI_IER_FCIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_FCIE_SHIFT))&LPSPI_IER_FCIE_MASK)
#define LPSPI_IER_TCIE_MASK                      0x400u
#define LPSPI_IER_TCIE_SHIFT                     10
#define LPSPI_IER_TCIE_WIDTH                     1
#define LPSPI_IER_TCIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_TCIE_SHIFT))&LPSPI_IER_TCIE_MASK)
#define LPSPI_IER_TEIE_MASK                      0x800u
#define LPSPI_IER_TEIE_SHIFT                     11
#define LPSPI_IER_TEIE_WIDTH                     1
#define LPSPI_IER_TEIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_TEIE_SHIFT))&LPSPI_IER_TEIE_MASK)
#define LPSPI_IER_REIE_MASK                      0x1000u
#define LPSPI_IER_REIE_SHIFT                     12
#define LPSPI_IER_REIE_WIDTH                     1
#define LPSPI_IER_REIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_REIE_SHIFT))&LPSPI_IER_REIE_MASK)
#define LPSPI_IER_DMIE_MASK                      0x2000u
#define LPSPI_IER_DMIE_SHIFT                     13
#define LPSPI_IER_DMIE_WIDTH                     1
#define LPSPI_IER_DMIE(x)                        (((uint32)(((uint32)(x))<<LPSPI_IER_DMIE_SHIFT))&LPSPI_IER_DMIE_MASK)
/* DER Bit Fields */
#define LPSPI_DER_TDDE_MASK                      0x1u
#define LPSPI_DER_TDDE_SHIFT                     0
#define LPSPI_DER_TDDE_WIDTH                     1
#define LPSPI_DER_TDDE(x)                        (((uint32)(((uint32)(x))<<LPSPI_DER_TDDE_SHIFT))&LPSPI_DER_TDDE_MASK)
#define LPSPI_DER_RDDE_MASK                      0x2u
#define LPSPI_DER_RDDE_SHIFT                     1
#define LPSPI_DER_RDDE_WIDTH                     1
#define LPSPI_DER_RDDE(x)                        (((uint32)(((uint32)(x))<<LPSPI_DER_RDDE_SHIFT))&LPSPI_DER_RDDE_MASK)
/* CFGR0 Bit Fields */
#define LPSPI_CFGR0_HREN_MASK                    0x1u
#define LPSPI_CFGR0_HREN_SHIFT                   0
#define LPSPI_CFGR0_HREN_WIDTH                   1
#define LPSPI_CFGR0_HREN(x)                      (((uint32)(((uint32)(x))<<LPSPI_CFGR0_HREN_SHIFT))&LPSPI_CFGR0_HREN_MASK)
#define LPSPI_CFGR0_HRPOL_MASK                   0x2u
#define LPSPI_CFGR0_HRPOL_SHIFT                  1
#define LPSPI_CFGR0_HRPOL_WIDTH                  1
#define LPSPI_CFGR0_HRPOL(x)                     (((uint32)(((uint32)(x))<<LPSPI_CFGR0_HRPOL_SHIFT))&LPSPI_CFGR0_HRPOL_MASK)
#define LPSPI_CFGR0_HRSEL_MASK                   0x4u
#define LPSPI_CFGR0_HRSEL_SHIFT                  2
#define LPSPI_CFGR0_HRSEL_WIDTH                  1
#define LPSPI_CFGR0_HRSEL(x)                     (((uint32)(((uint32)(x))<<LPSPI_CFGR0_HRSEL_SHIFT))&LPSPI_CFGR0_HRSEL_MASK)
#define LPSPI_CFGR0_CIRFIFO_MASK                 0x100u
#define LPSPI_CFGR0_CIRFIFO_SHIFT                8
#define LPSPI_CFGR0_CIRFIFO_WIDTH                1
#define LPSPI_CFGR0_CIRFIFO(x)                   (((uint32)(((uint32)(x))<<LPSPI_CFGR0_CIRFIFO_SHIFT))&LPSPI_CFGR0_CIRFIFO_MASK)
#define LPSPI_CFGR0_RDMO_MASK                    0x200u
#define LPSPI_CFGR0_RDMO_SHIFT                   9
#define LPSPI_CFGR0_RDMO_WIDTH                   1
#define LPSPI_CFGR0_RDMO(x)                      (((uint32)(((uint32)(x))<<LPSPI_CFGR0_RDMO_SHIFT))&LPSPI_CFGR0_RDMO_MASK)
/* CFGR1 Bit Fields */
#define LPSPI_CFGR1_MASTER_MASK                  0x1u
#define LPSPI_CFGR1_MASTER_SHIFT                 0
#define LPSPI_CFGR1_MASTER_WIDTH                 1
#define LPSPI_CFGR1_MASTER(x)                    (((uint32)(((uint32)(x))<<LPSPI_CFGR1_MASTER_SHIFT))&LPSPI_CFGR1_MASTER_MASK)
#define LPSPI_CFGR1_SAMPLE_MASK                  0x2u
#define LPSPI_CFGR1_SAMPLE_SHIFT                 1
#define LPSPI_CFGR1_SAMPLE_WIDTH                 1
#define LPSPI_CFGR1_SAMPLE(x)                    (((uint32)(((uint32)(x))<<LPSPI_CFGR1_SAMPLE_SHIFT))&LPSPI_CFGR1_SAMPLE_MASK)
#define LPSPI_CFGR1_AUTOPCS_MASK                 0x4u
#define LPSPI_CFGR1_AUTOPCS_SHIFT                2
#define LPSPI_CFGR1_AUTOPCS_WIDTH                1
#define LPSPI_CFGR1_AUTOPCS(x)                   (((uint32)(((uint32)(x))<<LPSPI_CFGR1_AUTOPCS_SHIFT))&LPSPI_CFGR1_AUTOPCS_MASK)
#define LPSPI_CFGR1_NOSTALL_MASK                 0x8u
#define LPSPI_CFGR1_NOSTALL_SHIFT                3
#define LPSPI_CFGR1_NOSTALL_WIDTH                1
#define LPSPI_CFGR1_NOSTALL(x)                   (((uint32)(((uint32)(x))<<LPSPI_CFGR1_NOSTALL_SHIFT))&LPSPI_CFGR1_NOSTALL_MASK)
#define LPSPI_CFGR1_PCSPOL_MASK                  0xF00u
#define LPSPI_CFGR1_PCSPOL_SHIFT                 8
#define LPSPI_CFGR1_PCSPOL_WIDTH                 4
#define LPSPI_CFGR1_PCSPOL(x)                    (((uint32)(((uint32)(x))<<LPSPI_CFGR1_PCSPOL_SHIFT))&LPSPI_CFGR1_PCSPOL_MASK)
#define LPSPI_CFGR1_MATCFG_MASK                  0x70000u
#define LPSPI_CFGR1_MATCFG_SHIFT                 16
#define LPSPI_CFGR1_MATCFG_WIDTH                 3
#define LPSPI_CFGR1_MATCFG(x)                    (((uint32)(((uint32)(x))<<LPSPI_CFGR1_MATCFG_SHIFT))&LPSPI_CFGR1_MATCFG_MASK)
#define LPSPI_CFGR1_PINCFG_MASK                  0x3000000u
#define LPSPI_CFGR1_PINCFG_SHIFT                 24
#define LPSPI_CFGR1_PINCFG_WIDTH                 2
#define LPSPI_CFGR1_PINCFG(x)                    (((uint32)(((uint32)(x))<<LPSPI_CFGR1_PINCFG_SHIFT))&LPSPI_CFGR1_PINCFG_MASK)
#define LPSPI_CFGR1_OUTCFG_MASK                  0x4000000u
#define LPSPI_CFGR1_OUTCFG_SHIFT                 26
#define LPSPI_CFGR1_OUTCFG_WIDTH                 1
#define LPSPI_CFGR1_OUTCFG(x)                    (((uint32)(((uint32)(x))<<LPSPI_CFGR1_OUTCFG_SHIFT))&LPSPI_CFGR1_OUTCFG_MASK)
#define LPSPI_CFGR1_PCSCFG_MASK                  0x8000000u
#define LPSPI_CFGR1_PCSCFG_SHIFT                 27
#define LPSPI_CFGR1_PCSCFG_WIDTH                 1
#define LPSPI_CFGR1_PCSCFG(x)                    (((uint32)(((uint32)(x))<<LPSPI_CFGR1_PCSCFG_SHIFT))&LPSPI_CFGR1_PCSCFG_MASK)
/* DMR0 Bit Fields */
#define LPSPI_DMR0_MATCH0_MASK                   0xFFFFFFFFu
#define LPSPI_DMR0_MATCH0_SHIFT                  0
#define LPSPI_DMR0_MATCH0_WIDTH                  32
#define LPSPI_DMR0_MATCH0(x)                     (((uint32)(((uint32)(x))<<LPSPI_DMR0_MATCH0_SHIFT))&LPSPI_DMR0_MATCH0_MASK)
/* DMR1 Bit Fields */
#define LPSPI_DMR1_MATCH1_MASK                   0xFFFFFFFFu
#define LPSPI_DMR1_MATCH1_SHIFT                  0
#define LPSPI_DMR1_MATCH1_WIDTH                  32
#define LPSPI_DMR1_MATCH1(x)                     (((uint32)(((uint32)(x))<<LPSPI_DMR1_MATCH1_SHIFT))&LPSPI_DMR1_MATCH1_MASK)
/* CCR Bit Fields */
#define LPSPI_CCR_SCKDIV_MASK                    0xFFu
#define LPSPI_CCR_SCKDIV_SHIFT                   0
#define LPSPI_CCR_SCKDIV_WIDTH                   8
#define LPSPI_CCR_SCKDIV(x)                      (((uint32)(((uint32)(x))<<LPSPI_CCR_SCKDIV_SHIFT))&LPSPI_CCR_SCKDIV_MASK)
#define LPSPI_CCR_DBT_MASK                       0xFF00u
#define LPSPI_CCR_DBT_SHIFT                      8
#define LPSPI_CCR_DBT_WIDTH                      8
#define LPSPI_CCR_DBT(x)                         (((uint32)(((uint32)(x))<<LPSPI_CCR_DBT_SHIFT))&LPSPI_CCR_DBT_MASK)
#define LPSPI_CCR_PCSSCK_MASK                    0xFF0000u
#define LPSPI_CCR_PCSSCK_SHIFT                   16
#define LPSPI_CCR_PCSSCK_WIDTH                   8
#define LPSPI_CCR_PCSSCK(x)                      (((uint32)(((uint32)(x))<<LPSPI_CCR_PCSSCK_SHIFT))&LPSPI_CCR_PCSSCK_MASK)
#define LPSPI_CCR_SCKPCS_MASK                    0xFF000000u
#define LPSPI_CCR_SCKPCS_SHIFT                   24
#define LPSPI_CCR_SCKPCS_WIDTH                   8
#define LPSPI_CCR_SCKPCS(x)                      (((uint32)(((uint32)(x))<<LPSPI_CCR_SCKPCS_SHIFT))&LPSPI_CCR_SCKPCS_MASK)
/* FCR Bit Fields */
#define LPSPI_FCR_TXWATER_MASK                   0xFFu
#define LPSPI_FCR_TXWATER_SHIFT                  0
#define LPSPI_FCR_TXWATER_WIDTH                  8
#define LPSPI_FCR_TXWATER(x)                     (((uint32)(((uint32)(x))<<LPSPI_FCR_TXWATER_SHIFT))&LPSPI_FCR_TXWATER_MASK)
#define LPSPI_FCR_RXWATER_MASK                   0xFF0000u
#define LPSPI_FCR_RXWATER_SHIFT                  16
#define LPSPI_FCR_RXWATER_WIDTH                  8
#define LPSPI_FCR_RXWATER(x)                     (((uint32)(((uint32)(x))<<LPSPI_FCR_RXWATER_SHIFT))&LPSPI_FCR_RXWATER_MASK)
/* FSR Bit Fields */
#define LPSPI_FSR_TXCOUNT_MASK                   0xFFu
#define LPSPI_FSR_TXCOUNT_SHIFT                  0
#define LPSPI_FSR_TXCOUNT_WIDTH                  8
#define LPSPI_FSR_TXCOUNT(x)                     (((uint32)(((uint32)(x))<<LPSPI_FSR_TXCOUNT_SHIFT))&LPSPI_FSR_TXCOUNT_MASK)
#define LPSPI_FSR_RXCOUNT_MASK                   0xFF0000u
#define LPSPI_FSR_RXCOUNT_SHIFT                  16
#define LPSPI_FSR_RXCOUNT_WIDTH                  8
#define LPSPI_FSR_RXCOUNT(x)                     (((uint32)(((uint32)(x))<<LPSPI_FSR_RXCOUNT_SHIFT))&LPSPI_FSR_RXCOUNT_MASK)
/* TCR Bit Fields */
#define LPSPI_TCR_FRAMESZ_MASK                   0xFFFu
#define LPSPI_TCR_FRAMESZ_SHIFT                  0
#define LPSPI_TCR_FRAMESZ_WIDTH                  12
#define LPSPI_TCR_FRAMESZ(x)                     (((uint32)(((uint32)(x))<<LPSPI_TCR_FRAMESZ_SHIFT))&LPSPI_TCR_FRAMESZ_MASK)
#define LPSPI_TCR_WIDTH_MASK                     0x30000u
#define LPSPI_TCR_WIDTH_SHIFT                    16
#define LPSPI_TCR_WIDTH_WIDTH                    2
#define LPSPI_TCR_WIDTH(x)                       (((uint32)(((uint32)(x))<<LPSPI_TCR_WIDTH_SHIFT))&LPSPI_TCR_WIDTH_MASK)
#define LPSPI_TCR_TXMSK_MASK                     0x40000u
#define LPSPI_TCR_TXMSK_SHIFT                    18
#define LPSPI_TCR_TXMSK_WIDTH                    1
#define LPSPI_TCR_TXMSK(x)                       (((uint32)(((uint32)(x))<<LPSPI_TCR_TXMSK_SHIFT))&LPSPI_TCR_TXMSK_MASK)
#define LPSPI_TCR_RXMSK_MASK                     0x80000u
#define LPSPI_TCR_RXMSK_SHIFT                    19
#define LPSPI_TCR_RXMSK_WIDTH                    1
#define LPSPI_TCR_RXMSK(x)                       (((uint32)(((uint32)(x))<<LPSPI_TCR_RXMSK_SHIFT))&LPSPI_TCR_RXMSK_MASK)
#define LPSPI_TCR_CONTC_MASK                     0x100000u
#define LPSPI_TCR_CONTC_SHIFT                    20
#define LPSPI_TCR_CONTC_WIDTH                    1
#define LPSPI_TCR_CONTC(x)                       (((uint32)(((uint32)(x))<<LPSPI_TCR_CONTC_SHIFT))&LPSPI_TCR_CONTC_MASK)
#define LPSPI_TCR_CONT_MASK                      0x200000u
#define LPSPI_TCR_CONT_SHIFT                     21
#define LPSPI_TCR_CONT_WIDTH                     1
#define LPSPI_TCR_CONT(x)                        (((uint32)(((uint32)(x))<<LPSPI_TCR_CONT_SHIFT))&LPSPI_TCR_CONT_MASK)
#define LPSPI_TCR_BYSW_MASK                      0x400000u
#define LPSPI_TCR_BYSW_SHIFT                     22
#define LPSPI_TCR_BYSW_WIDTH                     1
#define LPSPI_TCR_BYSW(x)                        (((uint32)(((uint32)(x))<<LPSPI_TCR_BYSW_SHIFT))&LPSPI_TCR_BYSW_MASK)
#define LPSPI_TCR_LSBF_MASK                      0x800000u
#define LPSPI_TCR_LSBF_SHIFT                     23
#define LPSPI_TCR_LSBF_WIDTH                     1
#define LPSPI_TCR_LSBF(x)                        (((uint32)(((uint32)(x))<<LPSPI_TCR_LSBF_SHIFT))&LPSPI_TCR_LSBF_MASK)
#define LPSPI_TCR_PCS_MASK                       0x3000000u
#define LPSPI_TCR_PCS_SHIFT                      24
#define LPSPI_TCR_PCS_WIDTH                      2
#define LPSPI_TCR_PCS(x)                         (((uint32)(((uint32)(x))<<LPSPI_TCR_PCS_SHIFT))&LPSPI_TCR_PCS_MASK)
#define LPSPI_TCR_PRESCALE_MASK                  0x38000000u
#define LPSPI_TCR_PRESCALE_SHIFT                 27
#define LPSPI_TCR_PRESCALE_WIDTH                 3
#define LPSPI_TCR_PRESCALE(x)                    (((uint32)(((uint32)(x))<<LPSPI_TCR_PRESCALE_SHIFT))&LPSPI_TCR_PRESCALE_MASK)
#define LPSPI_TCR_CPHA_MASK                      0x40000000u
#define LPSPI_TCR_CPHA_SHIFT                     30
#define LPSPI_TCR_CPHA_WIDTH                     1
#define LPSPI_TCR_CPHA(x)                        (((uint32)(((uint32)(x))<<LPSPI_TCR_CPHA_SHIFT))&LPSPI_TCR_CPHA_MASK)
#define LPSPI_TCR_CPOL_MASK                      0x80000000u
#define LPSPI_TCR_CPOL_SHIFT                     31
#define LPSPI_TCR_CPOL_WIDTH                     1
#define LPSPI_TCR_CPOL(x)                        (((uint32)(((uint32)(x))<<LPSPI_TCR_CPOL_SHIFT))&LPSPI_TCR_CPOL_MASK)
/* TDR Bit Fields */
#define LPSPI_TDR_DATA_MASK                      0xFFFFFFFFu
#define LPSPI_TDR_DATA_SHIFT                     0
#define LPSPI_TDR_DATA_WIDTH                     32
#define LPSPI_TDR_DATA(x)                        (((uint32)(((uint32)(x))<<LPSPI_TDR_DATA_SHIFT))&LPSPI_TDR_DATA_MASK)
/* RSR Bit Fields */
#define LPSPI_RSR_SOF_MASK                       0x1u
#define LPSPI_RSR_SOF_SHIFT                      0
#define LPSPI_RSR_SOF_WIDTH                      1
#define LPSPI_RSR_SOF(x)                         (((uint32)(((uint32)(x))<<LPSPI_RSR_SOF_SHIFT))&LPSPI_RSR_SOF_MASK)
#define LPSPI_RSR_RXEMPTY_MASK                   0x2u
#define LPSPI_RSR_RXEMPTY_SHIFT                  1
#define LPSPI_RSR_RXEMPTY_WIDTH                  1
#define LPSPI_RSR_RXEMPTY(x)                     (((uint32)(((uint32)(x))<<LPSPI_RSR_RXEMPTY_SHIFT))&LPSPI_RSR_RXEMPTY_MASK)
/* RDR Bit Fields */
#define LPSPI_RDR_DATA_MASK                      0xFFFFFFFFu
#define LPSPI_RDR_DATA_SHIFT                     0
#define LPSPI_RDR_DATA_WIDTH                     32
#define LPSPI_RDR_DATA(x)                        (((uint32)(((uint32)(x))<<LPSPI_RDR_DATA_SHIFT))&LPSPI_RDR_DATA_MASK)

/*!
 * @}
 */ /* end of group LPSPI_Register_Masks */


/* LPSPI - Peripheral instance base addresses */
/** Peripheral LPSPI0 base address */
#define LPSPI0_BASE                              (0x4002C000u)
/** Peripheral LPSPI0 base pointer */
#define LPSPI0                                   ((LPSPI_Type *)LPSPI0_BASE)
#define LPSPI0_BASE_PTR                          (LPSPI0)
/** Peripheral LPSPI1 base address */
#define LPSPI1_BASE                              (0x4002D000u)
/** Peripheral LPSPI1 base pointer */
#define LPSPI1                                   ((LPSPI_Type *)LPSPI1_BASE)
#define LPSPI1_BASE_PTR                          (LPSPI1)
/** Peripheral LPSPI2 base address */
#define LPSPI2_BASE                              (0x4002E000u)
/** Peripheral LPSPI2 base pointer */
#define LPSPI2                                   ((LPSPI_Type *)LPSPI2_BASE)
#define LPSPI2_BASE_PTR                          (LPSPI2)
/** Array initializer of LPSPI peripheral base addresses */
#define LPSPI_BASE_ADDRS                         { LPSPI0_BASE, LPSPI1_BASE, LPSPI2_BASE }
/** Array initializer of LPSPI peripheral base pointers */
#define LPSPI_BASE_PTRS                          { LPSPI0, LPSPI1, LPSPI2 }

/* ----------------------------------------------------------------------------
   -- LPSPI - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPSPI_Register_Accessor_Macros LPSPI - Register accessor macros
 * @{
 */


/* LPSPI - Register instance definitions */
/* LPSPI0 */
#define LPSPI0_VERID                             LPSPI_VERID_REG(LPSPI0)
#define LPSPI0_PARAM                             LPSPI_PARAM_REG(LPSPI0)
#define LPSPI0_CR                                LPSPI_CR_REG(LPSPI0)
#define LPSPI0_SR                                LPSPI_SR_REG(LPSPI0)
#define LPSPI0_IER                               LPSPI_IER_REG(LPSPI0)
#define LPSPI0_DER                               LPSPI_DER_REG(LPSPI0)
#define LPSPI0_CFGR0                             LPSPI_CFGR0_REG(LPSPI0)
#define LPSPI0_CFGR1                             LPSPI_CFGR1_REG(LPSPI0)
#define LPSPI0_DMR0                              LPSPI_DMR0_REG(LPSPI0)
#define LPSPI0_DMR1                              LPSPI_DMR1_REG(LPSPI0)
#define LPSPI0_CCR                               LPSPI_CCR_REG(LPSPI0)
#define LPSPI0_FCR                               LPSPI_FCR_REG(LPSPI0)
#define LPSPI0_FSR                               LPSPI_FSR_REG(LPSPI0)
#define LPSPI0_TCR                               LPSPI_TCR_REG(LPSPI0)
#define LPSPI0_TDR                               LPSPI_TDR_REG(LPSPI0)
#define LPSPI0_RSR                               LPSPI_RSR_REG(LPSPI0)
#define LPSPI0_RDR                               LPSPI_RDR_REG(LPSPI0)
/* LPSPI1 */
#define LPSPI1_VERID                             LPSPI_VERID_REG(LPSPI1)
#define LPSPI1_PARAM                             LPSPI_PARAM_REG(LPSPI1)
#define LPSPI1_CR                                LPSPI_CR_REG(LPSPI1)
#define LPSPI1_SR                                LPSPI_SR_REG(LPSPI1)
#define LPSPI1_IER                               LPSPI_IER_REG(LPSPI1)
#define LPSPI1_DER                               LPSPI_DER_REG(LPSPI1)
#define LPSPI1_CFGR0                             LPSPI_CFGR0_REG(LPSPI1)
#define LPSPI1_CFGR1                             LPSPI_CFGR1_REG(LPSPI1)
#define LPSPI1_DMR0                              LPSPI_DMR0_REG(LPSPI1)
#define LPSPI1_DMR1                              LPSPI_DMR1_REG(LPSPI1)
#define LPSPI1_CCR                               LPSPI_CCR_REG(LPSPI1)
#define LPSPI1_FCR                               LPSPI_FCR_REG(LPSPI1)
#define LPSPI1_FSR                               LPSPI_FSR_REG(LPSPI1)
#define LPSPI1_TCR                               LPSPI_TCR_REG(LPSPI1)
#define LPSPI1_TDR                               LPSPI_TDR_REG(LPSPI1)
#define LPSPI1_RSR                               LPSPI_RSR_REG(LPSPI1)
#define LPSPI1_RDR                               LPSPI_RDR_REG(LPSPI1)
/* LPSPI2 */
#define LPSPI2_VERID                             LPSPI_VERID_REG(LPSPI2)
#define LPSPI2_PARAM                             LPSPI_PARAM_REG(LPSPI2)
#define LPSPI2_CR                                LPSPI_CR_REG(LPSPI2)
#define LPSPI2_SR                                LPSPI_SR_REG(LPSPI2)
#define LPSPI2_IER                               LPSPI_IER_REG(LPSPI2)
#define LPSPI2_DER                               LPSPI_DER_REG(LPSPI2)
#define LPSPI2_CFGR0                             LPSPI_CFGR0_REG(LPSPI2)
#define LPSPI2_CFGR1                             LPSPI_CFGR1_REG(LPSPI2)
#define LPSPI2_DMR0                              LPSPI_DMR0_REG(LPSPI2)
#define LPSPI2_DMR1                              LPSPI_DMR1_REG(LPSPI2)
#define LPSPI2_CCR                               LPSPI_CCR_REG(LPSPI2)
#define LPSPI2_FCR                               LPSPI_FCR_REG(LPSPI2)
#define LPSPI2_FSR                               LPSPI_FSR_REG(LPSPI2)
#define LPSPI2_TCR                               LPSPI_TCR_REG(LPSPI2)
#define LPSPI2_TDR                               LPSPI_TDR_REG(LPSPI2)
#define LPSPI2_RSR                               LPSPI_RSR_REG(LPSPI2)
#define LPSPI2_RDR                               LPSPI_RDR_REG(LPSPI2)

/*!
 * @}
 */ /* end of group LPSPI_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group LPSPI_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LPTMR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPTMR_Peripheral_Access_Layer LPTMR Peripheral Access Layer
 * @{
 */

/** LPTMR - Register Layout Typedef */
typedef struct {
  __IO uint32 CSR;                                 /**< Low Power Timer Control Status Register, offset: 0x0 */
  __IO uint32 PSR;                                 /**< Low Power Timer Prescale Register, offset: 0x4 */
  __IO uint32 CMR;                                 /**< Low Power Timer Compare Register, offset: 0x8 */
  __I  uint32 CNR;                                 /**< Low Power Timer Counter Register, offset: 0xC */
} LPTMR_Type, *LPTMR_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LPTMR - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPTMR_Register_Accessor_Macros LPTMR - Register accessor macros
 * @{
 */


/* LPTMR - Register accessors */
#define LPTMR_CSR_REG(base)                      ((base)->CSR)
#define LPTMR_PSR_REG(base)                      ((base)->PSR)
#define LPTMR_CMR_REG(base)                      ((base)->CMR)
#define LPTMR_CNR_REG(base)                      ((base)->CNR)

/*!
 * @}
 */ /* end of group LPTMR_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LPTMR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPTMR_Register_Masks LPTMR Register Masks
 * @{
 */

/* CSR Bit Fields */
#define LPTMR_CSR_TEN_MASK                       0x1u
#define LPTMR_CSR_TEN_SHIFT                      0
#define LPTMR_CSR_TEN_WIDTH                      1
#define LPTMR_CSR_TEN(x)                         (((uint32)(((uint32)(x))<<LPTMR_CSR_TEN_SHIFT))&LPTMR_CSR_TEN_MASK)
#define LPTMR_CSR_TMS_MASK                       0x2u
#define LPTMR_CSR_TMS_SHIFT                      1
#define LPTMR_CSR_TMS_WIDTH                      1
#define LPTMR_CSR_TMS(x)                         (((uint32)(((uint32)(x))<<LPTMR_CSR_TMS_SHIFT))&LPTMR_CSR_TMS_MASK)
#define LPTMR_CSR_TFC_MASK                       0x4u
#define LPTMR_CSR_TFC_SHIFT                      2
#define LPTMR_CSR_TFC_WIDTH                      1
#define LPTMR_CSR_TFC(x)                         (((uint32)(((uint32)(x))<<LPTMR_CSR_TFC_SHIFT))&LPTMR_CSR_TFC_MASK)
#define LPTMR_CSR_TPP_MASK                       0x8u
#define LPTMR_CSR_TPP_SHIFT                      3
#define LPTMR_CSR_TPP_WIDTH                      1
#define LPTMR_CSR_TPP(x)                         (((uint32)(((uint32)(x))<<LPTMR_CSR_TPP_SHIFT))&LPTMR_CSR_TPP_MASK)
#define LPTMR_CSR_TPS_MASK                       0x30u
#define LPTMR_CSR_TPS_SHIFT                      4
#define LPTMR_CSR_TPS_WIDTH                      2
#define LPTMR_CSR_TPS(x)                         (((uint32)(((uint32)(x))<<LPTMR_CSR_TPS_SHIFT))&LPTMR_CSR_TPS_MASK)
#define LPTMR_CSR_TIE_MASK                       0x40u
#define LPTMR_CSR_TIE_SHIFT                      6
#define LPTMR_CSR_TIE_WIDTH                      1
#define LPTMR_CSR_TIE(x)                         (((uint32)(((uint32)(x))<<LPTMR_CSR_TIE_SHIFT))&LPTMR_CSR_TIE_MASK)
#define LPTMR_CSR_TCF_MASK                       0x80u
#define LPTMR_CSR_TCF_SHIFT                      7
#define LPTMR_CSR_TCF_WIDTH                      1
#define LPTMR_CSR_TCF(x)                         (((uint32)(((uint32)(x))<<LPTMR_CSR_TCF_SHIFT))&LPTMR_CSR_TCF_MASK)
#define LPTMR_CSR_TDRE_MASK                      0x100u
#define LPTMR_CSR_TDRE_SHIFT                     8
#define LPTMR_CSR_TDRE_WIDTH                     1
#define LPTMR_CSR_TDRE(x)                        (((uint32)(((uint32)(x))<<LPTMR_CSR_TDRE_SHIFT))&LPTMR_CSR_TDRE_MASK)
/* PSR Bit Fields */
#define LPTMR_PSR_PCS_MASK                       0x3u
#define LPTMR_PSR_PCS_SHIFT                      0
#define LPTMR_PSR_PCS_WIDTH                      2
#define LPTMR_PSR_PCS(x)                         (((uint32)(((uint32)(x))<<LPTMR_PSR_PCS_SHIFT))&LPTMR_PSR_PCS_MASK)
#define LPTMR_PSR_PBYP_MASK                      0x4u
#define LPTMR_PSR_PBYP_SHIFT                     2
#define LPTMR_PSR_PBYP_WIDTH                     1
#define LPTMR_PSR_PBYP(x)                        (((uint32)(((uint32)(x))<<LPTMR_PSR_PBYP_SHIFT))&LPTMR_PSR_PBYP_MASK)
#define LPTMR_PSR_PRESCALE_MASK                  0x78u
#define LPTMR_PSR_PRESCALE_SHIFT                 3
#define LPTMR_PSR_PRESCALE_WIDTH                 4
#define LPTMR_PSR_PRESCALE(x)                    (((uint32)(((uint32)(x))<<LPTMR_PSR_PRESCALE_SHIFT))&LPTMR_PSR_PRESCALE_MASK)
/* CMR Bit Fields */
#define LPTMR_CMR_COMPARE_MASK                   0xFFFFu
#define LPTMR_CMR_COMPARE_SHIFT                  0
#define LPTMR_CMR_COMPARE_WIDTH                  16
#define LPTMR_CMR_COMPARE(x)                     (((uint32)(((uint32)(x))<<LPTMR_CMR_COMPARE_SHIFT))&LPTMR_CMR_COMPARE_MASK)
/* CNR Bit Fields */
#define LPTMR_CNR_COUNTER_MASK                   0xFFFFu
#define LPTMR_CNR_COUNTER_SHIFT                  0
#define LPTMR_CNR_COUNTER_WIDTH                  16
#define LPTMR_CNR_COUNTER(x)                     (((uint32)(((uint32)(x))<<LPTMR_CNR_COUNTER_SHIFT))&LPTMR_CNR_COUNTER_MASK)

/*!
 * @}
 */ /* end of group LPTMR_Register_Masks */


/* LPTMR - Peripheral instance base addresses */
/** Peripheral LPTMR0 base address */
#define LPTMR0_BASE                              (0x40040000u)
/** Peripheral LPTMR0 base pointer */
#define LPTMR0                                   ((LPTMR_Type *)LPTMR0_BASE)
#define LPTMR0_BASE_PTR                          (LPTMR0)
/** Array initializer of LPTMR peripheral base addresses */
#define LPTMR_BASE_ADDRS                         { LPTMR0_BASE }
/** Array initializer of LPTMR peripheral base pointers */
#define LPTMR_BASE_PTRS                          { LPTMR0 }

/* ----------------------------------------------------------------------------
   -- LPTMR - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPTMR_Register_Accessor_Macros LPTMR - Register accessor macros
 * @{
 */


/* LPTMR - Register instance definitions */
/* LPTMR0 */
#define LPTMR0_CSR                               LPTMR_CSR_REG(LPTMR0)
#define LPTMR0_PSR                               LPTMR_PSR_REG(LPTMR0)
#define LPTMR0_CMR                               LPTMR_CMR_REG(LPTMR0)
#define LPTMR0_CNR                               LPTMR_CNR_REG(LPTMR0)

/*!
 * @}
 */ /* end of group LPTMR_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group LPTMR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LPUART Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPUART_Peripheral_Access_Layer LPUART Peripheral Access Layer
 * @{
 */

/** LPUART - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< Parameter Register, offset: 0x4 */
  __IO uint32 GLOBAL;                              /**< LPUART Global Register, offset: 0x8 */
  __IO uint32 PINCFG;                              /**< LPUART Pin Configuration Register, offset: 0xC */
  __IO uint32 BAUD;                                /**< LPUART Baud Rate Register, offset: 0x10 */
  __IO uint32 STAT;                                /**< LPUART Status Register, offset: 0x14 */
  __IO uint32 CTRL;                                /**< LPUART Control Register, offset: 0x18 */
  __IO uint32 DATA;                                /**< LPUART Data Register, offset: 0x1C */
  __IO uint32 MATCH;                               /**< LPUART Match Address Register, offset: 0x20 */
  __IO uint32 MODIR;                               /**< LPUART Modem IrDA Register, offset: 0x24 */
} LPUART_Type, *LPUART_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LPUART - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPUART_Register_Accessor_Macros LPUART - Register accessor macros
 * @{
 */


/* LPUART - Register accessors */
#define LPUART_VERID_REG(base)                   ((base)->VERID)
#define LPUART_PARAM_REG(base)                   ((base)->PARAM)
#define LPUART_GLOBAL_REG(base)                  ((base)->GLOBAL)
#define LPUART_PINCFG_REG(base)                  ((base)->PINCFG)
#define LPUART_BAUD_REG(base)                    ((base)->BAUD)
#define LPUART_STAT_REG(base)                    ((base)->STAT)
#define LPUART_CTRL_REG(base)                    ((base)->CTRL)
#define LPUART_DATA_REG(base)                    ((base)->DATA)
#define LPUART_MATCH_REG(base)                   ((base)->MATCH)
#define LPUART_MODIR_REG(base)                   ((base)->MODIR)

/*!
 * @}
 */ /* end of group LPUART_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LPUART Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPUART_Register_Masks LPUART Register Masks
 * @{
 */

/* VERID Bit Fields */
#define LPUART_VERID_FEATURE_MASK                0xFFFFu
#define LPUART_VERID_FEATURE_SHIFT               0
#define LPUART_VERID_FEATURE_WIDTH               16
#define LPUART_VERID_FEATURE(x)                  (((uint32)(((uint32)(x))<<LPUART_VERID_FEATURE_SHIFT))&LPUART_VERID_FEATURE_MASK)
#define LPUART_VERID_MINOR_MASK                  0xFF0000u
#define LPUART_VERID_MINOR_SHIFT                 16
#define LPUART_VERID_MINOR_WIDTH                 8
#define LPUART_VERID_MINOR(x)                    (((uint32)(((uint32)(x))<<LPUART_VERID_MINOR_SHIFT))&LPUART_VERID_MINOR_MASK)
#define LPUART_VERID_MAJOR_MASK                  0xFF000000u
#define LPUART_VERID_MAJOR_SHIFT                 24
#define LPUART_VERID_MAJOR_WIDTH                 8
#define LPUART_VERID_MAJOR(x)                    (((uint32)(((uint32)(x))<<LPUART_VERID_MAJOR_SHIFT))&LPUART_VERID_MAJOR_MASK)
/* PARAM Bit Fields */
#define LPUART_PARAM_TXFIFO_MASK                 0xFFu
#define LPUART_PARAM_TXFIFO_SHIFT                0
#define LPUART_PARAM_TXFIFO_WIDTH                8
#define LPUART_PARAM_TXFIFO(x)                   (((uint32)(((uint32)(x))<<LPUART_PARAM_TXFIFO_SHIFT))&LPUART_PARAM_TXFIFO_MASK)
#define LPUART_PARAM_RXFIFO_MASK                 0xFF00u
#define LPUART_PARAM_RXFIFO_SHIFT                8
#define LPUART_PARAM_RXFIFO_WIDTH                8
#define LPUART_PARAM_RXFIFO(x)                   (((uint32)(((uint32)(x))<<LPUART_PARAM_RXFIFO_SHIFT))&LPUART_PARAM_RXFIFO_MASK)
/* GLOBAL Bit Fields */
#define LPUART_GLOBAL_RST_MASK                   0x2u
#define LPUART_GLOBAL_RST_SHIFT                  1
#define LPUART_GLOBAL_RST_WIDTH                  1
#define LPUART_GLOBAL_RST(x)                     (((uint32)(((uint32)(x))<<LPUART_GLOBAL_RST_SHIFT))&LPUART_GLOBAL_RST_MASK)
/* PINCFG Bit Fields */
#define LPUART_PINCFG_TRGSEL_MASK                0x3u
#define LPUART_PINCFG_TRGSEL_SHIFT               0
#define LPUART_PINCFG_TRGSEL_WIDTH               2
#define LPUART_PINCFG_TRGSEL(x)                  (((uint32)(((uint32)(x))<<LPUART_PINCFG_TRGSEL_SHIFT))&LPUART_PINCFG_TRGSEL_MASK)
/* BAUD Bit Fields */
#define LPUART_BAUD_SBR_MASK                     0x1FFFu
#define LPUART_BAUD_SBR_SHIFT                    0
#define LPUART_BAUD_SBR_WIDTH                    13
#define LPUART_BAUD_SBR(x)                       (((uint32)(((uint32)(x))<<LPUART_BAUD_SBR_SHIFT))&LPUART_BAUD_SBR_MASK)
#define LPUART_BAUD_SBNS_MASK                    0x2000u
#define LPUART_BAUD_SBNS_SHIFT                   13
#define LPUART_BAUD_SBNS_WIDTH                   1
#define LPUART_BAUD_SBNS(x)                      (((uint32)(((uint32)(x))<<LPUART_BAUD_SBNS_SHIFT))&LPUART_BAUD_SBNS_MASK)
#define LPUART_BAUD_RXEDGIE_MASK                 0x4000u
#define LPUART_BAUD_RXEDGIE_SHIFT                14
#define LPUART_BAUD_RXEDGIE_WIDTH                1
#define LPUART_BAUD_RXEDGIE(x)                   (((uint32)(((uint32)(x))<<LPUART_BAUD_RXEDGIE_SHIFT))&LPUART_BAUD_RXEDGIE_MASK)
#define LPUART_BAUD_LBKDIE_MASK                  0x8000u
#define LPUART_BAUD_LBKDIE_SHIFT                 15
#define LPUART_BAUD_LBKDIE_WIDTH                 1
#define LPUART_BAUD_LBKDIE(x)                    (((uint32)(((uint32)(x))<<LPUART_BAUD_LBKDIE_SHIFT))&LPUART_BAUD_LBKDIE_MASK)
#define LPUART_BAUD_RESYNCDIS_MASK               0x10000u
#define LPUART_BAUD_RESYNCDIS_SHIFT              16
#define LPUART_BAUD_RESYNCDIS_WIDTH              1
#define LPUART_BAUD_RESYNCDIS(x)                 (((uint32)(((uint32)(x))<<LPUART_BAUD_RESYNCDIS_SHIFT))&LPUART_BAUD_RESYNCDIS_MASK)
#define LPUART_BAUD_BOTHEDGE_MASK                0x20000u
#define LPUART_BAUD_BOTHEDGE_SHIFT               17
#define LPUART_BAUD_BOTHEDGE_WIDTH               1
#define LPUART_BAUD_BOTHEDGE(x)                  (((uint32)(((uint32)(x))<<LPUART_BAUD_BOTHEDGE_SHIFT))&LPUART_BAUD_BOTHEDGE_MASK)
#define LPUART_BAUD_MATCFG_MASK                  0xC0000u
#define LPUART_BAUD_MATCFG_SHIFT                 18
#define LPUART_BAUD_MATCFG_WIDTH                 2
#define LPUART_BAUD_MATCFG(x)                    (((uint32)(((uint32)(x))<<LPUART_BAUD_MATCFG_SHIFT))&LPUART_BAUD_MATCFG_MASK)
#define LPUART_BAUD_RDMAE_MASK                   0x200000u
#define LPUART_BAUD_RDMAE_SHIFT                  21
#define LPUART_BAUD_RDMAE_WIDTH                  1
#define LPUART_BAUD_RDMAE(x)                     (((uint32)(((uint32)(x))<<LPUART_BAUD_RDMAE_SHIFT))&LPUART_BAUD_RDMAE_MASK)
#define LPUART_BAUD_TDMAE_MASK                   0x800000u
#define LPUART_BAUD_TDMAE_SHIFT                  23
#define LPUART_BAUD_TDMAE_WIDTH                  1
#define LPUART_BAUD_TDMAE(x)                     (((uint32)(((uint32)(x))<<LPUART_BAUD_TDMAE_SHIFT))&LPUART_BAUD_TDMAE_MASK)
#define LPUART_BAUD_OSR_MASK                     0x1F000000u
#define LPUART_BAUD_OSR_SHIFT                    24
#define LPUART_BAUD_OSR_WIDTH                    5
#define LPUART_BAUD_OSR(x)                       (((uint32)(((uint32)(x))<<LPUART_BAUD_OSR_SHIFT))&LPUART_BAUD_OSR_MASK)
#define LPUART_BAUD_M10_MASK                     0x20000000u
#define LPUART_BAUD_M10_SHIFT                    29
#define LPUART_BAUD_M10_WIDTH                    1
#define LPUART_BAUD_M10(x)                       (((uint32)(((uint32)(x))<<LPUART_BAUD_M10_SHIFT))&LPUART_BAUD_M10_MASK)
#define LPUART_BAUD_MAEN2_MASK                   0x40000000u
#define LPUART_BAUD_MAEN2_SHIFT                  30
#define LPUART_BAUD_MAEN2_WIDTH                  1
#define LPUART_BAUD_MAEN2(x)                     (((uint32)(((uint32)(x))<<LPUART_BAUD_MAEN2_SHIFT))&LPUART_BAUD_MAEN2_MASK)
#define LPUART_BAUD_MAEN1_MASK                   0x80000000u
#define LPUART_BAUD_MAEN1_SHIFT                  31
#define LPUART_BAUD_MAEN1_WIDTH                  1
#define LPUART_BAUD_MAEN1(x)                     (((uint32)(((uint32)(x))<<LPUART_BAUD_MAEN1_SHIFT))&LPUART_BAUD_MAEN1_MASK)
/* STAT Bit Fields */
#define LPUART_STAT_MA2F_MASK                    0x4000u
#define LPUART_STAT_MA2F_SHIFT                   14
#define LPUART_STAT_MA2F_WIDTH                   1
#define LPUART_STAT_MA2F(x)                      (((uint32)(((uint32)(x))<<LPUART_STAT_MA2F_SHIFT))&LPUART_STAT_MA2F_MASK)
#define LPUART_STAT_MA1F_MASK                    0x8000u
#define LPUART_STAT_MA1F_SHIFT                   15
#define LPUART_STAT_MA1F_WIDTH                   1
#define LPUART_STAT_MA1F(x)                      (((uint32)(((uint32)(x))<<LPUART_STAT_MA1F_SHIFT))&LPUART_STAT_MA1F_MASK)
#define LPUART_STAT_PF_MASK                      0x10000u
#define LPUART_STAT_PF_SHIFT                     16
#define LPUART_STAT_PF_WIDTH                     1
#define LPUART_STAT_PF(x)                        (((uint32)(((uint32)(x))<<LPUART_STAT_PF_SHIFT))&LPUART_STAT_PF_MASK)
#define LPUART_STAT_FE_MASK                      0x20000u
#define LPUART_STAT_FE_SHIFT                     17
#define LPUART_STAT_FE_WIDTH                     1
#define LPUART_STAT_FE(x)                        (((uint32)(((uint32)(x))<<LPUART_STAT_FE_SHIFT))&LPUART_STAT_FE_MASK)
#define LPUART_STAT_NF_MASK                      0x40000u
#define LPUART_STAT_NF_SHIFT                     18
#define LPUART_STAT_NF_WIDTH                     1
#define LPUART_STAT_NF(x)                        (((uint32)(((uint32)(x))<<LPUART_STAT_NF_SHIFT))&LPUART_STAT_NF_MASK)
#define LPUART_STAT_OR_MASK                      0x80000u
#define LPUART_STAT_OR_SHIFT                     19
#define LPUART_STAT_OR_WIDTH                     1
#define LPUART_STAT_OR(x)                        (((uint32)(((uint32)(x))<<LPUART_STAT_OR_SHIFT))&LPUART_STAT_OR_MASK)
#define LPUART_STAT_IDLE_MASK                    0x100000u
#define LPUART_STAT_IDLE_SHIFT                   20
#define LPUART_STAT_IDLE_WIDTH                   1
#define LPUART_STAT_IDLE(x)                      (((uint32)(((uint32)(x))<<LPUART_STAT_IDLE_SHIFT))&LPUART_STAT_IDLE_MASK)
#define LPUART_STAT_RDRF_MASK                    0x200000u
#define LPUART_STAT_RDRF_SHIFT                   21
#define LPUART_STAT_RDRF_WIDTH                   1
#define LPUART_STAT_RDRF(x)                      (((uint32)(((uint32)(x))<<LPUART_STAT_RDRF_SHIFT))&LPUART_STAT_RDRF_MASK)
#define LPUART_STAT_TC_MASK                      0x400000u
#define LPUART_STAT_TC_SHIFT                     22
#define LPUART_STAT_TC_WIDTH                     1
#define LPUART_STAT_TC(x)                        (((uint32)(((uint32)(x))<<LPUART_STAT_TC_SHIFT))&LPUART_STAT_TC_MASK)
#define LPUART_STAT_TDRE_MASK                    0x800000u
#define LPUART_STAT_TDRE_SHIFT                   23
#define LPUART_STAT_TDRE_WIDTH                   1
#define LPUART_STAT_TDRE(x)                      (((uint32)(((uint32)(x))<<LPUART_STAT_TDRE_SHIFT))&LPUART_STAT_TDRE_MASK)
#define LPUART_STAT_RAF_MASK                     0x1000000u
#define LPUART_STAT_RAF_SHIFT                    24
#define LPUART_STAT_RAF_WIDTH                    1
#define LPUART_STAT_RAF(x)                       (((uint32)(((uint32)(x))<<LPUART_STAT_RAF_SHIFT))&LPUART_STAT_RAF_MASK)
#define LPUART_STAT_LBKDE_MASK                   0x2000000u
#define LPUART_STAT_LBKDE_SHIFT                  25
#define LPUART_STAT_LBKDE_WIDTH                  1
#define LPUART_STAT_LBKDE(x)                     (((uint32)(((uint32)(x))<<LPUART_STAT_LBKDE_SHIFT))&LPUART_STAT_LBKDE_MASK)
#define LPUART_STAT_BRK13_MASK                   0x4000000u
#define LPUART_STAT_BRK13_SHIFT                  26
#define LPUART_STAT_BRK13_WIDTH                  1
#define LPUART_STAT_BRK13(x)                     (((uint32)(((uint32)(x))<<LPUART_STAT_BRK13_SHIFT))&LPUART_STAT_BRK13_MASK)
#define LPUART_STAT_RWUID_MASK                   0x8000000u
#define LPUART_STAT_RWUID_SHIFT                  27
#define LPUART_STAT_RWUID_WIDTH                  1
#define LPUART_STAT_RWUID(x)                     (((uint32)(((uint32)(x))<<LPUART_STAT_RWUID_SHIFT))&LPUART_STAT_RWUID_MASK)
#define LPUART_STAT_RXINV_MASK                   0x10000000u
#define LPUART_STAT_RXINV_SHIFT                  28
#define LPUART_STAT_RXINV_WIDTH                  1
#define LPUART_STAT_RXINV(x)                     (((uint32)(((uint32)(x))<<LPUART_STAT_RXINV_SHIFT))&LPUART_STAT_RXINV_MASK)
#define LPUART_STAT_MSBF_MASK                    0x20000000u
#define LPUART_STAT_MSBF_SHIFT                   29
#define LPUART_STAT_MSBF_WIDTH                   1
#define LPUART_STAT_MSBF(x)                      (((uint32)(((uint32)(x))<<LPUART_STAT_MSBF_SHIFT))&LPUART_STAT_MSBF_MASK)
#define LPUART_STAT_RXEDGIF_MASK                 0x40000000u
#define LPUART_STAT_RXEDGIF_SHIFT                30
#define LPUART_STAT_RXEDGIF_WIDTH                1
#define LPUART_STAT_RXEDGIF(x)                   (((uint32)(((uint32)(x))<<LPUART_STAT_RXEDGIF_SHIFT))&LPUART_STAT_RXEDGIF_MASK)
#define LPUART_STAT_LBKDIF_MASK                  0x80000000u
#define LPUART_STAT_LBKDIF_SHIFT                 31
#define LPUART_STAT_LBKDIF_WIDTH                 1
#define LPUART_STAT_LBKDIF(x)                    (((uint32)(((uint32)(x))<<LPUART_STAT_LBKDIF_SHIFT))&LPUART_STAT_LBKDIF_MASK)
/* CTRL Bit Fields */
#define LPUART_CTRL_PT_MASK                      0x1u
#define LPUART_CTRL_PT_SHIFT                     0
#define LPUART_CTRL_PT_WIDTH                     1
#define LPUART_CTRL_PT(x)                        (((uint32)(((uint32)(x))<<LPUART_CTRL_PT_SHIFT))&LPUART_CTRL_PT_MASK)
#define LPUART_CTRL_PE_MASK                      0x2u
#define LPUART_CTRL_PE_SHIFT                     1
#define LPUART_CTRL_PE_WIDTH                     1
#define LPUART_CTRL_PE(x)                        (((uint32)(((uint32)(x))<<LPUART_CTRL_PE_SHIFT))&LPUART_CTRL_PE_MASK)
#define LPUART_CTRL_ILT_MASK                     0x4u
#define LPUART_CTRL_ILT_SHIFT                    2
#define LPUART_CTRL_ILT_WIDTH                    1
#define LPUART_CTRL_ILT(x)                       (((uint32)(((uint32)(x))<<LPUART_CTRL_ILT_SHIFT))&LPUART_CTRL_ILT_MASK)
#define LPUART_CTRL_WAKE_MASK                    0x8u
#define LPUART_CTRL_WAKE_SHIFT                   3
#define LPUART_CTRL_WAKE_WIDTH                   1
#define LPUART_CTRL_WAKE(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_WAKE_SHIFT))&LPUART_CTRL_WAKE_MASK)
#define LPUART_CTRL_M_MASK                       0x10u
#define LPUART_CTRL_M_SHIFT                      4
#define LPUART_CTRL_M_WIDTH                      1
#define LPUART_CTRL_M(x)                         (((uint32)(((uint32)(x))<<LPUART_CTRL_M_SHIFT))&LPUART_CTRL_M_MASK)
#define LPUART_CTRL_RSRC_MASK                    0x20u
#define LPUART_CTRL_RSRC_SHIFT                   5
#define LPUART_CTRL_RSRC_WIDTH                   1
#define LPUART_CTRL_RSRC(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_RSRC_SHIFT))&LPUART_CTRL_RSRC_MASK)
#define LPUART_CTRL_DOZEEN_MASK                  0x40u
#define LPUART_CTRL_DOZEEN_SHIFT                 6
#define LPUART_CTRL_DOZEEN_WIDTH                 1
#define LPUART_CTRL_DOZEEN(x)                    (((uint32)(((uint32)(x))<<LPUART_CTRL_DOZEEN_SHIFT))&LPUART_CTRL_DOZEEN_MASK)
#define LPUART_CTRL_LOOPS_MASK                   0x80u
#define LPUART_CTRL_LOOPS_SHIFT                  7
#define LPUART_CTRL_LOOPS_WIDTH                  1
#define LPUART_CTRL_LOOPS(x)                     (((uint32)(((uint32)(x))<<LPUART_CTRL_LOOPS_SHIFT))&LPUART_CTRL_LOOPS_MASK)
#define LPUART_CTRL_IDLECFG_MASK                 0x700u
#define LPUART_CTRL_IDLECFG_SHIFT                8
#define LPUART_CTRL_IDLECFG_WIDTH                3
#define LPUART_CTRL_IDLECFG(x)                   (((uint32)(((uint32)(x))<<LPUART_CTRL_IDLECFG_SHIFT))&LPUART_CTRL_IDLECFG_MASK)
#define LPUART_CTRL_MA2IE_MASK                   0x4000u
#define LPUART_CTRL_MA2IE_SHIFT                  14
#define LPUART_CTRL_MA2IE_WIDTH                  1
#define LPUART_CTRL_MA2IE(x)                     (((uint32)(((uint32)(x))<<LPUART_CTRL_MA2IE_SHIFT))&LPUART_CTRL_MA2IE_MASK)
#define LPUART_CTRL_MA1IE_MASK                   0x8000u
#define LPUART_CTRL_MA1IE_SHIFT                  15
#define LPUART_CTRL_MA1IE_WIDTH                  1
#define LPUART_CTRL_MA1IE(x)                     (((uint32)(((uint32)(x))<<LPUART_CTRL_MA1IE_SHIFT))&LPUART_CTRL_MA1IE_MASK)
#define LPUART_CTRL_SBK_MASK                     0x10000u
#define LPUART_CTRL_SBK_SHIFT                    16
#define LPUART_CTRL_SBK_WIDTH                    1
#define LPUART_CTRL_SBK(x)                       (((uint32)(((uint32)(x))<<LPUART_CTRL_SBK_SHIFT))&LPUART_CTRL_SBK_MASK)
#define LPUART_CTRL_RWU_MASK                     0x20000u
#define LPUART_CTRL_RWU_SHIFT                    17
#define LPUART_CTRL_RWU_WIDTH                    1
#define LPUART_CTRL_RWU(x)                       (((uint32)(((uint32)(x))<<LPUART_CTRL_RWU_SHIFT))&LPUART_CTRL_RWU_MASK)
#define LPUART_CTRL_RE_MASK                      0x40000u
#define LPUART_CTRL_RE_SHIFT                     18
#define LPUART_CTRL_RE_WIDTH                     1
#define LPUART_CTRL_RE(x)                        (((uint32)(((uint32)(x))<<LPUART_CTRL_RE_SHIFT))&LPUART_CTRL_RE_MASK)
#define LPUART_CTRL_TE_MASK                      0x80000u
#define LPUART_CTRL_TE_SHIFT                     19
#define LPUART_CTRL_TE_WIDTH                     1
#define LPUART_CTRL_TE(x)                        (((uint32)(((uint32)(x))<<LPUART_CTRL_TE_SHIFT))&LPUART_CTRL_TE_MASK)
#define LPUART_CTRL_ILIE_MASK                    0x100000u
#define LPUART_CTRL_ILIE_SHIFT                   20
#define LPUART_CTRL_ILIE_WIDTH                   1
#define LPUART_CTRL_ILIE(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_ILIE_SHIFT))&LPUART_CTRL_ILIE_MASK)
#define LPUART_CTRL_RIE_MASK                     0x200000u
#define LPUART_CTRL_RIE_SHIFT                    21
#define LPUART_CTRL_RIE_WIDTH                    1
#define LPUART_CTRL_RIE(x)                       (((uint32)(((uint32)(x))<<LPUART_CTRL_RIE_SHIFT))&LPUART_CTRL_RIE_MASK)
#define LPUART_CTRL_TCIE_MASK                    0x400000u
#define LPUART_CTRL_TCIE_SHIFT                   22
#define LPUART_CTRL_TCIE_WIDTH                   1
#define LPUART_CTRL_TCIE(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_TCIE_SHIFT))&LPUART_CTRL_TCIE_MASK)
#define LPUART_CTRL_TIE_MASK                     0x800000u
#define LPUART_CTRL_TIE_SHIFT                    23
#define LPUART_CTRL_TIE_WIDTH                    1
#define LPUART_CTRL_TIE(x)                       (((uint32)(((uint32)(x))<<LPUART_CTRL_TIE_SHIFT))&LPUART_CTRL_TIE_MASK)
#define LPUART_CTRL_PEIE_MASK                    0x1000000u
#define LPUART_CTRL_PEIE_SHIFT                   24
#define LPUART_CTRL_PEIE_WIDTH                   1
#define LPUART_CTRL_PEIE(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_PEIE_SHIFT))&LPUART_CTRL_PEIE_MASK)
#define LPUART_CTRL_FEIE_MASK                    0x2000000u
#define LPUART_CTRL_FEIE_SHIFT                   25
#define LPUART_CTRL_FEIE_WIDTH                   1
#define LPUART_CTRL_FEIE(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_FEIE_SHIFT))&LPUART_CTRL_FEIE_MASK)
#define LPUART_CTRL_NEIE_MASK                    0x4000000u
#define LPUART_CTRL_NEIE_SHIFT                   26
#define LPUART_CTRL_NEIE_WIDTH                   1
#define LPUART_CTRL_NEIE(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_NEIE_SHIFT))&LPUART_CTRL_NEIE_MASK)
#define LPUART_CTRL_ORIE_MASK                    0x8000000u
#define LPUART_CTRL_ORIE_SHIFT                   27
#define LPUART_CTRL_ORIE_WIDTH                   1
#define LPUART_CTRL_ORIE(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_ORIE_SHIFT))&LPUART_CTRL_ORIE_MASK)
#define LPUART_CTRL_TXINV_MASK                   0x10000000u
#define LPUART_CTRL_TXINV_SHIFT                  28
#define LPUART_CTRL_TXINV_WIDTH                  1
#define LPUART_CTRL_TXINV(x)                     (((uint32)(((uint32)(x))<<LPUART_CTRL_TXINV_SHIFT))&LPUART_CTRL_TXINV_MASK)
#define LPUART_CTRL_TXDIR_MASK                   0x20000000u
#define LPUART_CTRL_TXDIR_SHIFT                  29
#define LPUART_CTRL_TXDIR_WIDTH                  1
#define LPUART_CTRL_TXDIR(x)                     (((uint32)(((uint32)(x))<<LPUART_CTRL_TXDIR_SHIFT))&LPUART_CTRL_TXDIR_MASK)
#define LPUART_CTRL_R9T8_MASK                    0x40000000u
#define LPUART_CTRL_R9T8_SHIFT                   30
#define LPUART_CTRL_R9T8_WIDTH                   1
#define LPUART_CTRL_R9T8(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_R9T8_SHIFT))&LPUART_CTRL_R9T8_MASK)
#define LPUART_CTRL_R8T9_MASK                    0x80000000u
#define LPUART_CTRL_R8T9_SHIFT                   31
#define LPUART_CTRL_R8T9_WIDTH                   1
#define LPUART_CTRL_R8T9(x)                      (((uint32)(((uint32)(x))<<LPUART_CTRL_R8T9_SHIFT))&LPUART_CTRL_R8T9_MASK)
/* DATA Bit Fields */
#define LPUART_DATA_R0T0_MASK                    0x1u
#define LPUART_DATA_R0T0_SHIFT                   0
#define LPUART_DATA_R0T0_WIDTH                   1
#define LPUART_DATA_R0T0(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R0T0_SHIFT))&LPUART_DATA_R0T0_MASK)
#define LPUART_DATA_R1T1_MASK                    0x2u
#define LPUART_DATA_R1T1_SHIFT                   1
#define LPUART_DATA_R1T1_WIDTH                   1
#define LPUART_DATA_R1T1(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R1T1_SHIFT))&LPUART_DATA_R1T1_MASK)
#define LPUART_DATA_R2T2_MASK                    0x4u
#define LPUART_DATA_R2T2_SHIFT                   2
#define LPUART_DATA_R2T2_WIDTH                   1
#define LPUART_DATA_R2T2(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R2T2_SHIFT))&LPUART_DATA_R2T2_MASK)
#define LPUART_DATA_R3T3_MASK                    0x8u
#define LPUART_DATA_R3T3_SHIFT                   3
#define LPUART_DATA_R3T3_WIDTH                   1
#define LPUART_DATA_R3T3(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R3T3_SHIFT))&LPUART_DATA_R3T3_MASK)
#define LPUART_DATA_R4T4_MASK                    0x10u
#define LPUART_DATA_R4T4_SHIFT                   4
#define LPUART_DATA_R4T4_WIDTH                   1
#define LPUART_DATA_R4T4(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R4T4_SHIFT))&LPUART_DATA_R4T4_MASK)
#define LPUART_DATA_R5T5_MASK                    0x20u
#define LPUART_DATA_R5T5_SHIFT                   5
#define LPUART_DATA_R5T5_WIDTH                   1
#define LPUART_DATA_R5T5(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R5T5_SHIFT))&LPUART_DATA_R5T5_MASK)
#define LPUART_DATA_R6T6_MASK                    0x40u
#define LPUART_DATA_R6T6_SHIFT                   6
#define LPUART_DATA_R6T6_WIDTH                   1
#define LPUART_DATA_R6T6(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R6T6_SHIFT))&LPUART_DATA_R6T6_MASK)
#define LPUART_DATA_R7T7_MASK                    0x80u
#define LPUART_DATA_R7T7_SHIFT                   7
#define LPUART_DATA_R7T7_WIDTH                   1
#define LPUART_DATA_R7T7(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R7T7_SHIFT))&LPUART_DATA_R7T7_MASK)
#define LPUART_DATA_R8T8_MASK                    0x100u
#define LPUART_DATA_R8T8_SHIFT                   8
#define LPUART_DATA_R8T8_WIDTH                   1
#define LPUART_DATA_R8T8(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R8T8_SHIFT))&LPUART_DATA_R8T8_MASK)
#define LPUART_DATA_R9T9_MASK                    0x200u
#define LPUART_DATA_R9T9_SHIFT                   9
#define LPUART_DATA_R9T9_WIDTH                   1
#define LPUART_DATA_R9T9(x)                      (((uint32)(((uint32)(x))<<LPUART_DATA_R9T9_SHIFT))&LPUART_DATA_R9T9_MASK)
#define LPUART_DATA_IDLINE_MASK                  0x800u
#define LPUART_DATA_IDLINE_SHIFT                 11
#define LPUART_DATA_IDLINE_WIDTH                 1
#define LPUART_DATA_IDLINE(x)                    (((uint32)(((uint32)(x))<<LPUART_DATA_IDLINE_SHIFT))&LPUART_DATA_IDLINE_MASK)
#define LPUART_DATA_RXEMPT_MASK                  0x1000u
#define LPUART_DATA_RXEMPT_SHIFT                 12
#define LPUART_DATA_RXEMPT_WIDTH                 1
#define LPUART_DATA_RXEMPT(x)                    (((uint32)(((uint32)(x))<<LPUART_DATA_RXEMPT_SHIFT))&LPUART_DATA_RXEMPT_MASK)
#define LPUART_DATA_FRETSC_MASK                  0x2000u
#define LPUART_DATA_FRETSC_SHIFT                 13
#define LPUART_DATA_FRETSC_WIDTH                 1
#define LPUART_DATA_FRETSC(x)                    (((uint32)(((uint32)(x))<<LPUART_DATA_FRETSC_SHIFT))&LPUART_DATA_FRETSC_MASK)
#define LPUART_DATA_PARITYE_MASK                 0x4000u
#define LPUART_DATA_PARITYE_SHIFT                14
#define LPUART_DATA_PARITYE_WIDTH                1
#define LPUART_DATA_PARITYE(x)                   (((uint32)(((uint32)(x))<<LPUART_DATA_PARITYE_SHIFT))&LPUART_DATA_PARITYE_MASK)
#define LPUART_DATA_NOISY_MASK                   0x8000u
#define LPUART_DATA_NOISY_SHIFT                  15
#define LPUART_DATA_NOISY_WIDTH                  1
#define LPUART_DATA_NOISY(x)                     (((uint32)(((uint32)(x))<<LPUART_DATA_NOISY_SHIFT))&LPUART_DATA_NOISY_MASK)
/* MATCH Bit Fields */
#define LPUART_MATCH_MA1_MASK                    0x3FFu
#define LPUART_MATCH_MA1_SHIFT                   0
#define LPUART_MATCH_MA1_WIDTH                   10
#define LPUART_MATCH_MA1(x)                      (((uint32)(((uint32)(x))<<LPUART_MATCH_MA1_SHIFT))&LPUART_MATCH_MA1_MASK)
#define LPUART_MATCH_MA2_MASK                    0x3FF0000u
#define LPUART_MATCH_MA2_SHIFT                   16
#define LPUART_MATCH_MA2_WIDTH                   10
#define LPUART_MATCH_MA2(x)                      (((uint32)(((uint32)(x))<<LPUART_MATCH_MA2_SHIFT))&LPUART_MATCH_MA2_MASK)
/* MODIR Bit Fields */
#define LPUART_MODIR_TXCTSE_MASK                 0x1u
#define LPUART_MODIR_TXCTSE_SHIFT                0
#define LPUART_MODIR_TXCTSE_WIDTH                1
#define LPUART_MODIR_TXCTSE(x)                   (((uint32)(((uint32)(x))<<LPUART_MODIR_TXCTSE_SHIFT))&LPUART_MODIR_TXCTSE_MASK)
#define LPUART_MODIR_TXRTSE_MASK                 0x2u
#define LPUART_MODIR_TXRTSE_SHIFT                1
#define LPUART_MODIR_TXRTSE_WIDTH                1
#define LPUART_MODIR_TXRTSE(x)                   (((uint32)(((uint32)(x))<<LPUART_MODIR_TXRTSE_SHIFT))&LPUART_MODIR_TXRTSE_MASK)
#define LPUART_MODIR_TXRTSPOL_MASK               0x4u
#define LPUART_MODIR_TXRTSPOL_SHIFT              2
#define LPUART_MODIR_TXRTSPOL_WIDTH              1
#define LPUART_MODIR_TXRTSPOL(x)                 (((uint32)(((uint32)(x))<<LPUART_MODIR_TXRTSPOL_SHIFT))&LPUART_MODIR_TXRTSPOL_MASK)
#define LPUART_MODIR_RXRTSE_MASK                 0x8u
#define LPUART_MODIR_RXRTSE_SHIFT                3
#define LPUART_MODIR_RXRTSE_WIDTH                1
#define LPUART_MODIR_RXRTSE(x)                   (((uint32)(((uint32)(x))<<LPUART_MODIR_RXRTSE_SHIFT))&LPUART_MODIR_RXRTSE_MASK)
#define LPUART_MODIR_TXCTSC_MASK                 0x10u
#define LPUART_MODIR_TXCTSC_SHIFT                4
#define LPUART_MODIR_TXCTSC_WIDTH                1
#define LPUART_MODIR_TXCTSC(x)                   (((uint32)(((uint32)(x))<<LPUART_MODIR_TXCTSC_SHIFT))&LPUART_MODIR_TXCTSC_MASK)
#define LPUART_MODIR_TXCTSSRC_MASK               0x20u
#define LPUART_MODIR_TXCTSSRC_SHIFT              5
#define LPUART_MODIR_TXCTSSRC_WIDTH              1
#define LPUART_MODIR_TXCTSSRC(x)                 (((uint32)(((uint32)(x))<<LPUART_MODIR_TXCTSSRC_SHIFT))&LPUART_MODIR_TXCTSSRC_MASK)
#define LPUART_MODIR_TNP_MASK                    0x30000u
#define LPUART_MODIR_TNP_SHIFT                   16
#define LPUART_MODIR_TNP_WIDTH                   2
#define LPUART_MODIR_TNP(x)                      (((uint32)(((uint32)(x))<<LPUART_MODIR_TNP_SHIFT))&LPUART_MODIR_TNP_MASK)
#define LPUART_MODIR_IREN_MASK                   0x40000u
#define LPUART_MODIR_IREN_SHIFT                  18
#define LPUART_MODIR_IREN_WIDTH                  1
#define LPUART_MODIR_IREN(x)                     (((uint32)(((uint32)(x))<<LPUART_MODIR_IREN_SHIFT))&LPUART_MODIR_IREN_MASK)

/*!
 * @}
 */ /* end of group LPUART_Register_Masks */


/* LPUART - Peripheral instance base addresses */
/** Peripheral LPUART0 base address */
#define LPUART0_BASE                             (0x4006A000u)
/** Peripheral LPUART0 base pointer */
#define LPUART0                                  ((LPUART_Type *)LPUART0_BASE)
#define LPUART0_BASE_PTR                         (LPUART0)
/** Peripheral LPUART1 base address */
#define LPUART1_BASE                             (0x4006B000u)
/** Peripheral LPUART1 base pointer */
#define LPUART1                                  ((LPUART_Type *)LPUART1_BASE)
#define LPUART1_BASE_PTR                         (LPUART1)
/** Peripheral LPUART2 base address */
#define LPUART2_BASE                             (0x4006C000u)
/** Peripheral LPUART2 base pointer */
#define LPUART2                                  ((LPUART_Type *)LPUART2_BASE)
#define LPUART2_BASE_PTR                         (LPUART2)
/** Peripheral LPUART3 base address */
#define LPUART3_BASE                             (0x4006D000u)
/** Peripheral LPUART3 base pointer */
#define LPUART3                                  ((LPUART_Type *)LPUART3_BASE)
#define LPUART3_BASE_PTR                         (LPUART3)
/** Array initializer of LPUART peripheral base addresses */
#define LPUART_BASE_ADDRS                        { LPUART0_BASE, LPUART1_BASE, LPUART2_BASE, LPUART3_BASE }
/** Array initializer of LPUART peripheral base pointers */
#define LPUART_BASE_PTRS                         { LPUART0, LPUART1, LPUART2, LPUART3 }

/* ----------------------------------------------------------------------------
   -- LPUART - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPUART_Register_Accessor_Macros LPUART - Register accessor macros
 * @{
 */


/* LPUART - Register instance definitions */
/* LPUART0 */
#define LPUART0_VERID                            LPUART_VERID_REG(LPUART0)
#define LPUART0_PARAM                            LPUART_PARAM_REG(LPUART0)
#define LPUART0_GLOBAL                           LPUART_GLOBAL_REG(LPUART0)
#define LPUART0_PINCFG                           LPUART_PINCFG_REG(LPUART0)
#define LPUART0_BAUD                             LPUART_BAUD_REG(LPUART0)
#define LPUART0_STAT                             LPUART_STAT_REG(LPUART0)
#define LPUART0_CTRL                             LPUART_CTRL_REG(LPUART0)
#define LPUART0_DATA                             LPUART_DATA_REG(LPUART0)
#define LPUART0_MATCH                            LPUART_MATCH_REG(LPUART0)
#define LPUART0_MODIR                            LPUART_MODIR_REG(LPUART0)
/* LPUART1 */
#define LPUART1_VERID                            LPUART_VERID_REG(LPUART1)
#define LPUART1_PARAM                            LPUART_PARAM_REG(LPUART1)
#define LPUART1_GLOBAL                           LPUART_GLOBAL_REG(LPUART1)
#define LPUART1_PINCFG                           LPUART_PINCFG_REG(LPUART1)
#define LPUART1_BAUD                             LPUART_BAUD_REG(LPUART1)
#define LPUART1_STAT                             LPUART_STAT_REG(LPUART1)
#define LPUART1_CTRL                             LPUART_CTRL_REG(LPUART1)
#define LPUART1_DATA                             LPUART_DATA_REG(LPUART1)
#define LPUART1_MATCH                            LPUART_MATCH_REG(LPUART1)
#define LPUART1_MODIR                            LPUART_MODIR_REG(LPUART1)
/* LPUART2 */
#define LPUART2_VERID                            LPUART_VERID_REG(LPUART2)
#define LPUART2_PARAM                            LPUART_PARAM_REG(LPUART2)
#define LPUART2_GLOBAL                           LPUART_GLOBAL_REG(LPUART2)
#define LPUART2_PINCFG                           LPUART_PINCFG_REG(LPUART2)
#define LPUART2_BAUD                             LPUART_BAUD_REG(LPUART2)
#define LPUART2_STAT                             LPUART_STAT_REG(LPUART2)
#define LPUART2_CTRL                             LPUART_CTRL_REG(LPUART2)
#define LPUART2_DATA                             LPUART_DATA_REG(LPUART2)
#define LPUART2_MATCH                            LPUART_MATCH_REG(LPUART2)
#define LPUART2_MODIR                            LPUART_MODIR_REG(LPUART2)
/* LPUART3 */
#define LPUART3_VERID                            LPUART_VERID_REG(LPUART3)
#define LPUART3_PARAM                            LPUART_PARAM_REG(LPUART3)
#define LPUART3_GLOBAL                           LPUART_GLOBAL_REG(LPUART3)
#define LPUART3_PINCFG                           LPUART_PINCFG_REG(LPUART3)
#define LPUART3_BAUD                             LPUART_BAUD_REG(LPUART3)
#define LPUART3_STAT                             LPUART_STAT_REG(LPUART3)
#define LPUART3_CTRL                             LPUART_CTRL_REG(LPUART3)
#define LPUART3_DATA                             LPUART_DATA_REG(LPUART3)
#define LPUART3_MATCH                            LPUART_MATCH_REG(LPUART3)
#define LPUART3_MODIR                            LPUART_MODIR_REG(LPUART3)

/*!
 * @}
 */ /* end of group LPUART_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group LPUART_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCM_Peripheral_Access_Layer MCM Peripheral Access Layer
 * @{
 */

/** MCM - Register Layout Typedef */
typedef struct {
       uint8 RESERVED_0[8];
  __I  uint16 PLASC;                               /**< Crossbar Switch (AXBS) Slave Configuration, offset: 0x8 */
  __I  uint16 PLAMC;                               /**< Crossbar Switch (AXBS) Master Configuration, offset: 0xA */
  __IO uint32 CPCR;                                /**< Core Platform Control Register, offset: 0xC */
  __IO uint32 ISCR;                                /**< Interrupt Status and Control Register, offset: 0x10 */
       uint8 RESERVED_1[12];
  __I  uint32 FADR;                                /**< Store Buffer Fault address register, offset: 0x20 */
  __I  uint32 FATR;                                /**< Store Buffer Fault Attributes register, offset: 0x24 */
  __I  uint32 FDR;                                 /**< Store Buffer Fault Data Register, offset: 0x28 */
       uint8 RESERVED_2[4];
  __IO uint32 PID;                                 /**< Process ID register, offset: 0x30 */
       uint8 RESERVED_3[12];
  __IO uint32 CPO;                                 /**< Compute Operation Control Register, offset: 0x40 */
       uint8 RESERVED_4[956];
  __IO uint32 LMDR[3];                             /**< Local Memory Descriptor Register, array offset: 0x400, array step: 0x4 */
       uint8 RESERVED_5[116];
  __IO uint32 LMPECR;                              /**< LMEM Parity & ECC Control Register, offset: 0x480 */
       uint8 RESERVED_6[4];
  __IO uint32 LMPEIR;                              /**< LMEM Parity & ECC Interrupt Register, offset: 0x488 */
       uint8 RESERVED_7[4];
  __I  uint32 LMFAR;                               /**< LMEM Fault Address Register, offset: 0x490 */
  __IO uint32 LMFATR;                              /**< LMEM Fault Attribute Register, offset: 0x494 */
       uint8 RESERVED_8[8];
  __I  uint32 LMFDHR;                              /**< LMEM Fault Data High Register, offset: 0x4A0 */
  __I  uint32 LMFDLR;                              /**< LMEM Fault Data Low Register, offset: 0x4A4 */
} MCM_Type, *MCM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- MCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCM_Register_Accessor_Macros MCM - Register accessor macros
 * @{
 */


/* MCM - Register accessors */
#define MCM_PLASC_REG(base)                      ((base)->PLASC)
#define MCM_PLAMC_REG(base)                      ((base)->PLAMC)
#define MCM_CPCR_REG(base)                       ((base)->CPCR)
#define MCM_ISCR_REG(base)                       ((base)->ISCR)
#define MCM_FADR_REG(base)                       ((base)->FADR)
#define MCM_FATR_REG(base)                       ((base)->FATR)
#define MCM_FDR_REG(base)                        ((base)->FDR)
#define MCM_PID_REG(base)                        ((base)->PID)
#define MCM_CPO_REG(base)                        ((base)->CPO)
#define MCM_LMDR_REG(base,index)                 ((base)->LMDR[index])
#define MCM_LMDR_COUNT                           3
#define MCM_LMPECR_REG(base)                     ((base)->LMPECR)
#define MCM_LMPEIR_REG(base)                     ((base)->LMPEIR)
#define MCM_LMFAR_REG(base)                      ((base)->LMFAR)
#define MCM_LMFATR_REG(base)                     ((base)->LMFATR)
#define MCM_LMFDHR_REG(base)                     ((base)->LMFDHR)
#define MCM_LMFDLR_REG(base)                     ((base)->LMFDLR)

/*!
 * @}
 */ /* end of group MCM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- MCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCM_Register_Masks MCM Register Masks
 * @{
 */

/* PLASC Bit Fields */
#define MCM_PLASC_ASC_MASK                       0xFFu
#define MCM_PLASC_ASC_SHIFT                      0
#define MCM_PLASC_ASC_WIDTH                      8
#define MCM_PLASC_ASC(x)                         (((uint16)(((uint16)(x))<<MCM_PLASC_ASC_SHIFT))&MCM_PLASC_ASC_MASK)
/* PLAMC Bit Fields */
#define MCM_PLAMC_AMC_MASK                       0xFFu
#define MCM_PLAMC_AMC_SHIFT                      0
#define MCM_PLAMC_AMC_WIDTH                      8
#define MCM_PLAMC_AMC(x)                         (((uint16)(((uint16)(x))<<MCM_PLAMC_AMC_SHIFT))&MCM_PLAMC_AMC_MASK)
/* CPCR Bit Fields */
#define MCM_CPCR_CBRR_MASK                       0x200u
#define MCM_CPCR_CBRR_SHIFT                      9
#define MCM_CPCR_CBRR_WIDTH                      1
#define MCM_CPCR_CBRR(x)                         (((uint32)(((uint32)(x))<<MCM_CPCR_CBRR_SHIFT))&MCM_CPCR_CBRR_MASK)
#define MCM_CPCR_SRAMUAP_MASK                    0x3000000u
#define MCM_CPCR_SRAMUAP_SHIFT                   24
#define MCM_CPCR_SRAMUAP_WIDTH                   2
#define MCM_CPCR_SRAMUAP(x)                      (((uint32)(((uint32)(x))<<MCM_CPCR_SRAMUAP_SHIFT))&MCM_CPCR_SRAMUAP_MASK)
#define MCM_CPCR_SRAMUWP_MASK                    0x4000000u
#define MCM_CPCR_SRAMUWP_SHIFT                   26
#define MCM_CPCR_SRAMUWP_WIDTH                   1
#define MCM_CPCR_SRAMUWP(x)                      (((uint32)(((uint32)(x))<<MCM_CPCR_SRAMUWP_SHIFT))&MCM_CPCR_SRAMUWP_MASK)
#define MCM_CPCR_SRAMLAP_MASK                    0x30000000u
#define MCM_CPCR_SRAMLAP_SHIFT                   28
#define MCM_CPCR_SRAMLAP_WIDTH                   2
#define MCM_CPCR_SRAMLAP(x)                      (((uint32)(((uint32)(x))<<MCM_CPCR_SRAMLAP_SHIFT))&MCM_CPCR_SRAMLAP_MASK)
#define MCM_CPCR_SRAMLWP_MASK                    0x40000000u
#define MCM_CPCR_SRAMLWP_SHIFT                   30
#define MCM_CPCR_SRAMLWP_WIDTH                   1
#define MCM_CPCR_SRAMLWP(x)                      (((uint32)(((uint32)(x))<<MCM_CPCR_SRAMLWP_SHIFT))&MCM_CPCR_SRAMLWP_MASK)
/* ISCR Bit Fields */
#define MCM_ISCR_CWBER_MASK                      0x10u
#define MCM_ISCR_CWBER_SHIFT                     4
#define MCM_ISCR_CWBER_WIDTH                     1
#define MCM_ISCR_CWBER(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_CWBER_SHIFT))&MCM_ISCR_CWBER_MASK)
#define MCM_ISCR_FIOC_MASK                       0x100u
#define MCM_ISCR_FIOC_SHIFT                      8
#define MCM_ISCR_FIOC_WIDTH                      1
#define MCM_ISCR_FIOC(x)                         (((uint32)(((uint32)(x))<<MCM_ISCR_FIOC_SHIFT))&MCM_ISCR_FIOC_MASK)
#define MCM_ISCR_FDZC_MASK                       0x200u
#define MCM_ISCR_FDZC_SHIFT                      9
#define MCM_ISCR_FDZC_WIDTH                      1
#define MCM_ISCR_FDZC(x)                         (((uint32)(((uint32)(x))<<MCM_ISCR_FDZC_SHIFT))&MCM_ISCR_FDZC_MASK)
#define MCM_ISCR_FOFC_MASK                       0x400u
#define MCM_ISCR_FOFC_SHIFT                      10
#define MCM_ISCR_FOFC_WIDTH                      1
#define MCM_ISCR_FOFC(x)                         (((uint32)(((uint32)(x))<<MCM_ISCR_FOFC_SHIFT))&MCM_ISCR_FOFC_MASK)
#define MCM_ISCR_FUFC_MASK                       0x800u
#define MCM_ISCR_FUFC_SHIFT                      11
#define MCM_ISCR_FUFC_WIDTH                      1
#define MCM_ISCR_FUFC(x)                         (((uint32)(((uint32)(x))<<MCM_ISCR_FUFC_SHIFT))&MCM_ISCR_FUFC_MASK)
#define MCM_ISCR_FIXC_MASK                       0x1000u
#define MCM_ISCR_FIXC_SHIFT                      12
#define MCM_ISCR_FIXC_WIDTH                      1
#define MCM_ISCR_FIXC(x)                         (((uint32)(((uint32)(x))<<MCM_ISCR_FIXC_SHIFT))&MCM_ISCR_FIXC_MASK)
#define MCM_ISCR_FIDC_MASK                       0x8000u
#define MCM_ISCR_FIDC_SHIFT                      15
#define MCM_ISCR_FIDC_WIDTH                      1
#define MCM_ISCR_FIDC(x)                         (((uint32)(((uint32)(x))<<MCM_ISCR_FIDC_SHIFT))&MCM_ISCR_FIDC_MASK)
#define MCM_ISCR_CWBEE_MASK                      0x100000u
#define MCM_ISCR_CWBEE_SHIFT                     20
#define MCM_ISCR_CWBEE_WIDTH                     1
#define MCM_ISCR_CWBEE(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_CWBEE_SHIFT))&MCM_ISCR_CWBEE_MASK)
#define MCM_ISCR_FIOCE_MASK                      0x1000000u
#define MCM_ISCR_FIOCE_SHIFT                     24
#define MCM_ISCR_FIOCE_WIDTH                     1
#define MCM_ISCR_FIOCE(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_FIOCE_SHIFT))&MCM_ISCR_FIOCE_MASK)
#define MCM_ISCR_FDZCE_MASK                      0x2000000u
#define MCM_ISCR_FDZCE_SHIFT                     25
#define MCM_ISCR_FDZCE_WIDTH                     1
#define MCM_ISCR_FDZCE(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_FDZCE_SHIFT))&MCM_ISCR_FDZCE_MASK)
#define MCM_ISCR_FOFCE_MASK                      0x4000000u
#define MCM_ISCR_FOFCE_SHIFT                     26
#define MCM_ISCR_FOFCE_WIDTH                     1
#define MCM_ISCR_FOFCE(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_FOFCE_SHIFT))&MCM_ISCR_FOFCE_MASK)
#define MCM_ISCR_FUFCE_MASK                      0x8000000u
#define MCM_ISCR_FUFCE_SHIFT                     27
#define MCM_ISCR_FUFCE_WIDTH                     1
#define MCM_ISCR_FUFCE(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_FUFCE_SHIFT))&MCM_ISCR_FUFCE_MASK)
#define MCM_ISCR_FIXCE_MASK                      0x10000000u
#define MCM_ISCR_FIXCE_SHIFT                     28
#define MCM_ISCR_FIXCE_WIDTH                     1
#define MCM_ISCR_FIXCE(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_FIXCE_SHIFT))&MCM_ISCR_FIXCE_MASK)
#define MCM_ISCR_FIDCE_MASK                      0x80000000u
#define MCM_ISCR_FIDCE_SHIFT                     31
#define MCM_ISCR_FIDCE_WIDTH                     1
#define MCM_ISCR_FIDCE(x)                        (((uint32)(((uint32)(x))<<MCM_ISCR_FIDCE_SHIFT))&MCM_ISCR_FIDCE_MASK)
/* FADR Bit Fields */
#define MCM_FADR_ADDRESS_MASK                    0xFFFFFFFFu
#define MCM_FADR_ADDRESS_SHIFT                   0
#define MCM_FADR_ADDRESS_WIDTH                   32
#define MCM_FADR_ADDRESS(x)                      (((uint32)(((uint32)(x))<<MCM_FADR_ADDRESS_SHIFT))&MCM_FADR_ADDRESS_MASK)
/* FATR Bit Fields */
#define MCM_FATR_BEDA_MASK                       0x1u
#define MCM_FATR_BEDA_SHIFT                      0
#define MCM_FATR_BEDA_WIDTH                      1
#define MCM_FATR_BEDA(x)                         (((uint32)(((uint32)(x))<<MCM_FATR_BEDA_SHIFT))&MCM_FATR_BEDA_MASK)
#define MCM_FATR_BEMD_MASK                       0x2u
#define MCM_FATR_BEMD_SHIFT                      1
#define MCM_FATR_BEMD_WIDTH                      1
#define MCM_FATR_BEMD(x)                         (((uint32)(((uint32)(x))<<MCM_FATR_BEMD_SHIFT))&MCM_FATR_BEMD_MASK)
#define MCM_FATR_BESZ_MASK                       0x30u
#define MCM_FATR_BESZ_SHIFT                      4
#define MCM_FATR_BESZ_WIDTH                      2
#define MCM_FATR_BESZ(x)                         (((uint32)(((uint32)(x))<<MCM_FATR_BESZ_SHIFT))&MCM_FATR_BESZ_MASK)
#define MCM_FATR_BEWT_MASK                       0x80u
#define MCM_FATR_BEWT_SHIFT                      7
#define MCM_FATR_BEWT_WIDTH                      1
#define MCM_FATR_BEWT(x)                         (((uint32)(((uint32)(x))<<MCM_FATR_BEWT_SHIFT))&MCM_FATR_BEWT_MASK)
#define MCM_FATR_BEMN_MASK                       0xF00u
#define MCM_FATR_BEMN_SHIFT                      8
#define MCM_FATR_BEMN_WIDTH                      4
#define MCM_FATR_BEMN(x)                         (((uint32)(((uint32)(x))<<MCM_FATR_BEMN_SHIFT))&MCM_FATR_BEMN_MASK)
#define MCM_FATR_BEOVR_MASK                      0x80000000u
#define MCM_FATR_BEOVR_SHIFT                     31
#define MCM_FATR_BEOVR_WIDTH                     1
#define MCM_FATR_BEOVR(x)                        (((uint32)(((uint32)(x))<<MCM_FATR_BEOVR_SHIFT))&MCM_FATR_BEOVR_MASK)
/* FDR Bit Fields */
#define MCM_FDR_DATA_MASK                        0xFFFFFFFFu
#define MCM_FDR_DATA_SHIFT                       0
#define MCM_FDR_DATA_WIDTH                       32
#define MCM_FDR_DATA(x)                          (((uint32)(((uint32)(x))<<MCM_FDR_DATA_SHIFT))&MCM_FDR_DATA_MASK)
/* PID Bit Fields */
#define MCM_PID_PID_MASK                         0xFFu
#define MCM_PID_PID_SHIFT                        0
#define MCM_PID_PID_WIDTH                        8
#define MCM_PID_PID(x)                           (((uint32)(((uint32)(x))<<MCM_PID_PID_SHIFT))&MCM_PID_PID_MASK)
/* CPO Bit Fields */
#define MCM_CPO_CPOREQ_MASK                      0x1u
#define MCM_CPO_CPOREQ_SHIFT                     0
#define MCM_CPO_CPOREQ_WIDTH                     1
#define MCM_CPO_CPOREQ(x)                        (((uint32)(((uint32)(x))<<MCM_CPO_CPOREQ_SHIFT))&MCM_CPO_CPOREQ_MASK)
#define MCM_CPO_CPOACK_MASK                      0x2u
#define MCM_CPO_CPOACK_SHIFT                     1
#define MCM_CPO_CPOACK_WIDTH                     1
#define MCM_CPO_CPOACK(x)                        (((uint32)(((uint32)(x))<<MCM_CPO_CPOACK_SHIFT))&MCM_CPO_CPOACK_MASK)
#define MCM_CPO_CPOWOI_MASK                      0x4u
#define MCM_CPO_CPOWOI_SHIFT                     2
#define MCM_CPO_CPOWOI_WIDTH                     1
#define MCM_CPO_CPOWOI(x)                        (((uint32)(((uint32)(x))<<MCM_CPO_CPOWOI_SHIFT))&MCM_CPO_CPOWOI_MASK)
/* LMDR Bit Fields */
#define MCM_LMDR_CF0_MASK                        0xFu
#define MCM_LMDR_CF0_SHIFT                       0
#define MCM_LMDR_CF0_WIDTH                       4
#define MCM_LMDR_CF0(x)                          (((uint32)(((uint32)(x))<<MCM_LMDR_CF0_SHIFT))&MCM_LMDR_CF0_MASK)
#define MCM_LMDR_CF1_MASK                        0xF0u
#define MCM_LMDR_CF1_SHIFT                       4
#define MCM_LMDR_CF1_WIDTH                       4
#define MCM_LMDR_CF1(x)                          (((uint32)(((uint32)(x))<<MCM_LMDR_CF1_SHIFT))&MCM_LMDR_CF1_MASK)
#define MCM_LMDR_MT_MASK                         0xE000u
#define MCM_LMDR_MT_SHIFT                        13
#define MCM_LMDR_MT_WIDTH                        3
#define MCM_LMDR_MT(x)                           (((uint32)(((uint32)(x))<<MCM_LMDR_MT_SHIFT))&MCM_LMDR_MT_MASK)
#define MCM_LMDR_RO_MASK                         0x10000u
#define MCM_LMDR_RO_SHIFT                        16
#define MCM_LMDR_RO_WIDTH                        1
#define MCM_LMDR_RO(x)                           (((uint32)(((uint32)(x))<<MCM_LMDR_RO_SHIFT))&MCM_LMDR_RO_MASK)
#define MCM_LMDR_DPW_MASK                        0xE0000u
#define MCM_LMDR_DPW_SHIFT                       17
#define MCM_LMDR_DPW_WIDTH                       3
#define MCM_LMDR_DPW(x)                          (((uint32)(((uint32)(x))<<MCM_LMDR_DPW_SHIFT))&MCM_LMDR_DPW_MASK)
#define MCM_LMDR_WY_MASK                         0xF00000u
#define MCM_LMDR_WY_SHIFT                        20
#define MCM_LMDR_WY_WIDTH                        4
#define MCM_LMDR_WY(x)                           (((uint32)(((uint32)(x))<<MCM_LMDR_WY_SHIFT))&MCM_LMDR_WY_MASK)
#define MCM_LMDR_LMSZ_MASK                       0xF000000u
#define MCM_LMDR_LMSZ_SHIFT                      24
#define MCM_LMDR_LMSZ_WIDTH                      4
#define MCM_LMDR_LMSZ(x)                         (((uint32)(((uint32)(x))<<MCM_LMDR_LMSZ_SHIFT))&MCM_LMDR_LMSZ_MASK)
#define MCM_LMDR_LMSZH_MASK                      0x10000000u
#define MCM_LMDR_LMSZH_SHIFT                     28
#define MCM_LMDR_LMSZH_WIDTH                     1
#define MCM_LMDR_LMSZH(x)                        (((uint32)(((uint32)(x))<<MCM_LMDR_LMSZH_SHIFT))&MCM_LMDR_LMSZH_MASK)
#define MCM_LMDR_V_MASK                          0x80000000u
#define MCM_LMDR_V_SHIFT                         31
#define MCM_LMDR_V_WIDTH                         1
#define MCM_LMDR_V(x)                            (((uint32)(((uint32)(x))<<MCM_LMDR_V_SHIFT))&MCM_LMDR_V_MASK)
/* LMPECR Bit Fields */
#define MCM_LMPECR_ERNCR_MASK                    0x1u
#define MCM_LMPECR_ERNCR_SHIFT                   0
#define MCM_LMPECR_ERNCR_WIDTH                   1
#define MCM_LMPECR_ERNCR(x)                      (((uint32)(((uint32)(x))<<MCM_LMPECR_ERNCR_SHIFT))&MCM_LMPECR_ERNCR_MASK)
#define MCM_LMPECR_ER1BR_MASK                    0x100u
#define MCM_LMPECR_ER1BR_SHIFT                   8
#define MCM_LMPECR_ER1BR_WIDTH                   1
#define MCM_LMPECR_ER1BR(x)                      (((uint32)(((uint32)(x))<<MCM_LMPECR_ER1BR_SHIFT))&MCM_LMPECR_ER1BR_MASK)
#define MCM_LMPECR_ERPR_MASK                     0x10000u
#define MCM_LMPECR_ERPR_SHIFT                    16
#define MCM_LMPECR_ERPR_WIDTH                    1
#define MCM_LMPECR_ERPR(x)                       (((uint32)(((uint32)(x))<<MCM_LMPECR_ERPR_SHIFT))&MCM_LMPECR_ERPR_MASK)
#define MCM_LMPECR_ECPR_MASK                     0x100000u
#define MCM_LMPECR_ECPR_SHIFT                    20
#define MCM_LMPECR_ECPR_WIDTH                    1
#define MCM_LMPECR_ECPR(x)                       (((uint32)(((uint32)(x))<<MCM_LMPECR_ECPR_SHIFT))&MCM_LMPECR_ECPR_MASK)
/* LMPEIR Bit Fields */
#define MCM_LMPEIR_ENC_MASK                      0xFFu
#define MCM_LMPEIR_ENC_SHIFT                     0
#define MCM_LMPEIR_ENC_WIDTH                     8
#define MCM_LMPEIR_ENC(x)                        (((uint32)(((uint32)(x))<<MCM_LMPEIR_ENC_SHIFT))&MCM_LMPEIR_ENC_MASK)
#define MCM_LMPEIR_E1B_MASK                      0xFF00u
#define MCM_LMPEIR_E1B_SHIFT                     8
#define MCM_LMPEIR_E1B_WIDTH                     8
#define MCM_LMPEIR_E1B(x)                        (((uint32)(((uint32)(x))<<MCM_LMPEIR_E1B_SHIFT))&MCM_LMPEIR_E1B_MASK)
#define MCM_LMPEIR_PE_MASK                       0xFF0000u
#define MCM_LMPEIR_PE_SHIFT                      16
#define MCM_LMPEIR_PE_WIDTH                      8
#define MCM_LMPEIR_PE(x)                         (((uint32)(((uint32)(x))<<MCM_LMPEIR_PE_SHIFT))&MCM_LMPEIR_PE_MASK)
#define MCM_LMPEIR_PEELOC_MASK                   0x1F000000u
#define MCM_LMPEIR_PEELOC_SHIFT                  24
#define MCM_LMPEIR_PEELOC_WIDTH                  5
#define MCM_LMPEIR_PEELOC(x)                     (((uint32)(((uint32)(x))<<MCM_LMPEIR_PEELOC_SHIFT))&MCM_LMPEIR_PEELOC_MASK)
#define MCM_LMPEIR_V_MASK                        0x80000000u
#define MCM_LMPEIR_V_SHIFT                       31
#define MCM_LMPEIR_V_WIDTH                       1
#define MCM_LMPEIR_V(x)                          (((uint32)(((uint32)(x))<<MCM_LMPEIR_V_SHIFT))&MCM_LMPEIR_V_MASK)
/* LMFAR Bit Fields */
#define MCM_LMFAR_EFADD_MASK                     0xFFFFFFFFu
#define MCM_LMFAR_EFADD_SHIFT                    0
#define MCM_LMFAR_EFADD_WIDTH                    32
#define MCM_LMFAR_EFADD(x)                       (((uint32)(((uint32)(x))<<MCM_LMFAR_EFADD_SHIFT))&MCM_LMFAR_EFADD_MASK)
/* LMFATR Bit Fields */
#define MCM_LMFATR_PEFPRT_MASK                   0xFu
#define MCM_LMFATR_PEFPRT_SHIFT                  0
#define MCM_LMFATR_PEFPRT_WIDTH                  4
#define MCM_LMFATR_PEFPRT(x)                     (((uint32)(((uint32)(x))<<MCM_LMFATR_PEFPRT_SHIFT))&MCM_LMFATR_PEFPRT_MASK)
#define MCM_LMFATR_PEFSIZE_MASK                  0x70u
#define MCM_LMFATR_PEFSIZE_SHIFT                 4
#define MCM_LMFATR_PEFSIZE_WIDTH                 3
#define MCM_LMFATR_PEFSIZE(x)                    (((uint32)(((uint32)(x))<<MCM_LMFATR_PEFSIZE_SHIFT))&MCM_LMFATR_PEFSIZE_MASK)
#define MCM_LMFATR_PEFW_MASK                     0x80u
#define MCM_LMFATR_PEFW_SHIFT                    7
#define MCM_LMFATR_PEFW_WIDTH                    1
#define MCM_LMFATR_PEFW(x)                       (((uint32)(((uint32)(x))<<MCM_LMFATR_PEFW_SHIFT))&MCM_LMFATR_PEFW_MASK)
#define MCM_LMFATR_PEFMST_MASK                   0xFF00u
#define MCM_LMFATR_PEFMST_SHIFT                  8
#define MCM_LMFATR_PEFMST_WIDTH                  8
#define MCM_LMFATR_PEFMST(x)                     (((uint32)(((uint32)(x))<<MCM_LMFATR_PEFMST_SHIFT))&MCM_LMFATR_PEFMST_MASK)
#define MCM_LMFATR_OVR_MASK                      0x80000000u
#define MCM_LMFATR_OVR_SHIFT                     31
#define MCM_LMFATR_OVR_WIDTH                     1
#define MCM_LMFATR_OVR(x)                        (((uint32)(((uint32)(x))<<MCM_LMFATR_OVR_SHIFT))&MCM_LMFATR_OVR_MASK)
/* LMFDHR Bit Fields */
#define MCM_LMFDHR_PEFDH_MASK                    0xFFFFFFFFu
#define MCM_LMFDHR_PEFDH_SHIFT                   0
#define MCM_LMFDHR_PEFDH_WIDTH                   32
#define MCM_LMFDHR_PEFDH(x)                      (((uint32)(((uint32)(x))<<MCM_LMFDHR_PEFDH_SHIFT))&MCM_LMFDHR_PEFDH_MASK)
/* LMFDLR Bit Fields */
#define MCM_LMFDLR_PEFDL_MASK                    0xFFFFFFFFu
#define MCM_LMFDLR_PEFDL_SHIFT                   0
#define MCM_LMFDLR_PEFDL_WIDTH                   32
#define MCM_LMFDLR_PEFDL(x)                      (((uint32)(((uint32)(x))<<MCM_LMFDLR_PEFDL_SHIFT))&MCM_LMFDLR_PEFDL_MASK)

/*!
 * @}
 */ /* end of group MCM_Register_Masks */


/* MCM - Peripheral instance base addresses */
/** Peripheral MCM base address */
#define MCM_BASE                                 (0xE0080000u)
/** Peripheral MCM base pointer */
#define MCM                                      ((MCM_Type *)MCM_BASE)
#define MCM_BASE_PTR                             (MCM)
/** Array initializer of MCM peripheral base addresses */
#define MCM_BASE_ADDRS                           { MCM_BASE }
/** Array initializer of MCM peripheral base pointers */
#define MCM_BASE_PTRS                            { MCM }

/* ----------------------------------------------------------------------------
   -- MCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MCM_Register_Accessor_Macros MCM - Register accessor macros
 * @{
 */


/* MCM - Register instance definitions */
/* MCM */
#define MCM_PLASC                                MCM_PLASC_REG(MCM)
#define MCM_PLAMC                                MCM_PLAMC_REG(MCM)
#define MCM_CPCR                                 MCM_CPCR_REG(MCM)
#define MCM_ISCR                                 MCM_ISCR_REG(MCM)
#define MCM_FADR                                 MCM_FADR_REG(MCM)
#define MCM_FATR                                 MCM_FATR_REG(MCM)
#define MCM_FDR                                  MCM_FDR_REG(MCM)
#define MCM_PID                                  MCM_PID_REG(MCM)
#define MCM_CPO                                  MCM_CPO_REG(MCM)
#define MCM_LMDR0                                MCM_LMDR_REG(MCM,0)
#define MCM_LMDR1                                MCM_LMDR_REG(MCM,1)
#define MCM_LMDR2                                MCM_LMDR_REG(MCM,2)
#define MCM_LMPECR                               MCM_LMPECR_REG(MCM)
#define MCM_LMPEIR                               MCM_LMPEIR_REG(MCM)
#define MCM_LMFAR                                MCM_LMFAR_REG(MCM)
#define MCM_LMFATR                               MCM_LMFATR_REG(MCM)
#define MCM_LMFDHR                               MCM_LMFDHR_REG(MCM)
#define MCM_LMFDLR                               MCM_LMFDLR_REG(MCM)

/* MCM - Register array accessors */
#define MCM_LMDR(index)                          MCM_LMDR_REG(MCM,index)

/*!
 * @}
 */ /* end of group MCM_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group MCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MPU_Peripheral_Access_Layer MPU Peripheral Access Layer
 * @{
 */

/** MPU - Register Layout Typedef */
typedef struct {
  __IO uint32 CESR;                                /**< Control/Error Status Register, offset: 0x0 */
       uint8 RESERVED_0[12];
  __I  uint32 EAR0;                                /**< Error Address Register, slave port n, offset: 0x10 */
  __I  uint32 EDR0;                                /**< Error Detail Register, slave port n, offset: 0x14 */
  __I  uint32 EAR1;                                /**< Error Address Register, slave port n, offset: 0x18 */
  __I  uint32 EDR1;                                /**< Error Detail Register, slave port n, offset: 0x1C */
  __I  uint32 EAR2;                                /**< Error Address Register, slave port n, offset: 0x20 */
  __I  uint32 EDR2;                                /**< Error Detail Register, slave port n, offset: 0x24 */
  __I  uint32 EAR3;                                /**< Error Address Register, slave port n, offset: 0x28 */
  __I  uint32 EDR3;                                /**< Error Detail Register, slave port n, offset: 0x2C */
  __I  uint32 EAR4;                                /**< Error Address Register, slave port n, offset: 0x30 */
  __I  uint32 EDR4;                                /**< Error Detail Register, slave port n, offset: 0x34 */
  __I  uint32 EAR5;                                /**< Error Address Register, slave port n, offset: 0x38 */
  __I  uint32 EDR5;                                /**< Error Detail Register, slave port n, offset: 0x3C */
  __I  uint32 EAR6;                                /**< Error Address Register, slave port n, offset: 0x40 */
  __I  uint32 EDR6;                                /**< Error Detail Register, slave port n, offset: 0x44 */
  __I  uint32 EAR7;                                /**< Error Address Register, slave port n, offset: 0x48 */
  __I  uint32 EDR7;                                /**< Error Detail Register, slave port n, offset: 0x4C */
       uint8 RESERVED_1[944];
  __IO uint32 RGD0_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x400 */
  __IO uint32 RGD0_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x404 */
  __IO uint32 RGD0_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x408 */
  __IO uint32 RGD0_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x40C */
  __IO uint32 RGD1_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x410 */
  __IO uint32 RGD1_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x414 */
  __IO uint32 RGD1_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x418 */
  __IO uint32 RGD1_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x41C */
  __IO uint32 RGD2_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x420 */
  __IO uint32 RGD2_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x424 */
  __IO uint32 RGD2_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x428 */
  __IO uint32 RGD2_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x42C */
  __IO uint32 RGD3_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x430 */
  __IO uint32 RGD3_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x434 */
  __IO uint32 RGD3_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x438 */
  __IO uint32 RGD3_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x43C */
  __IO uint32 RGD4_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x440 */
  __IO uint32 RGD4_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x444 */
  __IO uint32 RGD4_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x448 */
  __IO uint32 RGD4_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x44C */
  __IO uint32 RGD5_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x450 */
  __IO uint32 RGD5_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x454 */
  __IO uint32 RGD5_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x458 */
  __IO uint32 RGD5_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x45C */
  __IO uint32 RGD6_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x460 */
  __IO uint32 RGD6_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x464 */
  __IO uint32 RGD6_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x468 */
  __IO uint32 RGD6_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x46C */
  __IO uint32 RGD7_WORD0;                          /**< Region Descriptor n, Word 0, offset: 0x470 */
  __IO uint32 RGD7_WORD1;                          /**< Region Descriptor n, Word 1, offset: 0x474 */
  __IO uint32 RGD7_WORD2;                          /**< Region Descriptor n, Word 2, offset: 0x478 */
  __IO uint32 RGD7_WORD3;                          /**< Region Descriptor n, Word 3, offset: 0x47C */
       uint8 RESERVED_2[896];
  __IO uint32 RGDAAC0;                             /**< Region Descriptor Alternate Access Control n, offset: 0x800 */
  __IO uint32 RGDAAC1;                             /**< Region Descriptor Alternate Access Control n, offset: 0x804 */
  __IO uint32 RGDAAC2;                             /**< Region Descriptor Alternate Access Control n, offset: 0x808 */
  __IO uint32 RGDAAC3;                             /**< Region Descriptor Alternate Access Control n, offset: 0x80C */
  __IO uint32 RGDAAC4;                             /**< Region Descriptor Alternate Access Control n, offset: 0x810 */
  __IO uint32 RGDAAC5;                             /**< Region Descriptor Alternate Access Control n, offset: 0x814 */
  __IO uint32 RGDAAC6;                             /**< Region Descriptor Alternate Access Control n, offset: 0x818 */
  __IO uint32 RGDAAC7;                             /**< Region Descriptor Alternate Access Control n, offset: 0x81C */
} MPU_Type, *MPU_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- MPU - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MPU_Register_Accessor_Macros MPU - Register accessor macros
 * @{
 */


/* MPU - Register accessors */
#define MPU_CESR_REG(base)                       ((base)->CESR)
#define MPU_EAR0_REG(base)                       ((base)->EAR0)
#define MPU_EDR0_REG(base)                       ((base)->EDR0)
#define MPU_EAR1_REG(base)                       ((base)->EAR1)
#define MPU_EDR1_REG(base)                       ((base)->EDR1)
#define MPU_EAR2_REG(base)                       ((base)->EAR2)
#define MPU_EDR2_REG(base)                       ((base)->EDR2)
#define MPU_EAR3_REG(base)                       ((base)->EAR3)
#define MPU_EDR3_REG(base)                       ((base)->EDR3)
#define MPU_EAR4_REG(base)                       ((base)->EAR4)
#define MPU_EDR4_REG(base)                       ((base)->EDR4)
#define MPU_EAR5_REG(base)                       ((base)->EAR5)
#define MPU_EDR5_REG(base)                       ((base)->EDR5)
#define MPU_EAR6_REG(base)                       ((base)->EAR6)
#define MPU_EDR6_REG(base)                       ((base)->EDR6)
#define MPU_EAR7_REG(base)                       ((base)->EAR7)
#define MPU_EDR7_REG(base)                       ((base)->EDR7)
#define MPU_RGD0_WORD0_REG(base)                 ((base)->RGD0_WORD0)
#define MPU_RGD0_WORD1_REG(base)                 ((base)->RGD0_WORD1)
#define MPU_RGD0_WORD2_REG(base)                 ((base)->RGD0_WORD2)
#define MPU_RGD0_WORD3_REG(base)                 ((base)->RGD0_WORD3)
#define MPU_RGD1_WORD0_REG(base)                 ((base)->RGD1_WORD0)
#define MPU_RGD1_WORD1_REG(base)                 ((base)->RGD1_WORD1)
#define MPU_RGD1_WORD2_REG(base)                 ((base)->RGD1_WORD2)
#define MPU_RGD1_WORD3_REG(base)                 ((base)->RGD1_WORD3)
#define MPU_RGD2_WORD0_REG(base)                 ((base)->RGD2_WORD0)
#define MPU_RGD2_WORD1_REG(base)                 ((base)->RGD2_WORD1)
#define MPU_RGD2_WORD2_REG(base)                 ((base)->RGD2_WORD2)
#define MPU_RGD2_WORD3_REG(base)                 ((base)->RGD2_WORD3)
#define MPU_RGD3_WORD0_REG(base)                 ((base)->RGD3_WORD0)
#define MPU_RGD3_WORD1_REG(base)                 ((base)->RGD3_WORD1)
#define MPU_RGD3_WORD2_REG(base)                 ((base)->RGD3_WORD2)
#define MPU_RGD3_WORD3_REG(base)                 ((base)->RGD3_WORD3)
#define MPU_RGD4_WORD0_REG(base)                 ((base)->RGD4_WORD0)
#define MPU_RGD4_WORD1_REG(base)                 ((base)->RGD4_WORD1)
#define MPU_RGD4_WORD2_REG(base)                 ((base)->RGD4_WORD2)
#define MPU_RGD4_WORD3_REG(base)                 ((base)->RGD4_WORD3)
#define MPU_RGD5_WORD0_REG(base)                 ((base)->RGD5_WORD0)
#define MPU_RGD5_WORD1_REG(base)                 ((base)->RGD5_WORD1)
#define MPU_RGD5_WORD2_REG(base)                 ((base)->RGD5_WORD2)
#define MPU_RGD5_WORD3_REG(base)                 ((base)->RGD5_WORD3)
#define MPU_RGD6_WORD0_REG(base)                 ((base)->RGD6_WORD0)
#define MPU_RGD6_WORD1_REG(base)                 ((base)->RGD6_WORD1)
#define MPU_RGD6_WORD2_REG(base)                 ((base)->RGD6_WORD2)
#define MPU_RGD6_WORD3_REG(base)                 ((base)->RGD6_WORD3)
#define MPU_RGD7_WORD0_REG(base)                 ((base)->RGD7_WORD0)
#define MPU_RGD7_WORD1_REG(base)                 ((base)->RGD7_WORD1)
#define MPU_RGD7_WORD2_REG(base)                 ((base)->RGD7_WORD2)
#define MPU_RGD7_WORD3_REG(base)                 ((base)->RGD7_WORD3)
#define MPU_RGDAAC0_REG(base)                    ((base)->RGDAAC0)
#define MPU_RGDAAC1_REG(base)                    ((base)->RGDAAC1)
#define MPU_RGDAAC2_REG(base)                    ((base)->RGDAAC2)
#define MPU_RGDAAC3_REG(base)                    ((base)->RGDAAC3)
#define MPU_RGDAAC4_REG(base)                    ((base)->RGDAAC4)
#define MPU_RGDAAC5_REG(base)                    ((base)->RGDAAC5)
#define MPU_RGDAAC6_REG(base)                    ((base)->RGDAAC6)
#define MPU_RGDAAC7_REG(base)                    ((base)->RGDAAC7)

/*!
 * @}
 */ /* end of group MPU_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- MPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MPU_Register_Masks MPU Register Masks
 * @{
 */

/* CESR Bit Fields */
#define MPU_CESR_VLD_MASK                        0x1u
#define MPU_CESR_VLD_SHIFT                       0
#define MPU_CESR_VLD_WIDTH                       1
#define MPU_CESR_VLD(x)                          (((uint32)(((uint32)(x))<<MPU_CESR_VLD_SHIFT))&MPU_CESR_VLD_MASK)
#define MPU_CESR_NRGD_MASK                       0xF00u
#define MPU_CESR_NRGD_SHIFT                      8
#define MPU_CESR_NRGD_WIDTH                      4
#define MPU_CESR_NRGD(x)                         (((uint32)(((uint32)(x))<<MPU_CESR_NRGD_SHIFT))&MPU_CESR_NRGD_MASK)
#define MPU_CESR_NSP_MASK                        0xF000u
#define MPU_CESR_NSP_SHIFT                       12
#define MPU_CESR_NSP_WIDTH                       4
#define MPU_CESR_NSP(x)                          (((uint32)(((uint32)(x))<<MPU_CESR_NSP_SHIFT))&MPU_CESR_NSP_MASK)
#define MPU_CESR_HRL_MASK                        0xF0000u
#define MPU_CESR_HRL_SHIFT                       16
#define MPU_CESR_HRL_WIDTH                       4
#define MPU_CESR_HRL(x)                          (((uint32)(((uint32)(x))<<MPU_CESR_HRL_SHIFT))&MPU_CESR_HRL_MASK)
#define MPU_CESR_SPERR_MASK                      0xFF000000u
#define MPU_CESR_SPERR_SHIFT                     24
#define MPU_CESR_SPERR_WIDTH                     8
#define MPU_CESR_SPERR(x)                        (((uint32)(((uint32)(x))<<MPU_CESR_SPERR_SHIFT))&MPU_CESR_SPERR_MASK)
/* EAR0 Bit Fields */
#define MPU_EAR0_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR0_EADDR_SHIFT                     0
#define MPU_EAR0_EADDR_WIDTH                     32
#define MPU_EAR0_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR0_EADDR_SHIFT))&MPU_EAR0_EADDR_MASK)
/* EDR0 Bit Fields */
#define MPU_EDR0_ERW_MASK                        0x1u
#define MPU_EDR0_ERW_SHIFT                       0
#define MPU_EDR0_ERW_WIDTH                       1
#define MPU_EDR0_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR0_ERW_SHIFT))&MPU_EDR0_ERW_MASK)
#define MPU_EDR0_EATTR_MASK                      0xEu
#define MPU_EDR0_EATTR_SHIFT                     1
#define MPU_EDR0_EATTR_WIDTH                     3
#define MPU_EDR0_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR0_EATTR_SHIFT))&MPU_EDR0_EATTR_MASK)
#define MPU_EDR0_EMN_MASK                        0xF0u
#define MPU_EDR0_EMN_SHIFT                       4
#define MPU_EDR0_EMN_WIDTH                       4
#define MPU_EDR0_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR0_EMN_SHIFT))&MPU_EDR0_EMN_MASK)
#define MPU_EDR0_EPID_MASK                       0xFF00u
#define MPU_EDR0_EPID_SHIFT                      8
#define MPU_EDR0_EPID_WIDTH                      8
#define MPU_EDR0_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR0_EPID_SHIFT))&MPU_EDR0_EPID_MASK)
#define MPU_EDR0_EACD_MASK                       0xFFFF0000u
#define MPU_EDR0_EACD_SHIFT                      16
#define MPU_EDR0_EACD_WIDTH                      16
#define MPU_EDR0_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR0_EACD_SHIFT))&MPU_EDR0_EACD_MASK)
/* EAR1 Bit Fields */
#define MPU_EAR1_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR1_EADDR_SHIFT                     0
#define MPU_EAR1_EADDR_WIDTH                     32
#define MPU_EAR1_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR1_EADDR_SHIFT))&MPU_EAR1_EADDR_MASK)
/* EDR1 Bit Fields */
#define MPU_EDR1_ERW_MASK                        0x1u
#define MPU_EDR1_ERW_SHIFT                       0
#define MPU_EDR1_ERW_WIDTH                       1
#define MPU_EDR1_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR1_ERW_SHIFT))&MPU_EDR1_ERW_MASK)
#define MPU_EDR1_EATTR_MASK                      0xEu
#define MPU_EDR1_EATTR_SHIFT                     1
#define MPU_EDR1_EATTR_WIDTH                     3
#define MPU_EDR1_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR1_EATTR_SHIFT))&MPU_EDR1_EATTR_MASK)
#define MPU_EDR1_EMN_MASK                        0xF0u
#define MPU_EDR1_EMN_SHIFT                       4
#define MPU_EDR1_EMN_WIDTH                       4
#define MPU_EDR1_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR1_EMN_SHIFT))&MPU_EDR1_EMN_MASK)
#define MPU_EDR1_EPID_MASK                       0xFF00u
#define MPU_EDR1_EPID_SHIFT                      8
#define MPU_EDR1_EPID_WIDTH                      8
#define MPU_EDR1_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR1_EPID_SHIFT))&MPU_EDR1_EPID_MASK)
#define MPU_EDR1_EACD_MASK                       0xFFFF0000u
#define MPU_EDR1_EACD_SHIFT                      16
#define MPU_EDR1_EACD_WIDTH                      16
#define MPU_EDR1_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR1_EACD_SHIFT))&MPU_EDR1_EACD_MASK)
/* EAR2 Bit Fields */
#define MPU_EAR2_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR2_EADDR_SHIFT                     0
#define MPU_EAR2_EADDR_WIDTH                     32
#define MPU_EAR2_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR2_EADDR_SHIFT))&MPU_EAR2_EADDR_MASK)
/* EDR2 Bit Fields */
#define MPU_EDR2_ERW_MASK                        0x1u
#define MPU_EDR2_ERW_SHIFT                       0
#define MPU_EDR2_ERW_WIDTH                       1
#define MPU_EDR2_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR2_ERW_SHIFT))&MPU_EDR2_ERW_MASK)
#define MPU_EDR2_EATTR_MASK                      0xEu
#define MPU_EDR2_EATTR_SHIFT                     1
#define MPU_EDR2_EATTR_WIDTH                     3
#define MPU_EDR2_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR2_EATTR_SHIFT))&MPU_EDR2_EATTR_MASK)
#define MPU_EDR2_EMN_MASK                        0xF0u
#define MPU_EDR2_EMN_SHIFT                       4
#define MPU_EDR2_EMN_WIDTH                       4
#define MPU_EDR2_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR2_EMN_SHIFT))&MPU_EDR2_EMN_MASK)
#define MPU_EDR2_EPID_MASK                       0xFF00u
#define MPU_EDR2_EPID_SHIFT                      8
#define MPU_EDR2_EPID_WIDTH                      8
#define MPU_EDR2_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR2_EPID_SHIFT))&MPU_EDR2_EPID_MASK)
#define MPU_EDR2_EACD_MASK                       0xFFFF0000u
#define MPU_EDR2_EACD_SHIFT                      16
#define MPU_EDR2_EACD_WIDTH                      16
#define MPU_EDR2_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR2_EACD_SHIFT))&MPU_EDR2_EACD_MASK)
/* EAR3 Bit Fields */
#define MPU_EAR3_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR3_EADDR_SHIFT                     0
#define MPU_EAR3_EADDR_WIDTH                     32
#define MPU_EAR3_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR3_EADDR_SHIFT))&MPU_EAR3_EADDR_MASK)
/* EDR3 Bit Fields */
#define MPU_EDR3_ERW_MASK                        0x1u
#define MPU_EDR3_ERW_SHIFT                       0
#define MPU_EDR3_ERW_WIDTH                       1
#define MPU_EDR3_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR3_ERW_SHIFT))&MPU_EDR3_ERW_MASK)
#define MPU_EDR3_EATTR_MASK                      0xEu
#define MPU_EDR3_EATTR_SHIFT                     1
#define MPU_EDR3_EATTR_WIDTH                     3
#define MPU_EDR3_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR3_EATTR_SHIFT))&MPU_EDR3_EATTR_MASK)
#define MPU_EDR3_EMN_MASK                        0xF0u
#define MPU_EDR3_EMN_SHIFT                       4
#define MPU_EDR3_EMN_WIDTH                       4
#define MPU_EDR3_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR3_EMN_SHIFT))&MPU_EDR3_EMN_MASK)
#define MPU_EDR3_EPID_MASK                       0xFF00u
#define MPU_EDR3_EPID_SHIFT                      8
#define MPU_EDR3_EPID_WIDTH                      8
#define MPU_EDR3_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR3_EPID_SHIFT))&MPU_EDR3_EPID_MASK)
#define MPU_EDR3_EACD_MASK                       0xFFFF0000u
#define MPU_EDR3_EACD_SHIFT                      16
#define MPU_EDR3_EACD_WIDTH                      16
#define MPU_EDR3_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR3_EACD_SHIFT))&MPU_EDR3_EACD_MASK)
/* EAR4 Bit Fields */
#define MPU_EAR4_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR4_EADDR_SHIFT                     0
#define MPU_EAR4_EADDR_WIDTH                     32
#define MPU_EAR4_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR4_EADDR_SHIFT))&MPU_EAR4_EADDR_MASK)
/* EDR4 Bit Fields */
#define MPU_EDR4_ERW_MASK                        0x1u
#define MPU_EDR4_ERW_SHIFT                       0
#define MPU_EDR4_ERW_WIDTH                       1
#define MPU_EDR4_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR4_ERW_SHIFT))&MPU_EDR4_ERW_MASK)
#define MPU_EDR4_EATTR_MASK                      0xEu
#define MPU_EDR4_EATTR_SHIFT                     1
#define MPU_EDR4_EATTR_WIDTH                     3
#define MPU_EDR4_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR4_EATTR_SHIFT))&MPU_EDR4_EATTR_MASK)
#define MPU_EDR4_EMN_MASK                        0xF0u
#define MPU_EDR4_EMN_SHIFT                       4
#define MPU_EDR4_EMN_WIDTH                       4
#define MPU_EDR4_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR4_EMN_SHIFT))&MPU_EDR4_EMN_MASK)
#define MPU_EDR4_EPID_MASK                       0xFF00u
#define MPU_EDR4_EPID_SHIFT                      8
#define MPU_EDR4_EPID_WIDTH                      8
#define MPU_EDR4_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR4_EPID_SHIFT))&MPU_EDR4_EPID_MASK)
#define MPU_EDR4_EACD_MASK                       0xFFFF0000u
#define MPU_EDR4_EACD_SHIFT                      16
#define MPU_EDR4_EACD_WIDTH                      16
#define MPU_EDR4_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR4_EACD_SHIFT))&MPU_EDR4_EACD_MASK)
/* EAR5 Bit Fields */
#define MPU_EAR5_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR5_EADDR_SHIFT                     0
#define MPU_EAR5_EADDR_WIDTH                     32
#define MPU_EAR5_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR5_EADDR_SHIFT))&MPU_EAR5_EADDR_MASK)
/* EDR5 Bit Fields */
#define MPU_EDR5_ERW_MASK                        0x1u
#define MPU_EDR5_ERW_SHIFT                       0
#define MPU_EDR5_ERW_WIDTH                       1
#define MPU_EDR5_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR5_ERW_SHIFT))&MPU_EDR5_ERW_MASK)
#define MPU_EDR5_EATTR_MASK                      0xEu
#define MPU_EDR5_EATTR_SHIFT                     1
#define MPU_EDR5_EATTR_WIDTH                     3
#define MPU_EDR5_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR5_EATTR_SHIFT))&MPU_EDR5_EATTR_MASK)
#define MPU_EDR5_EMN_MASK                        0xF0u
#define MPU_EDR5_EMN_SHIFT                       4
#define MPU_EDR5_EMN_WIDTH                       4
#define MPU_EDR5_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR5_EMN_SHIFT))&MPU_EDR5_EMN_MASK)
#define MPU_EDR5_EPID_MASK                       0xFF00u
#define MPU_EDR5_EPID_SHIFT                      8
#define MPU_EDR5_EPID_WIDTH                      8
#define MPU_EDR5_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR5_EPID_SHIFT))&MPU_EDR5_EPID_MASK)
#define MPU_EDR5_EACD_MASK                       0xFFFF0000u
#define MPU_EDR5_EACD_SHIFT                      16
#define MPU_EDR5_EACD_WIDTH                      16
#define MPU_EDR5_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR5_EACD_SHIFT))&MPU_EDR5_EACD_MASK)
/* EAR6 Bit Fields */
#define MPU_EAR6_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR6_EADDR_SHIFT                     0
#define MPU_EAR6_EADDR_WIDTH                     32
#define MPU_EAR6_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR6_EADDR_SHIFT))&MPU_EAR6_EADDR_MASK)
/* EDR6 Bit Fields */
#define MPU_EDR6_ERW_MASK                        0x1u
#define MPU_EDR6_ERW_SHIFT                       0
#define MPU_EDR6_ERW_WIDTH                       1
#define MPU_EDR6_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR6_ERW_SHIFT))&MPU_EDR6_ERW_MASK)
#define MPU_EDR6_EATTR_MASK                      0xEu
#define MPU_EDR6_EATTR_SHIFT                     1
#define MPU_EDR6_EATTR_WIDTH                     3
#define MPU_EDR6_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR6_EATTR_SHIFT))&MPU_EDR6_EATTR_MASK)
#define MPU_EDR6_EMN_MASK                        0xF0u
#define MPU_EDR6_EMN_SHIFT                       4
#define MPU_EDR6_EMN_WIDTH                       4
#define MPU_EDR6_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR6_EMN_SHIFT))&MPU_EDR6_EMN_MASK)
#define MPU_EDR6_EPID_MASK                       0xFF00u
#define MPU_EDR6_EPID_SHIFT                      8
#define MPU_EDR6_EPID_WIDTH                      8
#define MPU_EDR6_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR6_EPID_SHIFT))&MPU_EDR6_EPID_MASK)
#define MPU_EDR6_EACD_MASK                       0xFFFF0000u
#define MPU_EDR6_EACD_SHIFT                      16
#define MPU_EDR6_EACD_WIDTH                      16
#define MPU_EDR6_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR6_EACD_SHIFT))&MPU_EDR6_EACD_MASK)
/* EAR7 Bit Fields */
#define MPU_EAR7_EADDR_MASK                      0xFFFFFFFFu
#define MPU_EAR7_EADDR_SHIFT                     0
#define MPU_EAR7_EADDR_WIDTH                     32
#define MPU_EAR7_EADDR(x)                        (((uint32)(((uint32)(x))<<MPU_EAR7_EADDR_SHIFT))&MPU_EAR7_EADDR_MASK)
/* EDR7 Bit Fields */
#define MPU_EDR7_ERW_MASK                        0x1u
#define MPU_EDR7_ERW_SHIFT                       0
#define MPU_EDR7_ERW_WIDTH                       1
#define MPU_EDR7_ERW(x)                          (((uint32)(((uint32)(x))<<MPU_EDR7_ERW_SHIFT))&MPU_EDR7_ERW_MASK)
#define MPU_EDR7_EATTR_MASK                      0xEu
#define MPU_EDR7_EATTR_SHIFT                     1
#define MPU_EDR7_EATTR_WIDTH                     3
#define MPU_EDR7_EATTR(x)                        (((uint32)(((uint32)(x))<<MPU_EDR7_EATTR_SHIFT))&MPU_EDR7_EATTR_MASK)
#define MPU_EDR7_EMN_MASK                        0xF0u
#define MPU_EDR7_EMN_SHIFT                       4
#define MPU_EDR7_EMN_WIDTH                       4
#define MPU_EDR7_EMN(x)                          (((uint32)(((uint32)(x))<<MPU_EDR7_EMN_SHIFT))&MPU_EDR7_EMN_MASK)
#define MPU_EDR7_EPID_MASK                       0xFF00u
#define MPU_EDR7_EPID_SHIFT                      8
#define MPU_EDR7_EPID_WIDTH                      8
#define MPU_EDR7_EPID(x)                         (((uint32)(((uint32)(x))<<MPU_EDR7_EPID_SHIFT))&MPU_EDR7_EPID_MASK)
#define MPU_EDR7_EACD_MASK                       0xFFFF0000u
#define MPU_EDR7_EACD_SHIFT                      16
#define MPU_EDR7_EACD_WIDTH                      16
#define MPU_EDR7_EACD(x)                         (((uint32)(((uint32)(x))<<MPU_EDR7_EACD_SHIFT))&MPU_EDR7_EACD_MASK)
/* RGD0_WORD0 Bit Fields */
#define MPU_RGD0_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD0_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD0_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD0_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD0_WORD0_SRTADDR_SHIFT))&MPU_RGD0_WORD0_SRTADDR_MASK)
/* RGD0_WORD1 Bit Fields */
#define MPU_RGD0_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD0_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD0_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD0_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD0_WORD1_ENDADDR_SHIFT))&MPU_RGD0_WORD1_ENDADDR_MASK)
/* RGD0_WORD2 Bit Fields */
#define MPU_RGD0_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD0_WORD2_M0UM_SHIFT                0
#define MPU_RGD0_WORD2_M0UM_WIDTH                3
#define MPU_RGD0_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M0UM_SHIFT))&MPU_RGD0_WORD2_M0UM_MASK)
#define MPU_RGD0_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD0_WORD2_M0SM_SHIFT                3
#define MPU_RGD0_WORD2_M0SM_WIDTH                2
#define MPU_RGD0_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M0SM_SHIFT))&MPU_RGD0_WORD2_M0SM_MASK)
#define MPU_RGD0_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD0_WORD2_M0PE_SHIFT                5
#define MPU_RGD0_WORD2_M0PE_WIDTH                1
#define MPU_RGD0_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M0PE_SHIFT))&MPU_RGD0_WORD2_M0PE_MASK)
#define MPU_RGD0_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD0_WORD2_M1UM_SHIFT                6
#define MPU_RGD0_WORD2_M1UM_WIDTH                3
#define MPU_RGD0_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M1UM_SHIFT))&MPU_RGD0_WORD2_M1UM_MASK)
#define MPU_RGD0_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD0_WORD2_M1SM_SHIFT                9
#define MPU_RGD0_WORD2_M1SM_WIDTH                2
#define MPU_RGD0_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M1SM_SHIFT))&MPU_RGD0_WORD2_M1SM_MASK)
#define MPU_RGD0_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD0_WORD2_M1PE_SHIFT                11
#define MPU_RGD0_WORD2_M1PE_WIDTH                1
#define MPU_RGD0_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M1PE_SHIFT))&MPU_RGD0_WORD2_M1PE_MASK)
#define MPU_RGD0_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD0_WORD2_M2UM_SHIFT                12
#define MPU_RGD0_WORD2_M2UM_WIDTH                3
#define MPU_RGD0_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M2UM_SHIFT))&MPU_RGD0_WORD2_M2UM_MASK)
#define MPU_RGD0_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD0_WORD2_M2SM_SHIFT                15
#define MPU_RGD0_WORD2_M2SM_WIDTH                2
#define MPU_RGD0_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M2SM_SHIFT))&MPU_RGD0_WORD2_M2SM_MASK)
#define MPU_RGD0_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD0_WORD2_M2PE_SHIFT                17
#define MPU_RGD0_WORD2_M2PE_WIDTH                1
#define MPU_RGD0_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M2PE_SHIFT))&MPU_RGD0_WORD2_M2PE_MASK)
#define MPU_RGD0_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD0_WORD2_M3UM_SHIFT                18
#define MPU_RGD0_WORD2_M3UM_WIDTH                3
#define MPU_RGD0_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M3UM_SHIFT))&MPU_RGD0_WORD2_M3UM_MASK)
#define MPU_RGD0_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD0_WORD2_M3SM_SHIFT                21
#define MPU_RGD0_WORD2_M3SM_WIDTH                2
#define MPU_RGD0_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M3SM_SHIFT))&MPU_RGD0_WORD2_M3SM_MASK)
#define MPU_RGD0_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD0_WORD2_M3PE_SHIFT                23
#define MPU_RGD0_WORD2_M3PE_WIDTH                1
#define MPU_RGD0_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M3PE_SHIFT))&MPU_RGD0_WORD2_M3PE_MASK)
#define MPU_RGD0_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD0_WORD2_M4WE_SHIFT                24
#define MPU_RGD0_WORD2_M4WE_WIDTH                1
#define MPU_RGD0_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M4WE_SHIFT))&MPU_RGD0_WORD2_M4WE_MASK)
#define MPU_RGD0_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD0_WORD2_M4RE_SHIFT                25
#define MPU_RGD0_WORD2_M4RE_WIDTH                1
#define MPU_RGD0_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M4RE_SHIFT))&MPU_RGD0_WORD2_M4RE_MASK)
#define MPU_RGD0_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD0_WORD2_M5WE_SHIFT                26
#define MPU_RGD0_WORD2_M5WE_WIDTH                1
#define MPU_RGD0_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M5WE_SHIFT))&MPU_RGD0_WORD2_M5WE_MASK)
#define MPU_RGD0_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD0_WORD2_M5RE_SHIFT                27
#define MPU_RGD0_WORD2_M5RE_WIDTH                1
#define MPU_RGD0_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M5RE_SHIFT))&MPU_RGD0_WORD2_M5RE_MASK)
#define MPU_RGD0_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD0_WORD2_M6WE_SHIFT                28
#define MPU_RGD0_WORD2_M6WE_WIDTH                1
#define MPU_RGD0_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M6WE_SHIFT))&MPU_RGD0_WORD2_M6WE_MASK)
#define MPU_RGD0_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD0_WORD2_M6RE_SHIFT                29
#define MPU_RGD0_WORD2_M6RE_WIDTH                1
#define MPU_RGD0_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M6RE_SHIFT))&MPU_RGD0_WORD2_M6RE_MASK)
#define MPU_RGD0_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD0_WORD2_M7WE_SHIFT                30
#define MPU_RGD0_WORD2_M7WE_WIDTH                1
#define MPU_RGD0_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M7WE_SHIFT))&MPU_RGD0_WORD2_M7WE_MASK)
#define MPU_RGD0_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD0_WORD2_M7RE_SHIFT                31
#define MPU_RGD0_WORD2_M7RE_WIDTH                1
#define MPU_RGD0_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD0_WORD2_M7RE_SHIFT))&MPU_RGD0_WORD2_M7RE_MASK)
/* RGD0_WORD3 Bit Fields */
#define MPU_RGD0_WORD3_VLD_MASK                  0x1u
#define MPU_RGD0_WORD3_VLD_SHIFT                 0
#define MPU_RGD0_WORD3_VLD_WIDTH                 1
#define MPU_RGD0_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD0_WORD3_VLD_SHIFT))&MPU_RGD0_WORD3_VLD_MASK)
#define MPU_RGD0_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD0_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD0_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD0_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD0_WORD3_PIDMASK_SHIFT))&MPU_RGD0_WORD3_PIDMASK_MASK)
#define MPU_RGD0_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD0_WORD3_PID_SHIFT                 24
#define MPU_RGD0_WORD3_PID_WIDTH                 8
#define MPU_RGD0_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD0_WORD3_PID_SHIFT))&MPU_RGD0_WORD3_PID_MASK)
/* RGD1_WORD0 Bit Fields */
#define MPU_RGD1_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD1_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD1_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD1_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD1_WORD0_SRTADDR_SHIFT))&MPU_RGD1_WORD0_SRTADDR_MASK)
/* RGD1_WORD1 Bit Fields */
#define MPU_RGD1_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD1_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD1_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD1_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD1_WORD1_ENDADDR_SHIFT))&MPU_RGD1_WORD1_ENDADDR_MASK)
/* RGD1_WORD2 Bit Fields */
#define MPU_RGD1_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD1_WORD2_M0UM_SHIFT                0
#define MPU_RGD1_WORD2_M0UM_WIDTH                3
#define MPU_RGD1_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M0UM_SHIFT))&MPU_RGD1_WORD2_M0UM_MASK)
#define MPU_RGD1_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD1_WORD2_M0SM_SHIFT                3
#define MPU_RGD1_WORD2_M0SM_WIDTH                2
#define MPU_RGD1_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M0SM_SHIFT))&MPU_RGD1_WORD2_M0SM_MASK)
#define MPU_RGD1_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD1_WORD2_M0PE_SHIFT                5
#define MPU_RGD1_WORD2_M0PE_WIDTH                1
#define MPU_RGD1_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M0PE_SHIFT))&MPU_RGD1_WORD2_M0PE_MASK)
#define MPU_RGD1_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD1_WORD2_M1UM_SHIFT                6
#define MPU_RGD1_WORD2_M1UM_WIDTH                3
#define MPU_RGD1_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M1UM_SHIFT))&MPU_RGD1_WORD2_M1UM_MASK)
#define MPU_RGD1_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD1_WORD2_M1SM_SHIFT                9
#define MPU_RGD1_WORD2_M1SM_WIDTH                2
#define MPU_RGD1_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M1SM_SHIFT))&MPU_RGD1_WORD2_M1SM_MASK)
#define MPU_RGD1_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD1_WORD2_M1PE_SHIFT                11
#define MPU_RGD1_WORD2_M1PE_WIDTH                1
#define MPU_RGD1_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M1PE_SHIFT))&MPU_RGD1_WORD2_M1PE_MASK)
#define MPU_RGD1_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD1_WORD2_M2UM_SHIFT                12
#define MPU_RGD1_WORD2_M2UM_WIDTH                3
#define MPU_RGD1_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M2UM_SHIFT))&MPU_RGD1_WORD2_M2UM_MASK)
#define MPU_RGD1_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD1_WORD2_M2SM_SHIFT                15
#define MPU_RGD1_WORD2_M2SM_WIDTH                2
#define MPU_RGD1_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M2SM_SHIFT))&MPU_RGD1_WORD2_M2SM_MASK)
#define MPU_RGD1_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD1_WORD2_M2PE_SHIFT                17
#define MPU_RGD1_WORD2_M2PE_WIDTH                1
#define MPU_RGD1_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M2PE_SHIFT))&MPU_RGD1_WORD2_M2PE_MASK)
#define MPU_RGD1_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD1_WORD2_M3UM_SHIFT                18
#define MPU_RGD1_WORD2_M3UM_WIDTH                3
#define MPU_RGD1_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M3UM_SHIFT))&MPU_RGD1_WORD2_M3UM_MASK)
#define MPU_RGD1_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD1_WORD2_M3SM_SHIFT                21
#define MPU_RGD1_WORD2_M3SM_WIDTH                2
#define MPU_RGD1_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M3SM_SHIFT))&MPU_RGD1_WORD2_M3SM_MASK)
#define MPU_RGD1_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD1_WORD2_M3PE_SHIFT                23
#define MPU_RGD1_WORD2_M3PE_WIDTH                1
#define MPU_RGD1_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M3PE_SHIFT))&MPU_RGD1_WORD2_M3PE_MASK)
#define MPU_RGD1_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD1_WORD2_M4WE_SHIFT                24
#define MPU_RGD1_WORD2_M4WE_WIDTH                1
#define MPU_RGD1_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M4WE_SHIFT))&MPU_RGD1_WORD2_M4WE_MASK)
#define MPU_RGD1_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD1_WORD2_M4RE_SHIFT                25
#define MPU_RGD1_WORD2_M4RE_WIDTH                1
#define MPU_RGD1_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M4RE_SHIFT))&MPU_RGD1_WORD2_M4RE_MASK)
#define MPU_RGD1_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD1_WORD2_M5WE_SHIFT                26
#define MPU_RGD1_WORD2_M5WE_WIDTH                1
#define MPU_RGD1_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M5WE_SHIFT))&MPU_RGD1_WORD2_M5WE_MASK)
#define MPU_RGD1_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD1_WORD2_M5RE_SHIFT                27
#define MPU_RGD1_WORD2_M5RE_WIDTH                1
#define MPU_RGD1_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M5RE_SHIFT))&MPU_RGD1_WORD2_M5RE_MASK)
#define MPU_RGD1_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD1_WORD2_M6WE_SHIFT                28
#define MPU_RGD1_WORD2_M6WE_WIDTH                1
#define MPU_RGD1_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M6WE_SHIFT))&MPU_RGD1_WORD2_M6WE_MASK)
#define MPU_RGD1_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD1_WORD2_M6RE_SHIFT                29
#define MPU_RGD1_WORD2_M6RE_WIDTH                1
#define MPU_RGD1_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M6RE_SHIFT))&MPU_RGD1_WORD2_M6RE_MASK)
#define MPU_RGD1_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD1_WORD2_M7WE_SHIFT                30
#define MPU_RGD1_WORD2_M7WE_WIDTH                1
#define MPU_RGD1_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M7WE_SHIFT))&MPU_RGD1_WORD2_M7WE_MASK)
#define MPU_RGD1_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD1_WORD2_M7RE_SHIFT                31
#define MPU_RGD1_WORD2_M7RE_WIDTH                1
#define MPU_RGD1_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD1_WORD2_M7RE_SHIFT))&MPU_RGD1_WORD2_M7RE_MASK)
/* RGD1_WORD3 Bit Fields */
#define MPU_RGD1_WORD3_VLD_MASK                  0x1u
#define MPU_RGD1_WORD3_VLD_SHIFT                 0
#define MPU_RGD1_WORD3_VLD_WIDTH                 1
#define MPU_RGD1_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD1_WORD3_VLD_SHIFT))&MPU_RGD1_WORD3_VLD_MASK)
#define MPU_RGD1_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD1_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD1_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD1_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD1_WORD3_PIDMASK_SHIFT))&MPU_RGD1_WORD3_PIDMASK_MASK)
#define MPU_RGD1_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD1_WORD3_PID_SHIFT                 24
#define MPU_RGD1_WORD3_PID_WIDTH                 8
#define MPU_RGD1_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD1_WORD3_PID_SHIFT))&MPU_RGD1_WORD3_PID_MASK)
/* RGD2_WORD0 Bit Fields */
#define MPU_RGD2_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD2_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD2_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD2_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD2_WORD0_SRTADDR_SHIFT))&MPU_RGD2_WORD0_SRTADDR_MASK)
/* RGD2_WORD1 Bit Fields */
#define MPU_RGD2_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD2_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD2_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD2_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD2_WORD1_ENDADDR_SHIFT))&MPU_RGD2_WORD1_ENDADDR_MASK)
/* RGD2_WORD2 Bit Fields */
#define MPU_RGD2_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD2_WORD2_M0UM_SHIFT                0
#define MPU_RGD2_WORD2_M0UM_WIDTH                3
#define MPU_RGD2_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M0UM_SHIFT))&MPU_RGD2_WORD2_M0UM_MASK)
#define MPU_RGD2_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD2_WORD2_M0SM_SHIFT                3
#define MPU_RGD2_WORD2_M0SM_WIDTH                2
#define MPU_RGD2_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M0SM_SHIFT))&MPU_RGD2_WORD2_M0SM_MASK)
#define MPU_RGD2_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD2_WORD2_M0PE_SHIFT                5
#define MPU_RGD2_WORD2_M0PE_WIDTH                1
#define MPU_RGD2_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M0PE_SHIFT))&MPU_RGD2_WORD2_M0PE_MASK)
#define MPU_RGD2_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD2_WORD2_M1UM_SHIFT                6
#define MPU_RGD2_WORD2_M1UM_WIDTH                3
#define MPU_RGD2_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M1UM_SHIFT))&MPU_RGD2_WORD2_M1UM_MASK)
#define MPU_RGD2_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD2_WORD2_M1SM_SHIFT                9
#define MPU_RGD2_WORD2_M1SM_WIDTH                2
#define MPU_RGD2_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M1SM_SHIFT))&MPU_RGD2_WORD2_M1SM_MASK)
#define MPU_RGD2_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD2_WORD2_M1PE_SHIFT                11
#define MPU_RGD2_WORD2_M1PE_WIDTH                1
#define MPU_RGD2_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M1PE_SHIFT))&MPU_RGD2_WORD2_M1PE_MASK)
#define MPU_RGD2_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD2_WORD2_M2UM_SHIFT                12
#define MPU_RGD2_WORD2_M2UM_WIDTH                3
#define MPU_RGD2_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M2UM_SHIFT))&MPU_RGD2_WORD2_M2UM_MASK)
#define MPU_RGD2_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD2_WORD2_M2SM_SHIFT                15
#define MPU_RGD2_WORD2_M2SM_WIDTH                2
#define MPU_RGD2_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M2SM_SHIFT))&MPU_RGD2_WORD2_M2SM_MASK)
#define MPU_RGD2_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD2_WORD2_M2PE_SHIFT                17
#define MPU_RGD2_WORD2_M2PE_WIDTH                1
#define MPU_RGD2_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M2PE_SHIFT))&MPU_RGD2_WORD2_M2PE_MASK)
#define MPU_RGD2_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD2_WORD2_M3UM_SHIFT                18
#define MPU_RGD2_WORD2_M3UM_WIDTH                3
#define MPU_RGD2_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M3UM_SHIFT))&MPU_RGD2_WORD2_M3UM_MASK)
#define MPU_RGD2_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD2_WORD2_M3SM_SHIFT                21
#define MPU_RGD2_WORD2_M3SM_WIDTH                2
#define MPU_RGD2_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M3SM_SHIFT))&MPU_RGD2_WORD2_M3SM_MASK)
#define MPU_RGD2_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD2_WORD2_M3PE_SHIFT                23
#define MPU_RGD2_WORD2_M3PE_WIDTH                1
#define MPU_RGD2_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M3PE_SHIFT))&MPU_RGD2_WORD2_M3PE_MASK)
#define MPU_RGD2_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD2_WORD2_M4WE_SHIFT                24
#define MPU_RGD2_WORD2_M4WE_WIDTH                1
#define MPU_RGD2_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M4WE_SHIFT))&MPU_RGD2_WORD2_M4WE_MASK)
#define MPU_RGD2_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD2_WORD2_M4RE_SHIFT                25
#define MPU_RGD2_WORD2_M4RE_WIDTH                1
#define MPU_RGD2_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M4RE_SHIFT))&MPU_RGD2_WORD2_M4RE_MASK)
#define MPU_RGD2_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD2_WORD2_M5WE_SHIFT                26
#define MPU_RGD2_WORD2_M5WE_WIDTH                1
#define MPU_RGD2_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M5WE_SHIFT))&MPU_RGD2_WORD2_M5WE_MASK)
#define MPU_RGD2_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD2_WORD2_M5RE_SHIFT                27
#define MPU_RGD2_WORD2_M5RE_WIDTH                1
#define MPU_RGD2_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M5RE_SHIFT))&MPU_RGD2_WORD2_M5RE_MASK)
#define MPU_RGD2_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD2_WORD2_M6WE_SHIFT                28
#define MPU_RGD2_WORD2_M6WE_WIDTH                1
#define MPU_RGD2_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M6WE_SHIFT))&MPU_RGD2_WORD2_M6WE_MASK)
#define MPU_RGD2_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD2_WORD2_M6RE_SHIFT                29
#define MPU_RGD2_WORD2_M6RE_WIDTH                1
#define MPU_RGD2_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M6RE_SHIFT))&MPU_RGD2_WORD2_M6RE_MASK)
#define MPU_RGD2_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD2_WORD2_M7WE_SHIFT                30
#define MPU_RGD2_WORD2_M7WE_WIDTH                1
#define MPU_RGD2_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M7WE_SHIFT))&MPU_RGD2_WORD2_M7WE_MASK)
#define MPU_RGD2_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD2_WORD2_M7RE_SHIFT                31
#define MPU_RGD2_WORD2_M7RE_WIDTH                1
#define MPU_RGD2_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD2_WORD2_M7RE_SHIFT))&MPU_RGD2_WORD2_M7RE_MASK)
/* RGD2_WORD3 Bit Fields */
#define MPU_RGD2_WORD3_VLD_MASK                  0x1u
#define MPU_RGD2_WORD3_VLD_SHIFT                 0
#define MPU_RGD2_WORD3_VLD_WIDTH                 1
#define MPU_RGD2_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD2_WORD3_VLD_SHIFT))&MPU_RGD2_WORD3_VLD_MASK)
#define MPU_RGD2_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD2_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD2_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD2_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD2_WORD3_PIDMASK_SHIFT))&MPU_RGD2_WORD3_PIDMASK_MASK)
#define MPU_RGD2_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD2_WORD3_PID_SHIFT                 24
#define MPU_RGD2_WORD3_PID_WIDTH                 8
#define MPU_RGD2_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD2_WORD3_PID_SHIFT))&MPU_RGD2_WORD3_PID_MASK)
/* RGD3_WORD0 Bit Fields */
#define MPU_RGD3_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD3_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD3_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD3_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD3_WORD0_SRTADDR_SHIFT))&MPU_RGD3_WORD0_SRTADDR_MASK)
/* RGD3_WORD1 Bit Fields */
#define MPU_RGD3_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD3_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD3_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD3_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD3_WORD1_ENDADDR_SHIFT))&MPU_RGD3_WORD1_ENDADDR_MASK)
/* RGD3_WORD2 Bit Fields */
#define MPU_RGD3_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD3_WORD2_M0UM_SHIFT                0
#define MPU_RGD3_WORD2_M0UM_WIDTH                3
#define MPU_RGD3_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M0UM_SHIFT))&MPU_RGD3_WORD2_M0UM_MASK)
#define MPU_RGD3_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD3_WORD2_M0SM_SHIFT                3
#define MPU_RGD3_WORD2_M0SM_WIDTH                2
#define MPU_RGD3_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M0SM_SHIFT))&MPU_RGD3_WORD2_M0SM_MASK)
#define MPU_RGD3_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD3_WORD2_M0PE_SHIFT                5
#define MPU_RGD3_WORD2_M0PE_WIDTH                1
#define MPU_RGD3_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M0PE_SHIFT))&MPU_RGD3_WORD2_M0PE_MASK)
#define MPU_RGD3_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD3_WORD2_M1UM_SHIFT                6
#define MPU_RGD3_WORD2_M1UM_WIDTH                3
#define MPU_RGD3_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M1UM_SHIFT))&MPU_RGD3_WORD2_M1UM_MASK)
#define MPU_RGD3_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD3_WORD2_M1SM_SHIFT                9
#define MPU_RGD3_WORD2_M1SM_WIDTH                2
#define MPU_RGD3_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M1SM_SHIFT))&MPU_RGD3_WORD2_M1SM_MASK)
#define MPU_RGD3_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD3_WORD2_M1PE_SHIFT                11
#define MPU_RGD3_WORD2_M1PE_WIDTH                1
#define MPU_RGD3_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M1PE_SHIFT))&MPU_RGD3_WORD2_M1PE_MASK)
#define MPU_RGD3_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD3_WORD2_M2UM_SHIFT                12
#define MPU_RGD3_WORD2_M2UM_WIDTH                3
#define MPU_RGD3_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M2UM_SHIFT))&MPU_RGD3_WORD2_M2UM_MASK)
#define MPU_RGD3_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD3_WORD2_M2SM_SHIFT                15
#define MPU_RGD3_WORD2_M2SM_WIDTH                2
#define MPU_RGD3_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M2SM_SHIFT))&MPU_RGD3_WORD2_M2SM_MASK)
#define MPU_RGD3_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD3_WORD2_M2PE_SHIFT                17
#define MPU_RGD3_WORD2_M2PE_WIDTH                1
#define MPU_RGD3_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M2PE_SHIFT))&MPU_RGD3_WORD2_M2PE_MASK)
#define MPU_RGD3_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD3_WORD2_M3UM_SHIFT                18
#define MPU_RGD3_WORD2_M3UM_WIDTH                3
#define MPU_RGD3_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M3UM_SHIFT))&MPU_RGD3_WORD2_M3UM_MASK)
#define MPU_RGD3_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD3_WORD2_M3SM_SHIFT                21
#define MPU_RGD3_WORD2_M3SM_WIDTH                2
#define MPU_RGD3_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M3SM_SHIFT))&MPU_RGD3_WORD2_M3SM_MASK)
#define MPU_RGD3_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD3_WORD2_M3PE_SHIFT                23
#define MPU_RGD3_WORD2_M3PE_WIDTH                1
#define MPU_RGD3_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M3PE_SHIFT))&MPU_RGD3_WORD2_M3PE_MASK)
#define MPU_RGD3_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD3_WORD2_M4WE_SHIFT                24
#define MPU_RGD3_WORD2_M4WE_WIDTH                1
#define MPU_RGD3_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M4WE_SHIFT))&MPU_RGD3_WORD2_M4WE_MASK)
#define MPU_RGD3_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD3_WORD2_M4RE_SHIFT                25
#define MPU_RGD3_WORD2_M4RE_WIDTH                1
#define MPU_RGD3_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M4RE_SHIFT))&MPU_RGD3_WORD2_M4RE_MASK)
#define MPU_RGD3_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD3_WORD2_M5WE_SHIFT                26
#define MPU_RGD3_WORD2_M5WE_WIDTH                1
#define MPU_RGD3_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M5WE_SHIFT))&MPU_RGD3_WORD2_M5WE_MASK)
#define MPU_RGD3_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD3_WORD2_M5RE_SHIFT                27
#define MPU_RGD3_WORD2_M5RE_WIDTH                1
#define MPU_RGD3_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M5RE_SHIFT))&MPU_RGD3_WORD2_M5RE_MASK)
#define MPU_RGD3_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD3_WORD2_M6WE_SHIFT                28
#define MPU_RGD3_WORD2_M6WE_WIDTH                1
#define MPU_RGD3_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M6WE_SHIFT))&MPU_RGD3_WORD2_M6WE_MASK)
#define MPU_RGD3_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD3_WORD2_M6RE_SHIFT                29
#define MPU_RGD3_WORD2_M6RE_WIDTH                1
#define MPU_RGD3_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M6RE_SHIFT))&MPU_RGD3_WORD2_M6RE_MASK)
#define MPU_RGD3_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD3_WORD2_M7WE_SHIFT                30
#define MPU_RGD3_WORD2_M7WE_WIDTH                1
#define MPU_RGD3_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M7WE_SHIFT))&MPU_RGD3_WORD2_M7WE_MASK)
#define MPU_RGD3_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD3_WORD2_M7RE_SHIFT                31
#define MPU_RGD3_WORD2_M7RE_WIDTH                1
#define MPU_RGD3_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD3_WORD2_M7RE_SHIFT))&MPU_RGD3_WORD2_M7RE_MASK)
/* RGD3_WORD3 Bit Fields */
#define MPU_RGD3_WORD3_VLD_MASK                  0x1u
#define MPU_RGD3_WORD3_VLD_SHIFT                 0
#define MPU_RGD3_WORD3_VLD_WIDTH                 1
#define MPU_RGD3_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD3_WORD3_VLD_SHIFT))&MPU_RGD3_WORD3_VLD_MASK)
#define MPU_RGD3_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD3_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD3_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD3_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD3_WORD3_PIDMASK_SHIFT))&MPU_RGD3_WORD3_PIDMASK_MASK)
#define MPU_RGD3_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD3_WORD3_PID_SHIFT                 24
#define MPU_RGD3_WORD3_PID_WIDTH                 8
#define MPU_RGD3_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD3_WORD3_PID_SHIFT))&MPU_RGD3_WORD3_PID_MASK)
/* RGD4_WORD0 Bit Fields */
#define MPU_RGD4_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD4_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD4_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD4_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD4_WORD0_SRTADDR_SHIFT))&MPU_RGD4_WORD0_SRTADDR_MASK)
/* RGD4_WORD1 Bit Fields */
#define MPU_RGD4_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD4_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD4_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD4_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD4_WORD1_ENDADDR_SHIFT))&MPU_RGD4_WORD1_ENDADDR_MASK)
/* RGD4_WORD2 Bit Fields */
#define MPU_RGD4_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD4_WORD2_M0UM_SHIFT                0
#define MPU_RGD4_WORD2_M0UM_WIDTH                3
#define MPU_RGD4_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M0UM_SHIFT))&MPU_RGD4_WORD2_M0UM_MASK)
#define MPU_RGD4_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD4_WORD2_M0SM_SHIFT                3
#define MPU_RGD4_WORD2_M0SM_WIDTH                2
#define MPU_RGD4_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M0SM_SHIFT))&MPU_RGD4_WORD2_M0SM_MASK)
#define MPU_RGD4_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD4_WORD2_M0PE_SHIFT                5
#define MPU_RGD4_WORD2_M0PE_WIDTH                1
#define MPU_RGD4_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M0PE_SHIFT))&MPU_RGD4_WORD2_M0PE_MASK)
#define MPU_RGD4_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD4_WORD2_M1UM_SHIFT                6
#define MPU_RGD4_WORD2_M1UM_WIDTH                3
#define MPU_RGD4_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M1UM_SHIFT))&MPU_RGD4_WORD2_M1UM_MASK)
#define MPU_RGD4_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD4_WORD2_M1SM_SHIFT                9
#define MPU_RGD4_WORD2_M1SM_WIDTH                2
#define MPU_RGD4_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M1SM_SHIFT))&MPU_RGD4_WORD2_M1SM_MASK)
#define MPU_RGD4_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD4_WORD2_M1PE_SHIFT                11
#define MPU_RGD4_WORD2_M1PE_WIDTH                1
#define MPU_RGD4_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M1PE_SHIFT))&MPU_RGD4_WORD2_M1PE_MASK)
#define MPU_RGD4_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD4_WORD2_M2UM_SHIFT                12
#define MPU_RGD4_WORD2_M2UM_WIDTH                3
#define MPU_RGD4_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M2UM_SHIFT))&MPU_RGD4_WORD2_M2UM_MASK)
#define MPU_RGD4_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD4_WORD2_M2SM_SHIFT                15
#define MPU_RGD4_WORD2_M2SM_WIDTH                2
#define MPU_RGD4_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M2SM_SHIFT))&MPU_RGD4_WORD2_M2SM_MASK)
#define MPU_RGD4_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD4_WORD2_M2PE_SHIFT                17
#define MPU_RGD4_WORD2_M2PE_WIDTH                1
#define MPU_RGD4_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M2PE_SHIFT))&MPU_RGD4_WORD2_M2PE_MASK)
#define MPU_RGD4_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD4_WORD2_M3UM_SHIFT                18
#define MPU_RGD4_WORD2_M3UM_WIDTH                3
#define MPU_RGD4_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M3UM_SHIFT))&MPU_RGD4_WORD2_M3UM_MASK)
#define MPU_RGD4_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD4_WORD2_M3SM_SHIFT                21
#define MPU_RGD4_WORD2_M3SM_WIDTH                2
#define MPU_RGD4_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M3SM_SHIFT))&MPU_RGD4_WORD2_M3SM_MASK)
#define MPU_RGD4_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD4_WORD2_M3PE_SHIFT                23
#define MPU_RGD4_WORD2_M3PE_WIDTH                1
#define MPU_RGD4_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M3PE_SHIFT))&MPU_RGD4_WORD2_M3PE_MASK)
#define MPU_RGD4_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD4_WORD2_M4WE_SHIFT                24
#define MPU_RGD4_WORD2_M4WE_WIDTH                1
#define MPU_RGD4_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M4WE_SHIFT))&MPU_RGD4_WORD2_M4WE_MASK)
#define MPU_RGD4_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD4_WORD2_M4RE_SHIFT                25
#define MPU_RGD4_WORD2_M4RE_WIDTH                1
#define MPU_RGD4_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M4RE_SHIFT))&MPU_RGD4_WORD2_M4RE_MASK)
#define MPU_RGD4_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD4_WORD2_M5WE_SHIFT                26
#define MPU_RGD4_WORD2_M5WE_WIDTH                1
#define MPU_RGD4_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M5WE_SHIFT))&MPU_RGD4_WORD2_M5WE_MASK)
#define MPU_RGD4_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD4_WORD2_M5RE_SHIFT                27
#define MPU_RGD4_WORD2_M5RE_WIDTH                1
#define MPU_RGD4_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M5RE_SHIFT))&MPU_RGD4_WORD2_M5RE_MASK)
#define MPU_RGD4_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD4_WORD2_M6WE_SHIFT                28
#define MPU_RGD4_WORD2_M6WE_WIDTH                1
#define MPU_RGD4_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M6WE_SHIFT))&MPU_RGD4_WORD2_M6WE_MASK)
#define MPU_RGD4_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD4_WORD2_M6RE_SHIFT                29
#define MPU_RGD4_WORD2_M6RE_WIDTH                1
#define MPU_RGD4_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M6RE_SHIFT))&MPU_RGD4_WORD2_M6RE_MASK)
#define MPU_RGD4_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD4_WORD2_M7WE_SHIFT                30
#define MPU_RGD4_WORD2_M7WE_WIDTH                1
#define MPU_RGD4_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M7WE_SHIFT))&MPU_RGD4_WORD2_M7WE_MASK)
#define MPU_RGD4_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD4_WORD2_M7RE_SHIFT                31
#define MPU_RGD4_WORD2_M7RE_WIDTH                1
#define MPU_RGD4_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD4_WORD2_M7RE_SHIFT))&MPU_RGD4_WORD2_M7RE_MASK)
/* RGD4_WORD3 Bit Fields */
#define MPU_RGD4_WORD3_VLD_MASK                  0x1u
#define MPU_RGD4_WORD3_VLD_SHIFT                 0
#define MPU_RGD4_WORD3_VLD_WIDTH                 1
#define MPU_RGD4_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD4_WORD3_VLD_SHIFT))&MPU_RGD4_WORD3_VLD_MASK)
#define MPU_RGD4_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD4_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD4_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD4_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD4_WORD3_PIDMASK_SHIFT))&MPU_RGD4_WORD3_PIDMASK_MASK)
#define MPU_RGD4_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD4_WORD3_PID_SHIFT                 24
#define MPU_RGD4_WORD3_PID_WIDTH                 8
#define MPU_RGD4_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD4_WORD3_PID_SHIFT))&MPU_RGD4_WORD3_PID_MASK)
/* RGD5_WORD0 Bit Fields */
#define MPU_RGD5_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD5_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD5_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD5_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD5_WORD0_SRTADDR_SHIFT))&MPU_RGD5_WORD0_SRTADDR_MASK)
/* RGD5_WORD1 Bit Fields */
#define MPU_RGD5_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD5_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD5_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD5_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD5_WORD1_ENDADDR_SHIFT))&MPU_RGD5_WORD1_ENDADDR_MASK)
/* RGD5_WORD2 Bit Fields */
#define MPU_RGD5_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD5_WORD2_M0UM_SHIFT                0
#define MPU_RGD5_WORD2_M0UM_WIDTH                3
#define MPU_RGD5_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M0UM_SHIFT))&MPU_RGD5_WORD2_M0UM_MASK)
#define MPU_RGD5_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD5_WORD2_M0SM_SHIFT                3
#define MPU_RGD5_WORD2_M0SM_WIDTH                2
#define MPU_RGD5_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M0SM_SHIFT))&MPU_RGD5_WORD2_M0SM_MASK)
#define MPU_RGD5_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD5_WORD2_M0PE_SHIFT                5
#define MPU_RGD5_WORD2_M0PE_WIDTH                1
#define MPU_RGD5_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M0PE_SHIFT))&MPU_RGD5_WORD2_M0PE_MASK)
#define MPU_RGD5_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD5_WORD2_M1UM_SHIFT                6
#define MPU_RGD5_WORD2_M1UM_WIDTH                3
#define MPU_RGD5_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M1UM_SHIFT))&MPU_RGD5_WORD2_M1UM_MASK)
#define MPU_RGD5_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD5_WORD2_M1SM_SHIFT                9
#define MPU_RGD5_WORD2_M1SM_WIDTH                2
#define MPU_RGD5_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M1SM_SHIFT))&MPU_RGD5_WORD2_M1SM_MASK)
#define MPU_RGD5_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD5_WORD2_M1PE_SHIFT                11
#define MPU_RGD5_WORD2_M1PE_WIDTH                1
#define MPU_RGD5_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M1PE_SHIFT))&MPU_RGD5_WORD2_M1PE_MASK)
#define MPU_RGD5_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD5_WORD2_M2UM_SHIFT                12
#define MPU_RGD5_WORD2_M2UM_WIDTH                3
#define MPU_RGD5_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M2UM_SHIFT))&MPU_RGD5_WORD2_M2UM_MASK)
#define MPU_RGD5_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD5_WORD2_M2SM_SHIFT                15
#define MPU_RGD5_WORD2_M2SM_WIDTH                2
#define MPU_RGD5_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M2SM_SHIFT))&MPU_RGD5_WORD2_M2SM_MASK)
#define MPU_RGD5_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD5_WORD2_M2PE_SHIFT                17
#define MPU_RGD5_WORD2_M2PE_WIDTH                1
#define MPU_RGD5_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M2PE_SHIFT))&MPU_RGD5_WORD2_M2PE_MASK)
#define MPU_RGD5_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD5_WORD2_M3UM_SHIFT                18
#define MPU_RGD5_WORD2_M3UM_WIDTH                3
#define MPU_RGD5_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M3UM_SHIFT))&MPU_RGD5_WORD2_M3UM_MASK)
#define MPU_RGD5_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD5_WORD2_M3SM_SHIFT                21
#define MPU_RGD5_WORD2_M3SM_WIDTH                2
#define MPU_RGD5_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M3SM_SHIFT))&MPU_RGD5_WORD2_M3SM_MASK)
#define MPU_RGD5_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD5_WORD2_M3PE_SHIFT                23
#define MPU_RGD5_WORD2_M3PE_WIDTH                1
#define MPU_RGD5_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M3PE_SHIFT))&MPU_RGD5_WORD2_M3PE_MASK)
#define MPU_RGD5_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD5_WORD2_M4WE_SHIFT                24
#define MPU_RGD5_WORD2_M4WE_WIDTH                1
#define MPU_RGD5_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M4WE_SHIFT))&MPU_RGD5_WORD2_M4WE_MASK)
#define MPU_RGD5_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD5_WORD2_M4RE_SHIFT                25
#define MPU_RGD5_WORD2_M4RE_WIDTH                1
#define MPU_RGD5_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M4RE_SHIFT))&MPU_RGD5_WORD2_M4RE_MASK)
#define MPU_RGD5_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD5_WORD2_M5WE_SHIFT                26
#define MPU_RGD5_WORD2_M5WE_WIDTH                1
#define MPU_RGD5_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M5WE_SHIFT))&MPU_RGD5_WORD2_M5WE_MASK)
#define MPU_RGD5_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD5_WORD2_M5RE_SHIFT                27
#define MPU_RGD5_WORD2_M5RE_WIDTH                1
#define MPU_RGD5_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M5RE_SHIFT))&MPU_RGD5_WORD2_M5RE_MASK)
#define MPU_RGD5_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD5_WORD2_M6WE_SHIFT                28
#define MPU_RGD5_WORD2_M6WE_WIDTH                1
#define MPU_RGD5_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M6WE_SHIFT))&MPU_RGD5_WORD2_M6WE_MASK)
#define MPU_RGD5_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD5_WORD2_M6RE_SHIFT                29
#define MPU_RGD5_WORD2_M6RE_WIDTH                1
#define MPU_RGD5_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M6RE_SHIFT))&MPU_RGD5_WORD2_M6RE_MASK)
#define MPU_RGD5_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD5_WORD2_M7WE_SHIFT                30
#define MPU_RGD5_WORD2_M7WE_WIDTH                1
#define MPU_RGD5_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M7WE_SHIFT))&MPU_RGD5_WORD2_M7WE_MASK)
#define MPU_RGD5_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD5_WORD2_M7RE_SHIFT                31
#define MPU_RGD5_WORD2_M7RE_WIDTH                1
#define MPU_RGD5_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD5_WORD2_M7RE_SHIFT))&MPU_RGD5_WORD2_M7RE_MASK)
/* RGD5_WORD3 Bit Fields */
#define MPU_RGD5_WORD3_VLD_MASK                  0x1u
#define MPU_RGD5_WORD3_VLD_SHIFT                 0
#define MPU_RGD5_WORD3_VLD_WIDTH                 1
#define MPU_RGD5_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD5_WORD3_VLD_SHIFT))&MPU_RGD5_WORD3_VLD_MASK)
#define MPU_RGD5_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD5_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD5_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD5_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD5_WORD3_PIDMASK_SHIFT))&MPU_RGD5_WORD3_PIDMASK_MASK)
#define MPU_RGD5_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD5_WORD3_PID_SHIFT                 24
#define MPU_RGD5_WORD3_PID_WIDTH                 8
#define MPU_RGD5_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD5_WORD3_PID_SHIFT))&MPU_RGD5_WORD3_PID_MASK)
/* RGD6_WORD0 Bit Fields */
#define MPU_RGD6_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD6_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD6_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD6_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD6_WORD0_SRTADDR_SHIFT))&MPU_RGD6_WORD0_SRTADDR_MASK)
/* RGD6_WORD1 Bit Fields */
#define MPU_RGD6_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD6_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD6_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD6_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD6_WORD1_ENDADDR_SHIFT))&MPU_RGD6_WORD1_ENDADDR_MASK)
/* RGD6_WORD2 Bit Fields */
#define MPU_RGD6_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD6_WORD2_M0UM_SHIFT                0
#define MPU_RGD6_WORD2_M0UM_WIDTH                3
#define MPU_RGD6_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M0UM_SHIFT))&MPU_RGD6_WORD2_M0UM_MASK)
#define MPU_RGD6_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD6_WORD2_M0SM_SHIFT                3
#define MPU_RGD6_WORD2_M0SM_WIDTH                2
#define MPU_RGD6_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M0SM_SHIFT))&MPU_RGD6_WORD2_M0SM_MASK)
#define MPU_RGD6_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD6_WORD2_M0PE_SHIFT                5
#define MPU_RGD6_WORD2_M0PE_WIDTH                1
#define MPU_RGD6_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M0PE_SHIFT))&MPU_RGD6_WORD2_M0PE_MASK)
#define MPU_RGD6_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD6_WORD2_M1UM_SHIFT                6
#define MPU_RGD6_WORD2_M1UM_WIDTH                3
#define MPU_RGD6_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M1UM_SHIFT))&MPU_RGD6_WORD2_M1UM_MASK)
#define MPU_RGD6_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD6_WORD2_M1SM_SHIFT                9
#define MPU_RGD6_WORD2_M1SM_WIDTH                2
#define MPU_RGD6_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M1SM_SHIFT))&MPU_RGD6_WORD2_M1SM_MASK)
#define MPU_RGD6_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD6_WORD2_M1PE_SHIFT                11
#define MPU_RGD6_WORD2_M1PE_WIDTH                1
#define MPU_RGD6_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M1PE_SHIFT))&MPU_RGD6_WORD2_M1PE_MASK)
#define MPU_RGD6_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD6_WORD2_M2UM_SHIFT                12
#define MPU_RGD6_WORD2_M2UM_WIDTH                3
#define MPU_RGD6_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M2UM_SHIFT))&MPU_RGD6_WORD2_M2UM_MASK)
#define MPU_RGD6_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD6_WORD2_M2SM_SHIFT                15
#define MPU_RGD6_WORD2_M2SM_WIDTH                2
#define MPU_RGD6_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M2SM_SHIFT))&MPU_RGD6_WORD2_M2SM_MASK)
#define MPU_RGD6_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD6_WORD2_M2PE_SHIFT                17
#define MPU_RGD6_WORD2_M2PE_WIDTH                1
#define MPU_RGD6_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M2PE_SHIFT))&MPU_RGD6_WORD2_M2PE_MASK)
#define MPU_RGD6_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD6_WORD2_M3UM_SHIFT                18
#define MPU_RGD6_WORD2_M3UM_WIDTH                3
#define MPU_RGD6_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M3UM_SHIFT))&MPU_RGD6_WORD2_M3UM_MASK)
#define MPU_RGD6_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD6_WORD2_M3SM_SHIFT                21
#define MPU_RGD6_WORD2_M3SM_WIDTH                2
#define MPU_RGD6_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M3SM_SHIFT))&MPU_RGD6_WORD2_M3SM_MASK)
#define MPU_RGD6_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD6_WORD2_M3PE_SHIFT                23
#define MPU_RGD6_WORD2_M3PE_WIDTH                1
#define MPU_RGD6_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M3PE_SHIFT))&MPU_RGD6_WORD2_M3PE_MASK)
#define MPU_RGD6_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD6_WORD2_M4WE_SHIFT                24
#define MPU_RGD6_WORD2_M4WE_WIDTH                1
#define MPU_RGD6_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M4WE_SHIFT))&MPU_RGD6_WORD2_M4WE_MASK)
#define MPU_RGD6_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD6_WORD2_M4RE_SHIFT                25
#define MPU_RGD6_WORD2_M4RE_WIDTH                1
#define MPU_RGD6_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M4RE_SHIFT))&MPU_RGD6_WORD2_M4RE_MASK)
#define MPU_RGD6_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD6_WORD2_M5WE_SHIFT                26
#define MPU_RGD6_WORD2_M5WE_WIDTH                1
#define MPU_RGD6_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M5WE_SHIFT))&MPU_RGD6_WORD2_M5WE_MASK)
#define MPU_RGD6_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD6_WORD2_M5RE_SHIFT                27
#define MPU_RGD6_WORD2_M5RE_WIDTH                1
#define MPU_RGD6_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M5RE_SHIFT))&MPU_RGD6_WORD2_M5RE_MASK)
#define MPU_RGD6_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD6_WORD2_M6WE_SHIFT                28
#define MPU_RGD6_WORD2_M6WE_WIDTH                1
#define MPU_RGD6_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M6WE_SHIFT))&MPU_RGD6_WORD2_M6WE_MASK)
#define MPU_RGD6_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD6_WORD2_M6RE_SHIFT                29
#define MPU_RGD6_WORD2_M6RE_WIDTH                1
#define MPU_RGD6_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M6RE_SHIFT))&MPU_RGD6_WORD2_M6RE_MASK)
#define MPU_RGD6_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD6_WORD2_M7WE_SHIFT                30
#define MPU_RGD6_WORD2_M7WE_WIDTH                1
#define MPU_RGD6_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M7WE_SHIFT))&MPU_RGD6_WORD2_M7WE_MASK)
#define MPU_RGD6_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD6_WORD2_M7RE_SHIFT                31
#define MPU_RGD6_WORD2_M7RE_WIDTH                1
#define MPU_RGD6_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD6_WORD2_M7RE_SHIFT))&MPU_RGD6_WORD2_M7RE_MASK)
/* RGD6_WORD3 Bit Fields */
#define MPU_RGD6_WORD3_VLD_MASK                  0x1u
#define MPU_RGD6_WORD3_VLD_SHIFT                 0
#define MPU_RGD6_WORD3_VLD_WIDTH                 1
#define MPU_RGD6_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD6_WORD3_VLD_SHIFT))&MPU_RGD6_WORD3_VLD_MASK)
#define MPU_RGD6_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD6_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD6_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD6_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD6_WORD3_PIDMASK_SHIFT))&MPU_RGD6_WORD3_PIDMASK_MASK)
#define MPU_RGD6_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD6_WORD3_PID_SHIFT                 24
#define MPU_RGD6_WORD3_PID_WIDTH                 8
#define MPU_RGD6_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD6_WORD3_PID_SHIFT))&MPU_RGD6_WORD3_PID_MASK)
/* RGD7_WORD0 Bit Fields */
#define MPU_RGD7_WORD0_SRTADDR_MASK              0xFFFFFFE0u
#define MPU_RGD7_WORD0_SRTADDR_SHIFT             5
#define MPU_RGD7_WORD0_SRTADDR_WIDTH             27
#define MPU_RGD7_WORD0_SRTADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD7_WORD0_SRTADDR_SHIFT))&MPU_RGD7_WORD0_SRTADDR_MASK)
/* RGD7_WORD1 Bit Fields */
#define MPU_RGD7_WORD1_ENDADDR_MASK              0xFFFFFFE0u
#define MPU_RGD7_WORD1_ENDADDR_SHIFT             5
#define MPU_RGD7_WORD1_ENDADDR_WIDTH             27
#define MPU_RGD7_WORD1_ENDADDR(x)                (((uint32)(((uint32)(x))<<MPU_RGD7_WORD1_ENDADDR_SHIFT))&MPU_RGD7_WORD1_ENDADDR_MASK)
/* RGD7_WORD2 Bit Fields */
#define MPU_RGD7_WORD2_M0UM_MASK                 0x7u
#define MPU_RGD7_WORD2_M0UM_SHIFT                0
#define MPU_RGD7_WORD2_M0UM_WIDTH                3
#define MPU_RGD7_WORD2_M0UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M0UM_SHIFT))&MPU_RGD7_WORD2_M0UM_MASK)
#define MPU_RGD7_WORD2_M0SM_MASK                 0x18u
#define MPU_RGD7_WORD2_M0SM_SHIFT                3
#define MPU_RGD7_WORD2_M0SM_WIDTH                2
#define MPU_RGD7_WORD2_M0SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M0SM_SHIFT))&MPU_RGD7_WORD2_M0SM_MASK)
#define MPU_RGD7_WORD2_M0PE_MASK                 0x20u
#define MPU_RGD7_WORD2_M0PE_SHIFT                5
#define MPU_RGD7_WORD2_M0PE_WIDTH                1
#define MPU_RGD7_WORD2_M0PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M0PE_SHIFT))&MPU_RGD7_WORD2_M0PE_MASK)
#define MPU_RGD7_WORD2_M1UM_MASK                 0x1C0u
#define MPU_RGD7_WORD2_M1UM_SHIFT                6
#define MPU_RGD7_WORD2_M1UM_WIDTH                3
#define MPU_RGD7_WORD2_M1UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M1UM_SHIFT))&MPU_RGD7_WORD2_M1UM_MASK)
#define MPU_RGD7_WORD2_M1SM_MASK                 0x600u
#define MPU_RGD7_WORD2_M1SM_SHIFT                9
#define MPU_RGD7_WORD2_M1SM_WIDTH                2
#define MPU_RGD7_WORD2_M1SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M1SM_SHIFT))&MPU_RGD7_WORD2_M1SM_MASK)
#define MPU_RGD7_WORD2_M1PE_MASK                 0x800u
#define MPU_RGD7_WORD2_M1PE_SHIFT                11
#define MPU_RGD7_WORD2_M1PE_WIDTH                1
#define MPU_RGD7_WORD2_M1PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M1PE_SHIFT))&MPU_RGD7_WORD2_M1PE_MASK)
#define MPU_RGD7_WORD2_M2UM_MASK                 0x7000u
#define MPU_RGD7_WORD2_M2UM_SHIFT                12
#define MPU_RGD7_WORD2_M2UM_WIDTH                3
#define MPU_RGD7_WORD2_M2UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M2UM_SHIFT))&MPU_RGD7_WORD2_M2UM_MASK)
#define MPU_RGD7_WORD2_M2SM_MASK                 0x18000u
#define MPU_RGD7_WORD2_M2SM_SHIFT                15
#define MPU_RGD7_WORD2_M2SM_WIDTH                2
#define MPU_RGD7_WORD2_M2SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M2SM_SHIFT))&MPU_RGD7_WORD2_M2SM_MASK)
#define MPU_RGD7_WORD2_M2PE_MASK                 0x20000u
#define MPU_RGD7_WORD2_M2PE_SHIFT                17
#define MPU_RGD7_WORD2_M2PE_WIDTH                1
#define MPU_RGD7_WORD2_M2PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M2PE_SHIFT))&MPU_RGD7_WORD2_M2PE_MASK)
#define MPU_RGD7_WORD2_M3UM_MASK                 0x1C0000u
#define MPU_RGD7_WORD2_M3UM_SHIFT                18
#define MPU_RGD7_WORD2_M3UM_WIDTH                3
#define MPU_RGD7_WORD2_M3UM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M3UM_SHIFT))&MPU_RGD7_WORD2_M3UM_MASK)
#define MPU_RGD7_WORD2_M3SM_MASK                 0x600000u
#define MPU_RGD7_WORD2_M3SM_SHIFT                21
#define MPU_RGD7_WORD2_M3SM_WIDTH                2
#define MPU_RGD7_WORD2_M3SM(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M3SM_SHIFT))&MPU_RGD7_WORD2_M3SM_MASK)
#define MPU_RGD7_WORD2_M3PE_MASK                 0x800000u
#define MPU_RGD7_WORD2_M3PE_SHIFT                23
#define MPU_RGD7_WORD2_M3PE_WIDTH                1
#define MPU_RGD7_WORD2_M3PE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M3PE_SHIFT))&MPU_RGD7_WORD2_M3PE_MASK)
#define MPU_RGD7_WORD2_M4WE_MASK                 0x1000000u
#define MPU_RGD7_WORD2_M4WE_SHIFT                24
#define MPU_RGD7_WORD2_M4WE_WIDTH                1
#define MPU_RGD7_WORD2_M4WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M4WE_SHIFT))&MPU_RGD7_WORD2_M4WE_MASK)
#define MPU_RGD7_WORD2_M4RE_MASK                 0x2000000u
#define MPU_RGD7_WORD2_M4RE_SHIFT                25
#define MPU_RGD7_WORD2_M4RE_WIDTH                1
#define MPU_RGD7_WORD2_M4RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M4RE_SHIFT))&MPU_RGD7_WORD2_M4RE_MASK)
#define MPU_RGD7_WORD2_M5WE_MASK                 0x4000000u
#define MPU_RGD7_WORD2_M5WE_SHIFT                26
#define MPU_RGD7_WORD2_M5WE_WIDTH                1
#define MPU_RGD7_WORD2_M5WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M5WE_SHIFT))&MPU_RGD7_WORD2_M5WE_MASK)
#define MPU_RGD7_WORD2_M5RE_MASK                 0x8000000u
#define MPU_RGD7_WORD2_M5RE_SHIFT                27
#define MPU_RGD7_WORD2_M5RE_WIDTH                1
#define MPU_RGD7_WORD2_M5RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M5RE_SHIFT))&MPU_RGD7_WORD2_M5RE_MASK)
#define MPU_RGD7_WORD2_M6WE_MASK                 0x10000000u
#define MPU_RGD7_WORD2_M6WE_SHIFT                28
#define MPU_RGD7_WORD2_M6WE_WIDTH                1
#define MPU_RGD7_WORD2_M6WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M6WE_SHIFT))&MPU_RGD7_WORD2_M6WE_MASK)
#define MPU_RGD7_WORD2_M6RE_MASK                 0x20000000u
#define MPU_RGD7_WORD2_M6RE_SHIFT                29
#define MPU_RGD7_WORD2_M6RE_WIDTH                1
#define MPU_RGD7_WORD2_M6RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M6RE_SHIFT))&MPU_RGD7_WORD2_M6RE_MASK)
#define MPU_RGD7_WORD2_M7WE_MASK                 0x40000000u
#define MPU_RGD7_WORD2_M7WE_SHIFT                30
#define MPU_RGD7_WORD2_M7WE_WIDTH                1
#define MPU_RGD7_WORD2_M7WE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M7WE_SHIFT))&MPU_RGD7_WORD2_M7WE_MASK)
#define MPU_RGD7_WORD2_M7RE_MASK                 0x80000000u
#define MPU_RGD7_WORD2_M7RE_SHIFT                31
#define MPU_RGD7_WORD2_M7RE_WIDTH                1
#define MPU_RGD7_WORD2_M7RE(x)                   (((uint32)(((uint32)(x))<<MPU_RGD7_WORD2_M7RE_SHIFT))&MPU_RGD7_WORD2_M7RE_MASK)
/* RGD7_WORD3 Bit Fields */
#define MPU_RGD7_WORD3_VLD_MASK                  0x1u
#define MPU_RGD7_WORD3_VLD_SHIFT                 0
#define MPU_RGD7_WORD3_VLD_WIDTH                 1
#define MPU_RGD7_WORD3_VLD(x)                    (((uint32)(((uint32)(x))<<MPU_RGD7_WORD3_VLD_SHIFT))&MPU_RGD7_WORD3_VLD_MASK)
#define MPU_RGD7_WORD3_PIDMASK_MASK              0xFF0000u
#define MPU_RGD7_WORD3_PIDMASK_SHIFT             16
#define MPU_RGD7_WORD3_PIDMASK_WIDTH             8
#define MPU_RGD7_WORD3_PIDMASK(x)                (((uint32)(((uint32)(x))<<MPU_RGD7_WORD3_PIDMASK_SHIFT))&MPU_RGD7_WORD3_PIDMASK_MASK)
#define MPU_RGD7_WORD3_PID_MASK                  0xFF000000u
#define MPU_RGD7_WORD3_PID_SHIFT                 24
#define MPU_RGD7_WORD3_PID_WIDTH                 8
#define MPU_RGD7_WORD3_PID(x)                    (((uint32)(((uint32)(x))<<MPU_RGD7_WORD3_PID_SHIFT))&MPU_RGD7_WORD3_PID_MASK)
/* RGDAAC0 Bit Fields */
#define MPU_RGDAAC0_M0UM_MASK                    0x7u
#define MPU_RGDAAC0_M0UM_SHIFT                   0
#define MPU_RGDAAC0_M0UM_WIDTH                   3
#define MPU_RGDAAC0_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M0UM_SHIFT))&MPU_RGDAAC0_M0UM_MASK)
#define MPU_RGDAAC0_M0SM_MASK                    0x18u
#define MPU_RGDAAC0_M0SM_SHIFT                   3
#define MPU_RGDAAC0_M0SM_WIDTH                   2
#define MPU_RGDAAC0_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M0SM_SHIFT))&MPU_RGDAAC0_M0SM_MASK)
#define MPU_RGDAAC0_M0PE_MASK                    0x20u
#define MPU_RGDAAC0_M0PE_SHIFT                   5
#define MPU_RGDAAC0_M0PE_WIDTH                   1
#define MPU_RGDAAC0_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M0PE_SHIFT))&MPU_RGDAAC0_M0PE_MASK)
#define MPU_RGDAAC0_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC0_M1UM_SHIFT                   6
#define MPU_RGDAAC0_M1UM_WIDTH                   3
#define MPU_RGDAAC0_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M1UM_SHIFT))&MPU_RGDAAC0_M1UM_MASK)
#define MPU_RGDAAC0_M1SM_MASK                    0x600u
#define MPU_RGDAAC0_M1SM_SHIFT                   9
#define MPU_RGDAAC0_M1SM_WIDTH                   2
#define MPU_RGDAAC0_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M1SM_SHIFT))&MPU_RGDAAC0_M1SM_MASK)
#define MPU_RGDAAC0_M1PE_MASK                    0x800u
#define MPU_RGDAAC0_M1PE_SHIFT                   11
#define MPU_RGDAAC0_M1PE_WIDTH                   1
#define MPU_RGDAAC0_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M1PE_SHIFT))&MPU_RGDAAC0_M1PE_MASK)
#define MPU_RGDAAC0_M2UM_MASK                    0x7000u
#define MPU_RGDAAC0_M2UM_SHIFT                   12
#define MPU_RGDAAC0_M2UM_WIDTH                   3
#define MPU_RGDAAC0_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M2UM_SHIFT))&MPU_RGDAAC0_M2UM_MASK)
#define MPU_RGDAAC0_M2SM_MASK                    0x18000u
#define MPU_RGDAAC0_M2SM_SHIFT                   15
#define MPU_RGDAAC0_M2SM_WIDTH                   2
#define MPU_RGDAAC0_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M2SM_SHIFT))&MPU_RGDAAC0_M2SM_MASK)
#define MPU_RGDAAC0_M2PE_MASK                    0x20000u
#define MPU_RGDAAC0_M2PE_SHIFT                   17
#define MPU_RGDAAC0_M2PE_WIDTH                   1
#define MPU_RGDAAC0_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M2PE_SHIFT))&MPU_RGDAAC0_M2PE_MASK)
#define MPU_RGDAAC0_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC0_M3UM_SHIFT                   18
#define MPU_RGDAAC0_M3UM_WIDTH                   3
#define MPU_RGDAAC0_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M3UM_SHIFT))&MPU_RGDAAC0_M3UM_MASK)
#define MPU_RGDAAC0_M3SM_MASK                    0x600000u
#define MPU_RGDAAC0_M3SM_SHIFT                   21
#define MPU_RGDAAC0_M3SM_WIDTH                   2
#define MPU_RGDAAC0_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M3SM_SHIFT))&MPU_RGDAAC0_M3SM_MASK)
#define MPU_RGDAAC0_M3PE_MASK                    0x800000u
#define MPU_RGDAAC0_M3PE_SHIFT                   23
#define MPU_RGDAAC0_M3PE_WIDTH                   1
#define MPU_RGDAAC0_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M3PE_SHIFT))&MPU_RGDAAC0_M3PE_MASK)
#define MPU_RGDAAC0_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC0_M4WE_SHIFT                   24
#define MPU_RGDAAC0_M4WE_WIDTH                   1
#define MPU_RGDAAC0_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M4WE_SHIFT))&MPU_RGDAAC0_M4WE_MASK)
#define MPU_RGDAAC0_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC0_M4RE_SHIFT                   25
#define MPU_RGDAAC0_M4RE_WIDTH                   1
#define MPU_RGDAAC0_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M4RE_SHIFT))&MPU_RGDAAC0_M4RE_MASK)
#define MPU_RGDAAC0_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC0_M5WE_SHIFT                   26
#define MPU_RGDAAC0_M5WE_WIDTH                   1
#define MPU_RGDAAC0_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M5WE_SHIFT))&MPU_RGDAAC0_M5WE_MASK)
#define MPU_RGDAAC0_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC0_M5RE_SHIFT                   27
#define MPU_RGDAAC0_M5RE_WIDTH                   1
#define MPU_RGDAAC0_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M5RE_SHIFT))&MPU_RGDAAC0_M5RE_MASK)
#define MPU_RGDAAC0_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC0_M6WE_SHIFT                   28
#define MPU_RGDAAC0_M6WE_WIDTH                   1
#define MPU_RGDAAC0_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M6WE_SHIFT))&MPU_RGDAAC0_M6WE_MASK)
#define MPU_RGDAAC0_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC0_M6RE_SHIFT                   29
#define MPU_RGDAAC0_M6RE_WIDTH                   1
#define MPU_RGDAAC0_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M6RE_SHIFT))&MPU_RGDAAC0_M6RE_MASK)
#define MPU_RGDAAC0_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC0_M7WE_SHIFT                   30
#define MPU_RGDAAC0_M7WE_WIDTH                   1
#define MPU_RGDAAC0_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M7WE_SHIFT))&MPU_RGDAAC0_M7WE_MASK)
#define MPU_RGDAAC0_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC0_M7RE_SHIFT                   31
#define MPU_RGDAAC0_M7RE_WIDTH                   1
#define MPU_RGDAAC0_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC0_M7RE_SHIFT))&MPU_RGDAAC0_M7RE_MASK)
/* RGDAAC1 Bit Fields */
#define MPU_RGDAAC1_M0UM_MASK                    0x7u
#define MPU_RGDAAC1_M0UM_SHIFT                   0
#define MPU_RGDAAC1_M0UM_WIDTH                   3
#define MPU_RGDAAC1_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M0UM_SHIFT))&MPU_RGDAAC1_M0UM_MASK)
#define MPU_RGDAAC1_M0SM_MASK                    0x18u
#define MPU_RGDAAC1_M0SM_SHIFT                   3
#define MPU_RGDAAC1_M0SM_WIDTH                   2
#define MPU_RGDAAC1_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M0SM_SHIFT))&MPU_RGDAAC1_M0SM_MASK)
#define MPU_RGDAAC1_M0PE_MASK                    0x20u
#define MPU_RGDAAC1_M0PE_SHIFT                   5
#define MPU_RGDAAC1_M0PE_WIDTH                   1
#define MPU_RGDAAC1_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M0PE_SHIFT))&MPU_RGDAAC1_M0PE_MASK)
#define MPU_RGDAAC1_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC1_M1UM_SHIFT                   6
#define MPU_RGDAAC1_M1UM_WIDTH                   3
#define MPU_RGDAAC1_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M1UM_SHIFT))&MPU_RGDAAC1_M1UM_MASK)
#define MPU_RGDAAC1_M1SM_MASK                    0x600u
#define MPU_RGDAAC1_M1SM_SHIFT                   9
#define MPU_RGDAAC1_M1SM_WIDTH                   2
#define MPU_RGDAAC1_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M1SM_SHIFT))&MPU_RGDAAC1_M1SM_MASK)
#define MPU_RGDAAC1_M1PE_MASK                    0x800u
#define MPU_RGDAAC1_M1PE_SHIFT                   11
#define MPU_RGDAAC1_M1PE_WIDTH                   1
#define MPU_RGDAAC1_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M1PE_SHIFT))&MPU_RGDAAC1_M1PE_MASK)
#define MPU_RGDAAC1_M2UM_MASK                    0x7000u
#define MPU_RGDAAC1_M2UM_SHIFT                   12
#define MPU_RGDAAC1_M2UM_WIDTH                   3
#define MPU_RGDAAC1_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M2UM_SHIFT))&MPU_RGDAAC1_M2UM_MASK)
#define MPU_RGDAAC1_M2SM_MASK                    0x18000u
#define MPU_RGDAAC1_M2SM_SHIFT                   15
#define MPU_RGDAAC1_M2SM_WIDTH                   2
#define MPU_RGDAAC1_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M2SM_SHIFT))&MPU_RGDAAC1_M2SM_MASK)
#define MPU_RGDAAC1_M2PE_MASK                    0x20000u
#define MPU_RGDAAC1_M2PE_SHIFT                   17
#define MPU_RGDAAC1_M2PE_WIDTH                   1
#define MPU_RGDAAC1_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M2PE_SHIFT))&MPU_RGDAAC1_M2PE_MASK)
#define MPU_RGDAAC1_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC1_M3UM_SHIFT                   18
#define MPU_RGDAAC1_M3UM_WIDTH                   3
#define MPU_RGDAAC1_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M3UM_SHIFT))&MPU_RGDAAC1_M3UM_MASK)
#define MPU_RGDAAC1_M3SM_MASK                    0x600000u
#define MPU_RGDAAC1_M3SM_SHIFT                   21
#define MPU_RGDAAC1_M3SM_WIDTH                   2
#define MPU_RGDAAC1_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M3SM_SHIFT))&MPU_RGDAAC1_M3SM_MASK)
#define MPU_RGDAAC1_M3PE_MASK                    0x800000u
#define MPU_RGDAAC1_M3PE_SHIFT                   23
#define MPU_RGDAAC1_M3PE_WIDTH                   1
#define MPU_RGDAAC1_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M3PE_SHIFT))&MPU_RGDAAC1_M3PE_MASK)
#define MPU_RGDAAC1_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC1_M4WE_SHIFT                   24
#define MPU_RGDAAC1_M4WE_WIDTH                   1
#define MPU_RGDAAC1_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M4WE_SHIFT))&MPU_RGDAAC1_M4WE_MASK)
#define MPU_RGDAAC1_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC1_M4RE_SHIFT                   25
#define MPU_RGDAAC1_M4RE_WIDTH                   1
#define MPU_RGDAAC1_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M4RE_SHIFT))&MPU_RGDAAC1_M4RE_MASK)
#define MPU_RGDAAC1_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC1_M5WE_SHIFT                   26
#define MPU_RGDAAC1_M5WE_WIDTH                   1
#define MPU_RGDAAC1_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M5WE_SHIFT))&MPU_RGDAAC1_M5WE_MASK)
#define MPU_RGDAAC1_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC1_M5RE_SHIFT                   27
#define MPU_RGDAAC1_M5RE_WIDTH                   1
#define MPU_RGDAAC1_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M5RE_SHIFT))&MPU_RGDAAC1_M5RE_MASK)
#define MPU_RGDAAC1_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC1_M6WE_SHIFT                   28
#define MPU_RGDAAC1_M6WE_WIDTH                   1
#define MPU_RGDAAC1_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M6WE_SHIFT))&MPU_RGDAAC1_M6WE_MASK)
#define MPU_RGDAAC1_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC1_M6RE_SHIFT                   29
#define MPU_RGDAAC1_M6RE_WIDTH                   1
#define MPU_RGDAAC1_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M6RE_SHIFT))&MPU_RGDAAC1_M6RE_MASK)
#define MPU_RGDAAC1_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC1_M7WE_SHIFT                   30
#define MPU_RGDAAC1_M7WE_WIDTH                   1
#define MPU_RGDAAC1_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M7WE_SHIFT))&MPU_RGDAAC1_M7WE_MASK)
#define MPU_RGDAAC1_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC1_M7RE_SHIFT                   31
#define MPU_RGDAAC1_M7RE_WIDTH                   1
#define MPU_RGDAAC1_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC1_M7RE_SHIFT))&MPU_RGDAAC1_M7RE_MASK)
/* RGDAAC2 Bit Fields */
#define MPU_RGDAAC2_M0UM_MASK                    0x7u
#define MPU_RGDAAC2_M0UM_SHIFT                   0
#define MPU_RGDAAC2_M0UM_WIDTH                   3
#define MPU_RGDAAC2_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M0UM_SHIFT))&MPU_RGDAAC2_M0UM_MASK)
#define MPU_RGDAAC2_M0SM_MASK                    0x18u
#define MPU_RGDAAC2_M0SM_SHIFT                   3
#define MPU_RGDAAC2_M0SM_WIDTH                   2
#define MPU_RGDAAC2_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M0SM_SHIFT))&MPU_RGDAAC2_M0SM_MASK)
#define MPU_RGDAAC2_M0PE_MASK                    0x20u
#define MPU_RGDAAC2_M0PE_SHIFT                   5
#define MPU_RGDAAC2_M0PE_WIDTH                   1
#define MPU_RGDAAC2_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M0PE_SHIFT))&MPU_RGDAAC2_M0PE_MASK)
#define MPU_RGDAAC2_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC2_M1UM_SHIFT                   6
#define MPU_RGDAAC2_M1UM_WIDTH                   3
#define MPU_RGDAAC2_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M1UM_SHIFT))&MPU_RGDAAC2_M1UM_MASK)
#define MPU_RGDAAC2_M1SM_MASK                    0x600u
#define MPU_RGDAAC2_M1SM_SHIFT                   9
#define MPU_RGDAAC2_M1SM_WIDTH                   2
#define MPU_RGDAAC2_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M1SM_SHIFT))&MPU_RGDAAC2_M1SM_MASK)
#define MPU_RGDAAC2_M1PE_MASK                    0x800u
#define MPU_RGDAAC2_M1PE_SHIFT                   11
#define MPU_RGDAAC2_M1PE_WIDTH                   1
#define MPU_RGDAAC2_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M1PE_SHIFT))&MPU_RGDAAC2_M1PE_MASK)
#define MPU_RGDAAC2_M2UM_MASK                    0x7000u
#define MPU_RGDAAC2_M2UM_SHIFT                   12
#define MPU_RGDAAC2_M2UM_WIDTH                   3
#define MPU_RGDAAC2_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M2UM_SHIFT))&MPU_RGDAAC2_M2UM_MASK)
#define MPU_RGDAAC2_M2SM_MASK                    0x18000u
#define MPU_RGDAAC2_M2SM_SHIFT                   15
#define MPU_RGDAAC2_M2SM_WIDTH                   2
#define MPU_RGDAAC2_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M2SM_SHIFT))&MPU_RGDAAC2_M2SM_MASK)
#define MPU_RGDAAC2_M2PE_MASK                    0x20000u
#define MPU_RGDAAC2_M2PE_SHIFT                   17
#define MPU_RGDAAC2_M2PE_WIDTH                   1
#define MPU_RGDAAC2_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M2PE_SHIFT))&MPU_RGDAAC2_M2PE_MASK)
#define MPU_RGDAAC2_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC2_M3UM_SHIFT                   18
#define MPU_RGDAAC2_M3UM_WIDTH                   3
#define MPU_RGDAAC2_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M3UM_SHIFT))&MPU_RGDAAC2_M3UM_MASK)
#define MPU_RGDAAC2_M3SM_MASK                    0x600000u
#define MPU_RGDAAC2_M3SM_SHIFT                   21
#define MPU_RGDAAC2_M3SM_WIDTH                   2
#define MPU_RGDAAC2_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M3SM_SHIFT))&MPU_RGDAAC2_M3SM_MASK)
#define MPU_RGDAAC2_M3PE_MASK                    0x800000u
#define MPU_RGDAAC2_M3PE_SHIFT                   23
#define MPU_RGDAAC2_M3PE_WIDTH                   1
#define MPU_RGDAAC2_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M3PE_SHIFT))&MPU_RGDAAC2_M3PE_MASK)
#define MPU_RGDAAC2_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC2_M4WE_SHIFT                   24
#define MPU_RGDAAC2_M4WE_WIDTH                   1
#define MPU_RGDAAC2_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M4WE_SHIFT))&MPU_RGDAAC2_M4WE_MASK)
#define MPU_RGDAAC2_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC2_M4RE_SHIFT                   25
#define MPU_RGDAAC2_M4RE_WIDTH                   1
#define MPU_RGDAAC2_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M4RE_SHIFT))&MPU_RGDAAC2_M4RE_MASK)
#define MPU_RGDAAC2_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC2_M5WE_SHIFT                   26
#define MPU_RGDAAC2_M5WE_WIDTH                   1
#define MPU_RGDAAC2_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M5WE_SHIFT))&MPU_RGDAAC2_M5WE_MASK)
#define MPU_RGDAAC2_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC2_M5RE_SHIFT                   27
#define MPU_RGDAAC2_M5RE_WIDTH                   1
#define MPU_RGDAAC2_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M5RE_SHIFT))&MPU_RGDAAC2_M5RE_MASK)
#define MPU_RGDAAC2_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC2_M6WE_SHIFT                   28
#define MPU_RGDAAC2_M6WE_WIDTH                   1
#define MPU_RGDAAC2_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M6WE_SHIFT))&MPU_RGDAAC2_M6WE_MASK)
#define MPU_RGDAAC2_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC2_M6RE_SHIFT                   29
#define MPU_RGDAAC2_M6RE_WIDTH                   1
#define MPU_RGDAAC2_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M6RE_SHIFT))&MPU_RGDAAC2_M6RE_MASK)
#define MPU_RGDAAC2_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC2_M7WE_SHIFT                   30
#define MPU_RGDAAC2_M7WE_WIDTH                   1
#define MPU_RGDAAC2_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M7WE_SHIFT))&MPU_RGDAAC2_M7WE_MASK)
#define MPU_RGDAAC2_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC2_M7RE_SHIFT                   31
#define MPU_RGDAAC2_M7RE_WIDTH                   1
#define MPU_RGDAAC2_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC2_M7RE_SHIFT))&MPU_RGDAAC2_M7RE_MASK)
/* RGDAAC3 Bit Fields */
#define MPU_RGDAAC3_M0UM_MASK                    0x7u
#define MPU_RGDAAC3_M0UM_SHIFT                   0
#define MPU_RGDAAC3_M0UM_WIDTH                   3
#define MPU_RGDAAC3_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M0UM_SHIFT))&MPU_RGDAAC3_M0UM_MASK)
#define MPU_RGDAAC3_M0SM_MASK                    0x18u
#define MPU_RGDAAC3_M0SM_SHIFT                   3
#define MPU_RGDAAC3_M0SM_WIDTH                   2
#define MPU_RGDAAC3_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M0SM_SHIFT))&MPU_RGDAAC3_M0SM_MASK)
#define MPU_RGDAAC3_M0PE_MASK                    0x20u
#define MPU_RGDAAC3_M0PE_SHIFT                   5
#define MPU_RGDAAC3_M0PE_WIDTH                   1
#define MPU_RGDAAC3_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M0PE_SHIFT))&MPU_RGDAAC3_M0PE_MASK)
#define MPU_RGDAAC3_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC3_M1UM_SHIFT                   6
#define MPU_RGDAAC3_M1UM_WIDTH                   3
#define MPU_RGDAAC3_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M1UM_SHIFT))&MPU_RGDAAC3_M1UM_MASK)
#define MPU_RGDAAC3_M1SM_MASK                    0x600u
#define MPU_RGDAAC3_M1SM_SHIFT                   9
#define MPU_RGDAAC3_M1SM_WIDTH                   2
#define MPU_RGDAAC3_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M1SM_SHIFT))&MPU_RGDAAC3_M1SM_MASK)
#define MPU_RGDAAC3_M1PE_MASK                    0x800u
#define MPU_RGDAAC3_M1PE_SHIFT                   11
#define MPU_RGDAAC3_M1PE_WIDTH                   1
#define MPU_RGDAAC3_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M1PE_SHIFT))&MPU_RGDAAC3_M1PE_MASK)
#define MPU_RGDAAC3_M2UM_MASK                    0x7000u
#define MPU_RGDAAC3_M2UM_SHIFT                   12
#define MPU_RGDAAC3_M2UM_WIDTH                   3
#define MPU_RGDAAC3_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M2UM_SHIFT))&MPU_RGDAAC3_M2UM_MASK)
#define MPU_RGDAAC3_M2SM_MASK                    0x18000u
#define MPU_RGDAAC3_M2SM_SHIFT                   15
#define MPU_RGDAAC3_M2SM_WIDTH                   2
#define MPU_RGDAAC3_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M2SM_SHIFT))&MPU_RGDAAC3_M2SM_MASK)
#define MPU_RGDAAC3_M2PE_MASK                    0x20000u
#define MPU_RGDAAC3_M2PE_SHIFT                   17
#define MPU_RGDAAC3_M2PE_WIDTH                   1
#define MPU_RGDAAC3_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M2PE_SHIFT))&MPU_RGDAAC3_M2PE_MASK)
#define MPU_RGDAAC3_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC3_M3UM_SHIFT                   18
#define MPU_RGDAAC3_M3UM_WIDTH                   3
#define MPU_RGDAAC3_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M3UM_SHIFT))&MPU_RGDAAC3_M3UM_MASK)
#define MPU_RGDAAC3_M3SM_MASK                    0x600000u
#define MPU_RGDAAC3_M3SM_SHIFT                   21
#define MPU_RGDAAC3_M3SM_WIDTH                   2
#define MPU_RGDAAC3_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M3SM_SHIFT))&MPU_RGDAAC3_M3SM_MASK)
#define MPU_RGDAAC3_M3PE_MASK                    0x800000u
#define MPU_RGDAAC3_M3PE_SHIFT                   23
#define MPU_RGDAAC3_M3PE_WIDTH                   1
#define MPU_RGDAAC3_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M3PE_SHIFT))&MPU_RGDAAC3_M3PE_MASK)
#define MPU_RGDAAC3_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC3_M4WE_SHIFT                   24
#define MPU_RGDAAC3_M4WE_WIDTH                   1
#define MPU_RGDAAC3_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M4WE_SHIFT))&MPU_RGDAAC3_M4WE_MASK)
#define MPU_RGDAAC3_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC3_M4RE_SHIFT                   25
#define MPU_RGDAAC3_M4RE_WIDTH                   1
#define MPU_RGDAAC3_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M4RE_SHIFT))&MPU_RGDAAC3_M4RE_MASK)
#define MPU_RGDAAC3_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC3_M5WE_SHIFT                   26
#define MPU_RGDAAC3_M5WE_WIDTH                   1
#define MPU_RGDAAC3_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M5WE_SHIFT))&MPU_RGDAAC3_M5WE_MASK)
#define MPU_RGDAAC3_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC3_M5RE_SHIFT                   27
#define MPU_RGDAAC3_M5RE_WIDTH                   1
#define MPU_RGDAAC3_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M5RE_SHIFT))&MPU_RGDAAC3_M5RE_MASK)
#define MPU_RGDAAC3_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC3_M6WE_SHIFT                   28
#define MPU_RGDAAC3_M6WE_WIDTH                   1
#define MPU_RGDAAC3_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M6WE_SHIFT))&MPU_RGDAAC3_M6WE_MASK)
#define MPU_RGDAAC3_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC3_M6RE_SHIFT                   29
#define MPU_RGDAAC3_M6RE_WIDTH                   1
#define MPU_RGDAAC3_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M6RE_SHIFT))&MPU_RGDAAC3_M6RE_MASK)
#define MPU_RGDAAC3_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC3_M7WE_SHIFT                   30
#define MPU_RGDAAC3_M7WE_WIDTH                   1
#define MPU_RGDAAC3_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M7WE_SHIFT))&MPU_RGDAAC3_M7WE_MASK)
#define MPU_RGDAAC3_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC3_M7RE_SHIFT                   31
#define MPU_RGDAAC3_M7RE_WIDTH                   1
#define MPU_RGDAAC3_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC3_M7RE_SHIFT))&MPU_RGDAAC3_M7RE_MASK)
/* RGDAAC4 Bit Fields */
#define MPU_RGDAAC4_M0UM_MASK                    0x7u
#define MPU_RGDAAC4_M0UM_SHIFT                   0
#define MPU_RGDAAC4_M0UM_WIDTH                   3
#define MPU_RGDAAC4_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M0UM_SHIFT))&MPU_RGDAAC4_M0UM_MASK)
#define MPU_RGDAAC4_M0SM_MASK                    0x18u
#define MPU_RGDAAC4_M0SM_SHIFT                   3
#define MPU_RGDAAC4_M0SM_WIDTH                   2
#define MPU_RGDAAC4_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M0SM_SHIFT))&MPU_RGDAAC4_M0SM_MASK)
#define MPU_RGDAAC4_M0PE_MASK                    0x20u
#define MPU_RGDAAC4_M0PE_SHIFT                   5
#define MPU_RGDAAC4_M0PE_WIDTH                   1
#define MPU_RGDAAC4_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M0PE_SHIFT))&MPU_RGDAAC4_M0PE_MASK)
#define MPU_RGDAAC4_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC4_M1UM_SHIFT                   6
#define MPU_RGDAAC4_M1UM_WIDTH                   3
#define MPU_RGDAAC4_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M1UM_SHIFT))&MPU_RGDAAC4_M1UM_MASK)
#define MPU_RGDAAC4_M1SM_MASK                    0x600u
#define MPU_RGDAAC4_M1SM_SHIFT                   9
#define MPU_RGDAAC4_M1SM_WIDTH                   2
#define MPU_RGDAAC4_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M1SM_SHIFT))&MPU_RGDAAC4_M1SM_MASK)
#define MPU_RGDAAC4_M1PE_MASK                    0x800u
#define MPU_RGDAAC4_M1PE_SHIFT                   11
#define MPU_RGDAAC4_M1PE_WIDTH                   1
#define MPU_RGDAAC4_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M1PE_SHIFT))&MPU_RGDAAC4_M1PE_MASK)
#define MPU_RGDAAC4_M2UM_MASK                    0x7000u
#define MPU_RGDAAC4_M2UM_SHIFT                   12
#define MPU_RGDAAC4_M2UM_WIDTH                   3
#define MPU_RGDAAC4_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M2UM_SHIFT))&MPU_RGDAAC4_M2UM_MASK)
#define MPU_RGDAAC4_M2SM_MASK                    0x18000u
#define MPU_RGDAAC4_M2SM_SHIFT                   15
#define MPU_RGDAAC4_M2SM_WIDTH                   2
#define MPU_RGDAAC4_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M2SM_SHIFT))&MPU_RGDAAC4_M2SM_MASK)
#define MPU_RGDAAC4_M2PE_MASK                    0x20000u
#define MPU_RGDAAC4_M2PE_SHIFT                   17
#define MPU_RGDAAC4_M2PE_WIDTH                   1
#define MPU_RGDAAC4_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M2PE_SHIFT))&MPU_RGDAAC4_M2PE_MASK)
#define MPU_RGDAAC4_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC4_M3UM_SHIFT                   18
#define MPU_RGDAAC4_M3UM_WIDTH                   3
#define MPU_RGDAAC4_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M3UM_SHIFT))&MPU_RGDAAC4_M3UM_MASK)
#define MPU_RGDAAC4_M3SM_MASK                    0x600000u
#define MPU_RGDAAC4_M3SM_SHIFT                   21
#define MPU_RGDAAC4_M3SM_WIDTH                   2
#define MPU_RGDAAC4_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M3SM_SHIFT))&MPU_RGDAAC4_M3SM_MASK)
#define MPU_RGDAAC4_M3PE_MASK                    0x800000u
#define MPU_RGDAAC4_M3PE_SHIFT                   23
#define MPU_RGDAAC4_M3PE_WIDTH                   1
#define MPU_RGDAAC4_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M3PE_SHIFT))&MPU_RGDAAC4_M3PE_MASK)
#define MPU_RGDAAC4_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC4_M4WE_SHIFT                   24
#define MPU_RGDAAC4_M4WE_WIDTH                   1
#define MPU_RGDAAC4_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M4WE_SHIFT))&MPU_RGDAAC4_M4WE_MASK)
#define MPU_RGDAAC4_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC4_M4RE_SHIFT                   25
#define MPU_RGDAAC4_M4RE_WIDTH                   1
#define MPU_RGDAAC4_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M4RE_SHIFT))&MPU_RGDAAC4_M4RE_MASK)
#define MPU_RGDAAC4_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC4_M5WE_SHIFT                   26
#define MPU_RGDAAC4_M5WE_WIDTH                   1
#define MPU_RGDAAC4_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M5WE_SHIFT))&MPU_RGDAAC4_M5WE_MASK)
#define MPU_RGDAAC4_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC4_M5RE_SHIFT                   27
#define MPU_RGDAAC4_M5RE_WIDTH                   1
#define MPU_RGDAAC4_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M5RE_SHIFT))&MPU_RGDAAC4_M5RE_MASK)
#define MPU_RGDAAC4_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC4_M6WE_SHIFT                   28
#define MPU_RGDAAC4_M6WE_WIDTH                   1
#define MPU_RGDAAC4_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M6WE_SHIFT))&MPU_RGDAAC4_M6WE_MASK)
#define MPU_RGDAAC4_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC4_M6RE_SHIFT                   29
#define MPU_RGDAAC4_M6RE_WIDTH                   1
#define MPU_RGDAAC4_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M6RE_SHIFT))&MPU_RGDAAC4_M6RE_MASK)
#define MPU_RGDAAC4_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC4_M7WE_SHIFT                   30
#define MPU_RGDAAC4_M7WE_WIDTH                   1
#define MPU_RGDAAC4_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M7WE_SHIFT))&MPU_RGDAAC4_M7WE_MASK)
#define MPU_RGDAAC4_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC4_M7RE_SHIFT                   31
#define MPU_RGDAAC4_M7RE_WIDTH                   1
#define MPU_RGDAAC4_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC4_M7RE_SHIFT))&MPU_RGDAAC4_M7RE_MASK)
/* RGDAAC5 Bit Fields */
#define MPU_RGDAAC5_M0UM_MASK                    0x7u
#define MPU_RGDAAC5_M0UM_SHIFT                   0
#define MPU_RGDAAC5_M0UM_WIDTH                   3
#define MPU_RGDAAC5_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M0UM_SHIFT))&MPU_RGDAAC5_M0UM_MASK)
#define MPU_RGDAAC5_M0SM_MASK                    0x18u
#define MPU_RGDAAC5_M0SM_SHIFT                   3
#define MPU_RGDAAC5_M0SM_WIDTH                   2
#define MPU_RGDAAC5_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M0SM_SHIFT))&MPU_RGDAAC5_M0SM_MASK)
#define MPU_RGDAAC5_M0PE_MASK                    0x20u
#define MPU_RGDAAC5_M0PE_SHIFT                   5
#define MPU_RGDAAC5_M0PE_WIDTH                   1
#define MPU_RGDAAC5_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M0PE_SHIFT))&MPU_RGDAAC5_M0PE_MASK)
#define MPU_RGDAAC5_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC5_M1UM_SHIFT                   6
#define MPU_RGDAAC5_M1UM_WIDTH                   3
#define MPU_RGDAAC5_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M1UM_SHIFT))&MPU_RGDAAC5_M1UM_MASK)
#define MPU_RGDAAC5_M1SM_MASK                    0x600u
#define MPU_RGDAAC5_M1SM_SHIFT                   9
#define MPU_RGDAAC5_M1SM_WIDTH                   2
#define MPU_RGDAAC5_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M1SM_SHIFT))&MPU_RGDAAC5_M1SM_MASK)
#define MPU_RGDAAC5_M1PE_MASK                    0x800u
#define MPU_RGDAAC5_M1PE_SHIFT                   11
#define MPU_RGDAAC5_M1PE_WIDTH                   1
#define MPU_RGDAAC5_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M1PE_SHIFT))&MPU_RGDAAC5_M1PE_MASK)
#define MPU_RGDAAC5_M2UM_MASK                    0x7000u
#define MPU_RGDAAC5_M2UM_SHIFT                   12
#define MPU_RGDAAC5_M2UM_WIDTH                   3
#define MPU_RGDAAC5_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M2UM_SHIFT))&MPU_RGDAAC5_M2UM_MASK)
#define MPU_RGDAAC5_M2SM_MASK                    0x18000u
#define MPU_RGDAAC5_M2SM_SHIFT                   15
#define MPU_RGDAAC5_M2SM_WIDTH                   2
#define MPU_RGDAAC5_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M2SM_SHIFT))&MPU_RGDAAC5_M2SM_MASK)
#define MPU_RGDAAC5_M2PE_MASK                    0x20000u
#define MPU_RGDAAC5_M2PE_SHIFT                   17
#define MPU_RGDAAC5_M2PE_WIDTH                   1
#define MPU_RGDAAC5_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M2PE_SHIFT))&MPU_RGDAAC5_M2PE_MASK)
#define MPU_RGDAAC5_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC5_M3UM_SHIFT                   18
#define MPU_RGDAAC5_M3UM_WIDTH                   3
#define MPU_RGDAAC5_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M3UM_SHIFT))&MPU_RGDAAC5_M3UM_MASK)
#define MPU_RGDAAC5_M3SM_MASK                    0x600000u
#define MPU_RGDAAC5_M3SM_SHIFT                   21
#define MPU_RGDAAC5_M3SM_WIDTH                   2
#define MPU_RGDAAC5_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M3SM_SHIFT))&MPU_RGDAAC5_M3SM_MASK)
#define MPU_RGDAAC5_M3PE_MASK                    0x800000u
#define MPU_RGDAAC5_M3PE_SHIFT                   23
#define MPU_RGDAAC5_M3PE_WIDTH                   1
#define MPU_RGDAAC5_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M3PE_SHIFT))&MPU_RGDAAC5_M3PE_MASK)
#define MPU_RGDAAC5_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC5_M4WE_SHIFT                   24
#define MPU_RGDAAC5_M4WE_WIDTH                   1
#define MPU_RGDAAC5_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M4WE_SHIFT))&MPU_RGDAAC5_M4WE_MASK)
#define MPU_RGDAAC5_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC5_M4RE_SHIFT                   25
#define MPU_RGDAAC5_M4RE_WIDTH                   1
#define MPU_RGDAAC5_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M4RE_SHIFT))&MPU_RGDAAC5_M4RE_MASK)
#define MPU_RGDAAC5_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC5_M5WE_SHIFT                   26
#define MPU_RGDAAC5_M5WE_WIDTH                   1
#define MPU_RGDAAC5_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M5WE_SHIFT))&MPU_RGDAAC5_M5WE_MASK)
#define MPU_RGDAAC5_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC5_M5RE_SHIFT                   27
#define MPU_RGDAAC5_M5RE_WIDTH                   1
#define MPU_RGDAAC5_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M5RE_SHIFT))&MPU_RGDAAC5_M5RE_MASK)
#define MPU_RGDAAC5_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC5_M6WE_SHIFT                   28
#define MPU_RGDAAC5_M6WE_WIDTH                   1
#define MPU_RGDAAC5_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M6WE_SHIFT))&MPU_RGDAAC5_M6WE_MASK)
#define MPU_RGDAAC5_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC5_M6RE_SHIFT                   29
#define MPU_RGDAAC5_M6RE_WIDTH                   1
#define MPU_RGDAAC5_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M6RE_SHIFT))&MPU_RGDAAC5_M6RE_MASK)
#define MPU_RGDAAC5_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC5_M7WE_SHIFT                   30
#define MPU_RGDAAC5_M7WE_WIDTH                   1
#define MPU_RGDAAC5_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M7WE_SHIFT))&MPU_RGDAAC5_M7WE_MASK)
#define MPU_RGDAAC5_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC5_M7RE_SHIFT                   31
#define MPU_RGDAAC5_M7RE_WIDTH                   1
#define MPU_RGDAAC5_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC5_M7RE_SHIFT))&MPU_RGDAAC5_M7RE_MASK)
/* RGDAAC6 Bit Fields */
#define MPU_RGDAAC6_M0UM_MASK                    0x7u
#define MPU_RGDAAC6_M0UM_SHIFT                   0
#define MPU_RGDAAC6_M0UM_WIDTH                   3
#define MPU_RGDAAC6_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M0UM_SHIFT))&MPU_RGDAAC6_M0UM_MASK)
#define MPU_RGDAAC6_M0SM_MASK                    0x18u
#define MPU_RGDAAC6_M0SM_SHIFT                   3
#define MPU_RGDAAC6_M0SM_WIDTH                   2
#define MPU_RGDAAC6_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M0SM_SHIFT))&MPU_RGDAAC6_M0SM_MASK)
#define MPU_RGDAAC6_M0PE_MASK                    0x20u
#define MPU_RGDAAC6_M0PE_SHIFT                   5
#define MPU_RGDAAC6_M0PE_WIDTH                   1
#define MPU_RGDAAC6_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M0PE_SHIFT))&MPU_RGDAAC6_M0PE_MASK)
#define MPU_RGDAAC6_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC6_M1UM_SHIFT                   6
#define MPU_RGDAAC6_M1UM_WIDTH                   3
#define MPU_RGDAAC6_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M1UM_SHIFT))&MPU_RGDAAC6_M1UM_MASK)
#define MPU_RGDAAC6_M1SM_MASK                    0x600u
#define MPU_RGDAAC6_M1SM_SHIFT                   9
#define MPU_RGDAAC6_M1SM_WIDTH                   2
#define MPU_RGDAAC6_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M1SM_SHIFT))&MPU_RGDAAC6_M1SM_MASK)
#define MPU_RGDAAC6_M1PE_MASK                    0x800u
#define MPU_RGDAAC6_M1PE_SHIFT                   11
#define MPU_RGDAAC6_M1PE_WIDTH                   1
#define MPU_RGDAAC6_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M1PE_SHIFT))&MPU_RGDAAC6_M1PE_MASK)
#define MPU_RGDAAC6_M2UM_MASK                    0x7000u
#define MPU_RGDAAC6_M2UM_SHIFT                   12
#define MPU_RGDAAC6_M2UM_WIDTH                   3
#define MPU_RGDAAC6_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M2UM_SHIFT))&MPU_RGDAAC6_M2UM_MASK)
#define MPU_RGDAAC6_M2SM_MASK                    0x18000u
#define MPU_RGDAAC6_M2SM_SHIFT                   15
#define MPU_RGDAAC6_M2SM_WIDTH                   2
#define MPU_RGDAAC6_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M2SM_SHIFT))&MPU_RGDAAC6_M2SM_MASK)
#define MPU_RGDAAC6_M2PE_MASK                    0x20000u
#define MPU_RGDAAC6_M2PE_SHIFT                   17
#define MPU_RGDAAC6_M2PE_WIDTH                   1
#define MPU_RGDAAC6_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M2PE_SHIFT))&MPU_RGDAAC6_M2PE_MASK)
#define MPU_RGDAAC6_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC6_M3UM_SHIFT                   18
#define MPU_RGDAAC6_M3UM_WIDTH                   3
#define MPU_RGDAAC6_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M3UM_SHIFT))&MPU_RGDAAC6_M3UM_MASK)
#define MPU_RGDAAC6_M3SM_MASK                    0x600000u
#define MPU_RGDAAC6_M3SM_SHIFT                   21
#define MPU_RGDAAC6_M3SM_WIDTH                   2
#define MPU_RGDAAC6_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M3SM_SHIFT))&MPU_RGDAAC6_M3SM_MASK)
#define MPU_RGDAAC6_M3PE_MASK                    0x800000u
#define MPU_RGDAAC6_M3PE_SHIFT                   23
#define MPU_RGDAAC6_M3PE_WIDTH                   1
#define MPU_RGDAAC6_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M3PE_SHIFT))&MPU_RGDAAC6_M3PE_MASK)
#define MPU_RGDAAC6_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC6_M4WE_SHIFT                   24
#define MPU_RGDAAC6_M4WE_WIDTH                   1
#define MPU_RGDAAC6_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M4WE_SHIFT))&MPU_RGDAAC6_M4WE_MASK)
#define MPU_RGDAAC6_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC6_M4RE_SHIFT                   25
#define MPU_RGDAAC6_M4RE_WIDTH                   1
#define MPU_RGDAAC6_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M4RE_SHIFT))&MPU_RGDAAC6_M4RE_MASK)
#define MPU_RGDAAC6_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC6_M5WE_SHIFT                   26
#define MPU_RGDAAC6_M5WE_WIDTH                   1
#define MPU_RGDAAC6_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M5WE_SHIFT))&MPU_RGDAAC6_M5WE_MASK)
#define MPU_RGDAAC6_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC6_M5RE_SHIFT                   27
#define MPU_RGDAAC6_M5RE_WIDTH                   1
#define MPU_RGDAAC6_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M5RE_SHIFT))&MPU_RGDAAC6_M5RE_MASK)
#define MPU_RGDAAC6_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC6_M6WE_SHIFT                   28
#define MPU_RGDAAC6_M6WE_WIDTH                   1
#define MPU_RGDAAC6_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M6WE_SHIFT))&MPU_RGDAAC6_M6WE_MASK)
#define MPU_RGDAAC6_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC6_M6RE_SHIFT                   29
#define MPU_RGDAAC6_M6RE_WIDTH                   1
#define MPU_RGDAAC6_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M6RE_SHIFT))&MPU_RGDAAC6_M6RE_MASK)
#define MPU_RGDAAC6_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC6_M7WE_SHIFT                   30
#define MPU_RGDAAC6_M7WE_WIDTH                   1
#define MPU_RGDAAC6_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M7WE_SHIFT))&MPU_RGDAAC6_M7WE_MASK)
#define MPU_RGDAAC6_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC6_M7RE_SHIFT                   31
#define MPU_RGDAAC6_M7RE_WIDTH                   1
#define MPU_RGDAAC6_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC6_M7RE_SHIFT))&MPU_RGDAAC6_M7RE_MASK)
/* RGDAAC7 Bit Fields */
#define MPU_RGDAAC7_M0UM_MASK                    0x7u
#define MPU_RGDAAC7_M0UM_SHIFT                   0
#define MPU_RGDAAC7_M0UM_WIDTH                   3
#define MPU_RGDAAC7_M0UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M0UM_SHIFT))&MPU_RGDAAC7_M0UM_MASK)
#define MPU_RGDAAC7_M0SM_MASK                    0x18u
#define MPU_RGDAAC7_M0SM_SHIFT                   3
#define MPU_RGDAAC7_M0SM_WIDTH                   2
#define MPU_RGDAAC7_M0SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M0SM_SHIFT))&MPU_RGDAAC7_M0SM_MASK)
#define MPU_RGDAAC7_M0PE_MASK                    0x20u
#define MPU_RGDAAC7_M0PE_SHIFT                   5
#define MPU_RGDAAC7_M0PE_WIDTH                   1
#define MPU_RGDAAC7_M0PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M0PE_SHIFT))&MPU_RGDAAC7_M0PE_MASK)
#define MPU_RGDAAC7_M1UM_MASK                    0x1C0u
#define MPU_RGDAAC7_M1UM_SHIFT                   6
#define MPU_RGDAAC7_M1UM_WIDTH                   3
#define MPU_RGDAAC7_M1UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M1UM_SHIFT))&MPU_RGDAAC7_M1UM_MASK)
#define MPU_RGDAAC7_M1SM_MASK                    0x600u
#define MPU_RGDAAC7_M1SM_SHIFT                   9
#define MPU_RGDAAC7_M1SM_WIDTH                   2
#define MPU_RGDAAC7_M1SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M1SM_SHIFT))&MPU_RGDAAC7_M1SM_MASK)
#define MPU_RGDAAC7_M1PE_MASK                    0x800u
#define MPU_RGDAAC7_M1PE_SHIFT                   11
#define MPU_RGDAAC7_M1PE_WIDTH                   1
#define MPU_RGDAAC7_M1PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M1PE_SHIFT))&MPU_RGDAAC7_M1PE_MASK)
#define MPU_RGDAAC7_M2UM_MASK                    0x7000u
#define MPU_RGDAAC7_M2UM_SHIFT                   12
#define MPU_RGDAAC7_M2UM_WIDTH                   3
#define MPU_RGDAAC7_M2UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M2UM_SHIFT))&MPU_RGDAAC7_M2UM_MASK)
#define MPU_RGDAAC7_M2SM_MASK                    0x18000u
#define MPU_RGDAAC7_M2SM_SHIFT                   15
#define MPU_RGDAAC7_M2SM_WIDTH                   2
#define MPU_RGDAAC7_M2SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M2SM_SHIFT))&MPU_RGDAAC7_M2SM_MASK)
#define MPU_RGDAAC7_M2PE_MASK                    0x20000u
#define MPU_RGDAAC7_M2PE_SHIFT                   17
#define MPU_RGDAAC7_M2PE_WIDTH                   1
#define MPU_RGDAAC7_M2PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M2PE_SHIFT))&MPU_RGDAAC7_M2PE_MASK)
#define MPU_RGDAAC7_M3UM_MASK                    0x1C0000u
#define MPU_RGDAAC7_M3UM_SHIFT                   18
#define MPU_RGDAAC7_M3UM_WIDTH                   3
#define MPU_RGDAAC7_M3UM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M3UM_SHIFT))&MPU_RGDAAC7_M3UM_MASK)
#define MPU_RGDAAC7_M3SM_MASK                    0x600000u
#define MPU_RGDAAC7_M3SM_SHIFT                   21
#define MPU_RGDAAC7_M3SM_WIDTH                   2
#define MPU_RGDAAC7_M3SM(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M3SM_SHIFT))&MPU_RGDAAC7_M3SM_MASK)
#define MPU_RGDAAC7_M3PE_MASK                    0x800000u
#define MPU_RGDAAC7_M3PE_SHIFT                   23
#define MPU_RGDAAC7_M3PE_WIDTH                   1
#define MPU_RGDAAC7_M3PE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M3PE_SHIFT))&MPU_RGDAAC7_M3PE_MASK)
#define MPU_RGDAAC7_M4WE_MASK                    0x1000000u
#define MPU_RGDAAC7_M4WE_SHIFT                   24
#define MPU_RGDAAC7_M4WE_WIDTH                   1
#define MPU_RGDAAC7_M4WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M4WE_SHIFT))&MPU_RGDAAC7_M4WE_MASK)
#define MPU_RGDAAC7_M4RE_MASK                    0x2000000u
#define MPU_RGDAAC7_M4RE_SHIFT                   25
#define MPU_RGDAAC7_M4RE_WIDTH                   1
#define MPU_RGDAAC7_M4RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M4RE_SHIFT))&MPU_RGDAAC7_M4RE_MASK)
#define MPU_RGDAAC7_M5WE_MASK                    0x4000000u
#define MPU_RGDAAC7_M5WE_SHIFT                   26
#define MPU_RGDAAC7_M5WE_WIDTH                   1
#define MPU_RGDAAC7_M5WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M5WE_SHIFT))&MPU_RGDAAC7_M5WE_MASK)
#define MPU_RGDAAC7_M5RE_MASK                    0x8000000u
#define MPU_RGDAAC7_M5RE_SHIFT                   27
#define MPU_RGDAAC7_M5RE_WIDTH                   1
#define MPU_RGDAAC7_M5RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M5RE_SHIFT))&MPU_RGDAAC7_M5RE_MASK)
#define MPU_RGDAAC7_M6WE_MASK                    0x10000000u
#define MPU_RGDAAC7_M6WE_SHIFT                   28
#define MPU_RGDAAC7_M6WE_WIDTH                   1
#define MPU_RGDAAC7_M6WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M6WE_SHIFT))&MPU_RGDAAC7_M6WE_MASK)
#define MPU_RGDAAC7_M6RE_MASK                    0x20000000u
#define MPU_RGDAAC7_M6RE_SHIFT                   29
#define MPU_RGDAAC7_M6RE_WIDTH                   1
#define MPU_RGDAAC7_M6RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M6RE_SHIFT))&MPU_RGDAAC7_M6RE_MASK)
#define MPU_RGDAAC7_M7WE_MASK                    0x40000000u
#define MPU_RGDAAC7_M7WE_SHIFT                   30
#define MPU_RGDAAC7_M7WE_WIDTH                   1
#define MPU_RGDAAC7_M7WE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M7WE_SHIFT))&MPU_RGDAAC7_M7WE_MASK)
#define MPU_RGDAAC7_M7RE_MASK                    0x80000000u
#define MPU_RGDAAC7_M7RE_SHIFT                   31
#define MPU_RGDAAC7_M7RE_WIDTH                   1
#define MPU_RGDAAC7_M7RE(x)                      (((uint32)(((uint32)(x))<<MPU_RGDAAC7_M7RE_SHIFT))&MPU_RGDAAC7_M7RE_MASK)

/*!
 * @}
 */ /* end of group MPU_Register_Masks */


/* MPU - Peripheral instance base addresses */
/** Peripheral MPU base address */
#define MPU_BASE                                 (0x4000D000u)
/** Peripheral MPU base pointer */
#define MPU                                      ((MPU_Type *)MPU_BASE)
#define MPU_BASE_PTR                             (MPU)
/** Array initializer of MPU peripheral base addresses */
#define MPU_BASE_ADDRS                           { MPU_BASE }
/** Array initializer of MPU peripheral base pointers */
#define MPU_BASE_PTRS                            { MPU }

/* ----------------------------------------------------------------------------
   -- MPU - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MPU_Register_Accessor_Macros MPU - Register accessor macros
 * @{
 */


/* MPU - Register instance definitions */
/* MPU */
#define MPU_CESR                                 MPU_CESR_REG(MPU)
#define MPU_EAR0                                 MPU_EAR0_REG(MPU)
#define MPU_EDR0                                 MPU_EDR0_REG(MPU)
#define MPU_EAR1                                 MPU_EAR1_REG(MPU)
#define MPU_EDR1                                 MPU_EDR1_REG(MPU)
#define MPU_EAR2                                 MPU_EAR2_REG(MPU)
#define MPU_EDR2                                 MPU_EDR2_REG(MPU)
#define MPU_EAR3                                 MPU_EAR3_REG(MPU)
#define MPU_EDR3                                 MPU_EDR3_REG(MPU)
#define MPU_EAR4                                 MPU_EAR4_REG(MPU)
#define MPU_EDR4                                 MPU_EDR4_REG(MPU)
#define MPU_EAR5                                 MPU_EAR5_REG(MPU)
#define MPU_EDR5                                 MPU_EDR5_REG(MPU)
#define MPU_EAR6                                 MPU_EAR6_REG(MPU)
#define MPU_EDR6                                 MPU_EDR6_REG(MPU)
#define MPU_EAR7                                 MPU_EAR7_REG(MPU)
#define MPU_EDR7                                 MPU_EDR7_REG(MPU)
#define MPU_RGD0_WORD0                           MPU_RGD0_WORD0_REG(MPU)
#define MPU_RGD0_WORD1                           MPU_RGD0_WORD1_REG(MPU)
#define MPU_RGD0_WORD2                           MPU_RGD0_WORD2_REG(MPU)
#define MPU_RGD0_WORD3                           MPU_RGD0_WORD3_REG(MPU)
#define MPU_RGD1_WORD0                           MPU_RGD1_WORD0_REG(MPU)
#define MPU_RGD1_WORD1                           MPU_RGD1_WORD1_REG(MPU)
#define MPU_RGD1_WORD2                           MPU_RGD1_WORD2_REG(MPU)
#define MPU_RGD1_WORD3                           MPU_RGD1_WORD3_REG(MPU)
#define MPU_RGD2_WORD0                           MPU_RGD2_WORD0_REG(MPU)
#define MPU_RGD2_WORD1                           MPU_RGD2_WORD1_REG(MPU)
#define MPU_RGD2_WORD2                           MPU_RGD2_WORD2_REG(MPU)
#define MPU_RGD2_WORD3                           MPU_RGD2_WORD3_REG(MPU)
#define MPU_RGD3_WORD0                           MPU_RGD3_WORD0_REG(MPU)
#define MPU_RGD3_WORD1                           MPU_RGD3_WORD1_REG(MPU)
#define MPU_RGD3_WORD2                           MPU_RGD3_WORD2_REG(MPU)
#define MPU_RGD3_WORD3                           MPU_RGD3_WORD3_REG(MPU)
#define MPU_RGD4_WORD0                           MPU_RGD4_WORD0_REG(MPU)
#define MPU_RGD4_WORD1                           MPU_RGD4_WORD1_REG(MPU)
#define MPU_RGD4_WORD2                           MPU_RGD4_WORD2_REG(MPU)
#define MPU_RGD4_WORD3                           MPU_RGD4_WORD3_REG(MPU)
#define MPU_RGD5_WORD0                           MPU_RGD5_WORD0_REG(MPU)
#define MPU_RGD5_WORD1                           MPU_RGD5_WORD1_REG(MPU)
#define MPU_RGD5_WORD2                           MPU_RGD5_WORD2_REG(MPU)
#define MPU_RGD5_WORD3                           MPU_RGD5_WORD3_REG(MPU)
#define MPU_RGD6_WORD0                           MPU_RGD6_WORD0_REG(MPU)
#define MPU_RGD6_WORD1                           MPU_RGD6_WORD1_REG(MPU)
#define MPU_RGD6_WORD2                           MPU_RGD6_WORD2_REG(MPU)
#define MPU_RGD6_WORD3                           MPU_RGD6_WORD3_REG(MPU)
#define MPU_RGD7_WORD0                           MPU_RGD7_WORD0_REG(MPU)
#define MPU_RGD7_WORD1                           MPU_RGD7_WORD1_REG(MPU)
#define MPU_RGD7_WORD2                           MPU_RGD7_WORD2_REG(MPU)
#define MPU_RGD7_WORD3                           MPU_RGD7_WORD3_REG(MPU)
#define MPU_RGDAAC0                              MPU_RGDAAC0_REG(MPU)
#define MPU_RGDAAC1                              MPU_RGDAAC1_REG(MPU)
#define MPU_RGDAAC2                              MPU_RGDAAC2_REG(MPU)
#define MPU_RGDAAC3                              MPU_RGDAAC3_REG(MPU)
#define MPU_RGDAAC4                              MPU_RGDAAC4_REG(MPU)
#define MPU_RGDAAC5                              MPU_RGDAAC5_REG(MPU)
#define MPU_RGDAAC6                              MPU_RGDAAC6_REG(MPU)
#define MPU_RGDAAC7                              MPU_RGDAAC7_REG(MPU)

/*!
 * @}
 */ /* end of group MPU_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group MPU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MSCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MSCM_Peripheral_Access_Layer MSCM Peripheral Access Layer
 * @{
 */

/** MSCM - Register Layout Typedef */
typedef struct {
  __I  uint32 CPxTYPE;                             /**< Processor X Type Register, offset: 0x0 */
  __I  uint32 CPxNUM;                              /**< Processor X Number Register, offset: 0x4 */
  __I  uint32 CPxMASTER;                           /**< Processor X Master Register, offset: 0x8 */
  __I  uint32 CPxCOUNT;                            /**< Processor X Count Register, offset: 0xC */
  __I  uint32 CPxCFG[4];                           /**< Processor X Configuration Register, array offset: 0x10, array step: 0x4 */
  __I  uint32 CP0TYPE;                             /**< Processor 0 Type Register, offset: 0x20 */
  __I  uint32 CP0NUM;                              /**< Processor 0 Number Register, offset: 0x24 */
  __I  uint32 CP0MASTER;                           /**< Processor 0 Master Register, offset: 0x28 */
  __I  uint32 CP0COUNT;                            /**< Processor 0 Count Register, offset: 0x2C */
  __I  uint32 CP0CFG[4];                           /**< Processor 0 Configuration Register, array offset: 0x30, array step: 0x4 */
       uint8 RESERVED_0[960];
  __IO uint32 OCMDR[4];                            /**< On-Chip Memory Descriptor Register, array offset: 0x400, array step: 0x4 */
} MSCM_Type, *MSCM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- MSCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MSCM_Register_Accessor_Macros MSCM - Register accessor macros
 * @{
 */


/* MSCM - Register accessors */
#define MSCM_CPxTYPE_REG(base)                   ((base)->CPxTYPE)
#define MSCM_CPxNUM_REG(base)                    ((base)->CPxNUM)
#define MSCM_CPxMASTER_REG(base)                 ((base)->CPxMASTER)
#define MSCM_CPxCOUNT_REG(base)                  ((base)->CPxCOUNT)
#define MSCM_CPxCFG_REG(base,index)              ((base)->CPxCFG[index])
#define MSCM_CPxCFG_COUNT                        4
#define MSCM_CP0TYPE_REG(base)                   ((base)->CP0TYPE)
#define MSCM_CP0NUM_REG(base)                    ((base)->CP0NUM)
#define MSCM_CP0MASTER_REG(base)                 ((base)->CP0MASTER)
#define MSCM_CP0COUNT_REG(base)                  ((base)->CP0COUNT)
#define MSCM_CP0CFG_REG(base,index)              ((base)->CP0CFG[index])
#define MSCM_CP0CFG_COUNT                        4
#define MSCM_OCMDR_REG(base,index)               ((base)->OCMDR[index])
#define MSCM_OCMDR_COUNT                         4

/*!
 * @}
 */ /* end of group MSCM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- MSCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MSCM_Register_Masks MSCM Register Masks
 * @{
 */

/* CPxTYPE Bit Fields */
#define MSCM_CPxTYPE_RYPZ_MASK                   0xFFu
#define MSCM_CPxTYPE_RYPZ_SHIFT                  0
#define MSCM_CPxTYPE_RYPZ_WIDTH                  8
#define MSCM_CPxTYPE_RYPZ(x)                     (((uint32)(((uint32)(x))<<MSCM_CPxTYPE_RYPZ_SHIFT))&MSCM_CPxTYPE_RYPZ_MASK)
#define MSCM_CPxTYPE_PERSONALITY_MASK            0xFFFFFF00u
#define MSCM_CPxTYPE_PERSONALITY_SHIFT           8
#define MSCM_CPxTYPE_PERSONALITY_WIDTH           24
#define MSCM_CPxTYPE_PERSONALITY(x)              (((uint32)(((uint32)(x))<<MSCM_CPxTYPE_PERSONALITY_SHIFT))&MSCM_CPxTYPE_PERSONALITY_MASK)
/* CPxNUM Bit Fields */
#define MSCM_CPxNUM_CPN_MASK                     0x1u
#define MSCM_CPxNUM_CPN_SHIFT                    0
#define MSCM_CPxNUM_CPN_WIDTH                    1
#define MSCM_CPxNUM_CPN(x)                       (((uint32)(((uint32)(x))<<MSCM_CPxNUM_CPN_SHIFT))&MSCM_CPxNUM_CPN_MASK)
/* CPxMASTER Bit Fields */
#define MSCM_CPxMASTER_PPN_MASK                  0x3Fu
#define MSCM_CPxMASTER_PPN_SHIFT                 0
#define MSCM_CPxMASTER_PPN_WIDTH                 6
#define MSCM_CPxMASTER_PPN(x)                    (((uint32)(((uint32)(x))<<MSCM_CPxMASTER_PPN_SHIFT))&MSCM_CPxMASTER_PPN_MASK)
/* CPxCOUNT Bit Fields */
#define MSCM_CPxCOUNT_PCNT_MASK                  0x3u
#define MSCM_CPxCOUNT_PCNT_SHIFT                 0
#define MSCM_CPxCOUNT_PCNT_WIDTH                 2
#define MSCM_CPxCOUNT_PCNT(x)                    (((uint32)(((uint32)(x))<<MSCM_CPxCOUNT_PCNT_SHIFT))&MSCM_CPxCOUNT_PCNT_MASK)
/* CPxCFG Bit Fields */
#define MSCM_CPxCFG_ICSZ_MASK                    0xFF000000u
#define MSCM_CPxCFG_ICSZ_SHIFT                   24
#define MSCM_CPxCFG_ICSZ_WIDTH                   8
#define MSCM_CPxCFG_ICSZ(x)                      (((uint32)(((uint32)(x))<<MSCM_CPxCFG_ICSZ_SHIFT))&MSCM_CPxCFG_ICSZ_MASK)
/* CP0TYPE Bit Fields */
#define MSCM_CP0TYPE_RYPZ_MASK                   0xFFu
#define MSCM_CP0TYPE_RYPZ_SHIFT                  0
#define MSCM_CP0TYPE_RYPZ_WIDTH                  8
#define MSCM_CP0TYPE_RYPZ(x)                     (((uint32)(((uint32)(x))<<MSCM_CP0TYPE_RYPZ_SHIFT))&MSCM_CP0TYPE_RYPZ_MASK)
#define MSCM_CP0TYPE_PERSONALITY_MASK            0xFFFFFF00u
#define MSCM_CP0TYPE_PERSONALITY_SHIFT           8
#define MSCM_CP0TYPE_PERSONALITY_WIDTH           24
#define MSCM_CP0TYPE_PERSONALITY(x)              (((uint32)(((uint32)(x))<<MSCM_CP0TYPE_PERSONALITY_SHIFT))&MSCM_CP0TYPE_PERSONALITY_MASK)
/* CP0NUM Bit Fields */
#define MSCM_CP0NUM_CPN_MASK                     0x1u
#define MSCM_CP0NUM_CPN_SHIFT                    0
#define MSCM_CP0NUM_CPN_WIDTH                    1
#define MSCM_CP0NUM_CPN(x)                       (((uint32)(((uint32)(x))<<MSCM_CP0NUM_CPN_SHIFT))&MSCM_CP0NUM_CPN_MASK)
/* CP0MASTER Bit Fields */
#define MSCM_CP0MASTER_PPN_MASK                  0x3Fu
#define MSCM_CP0MASTER_PPN_SHIFT                 0
#define MSCM_CP0MASTER_PPN_WIDTH                 6
#define MSCM_CP0MASTER_PPN(x)                    (((uint32)(((uint32)(x))<<MSCM_CP0MASTER_PPN_SHIFT))&MSCM_CP0MASTER_PPN_MASK)
/* CP0COUNT Bit Fields */
#define MSCM_CP0COUNT_PCNT_MASK                  0x3u
#define MSCM_CP0COUNT_PCNT_SHIFT                 0
#define MSCM_CP0COUNT_PCNT_WIDTH                 2
#define MSCM_CP0COUNT_PCNT(x)                    (((uint32)(((uint32)(x))<<MSCM_CP0COUNT_PCNT_SHIFT))&MSCM_CP0COUNT_PCNT_MASK)
/* CP0CFG Bit Fields */
#define MSCM_CP0CFG_ICSZ_MASK                    0xFF000000u
#define MSCM_CP0CFG_ICSZ_SHIFT                   24
#define MSCM_CP0CFG_ICSZ_WIDTH                   8
#define MSCM_CP0CFG_ICSZ(x)                      (((uint32)(((uint32)(x))<<MSCM_CP0CFG_ICSZ_SHIFT))&MSCM_CP0CFG_ICSZ_MASK)
/* OCMDR Bit Fields */
#define MSCM_OCMDR_OCMC0_MASK                    0xFu
#define MSCM_OCMDR_OCMC0_SHIFT                   0
#define MSCM_OCMDR_OCMC0_WIDTH                   4
#define MSCM_OCMDR_OCMC0(x)                      (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMC0_SHIFT))&MSCM_OCMDR_OCMC0_MASK)
#define MSCM_OCMDR_OCMC1_MASK                    0xF0u
#define MSCM_OCMDR_OCMC1_SHIFT                   4
#define MSCM_OCMDR_OCMC1_WIDTH                   4
#define MSCM_OCMDR_OCMC1(x)                      (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMC1_SHIFT))&MSCM_OCMDR_OCMC1_MASK)
#define MSCM_OCMDR_OCMC2_MASK                    0xF00u
#define MSCM_OCMDR_OCMC2_SHIFT                   8
#define MSCM_OCMDR_OCMC2_WIDTH                   4
#define MSCM_OCMDR_OCMC2(x)                      (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMC2_SHIFT))&MSCM_OCMDR_OCMC2_MASK)
#define MSCM_OCMDR_OCMPU_MASK                    0x1000u
#define MSCM_OCMDR_OCMPU_SHIFT                   12
#define MSCM_OCMDR_OCMPU_WIDTH                   1
#define MSCM_OCMDR_OCMPU(x)                      (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMPU_SHIFT))&MSCM_OCMDR_OCMPU_MASK)
#define MSCM_OCMDR_OCMT_MASK                     0xE000u
#define MSCM_OCMDR_OCMT_SHIFT                    13
#define MSCM_OCMDR_OCMT_WIDTH                    3
#define MSCM_OCMDR_OCMT(x)                       (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMT_SHIFT))&MSCM_OCMDR_OCMT_MASK)
#define MSCM_OCMDR_RO_MASK                       0x10000u
#define MSCM_OCMDR_RO_SHIFT                      16
#define MSCM_OCMDR_RO_WIDTH                      1
#define MSCM_OCMDR_RO(x)                         (((uint32)(((uint32)(x))<<MSCM_OCMDR_RO_SHIFT))&MSCM_OCMDR_RO_MASK)
#define MSCM_OCMDR_OCMW_MASK                     0xE0000u
#define MSCM_OCMDR_OCMW_SHIFT                    17
#define MSCM_OCMDR_OCMW_WIDTH                    3
#define MSCM_OCMDR_OCMW(x)                       (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMW_SHIFT))&MSCM_OCMDR_OCMW_MASK)
#define MSCM_OCMDR_OCMSZ_MASK                    0xF000000u
#define MSCM_OCMDR_OCMSZ_SHIFT                   24
#define MSCM_OCMDR_OCMSZ_WIDTH                   4
#define MSCM_OCMDR_OCMSZ(x)                      (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMSZ_SHIFT))&MSCM_OCMDR_OCMSZ_MASK)
#define MSCM_OCMDR_OCMSZH_MASK                   0x10000000u
#define MSCM_OCMDR_OCMSZH_SHIFT                  28
#define MSCM_OCMDR_OCMSZH_WIDTH                  1
#define MSCM_OCMDR_OCMSZH(x)                     (((uint32)(((uint32)(x))<<MSCM_OCMDR_OCMSZH_SHIFT))&MSCM_OCMDR_OCMSZH_MASK)
#define MSCM_OCMDR_V_MASK                        0x80000000u
#define MSCM_OCMDR_V_SHIFT                       31
#define MSCM_OCMDR_V_WIDTH                       1
#define MSCM_OCMDR_V(x)                          (((uint32)(((uint32)(x))<<MSCM_OCMDR_V_SHIFT))&MSCM_OCMDR_V_MASK)

/*!
 * @}
 */ /* end of group MSCM_Register_Masks */


/* MSCM - Peripheral instance base addresses */
/** Peripheral MSCM base address */
#define MSCM_BASE                                (0x40001000u)
/** Peripheral MSCM base pointer */
#define MSCM                                     ((MSCM_Type *)MSCM_BASE)
#define MSCM_BASE_PTR                            (MSCM)
/** Array initializer of MSCM peripheral base addresses */
#define MSCM_BASE_ADDRS                          { MSCM_BASE }
/** Array initializer of MSCM peripheral base pointers */
#define MSCM_BASE_PTRS                           { MSCM }

/* ----------------------------------------------------------------------------
   -- MSCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MSCM_Register_Accessor_Macros MSCM - Register accessor macros
 * @{
 */


/* MSCM - Register instance definitions */
/* MSCM */
#define MSCM_CPxTYPE                             MSCM_CPxTYPE_REG(MSCM)
#define MSCM_CPxNUM                              MSCM_CPxNUM_REG(MSCM)
#define MSCM_CPxMASTER                           MSCM_CPxMASTER_REG(MSCM)
#define MSCM_CPxCOUNT                            MSCM_CPxCOUNT_REG(MSCM)
#define MSCM_CPxCFG0                             MSCM_CPxCFG_REG(MSCM,0)
#define MSCM_CPxCFG1                             MSCM_CPxCFG_REG(MSCM,1)
#define MSCM_CPxCFG2                             MSCM_CPxCFG_REG(MSCM,2)
#define MSCM_CPxCFG3                             MSCM_CPxCFG_REG(MSCM,3)
#define MSCM_CP0TYPE                             MSCM_CP0TYPE_REG(MSCM)
#define MSCM_CP0NUM                              MSCM_CP0NUM_REG(MSCM)
#define MSCM_CP0MASTER                           MSCM_CP0MASTER_REG(MSCM)
#define MSCM_CP0COUNT                            MSCM_CP0COUNT_REG(MSCM)
#define MSCM_CP0CFG0                             MSCM_CP0CFG_REG(MSCM,0)
#define MSCM_CP0CFG1                             MSCM_CP0CFG_REG(MSCM,1)
#define MSCM_CP0CFG2                             MSCM_CP0CFG_REG(MSCM,2)
#define MSCM_CP0CFG3                             MSCM_CP0CFG_REG(MSCM,3)
#define MSCM_OCMDR0                              MSCM_OCMDR_REG(MSCM,0)
#define MSCM_OCMDR1                              MSCM_OCMDR_REG(MSCM,1)
#define MSCM_OCMDR2                              MSCM_OCMDR_REG(MSCM,2)
#define MSCM_OCMDR3                              MSCM_OCMDR_REG(MSCM,3)

/* MSCM - Register array accessors */
#define MSCM_CPxCFG(index)                       MSCM_CPxCFG_REG(MSCM,index)
#define MSCM_CP0CFG(index)                       MSCM_CP0CFG_REG(MSCM,index)
#define MSCM_OCMDR(index)                        MSCM_OCMDR_REG(MSCM,index)

/*!
 * @}
 */ /* end of group MSCM_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group MSCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- NVIC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup NVIC_Peripheral_Access_Layer NVIC Peripheral Access Layer
 * @{
 */

/** NVIC - Register Layout Typedef */
typedef struct {
  __IO uint32 ISER[4];                             /**< Interrupt Set Enable Register n, array offset: 0x0, array step: 0x4 */
       uint8 RESERVED_0[112];
  __IO uint32 ICER[4];                             /**< Interrupt Clear Enable Register n, array offset: 0x80, array step: 0x4 */
       uint8 RESERVED_1[112];
  __IO uint32 ISPR[4];                             /**< Interrupt Set Pending Register n, array offset: 0x100, array step: 0x4 */
       uint8 RESERVED_2[112];
  __IO uint32 ICPR[4];                             /**< Interrupt Clear Pending Register n, array offset: 0x180, array step: 0x4 */
       uint8 RESERVED_3[112];
  __IO uint32 IABR[4];                             /**< Interrupt Active bit Register n, array offset: 0x200, array step: 0x4 */
       uint8 RESERVED_4[240];
  __IO uint8 IP[106];                              /**< Interrupt Priority Register n, array offset: 0x300, array step: 0x1 */
       uint8 RESERVED_5[2710];
  __IO uint32 STIR[1];                             /**< Software Trigger Interrupt Register, array offset: 0xE00, array step: 0x4 */
} NVIC_Type, *NVIC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- NVIC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup NVIC_Register_Accessor_Macros NVIC - Register accessor macros
 * @{
 */


/* NVIC - Register accessors */
#define NVIC_ISER_REG(base,index)                ((base)->ISER[index])
#define NVIC_ISER_COUNT                          4
#define NVIC_ICER_REG(base,index)                ((base)->ICER[index])
#define NVIC_ICER_COUNT                          4
#define NVIC_ISPR_REG(base,index)                ((base)->ISPR[index])
#define NVIC_ISPR_COUNT                          4
#define NVIC_ICPR_REG(base,index)                ((base)->ICPR[index])
#define NVIC_ICPR_COUNT                          4
#define NVIC_IABR_REG(base,index)                ((base)->IABR[index])
#define NVIC_IABR_COUNT                          4
#define NVIC_IP_REG(base,index)                  ((base)->IP[index])
#define NVIC_IP_COUNT                            106
#define NVIC_STIR_REG(base,index)                ((base)->STIR[index])
#define NVIC_STIR_COUNT                          1

/*!
 * @}
 */ /* end of group NVIC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- NVIC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup NVIC_Register_Masks NVIC Register Masks
 * @{
 */

/* ISER Bit Fields */
#define NVIC_ISER_SETENA_MASK                    0xFFFFFFFFu
#define NVIC_ISER_SETENA_SHIFT                   0
#define NVIC_ISER_SETENA_WIDTH                   32
#define NVIC_ISER_SETENA(x)                      (((uint32)(((uint32)(x))<<NVIC_ISER_SETENA_SHIFT))&NVIC_ISER_SETENA_MASK)
/* ICER Bit Fields */
#define NVIC_ICER_CLRENA_MASK                    0xFFFFFFFFu
#define NVIC_ICER_CLRENA_SHIFT                   0
#define NVIC_ICER_CLRENA_WIDTH                   32
#define NVIC_ICER_CLRENA(x)                      (((uint32)(((uint32)(x))<<NVIC_ICER_CLRENA_SHIFT))&NVIC_ICER_CLRENA_MASK)
/* ISPR Bit Fields */
#define NVIC_ISPR_SETPEND_MASK                   0xFFFFFFFFu
#define NVIC_ISPR_SETPEND_SHIFT                  0
#define NVIC_ISPR_SETPEND_WIDTH                  32
#define NVIC_ISPR_SETPEND(x)                     (((uint32)(((uint32)(x))<<NVIC_ISPR_SETPEND_SHIFT))&NVIC_ISPR_SETPEND_MASK)
/* ICPR Bit Fields */
#define NVIC_ICPR_CLRPEND_MASK                   0xFFFFFFFFu
#define NVIC_ICPR_CLRPEND_SHIFT                  0
#define NVIC_ICPR_CLRPEND_WIDTH                  32
#define NVIC_ICPR_CLRPEND(x)                     (((uint32)(((uint32)(x))<<NVIC_ICPR_CLRPEND_SHIFT))&NVIC_ICPR_CLRPEND_MASK)
/* IABR Bit Fields */
#define NVIC_IABR_ACTIVE_MASK                    0xFFFFFFFFu
#define NVIC_IABR_ACTIVE_SHIFT                   0
#define NVIC_IABR_ACTIVE_WIDTH                   32
#define NVIC_IABR_ACTIVE(x)                      (((uint32)(((uint32)(x))<<NVIC_IABR_ACTIVE_SHIFT))&NVIC_IABR_ACTIVE_MASK)
/* IP Bit Fields */
#define NVIC_IP_PRI0_MASK                        0xFFu
#define NVIC_IP_PRI0_SHIFT                       0
#define NVIC_IP_PRI0_WIDTH                       8
#define NVIC_IP_PRI0(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI0_SHIFT))&NVIC_IP_PRI0_MASK)
#define NVIC_IP_PRI1_MASK                        0xFFu
#define NVIC_IP_PRI1_SHIFT                       0
#define NVIC_IP_PRI1_WIDTH                       8
#define NVIC_IP_PRI1(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI1_SHIFT))&NVIC_IP_PRI1_MASK)
#define NVIC_IP_PRI2_MASK                        0xFFu
#define NVIC_IP_PRI2_SHIFT                       0
#define NVIC_IP_PRI2_WIDTH                       8
#define NVIC_IP_PRI2(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI2_SHIFT))&NVIC_IP_PRI2_MASK)
#define NVIC_IP_PRI3_MASK                        0xFFu
#define NVIC_IP_PRI3_SHIFT                       0
#define NVIC_IP_PRI3_WIDTH                       8
#define NVIC_IP_PRI3(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI3_SHIFT))&NVIC_IP_PRI3_MASK)
#define NVIC_IP_PRI4_MASK                        0xFFu
#define NVIC_IP_PRI4_SHIFT                       0
#define NVIC_IP_PRI4_WIDTH                       8
#define NVIC_IP_PRI4(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI4_SHIFT))&NVIC_IP_PRI4_MASK)
#define NVIC_IP_PRI5_MASK                        0xFFu
#define NVIC_IP_PRI5_SHIFT                       0
#define NVIC_IP_PRI5_WIDTH                       8
#define NVIC_IP_PRI5(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI5_SHIFT))&NVIC_IP_PRI5_MASK)
#define NVIC_IP_PRI6_MASK                        0xFFu
#define NVIC_IP_PRI6_SHIFT                       0
#define NVIC_IP_PRI6_WIDTH                       8
#define NVIC_IP_PRI6(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI6_SHIFT))&NVIC_IP_PRI6_MASK)
#define NVIC_IP_PRI7_MASK                        0xFFu
#define NVIC_IP_PRI7_SHIFT                       0
#define NVIC_IP_PRI7_WIDTH                       8
#define NVIC_IP_PRI7(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI7_SHIFT))&NVIC_IP_PRI7_MASK)
#define NVIC_IP_PRI8_MASK                        0xFFu
#define NVIC_IP_PRI8_SHIFT                       0
#define NVIC_IP_PRI8_WIDTH                       8
#define NVIC_IP_PRI8(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI8_SHIFT))&NVIC_IP_PRI8_MASK)
#define NVIC_IP_PRI9_MASK                        0xFFu
#define NVIC_IP_PRI9_SHIFT                       0
#define NVIC_IP_PRI9_WIDTH                       8
#define NVIC_IP_PRI9(x)                          (((uint8)(((uint8)(x))<<NVIC_IP_PRI9_SHIFT))&NVIC_IP_PRI9_MASK)
#define NVIC_IP_PRI10_MASK                       0xFFu
#define NVIC_IP_PRI10_SHIFT                      0
#define NVIC_IP_PRI10_WIDTH                      8
#define NVIC_IP_PRI10(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI10_SHIFT))&NVIC_IP_PRI10_MASK)
#define NVIC_IP_PRI11_MASK                       0xFFu
#define NVIC_IP_PRI11_SHIFT                      0
#define NVIC_IP_PRI11_WIDTH                      8
#define NVIC_IP_PRI11(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI11_SHIFT))&NVIC_IP_PRI11_MASK)
#define NVIC_IP_PRI12_MASK                       0xFFu
#define NVIC_IP_PRI12_SHIFT                      0
#define NVIC_IP_PRI12_WIDTH                      8
#define NVIC_IP_PRI12(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI12_SHIFT))&NVIC_IP_PRI12_MASK)
#define NVIC_IP_PRI13_MASK                       0xFFu
#define NVIC_IP_PRI13_SHIFT                      0
#define NVIC_IP_PRI13_WIDTH                      8
#define NVIC_IP_PRI13(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI13_SHIFT))&NVIC_IP_PRI13_MASK)
#define NVIC_IP_PRI14_MASK                       0xFFu
#define NVIC_IP_PRI14_SHIFT                      0
#define NVIC_IP_PRI14_WIDTH                      8
#define NVIC_IP_PRI14(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI14_SHIFT))&NVIC_IP_PRI14_MASK)
#define NVIC_IP_PRI15_MASK                       0xFFu
#define NVIC_IP_PRI15_SHIFT                      0
#define NVIC_IP_PRI15_WIDTH                      8
#define NVIC_IP_PRI15(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI15_SHIFT))&NVIC_IP_PRI15_MASK)
#define NVIC_IP_PRI16_MASK                       0xFFu
#define NVIC_IP_PRI16_SHIFT                      0
#define NVIC_IP_PRI16_WIDTH                      8
#define NVIC_IP_PRI16(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI16_SHIFT))&NVIC_IP_PRI16_MASK)
#define NVIC_IP_PRI17_MASK                       0xFFu
#define NVIC_IP_PRI17_SHIFT                      0
#define NVIC_IP_PRI17_WIDTH                      8
#define NVIC_IP_PRI17(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI17_SHIFT))&NVIC_IP_PRI17_MASK)
#define NVIC_IP_PRI18_MASK                       0xFFu
#define NVIC_IP_PRI18_SHIFT                      0
#define NVIC_IP_PRI18_WIDTH                      8
#define NVIC_IP_PRI18(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI18_SHIFT))&NVIC_IP_PRI18_MASK)
#define NVIC_IP_PRI19_MASK                       0xFFu
#define NVIC_IP_PRI19_SHIFT                      0
#define NVIC_IP_PRI19_WIDTH                      8
#define NVIC_IP_PRI19(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI19_SHIFT))&NVIC_IP_PRI19_MASK)
#define NVIC_IP_PRI20_MASK                       0xFFu
#define NVIC_IP_PRI20_SHIFT                      0
#define NVIC_IP_PRI20_WIDTH                      8
#define NVIC_IP_PRI20(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI20_SHIFT))&NVIC_IP_PRI20_MASK)
#define NVIC_IP_PRI21_MASK                       0xFFu
#define NVIC_IP_PRI21_SHIFT                      0
#define NVIC_IP_PRI21_WIDTH                      8
#define NVIC_IP_PRI21(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI21_SHIFT))&NVIC_IP_PRI21_MASK)
#define NVIC_IP_PRI22_MASK                       0xFFu
#define NVIC_IP_PRI22_SHIFT                      0
#define NVIC_IP_PRI22_WIDTH                      8
#define NVIC_IP_PRI22(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI22_SHIFT))&NVIC_IP_PRI22_MASK)
#define NVIC_IP_PRI23_MASK                       0xFFu
#define NVIC_IP_PRI23_SHIFT                      0
#define NVIC_IP_PRI23_WIDTH                      8
#define NVIC_IP_PRI23(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI23_SHIFT))&NVIC_IP_PRI23_MASK)
#define NVIC_IP_PRI24_MASK                       0xFFu
#define NVIC_IP_PRI24_SHIFT                      0
#define NVIC_IP_PRI24_WIDTH                      8
#define NVIC_IP_PRI24(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI24_SHIFT))&NVIC_IP_PRI24_MASK)
#define NVIC_IP_PRI25_MASK                       0xFFu
#define NVIC_IP_PRI25_SHIFT                      0
#define NVIC_IP_PRI25_WIDTH                      8
#define NVIC_IP_PRI25(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI25_SHIFT))&NVIC_IP_PRI25_MASK)
#define NVIC_IP_PRI26_MASK                       0xFFu
#define NVIC_IP_PRI26_SHIFT                      0
#define NVIC_IP_PRI26_WIDTH                      8
#define NVIC_IP_PRI26(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI26_SHIFT))&NVIC_IP_PRI26_MASK)
#define NVIC_IP_PRI27_MASK                       0xFFu
#define NVIC_IP_PRI27_SHIFT                      0
#define NVIC_IP_PRI27_WIDTH                      8
#define NVIC_IP_PRI27(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI27_SHIFT))&NVIC_IP_PRI27_MASK)
#define NVIC_IP_PRI28_MASK                       0xFFu
#define NVIC_IP_PRI28_SHIFT                      0
#define NVIC_IP_PRI28_WIDTH                      8
#define NVIC_IP_PRI28(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI28_SHIFT))&NVIC_IP_PRI28_MASK)
#define NVIC_IP_PRI29_MASK                       0xFFu
#define NVIC_IP_PRI29_SHIFT                      0
#define NVIC_IP_PRI29_WIDTH                      8
#define NVIC_IP_PRI29(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI29_SHIFT))&NVIC_IP_PRI29_MASK)
#define NVIC_IP_PRI30_MASK                       0xFFu
#define NVIC_IP_PRI30_SHIFT                      0
#define NVIC_IP_PRI30_WIDTH                      8
#define NVIC_IP_PRI30(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI30_SHIFT))&NVIC_IP_PRI30_MASK)
#define NVIC_IP_PRI31_MASK                       0xFFu
#define NVIC_IP_PRI31_SHIFT                      0
#define NVIC_IP_PRI31_WIDTH                      8
#define NVIC_IP_PRI31(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI31_SHIFT))&NVIC_IP_PRI31_MASK)
#define NVIC_IP_PRI32_MASK                       0xFFu
#define NVIC_IP_PRI32_SHIFT                      0
#define NVIC_IP_PRI32_WIDTH                      8
#define NVIC_IP_PRI32(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI32_SHIFT))&NVIC_IP_PRI32_MASK)
#define NVIC_IP_PRI33_MASK                       0xFFu
#define NVIC_IP_PRI33_SHIFT                      0
#define NVIC_IP_PRI33_WIDTH                      8
#define NVIC_IP_PRI33(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI33_SHIFT))&NVIC_IP_PRI33_MASK)
#define NVIC_IP_PRI34_MASK                       0xFFu
#define NVIC_IP_PRI34_SHIFT                      0
#define NVIC_IP_PRI34_WIDTH                      8
#define NVIC_IP_PRI34(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI34_SHIFT))&NVIC_IP_PRI34_MASK)
#define NVIC_IP_PRI35_MASK                       0xFFu
#define NVIC_IP_PRI35_SHIFT                      0
#define NVIC_IP_PRI35_WIDTH                      8
#define NVIC_IP_PRI35(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI35_SHIFT))&NVIC_IP_PRI35_MASK)
#define NVIC_IP_PRI36_MASK                       0xFFu
#define NVIC_IP_PRI36_SHIFT                      0
#define NVIC_IP_PRI36_WIDTH                      8
#define NVIC_IP_PRI36(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI36_SHIFT))&NVIC_IP_PRI36_MASK)
#define NVIC_IP_PRI37_MASK                       0xFFu
#define NVIC_IP_PRI37_SHIFT                      0
#define NVIC_IP_PRI37_WIDTH                      8
#define NVIC_IP_PRI37(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI37_SHIFT))&NVIC_IP_PRI37_MASK)
#define NVIC_IP_PRI38_MASK                       0xFFu
#define NVIC_IP_PRI38_SHIFT                      0
#define NVIC_IP_PRI38_WIDTH                      8
#define NVIC_IP_PRI38(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI38_SHIFT))&NVIC_IP_PRI38_MASK)
#define NVIC_IP_PRI39_MASK                       0xFFu
#define NVIC_IP_PRI39_SHIFT                      0
#define NVIC_IP_PRI39_WIDTH                      8
#define NVIC_IP_PRI39(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI39_SHIFT))&NVIC_IP_PRI39_MASK)
#define NVIC_IP_PRI40_MASK                       0xFFu
#define NVIC_IP_PRI40_SHIFT                      0
#define NVIC_IP_PRI40_WIDTH                      8
#define NVIC_IP_PRI40(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI40_SHIFT))&NVIC_IP_PRI40_MASK)
#define NVIC_IP_PRI41_MASK                       0xFFu
#define NVIC_IP_PRI41_SHIFT                      0
#define NVIC_IP_PRI41_WIDTH                      8
#define NVIC_IP_PRI41(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI41_SHIFT))&NVIC_IP_PRI41_MASK)
#define NVIC_IP_PRI42_MASK                       0xFFu
#define NVIC_IP_PRI42_SHIFT                      0
#define NVIC_IP_PRI42_WIDTH                      8
#define NVIC_IP_PRI42(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI42_SHIFT))&NVIC_IP_PRI42_MASK)
#define NVIC_IP_PRI43_MASK                       0xFFu
#define NVIC_IP_PRI43_SHIFT                      0
#define NVIC_IP_PRI43_WIDTH                      8
#define NVIC_IP_PRI43(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI43_SHIFT))&NVIC_IP_PRI43_MASK)
#define NVIC_IP_PRI44_MASK                       0xFFu
#define NVIC_IP_PRI44_SHIFT                      0
#define NVIC_IP_PRI44_WIDTH                      8
#define NVIC_IP_PRI44(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI44_SHIFT))&NVIC_IP_PRI44_MASK)
#define NVIC_IP_PRI45_MASK                       0xFFu
#define NVIC_IP_PRI45_SHIFT                      0
#define NVIC_IP_PRI45_WIDTH                      8
#define NVIC_IP_PRI45(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI45_SHIFT))&NVIC_IP_PRI45_MASK)
#define NVIC_IP_PRI46_MASK                       0xFFu
#define NVIC_IP_PRI46_SHIFT                      0
#define NVIC_IP_PRI46_WIDTH                      8
#define NVIC_IP_PRI46(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI46_SHIFT))&NVIC_IP_PRI46_MASK)
#define NVIC_IP_PRI47_MASK                       0xFFu
#define NVIC_IP_PRI47_SHIFT                      0
#define NVIC_IP_PRI47_WIDTH                      8
#define NVIC_IP_PRI47(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI47_SHIFT))&NVIC_IP_PRI47_MASK)
#define NVIC_IP_PRI48_MASK                       0xFFu
#define NVIC_IP_PRI48_SHIFT                      0
#define NVIC_IP_PRI48_WIDTH                      8
#define NVIC_IP_PRI48(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI48_SHIFT))&NVIC_IP_PRI48_MASK)
#define NVIC_IP_PRI49_MASK                       0xFFu
#define NVIC_IP_PRI49_SHIFT                      0
#define NVIC_IP_PRI49_WIDTH                      8
#define NVIC_IP_PRI49(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI49_SHIFT))&NVIC_IP_PRI49_MASK)
#define NVIC_IP_PRI50_MASK                       0xFFu
#define NVIC_IP_PRI50_SHIFT                      0
#define NVIC_IP_PRI50_WIDTH                      8
#define NVIC_IP_PRI50(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI50_SHIFT))&NVIC_IP_PRI50_MASK)
#define NVIC_IP_PRI51_MASK                       0xFFu
#define NVIC_IP_PRI51_SHIFT                      0
#define NVIC_IP_PRI51_WIDTH                      8
#define NVIC_IP_PRI51(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI51_SHIFT))&NVIC_IP_PRI51_MASK)
#define NVIC_IP_PRI52_MASK                       0xFFu
#define NVIC_IP_PRI52_SHIFT                      0
#define NVIC_IP_PRI52_WIDTH                      8
#define NVIC_IP_PRI52(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI52_SHIFT))&NVIC_IP_PRI52_MASK)
#define NVIC_IP_PRI53_MASK                       0xFFu
#define NVIC_IP_PRI53_SHIFT                      0
#define NVIC_IP_PRI53_WIDTH                      8
#define NVIC_IP_PRI53(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI53_SHIFT))&NVIC_IP_PRI53_MASK)
#define NVIC_IP_PRI54_MASK                       0xFFu
#define NVIC_IP_PRI54_SHIFT                      0
#define NVIC_IP_PRI54_WIDTH                      8
#define NVIC_IP_PRI54(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI54_SHIFT))&NVIC_IP_PRI54_MASK)
#define NVIC_IP_PRI55_MASK                       0xFFu
#define NVIC_IP_PRI55_SHIFT                      0
#define NVIC_IP_PRI55_WIDTH                      8
#define NVIC_IP_PRI55(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI55_SHIFT))&NVIC_IP_PRI55_MASK)
#define NVIC_IP_PRI56_MASK                       0xFFu
#define NVIC_IP_PRI56_SHIFT                      0
#define NVIC_IP_PRI56_WIDTH                      8
#define NVIC_IP_PRI56(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI56_SHIFT))&NVIC_IP_PRI56_MASK)
#define NVIC_IP_PRI57_MASK                       0xFFu
#define NVIC_IP_PRI57_SHIFT                      0
#define NVIC_IP_PRI57_WIDTH                      8
#define NVIC_IP_PRI57(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI57_SHIFT))&NVIC_IP_PRI57_MASK)
#define NVIC_IP_PRI58_MASK                       0xFFu
#define NVIC_IP_PRI58_SHIFT                      0
#define NVIC_IP_PRI58_WIDTH                      8
#define NVIC_IP_PRI58(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI58_SHIFT))&NVIC_IP_PRI58_MASK)
#define NVIC_IP_PRI59_MASK                       0xFFu
#define NVIC_IP_PRI59_SHIFT                      0
#define NVIC_IP_PRI59_WIDTH                      8
#define NVIC_IP_PRI59(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI59_SHIFT))&NVIC_IP_PRI59_MASK)
#define NVIC_IP_PRI60_MASK                       0xFFu
#define NVIC_IP_PRI60_SHIFT                      0
#define NVIC_IP_PRI60_WIDTH                      8
#define NVIC_IP_PRI60(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI60_SHIFT))&NVIC_IP_PRI60_MASK)
#define NVIC_IP_PRI61_MASK                       0xFFu
#define NVIC_IP_PRI61_SHIFT                      0
#define NVIC_IP_PRI61_WIDTH                      8
#define NVIC_IP_PRI61(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI61_SHIFT))&NVIC_IP_PRI61_MASK)
#define NVIC_IP_PRI62_MASK                       0xFFu
#define NVIC_IP_PRI62_SHIFT                      0
#define NVIC_IP_PRI62_WIDTH                      8
#define NVIC_IP_PRI62(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI62_SHIFT))&NVIC_IP_PRI62_MASK)
#define NVIC_IP_PRI63_MASK                       0xFFu
#define NVIC_IP_PRI63_SHIFT                      0
#define NVIC_IP_PRI63_WIDTH                      8
#define NVIC_IP_PRI63(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI63_SHIFT))&NVIC_IP_PRI63_MASK)
#define NVIC_IP_PRI64_MASK                       0xFFu
#define NVIC_IP_PRI64_SHIFT                      0
#define NVIC_IP_PRI64_WIDTH                      8
#define NVIC_IP_PRI64(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI64_SHIFT))&NVIC_IP_PRI64_MASK)
#define NVIC_IP_PRI65_MASK                       0xFFu
#define NVIC_IP_PRI65_SHIFT                      0
#define NVIC_IP_PRI65_WIDTH                      8
#define NVIC_IP_PRI65(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI65_SHIFT))&NVIC_IP_PRI65_MASK)
#define NVIC_IP_PRI66_MASK                       0xFFu
#define NVIC_IP_PRI66_SHIFT                      0
#define NVIC_IP_PRI66_WIDTH                      8
#define NVIC_IP_PRI66(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI66_SHIFT))&NVIC_IP_PRI66_MASK)
#define NVIC_IP_PRI67_MASK                       0xFFu
#define NVIC_IP_PRI67_SHIFT                      0
#define NVIC_IP_PRI67_WIDTH                      8
#define NVIC_IP_PRI67(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI67_SHIFT))&NVIC_IP_PRI67_MASK)
#define NVIC_IP_PRI68_MASK                       0xFFu
#define NVIC_IP_PRI68_SHIFT                      0
#define NVIC_IP_PRI68_WIDTH                      8
#define NVIC_IP_PRI68(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI68_SHIFT))&NVIC_IP_PRI68_MASK)
#define NVIC_IP_PRI69_MASK                       0xFFu
#define NVIC_IP_PRI69_SHIFT                      0
#define NVIC_IP_PRI69_WIDTH                      8
#define NVIC_IP_PRI69(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI69_SHIFT))&NVIC_IP_PRI69_MASK)
#define NVIC_IP_PRI70_MASK                       0xFFu
#define NVIC_IP_PRI70_SHIFT                      0
#define NVIC_IP_PRI70_WIDTH                      8
#define NVIC_IP_PRI70(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI70_SHIFT))&NVIC_IP_PRI70_MASK)
#define NVIC_IP_PRI71_MASK                       0xFFu
#define NVIC_IP_PRI71_SHIFT                      0
#define NVIC_IP_PRI71_WIDTH                      8
#define NVIC_IP_PRI71(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI71_SHIFT))&NVIC_IP_PRI71_MASK)
#define NVIC_IP_PRI72_MASK                       0xFFu
#define NVIC_IP_PRI72_SHIFT                      0
#define NVIC_IP_PRI72_WIDTH                      8
#define NVIC_IP_PRI72(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI72_SHIFT))&NVIC_IP_PRI72_MASK)
#define NVIC_IP_PRI73_MASK                       0xFFu
#define NVIC_IP_PRI73_SHIFT                      0
#define NVIC_IP_PRI73_WIDTH                      8
#define NVIC_IP_PRI73(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI73_SHIFT))&NVIC_IP_PRI73_MASK)
#define NVIC_IP_PRI74_MASK                       0xFFu
#define NVIC_IP_PRI74_SHIFT                      0
#define NVIC_IP_PRI74_WIDTH                      8
#define NVIC_IP_PRI74(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI74_SHIFT))&NVIC_IP_PRI74_MASK)
#define NVIC_IP_PRI75_MASK                       0xFFu
#define NVIC_IP_PRI75_SHIFT                      0
#define NVIC_IP_PRI75_WIDTH                      8
#define NVIC_IP_PRI75(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI75_SHIFT))&NVIC_IP_PRI75_MASK)
#define NVIC_IP_PRI76_MASK                       0xFFu
#define NVIC_IP_PRI76_SHIFT                      0
#define NVIC_IP_PRI76_WIDTH                      8
#define NVIC_IP_PRI76(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI76_SHIFT))&NVIC_IP_PRI76_MASK)
#define NVIC_IP_PRI77_MASK                       0xFFu
#define NVIC_IP_PRI77_SHIFT                      0
#define NVIC_IP_PRI77_WIDTH                      8
#define NVIC_IP_PRI77(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI77_SHIFT))&NVIC_IP_PRI77_MASK)
#define NVIC_IP_PRI78_MASK                       0xFFu
#define NVIC_IP_PRI78_SHIFT                      0
#define NVIC_IP_PRI78_WIDTH                      8
#define NVIC_IP_PRI78(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI78_SHIFT))&NVIC_IP_PRI78_MASK)
#define NVIC_IP_PRI79_MASK                       0xFFu
#define NVIC_IP_PRI79_SHIFT                      0
#define NVIC_IP_PRI79_WIDTH                      8
#define NVIC_IP_PRI79(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI79_SHIFT))&NVIC_IP_PRI79_MASK)
#define NVIC_IP_PRI80_MASK                       0xFFu
#define NVIC_IP_PRI80_SHIFT                      0
#define NVIC_IP_PRI80_WIDTH                      8
#define NVIC_IP_PRI80(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI80_SHIFT))&NVIC_IP_PRI80_MASK)
#define NVIC_IP_PRI81_MASK                       0xFFu
#define NVIC_IP_PRI81_SHIFT                      0
#define NVIC_IP_PRI81_WIDTH                      8
#define NVIC_IP_PRI81(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI81_SHIFT))&NVIC_IP_PRI81_MASK)
#define NVIC_IP_PRI82_MASK                       0xFFu
#define NVIC_IP_PRI82_SHIFT                      0
#define NVIC_IP_PRI82_WIDTH                      8
#define NVIC_IP_PRI82(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI82_SHIFT))&NVIC_IP_PRI82_MASK)
#define NVIC_IP_PRI83_MASK                       0xFFu
#define NVIC_IP_PRI83_SHIFT                      0
#define NVIC_IP_PRI83_WIDTH                      8
#define NVIC_IP_PRI83(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI83_SHIFT))&NVIC_IP_PRI83_MASK)
#define NVIC_IP_PRI84_MASK                       0xFFu
#define NVIC_IP_PRI84_SHIFT                      0
#define NVIC_IP_PRI84_WIDTH                      8
#define NVIC_IP_PRI84(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI84_SHIFT))&NVIC_IP_PRI84_MASK)
#define NVIC_IP_PRI85_MASK                       0xFFu
#define NVIC_IP_PRI85_SHIFT                      0
#define NVIC_IP_PRI85_WIDTH                      8
#define NVIC_IP_PRI85(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI85_SHIFT))&NVIC_IP_PRI85_MASK)
#define NVIC_IP_PRI86_MASK                       0xFFu
#define NVIC_IP_PRI86_SHIFT                      0
#define NVIC_IP_PRI86_WIDTH                      8
#define NVIC_IP_PRI86(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI86_SHIFT))&NVIC_IP_PRI86_MASK)
#define NVIC_IP_PRI87_MASK                       0xFFu
#define NVIC_IP_PRI87_SHIFT                      0
#define NVIC_IP_PRI87_WIDTH                      8
#define NVIC_IP_PRI87(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI87_SHIFT))&NVIC_IP_PRI87_MASK)
#define NVIC_IP_PRI88_MASK                       0xFFu
#define NVIC_IP_PRI88_SHIFT                      0
#define NVIC_IP_PRI88_WIDTH                      8
#define NVIC_IP_PRI88(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI88_SHIFT))&NVIC_IP_PRI88_MASK)
#define NVIC_IP_PRI89_MASK                       0xFFu
#define NVIC_IP_PRI89_SHIFT                      0
#define NVIC_IP_PRI89_WIDTH                      8
#define NVIC_IP_PRI89(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI89_SHIFT))&NVIC_IP_PRI89_MASK)
#define NVIC_IP_PRI90_MASK                       0xFFu
#define NVIC_IP_PRI90_SHIFT                      0
#define NVIC_IP_PRI90_WIDTH                      8
#define NVIC_IP_PRI90(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI90_SHIFT))&NVIC_IP_PRI90_MASK)
#define NVIC_IP_PRI91_MASK                       0xFFu
#define NVIC_IP_PRI91_SHIFT                      0
#define NVIC_IP_PRI91_WIDTH                      8
#define NVIC_IP_PRI91(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI91_SHIFT))&NVIC_IP_PRI91_MASK)
#define NVIC_IP_PRI92_MASK                       0xFFu
#define NVIC_IP_PRI92_SHIFT                      0
#define NVIC_IP_PRI92_WIDTH                      8
#define NVIC_IP_PRI92(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI92_SHIFT))&NVIC_IP_PRI92_MASK)
#define NVIC_IP_PRI93_MASK                       0xFFu
#define NVIC_IP_PRI93_SHIFT                      0
#define NVIC_IP_PRI93_WIDTH                      8
#define NVIC_IP_PRI93(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI93_SHIFT))&NVIC_IP_PRI93_MASK)
#define NVIC_IP_PRI94_MASK                       0xFFu
#define NVIC_IP_PRI94_SHIFT                      0
#define NVIC_IP_PRI94_WIDTH                      8
#define NVIC_IP_PRI94(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI94_SHIFT))&NVIC_IP_PRI94_MASK)
#define NVIC_IP_PRI95_MASK                       0xFFu
#define NVIC_IP_PRI95_SHIFT                      0
#define NVIC_IP_PRI95_WIDTH                      8
#define NVIC_IP_PRI95(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI95_SHIFT))&NVIC_IP_PRI95_MASK)
#define NVIC_IP_PRI96_MASK                       0xFFu
#define NVIC_IP_PRI96_SHIFT                      0
#define NVIC_IP_PRI96_WIDTH                      8
#define NVIC_IP_PRI96(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI96_SHIFT))&NVIC_IP_PRI96_MASK)
#define NVIC_IP_PRI97_MASK                       0xFFu
#define NVIC_IP_PRI97_SHIFT                      0
#define NVIC_IP_PRI97_WIDTH                      8
#define NVIC_IP_PRI97(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI97_SHIFT))&NVIC_IP_PRI97_MASK)
#define NVIC_IP_PRI98_MASK                       0xFFu
#define NVIC_IP_PRI98_SHIFT                      0
#define NVIC_IP_PRI98_WIDTH                      8
#define NVIC_IP_PRI98(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI98_SHIFT))&NVIC_IP_PRI98_MASK)
#define NVIC_IP_PRI99_MASK                       0xFFu
#define NVIC_IP_PRI99_SHIFT                      0
#define NVIC_IP_PRI99_WIDTH                      8
#define NVIC_IP_PRI99(x)                         (((uint8)(((uint8)(x))<<NVIC_IP_PRI99_SHIFT))&NVIC_IP_PRI99_MASK)
#define NVIC_IP_PRI100_MASK                      0xFFu
#define NVIC_IP_PRI100_SHIFT                     0
#define NVIC_IP_PRI100_WIDTH                     8
#define NVIC_IP_PRI100(x)                        (((uint8)(((uint8)(x))<<NVIC_IP_PRI100_SHIFT))&NVIC_IP_PRI100_MASK)
#define NVIC_IP_PRI101_MASK                      0xFFu
#define NVIC_IP_PRI101_SHIFT                     0
#define NVIC_IP_PRI101_WIDTH                     8
#define NVIC_IP_PRI101(x)                        (((uint8)(((uint8)(x))<<NVIC_IP_PRI101_SHIFT))&NVIC_IP_PRI101_MASK)
#define NVIC_IP_PRI102_MASK                      0xFFu
#define NVIC_IP_PRI102_SHIFT                     0
#define NVIC_IP_PRI102_WIDTH                     8
#define NVIC_IP_PRI102(x)                        (((uint8)(((uint8)(x))<<NVIC_IP_PRI102_SHIFT))&NVIC_IP_PRI102_MASK)
#define NVIC_IP_PRI103_MASK                      0xFFu
#define NVIC_IP_PRI103_SHIFT                     0
#define NVIC_IP_PRI103_WIDTH                     8
#define NVIC_IP_PRI103(x)                        (((uint8)(((uint8)(x))<<NVIC_IP_PRI103_SHIFT))&NVIC_IP_PRI103_MASK)
#define NVIC_IP_PRI104_MASK                      0xFFu
#define NVIC_IP_PRI104_SHIFT                     0
#define NVIC_IP_PRI104_WIDTH                     8
#define NVIC_IP_PRI104(x)                        (((uint8)(((uint8)(x))<<NVIC_IP_PRI104_SHIFT))&NVIC_IP_PRI104_MASK)
#define NVIC_IP_PRI105_MASK                      0xFFu
#define NVIC_IP_PRI105_SHIFT                     0
#define NVIC_IP_PRI105_WIDTH                     8
#define NVIC_IP_PRI105(x)                        (((uint8)(((uint8)(x))<<NVIC_IP_PRI105_SHIFT))&NVIC_IP_PRI105_MASK)
/* STIR Bit Fields */
#define NVIC_STIR_INTID_MASK                     0x1FFu
#define NVIC_STIR_INTID_SHIFT                    0
#define NVIC_STIR_INTID_WIDTH                    9
#define NVIC_STIR_INTID(x)                       (((uint32)(((uint32)(x))<<NVIC_STIR_INTID_SHIFT))&NVIC_STIR_INTID_MASK)

/*!
 * @}
 */ /* end of group NVIC_Register_Masks */


/* NVIC - Peripheral instance base addresses */
/** Peripheral NVIC base address */
#define NVIC_BASE                                (0xE000E100u)
/** Peripheral NVIC base pointer */
#define NVIC                                     ((NVIC_Type *)NVIC_BASE)
#define NVIC_BASE_PTR                            (NVIC)
/** Array initializer of NVIC peripheral base addresses */
#define NVIC_BASE_ADDRS                          { NVIC_BASE }
/** Array initializer of NVIC peripheral base pointers */
#define NVIC_BASE_PTRS                           { NVIC }

/* ----------------------------------------------------------------------------
   -- NVIC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup NVIC_Register_Accessor_Macros NVIC - Register accessor macros
 * @{
 */


/* NVIC - Register instance definitions */
/* NVIC */
#define NVICISER0                                NVIC_ISER_REG(NVIC,0)
#define NVICISER1                                NVIC_ISER_REG(NVIC,1)
#define NVICISER2                                NVIC_ISER_REG(NVIC,2)
#define NVICISER3                                NVIC_ISER_REG(NVIC,3)
#define NVICICER0                                NVIC_ICER_REG(NVIC,0)
#define NVICICER1                                NVIC_ICER_REG(NVIC,1)
#define NVICICER2                                NVIC_ICER_REG(NVIC,2)
#define NVICICER3                                NVIC_ICER_REG(NVIC,3)
#define NVICISPR0                                NVIC_ISPR_REG(NVIC,0)
#define NVICISPR1                                NVIC_ISPR_REG(NVIC,1)
#define NVICISPR2                                NVIC_ISPR_REG(NVIC,2)
#define NVICISPR3                                NVIC_ISPR_REG(NVIC,3)
#define NVICICPR0                                NVIC_ICPR_REG(NVIC,0)
#define NVICICPR1                                NVIC_ICPR_REG(NVIC,1)
#define NVICICPR2                                NVIC_ICPR_REG(NVIC,2)
#define NVICICPR3                                NVIC_ICPR_REG(NVIC,3)
#define NVICIABR0                                NVIC_IABR_REG(NVIC,0)
#define NVICIABR1                                NVIC_IABR_REG(NVIC,1)
#define NVICIABR2                                NVIC_IABR_REG(NVIC,2)
#define NVICIABR3                                NVIC_IABR_REG(NVIC,3)
#define NVICIP0                                  NVIC_IP_REG(NVIC,0)
#define NVICIP1                                  NVIC_IP_REG(NVIC,1)
#define NVICIP2                                  NVIC_IP_REG(NVIC,2)
#define NVICIP3                                  NVIC_IP_REG(NVIC,3)
#define NVICIP4                                  NVIC_IP_REG(NVIC,4)
#define NVICIP5                                  NVIC_IP_REG(NVIC,5)
#define NVICIP6                                  NVIC_IP_REG(NVIC,6)
#define NVICIP7                                  NVIC_IP_REG(NVIC,7)
#define NVICIP8                                  NVIC_IP_REG(NVIC,8)
#define NVICIP9                                  NVIC_IP_REG(NVIC,9)
#define NVICIP10                                 NVIC_IP_REG(NVIC,10)
#define NVICIP11                                 NVIC_IP_REG(NVIC,11)
#define NVICIP12                                 NVIC_IP_REG(NVIC,12)
#define NVICIP13                                 NVIC_IP_REG(NVIC,13)
#define NVICIP14                                 NVIC_IP_REG(NVIC,14)
#define NVICIP15                                 NVIC_IP_REG(NVIC,15)
#define NVICIP16                                 NVIC_IP_REG(NVIC,16)
#define NVICIP17                                 NVIC_IP_REG(NVIC,17)
#define NVICIP18                                 NVIC_IP_REG(NVIC,18)
#define NVICIP19                                 NVIC_IP_REG(NVIC,19)
#define NVICIP20                                 NVIC_IP_REG(NVIC,20)
#define NVICIP21                                 NVIC_IP_REG(NVIC,21)
#define NVICIP22                                 NVIC_IP_REG(NVIC,22)
#define NVICIP23                                 NVIC_IP_REG(NVIC,23)
#define NVICIP24                                 NVIC_IP_REG(NVIC,24)
#define NVICIP25                                 NVIC_IP_REG(NVIC,25)
#define NVICIP26                                 NVIC_IP_REG(NVIC,26)
#define NVICIP27                                 NVIC_IP_REG(NVIC,27)
#define NVICIP28                                 NVIC_IP_REG(NVIC,28)
#define NVICIP29                                 NVIC_IP_REG(NVIC,29)
#define NVICIP30                                 NVIC_IP_REG(NVIC,30)
#define NVICIP31                                 NVIC_IP_REG(NVIC,31)
#define NVICIP32                                 NVIC_IP_REG(NVIC,32)
#define NVICIP33                                 NVIC_IP_REG(NVIC,33)
#define NVICIP34                                 NVIC_IP_REG(NVIC,34)
#define NVICIP35                                 NVIC_IP_REG(NVIC,35)
#define NVICIP36                                 NVIC_IP_REG(NVIC,36)
#define NVICIP37                                 NVIC_IP_REG(NVIC,37)
#define NVICIP38                                 NVIC_IP_REG(NVIC,38)
#define NVICIP39                                 NVIC_IP_REG(NVIC,39)
#define NVICIP40                                 NVIC_IP_REG(NVIC,40)
#define NVICIP41                                 NVIC_IP_REG(NVIC,41)
#define NVICIP42                                 NVIC_IP_REG(NVIC,42)
#define NVICIP43                                 NVIC_IP_REG(NVIC,43)
#define NVICIP44                                 NVIC_IP_REG(NVIC,44)
#define NVICIP45                                 NVIC_IP_REG(NVIC,45)
#define NVICIP46                                 NVIC_IP_REG(NVIC,46)
#define NVICIP47                                 NVIC_IP_REG(NVIC,47)
#define NVICIP48                                 NVIC_IP_REG(NVIC,48)
#define NVICIP49                                 NVIC_IP_REG(NVIC,49)
#define NVICIP50                                 NVIC_IP_REG(NVIC,50)
#define NVICIP51                                 NVIC_IP_REG(NVIC,51)
#define NVICIP52                                 NVIC_IP_REG(NVIC,52)
#define NVICIP53                                 NVIC_IP_REG(NVIC,53)
#define NVICIP54                                 NVIC_IP_REG(NVIC,54)
#define NVICIP55                                 NVIC_IP_REG(NVIC,55)
#define NVICIP56                                 NVIC_IP_REG(NVIC,56)
#define NVICIP57                                 NVIC_IP_REG(NVIC,57)
#define NVICIP58                                 NVIC_IP_REG(NVIC,58)
#define NVICIP59                                 NVIC_IP_REG(NVIC,59)
#define NVICIP60                                 NVIC_IP_REG(NVIC,60)
#define NVICIP61                                 NVIC_IP_REG(NVIC,61)
#define NVICIP62                                 NVIC_IP_REG(NVIC,62)
#define NVICIP63                                 NVIC_IP_REG(NVIC,63)
#define NVICIP64                                 NVIC_IP_REG(NVIC,64)
#define NVICIP65                                 NVIC_IP_REG(NVIC,65)
#define NVICIP66                                 NVIC_IP_REG(NVIC,66)
#define NVICIP67                                 NVIC_IP_REG(NVIC,67)
#define NVICIP68                                 NVIC_IP_REG(NVIC,68)
#define NVICIP69                                 NVIC_IP_REG(NVIC,69)
#define NVICIP70                                 NVIC_IP_REG(NVIC,70)
#define NVICIP71                                 NVIC_IP_REG(NVIC,71)
#define NVICIP72                                 NVIC_IP_REG(NVIC,72)
#define NVICIP73                                 NVIC_IP_REG(NVIC,73)
#define NVICIP74                                 NVIC_IP_REG(NVIC,74)
#define NVICIP75                                 NVIC_IP_REG(NVIC,75)
#define NVICIP76                                 NVIC_IP_REG(NVIC,76)
#define NVICIP77                                 NVIC_IP_REG(NVIC,77)
#define NVICIP78                                 NVIC_IP_REG(NVIC,78)
#define NVICIP79                                 NVIC_IP_REG(NVIC,79)
#define NVICIP80                                 NVIC_IP_REG(NVIC,80)
#define NVICIP81                                 NVIC_IP_REG(NVIC,81)
#define NVICIP82                                 NVIC_IP_REG(NVIC,82)
#define NVICIP83                                 NVIC_IP_REG(NVIC,83)
#define NVICIP84                                 NVIC_IP_REG(NVIC,84)
#define NVICIP85                                 NVIC_IP_REG(NVIC,85)
#define NVICIP86                                 NVIC_IP_REG(NVIC,86)
#define NVICIP87                                 NVIC_IP_REG(NVIC,87)
#define NVICIP88                                 NVIC_IP_REG(NVIC,88)
#define NVICIP89                                 NVIC_IP_REG(NVIC,89)
#define NVICIP90                                 NVIC_IP_REG(NVIC,90)
#define NVICIP91                                 NVIC_IP_REG(NVIC,91)
#define NVICIP92                                 NVIC_IP_REG(NVIC,92)
#define NVICIP93                                 NVIC_IP_REG(NVIC,93)
#define NVICIP94                                 NVIC_IP_REG(NVIC,94)
#define NVICIP95                                 NVIC_IP_REG(NVIC,95)
#define NVICIP96                                 NVIC_IP_REG(NVIC,96)
#define NVICIP97                                 NVIC_IP_REG(NVIC,97)
#define NVICIP98                                 NVIC_IP_REG(NVIC,98)
#define NVICIP99                                 NVIC_IP_REG(NVIC,99)
#define NVICIP100                                NVIC_IP_REG(NVIC,100)
#define NVICIP101                                NVIC_IP_REG(NVIC,101)
#define NVICIP102                                NVIC_IP_REG(NVIC,102)
#define NVICIP103                                NVIC_IP_REG(NVIC,103)
#define NVICIP104                                NVIC_IP_REG(NVIC,104)
#define NVICIP105                                NVIC_IP_REG(NVIC,105)
#define NVICSTIR                                 NVIC_STIR_REG(NVIC,0)

/* NVIC - Register array accessors */
#define NVIC_ISER(index)                         NVIC_ISER_REG(NVIC,index)
#define NVIC_ICER(index)                         NVIC_ICER_REG(NVIC,index)
#define NVIC_ISPR(index)                         NVIC_ISPR_REG(NVIC,index)
#define NVIC_ICPR(index)                         NVIC_ICPR_REG(NVIC,index)
#define NVIC_IABR(index)                         NVIC_IABR_REG(NVIC,index)
#define NVIC_IP(index)                           NVIC_IP_REG(NVIC,index)
#define NVIC_STIR(index)                         NVIC_STIR_REG(NVIC,index)

/*!
 * @}
 */ /* end of group NVIC_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group NVIC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- OSC32 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup OSC32_Peripheral_Access_Layer OSC32 Peripheral Access Layer
 * @{
 */

/** OSC32 - Register Layout Typedef */
typedef struct {
  __IO uint8 CR;                                   /**< RTC Oscillator Control Register, offset: 0x0 */
} OSC32_Type, *OSC32_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- OSC32 - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup OSC32_Register_Accessor_Macros OSC32 - Register accessor macros
 * @{
 */


/* OSC32 - Register accessors */
#define OSC32_CR_REG(base)                       ((base)->CR)

/*!
 * @}
 */ /* end of group OSC32_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- OSC32 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup OSC32_Register_Masks OSC32 Register Masks
 * @{
 */

/* CR Bit Fields */
#define OSC32_CR_ROSCEREFS_MASK                  0x10u
#define OSC32_CR_ROSCEREFS_SHIFT                 4
#define OSC32_CR_ROSCEREFS_WIDTH                 1
#define OSC32_CR_ROSCEREFS(x)                    (((uint8)(((uint8)(x))<<OSC32_CR_ROSCEREFS_SHIFT))&OSC32_CR_ROSCEREFS_MASK)
#define OSC32_CR_ROSCSTB_MASK                    0x20u
#define OSC32_CR_ROSCSTB_SHIFT                   5
#define OSC32_CR_ROSCSTB_WIDTH                   1
#define OSC32_CR_ROSCSTB(x)                      (((uint8)(((uint8)(x))<<OSC32_CR_ROSCSTB_SHIFT))&OSC32_CR_ROSCSTB_MASK)
#define OSC32_CR_ROSCSTPEN_MASK                  0x40u
#define OSC32_CR_ROSCSTPEN_SHIFT                 6
#define OSC32_CR_ROSCSTPEN_WIDTH                 1
#define OSC32_CR_ROSCSTPEN(x)                    (((uint8)(((uint8)(x))<<OSC32_CR_ROSCSTPEN_SHIFT))&OSC32_CR_ROSCSTPEN_MASK)
#define OSC32_CR_ROSCEN_MASK                     0x80u
#define OSC32_CR_ROSCEN_SHIFT                    7
#define OSC32_CR_ROSCEN_WIDTH                    1
#define OSC32_CR_ROSCEN(x)                       (((uint8)(((uint8)(x))<<OSC32_CR_ROSCEN_SHIFT))&OSC32_CR_ROSCEN_MASK)

/*!
 * @}
 */ /* end of group OSC32_Register_Masks */


/* OSC32 - Peripheral instance base addresses */
/** Peripheral OSC32 base address */
#define OSC32_BASE                               (0x40060000u)
/** Peripheral OSC32 base pointer */
#define OSC32                                    ((OSC32_Type *)OSC32_BASE)
#define OSC32_BASE_PTR                           (OSC32)
/** Array initializer of OSC32 peripheral base addresses */
#define OSC32_BASE_ADDRS                         { OSC32_BASE }
/** Array initializer of OSC32 peripheral base pointers */
#define OSC32_BASE_PTRS                          { OSC32 }

/* ----------------------------------------------------------------------------
   -- OSC32 - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup OSC32_Register_Accessor_Macros OSC32 - Register accessor macros
 * @{
 */


/* OSC32 - Register instance definitions */
/* OSC32 */
#define OSC32_CR                                 OSC32_CR_REG(OSC32)

/*!
 * @}
 */ /* end of group OSC32_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group OSC32_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PCC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCC_Peripheral_Access_Layer PCC Peripheral Access Layer
 * @{
 */

/** PCC - Register Layout Typedef */
typedef struct {
       uint8 RESERVED_0[32];
  __IO uint32 DMA0;                                /**< PCC DMA0 Register, offset: 0x20 */
       uint8 RESERVED_1[16];
  __IO uint32 MPUr;                                /**< PCC MPU Register, offset: 0x34 */
       uint8 RESERVED_2[72];
  __IO uint32 FLASH;                               /**< PCC FLASH Register, offset: 0x80 */
  __IO uint32 DMAMUX0;                             /**< PCC DMAMUX0 Register, offset: 0x84 */
       uint8 RESERVED_3[8];
  __IO uint32 FLEXCAN0;                            /**< PCC FLEXCAN0 Register, offset: 0x90 */
  __IO uint32 FLEXCAN1;                            /**< PCC FLEXCAN1 Register, offset: 0x94 */
  __IO uint32 FLEXTMR3;                            /**< PCC FLEXTMR3 Register, offset: 0x98 */
  __IO uint32 ADC1r;                               /**< PCC ADC1 Register, offset: 0x9C */
       uint8 RESERVED_4[12];
  __IO uint32 FLEXCAN2;                            /**< PCC FLEXCAN2 Register, offset: 0xAC */
  __IO uint32 LPSPI0r;                             /**< PCC LPSPI0 Register, offset: 0xB0 */
  __IO uint32 LPSPI1r;                             /**< PCC LPSPI1 Register, offset: 0xB4 */
  __IO uint32 LPSPI2r;                             /**< PCC LPSPI2 Register, offset: 0xB8 */
       uint8 RESERVED_5[8];
  __IO uint32 PDB1r;                               /**< PCC PDB1 Register, offset: 0xC4 */
  __IO uint32 CRCr;                                /**< PCC CRC Register, offset: 0xC8 */
  __IO uint32 DUMMY51;                             /**< PCC DUMMY51 Register, offset: 0xCC */
       uint8 RESERVED_6[8];
  __IO uint32 PDB0r;                               /**< PCC PDB0 Register, offset: 0xD8 */
  __IO uint32 LPIT0r;                              /**< PCC LPIT0 Register, offset: 0xDC */
  __IO uint32 FLEXTMR0;                            /**< PCC FLEXTMR0 Register, offset: 0xE0 */
  __IO uint32 FLEXTMR1;                            /**< PCC FLEXTMR1 Register, offset: 0xE4 */
  __IO uint32 FLEXTMR2;                            /**< PCC FLEXTMR2 Register, offset: 0xE8 */
  __IO uint32 ADC0r;                               /**< PCC ADC0 Register, offset: 0xEC */
  __IO uint32 DUMMY60;                             /**< PCC DUMMY60 Register, offset: 0xF0 */
  __IO uint32 RTCr;                                /**< PCC RTC Register, offset: 0xF4 */
       uint8 RESERVED_7[4];
  __IO uint32 DUMMY63;                             /**< PCC DUMMY63 Register, offset: 0xFC */
  __IO uint32 LPTMR0r;                             /**< PCC LPTMR0 Register, offset: 0x100 */
       uint8 RESERVED_8[16];
  __IO uint32 DUMMY69;                             /**< PCC DUMMY69 Register, offset: 0x114 */
  __IO uint32 ATX;                                 /**< PCC ATX Register, offset: 0x118 */
       uint8 RESERVED_9[4];
  __IO uint32 SIMr;                                /**< PCC SIM Register, offset: 0x120 */
  __IO uint32 PORTAr;                              /**< PCC PORTA Register, offset: 0x124 */
  __IO uint32 PORTBr;                              /**< PCC PORTB Register, offset: 0x128 */
  __IO uint32 PORTCr;                              /**< PCC PORTC Register, offset: 0x12C */
  __IO uint32 PORTDr;                              /**< PCC PORTD Register, offset: 0x130 */
  __IO uint32 PORTEr;                              /**< PCC PORTE Register, offset: 0x134 */
       uint8 RESERVED_10[16];
  __IO uint32 WDOGr;                               /**< PCC WDOG Register, offset: 0x148 */
       uint8 RESERVED_11[28];
  __IO uint32 FLEXIOr;                             /**< PCC FLEXIO Register, offset: 0x168 */
       uint8 RESERVED_12[12];
  __IO uint32 DUMMY94;                             /**< PCC DUMMY94 Register, offset: 0x178 */
       uint8 RESERVED_13[4];
  __IO uint32 RTC_OSC;                             /**< PCC RTC_OSC Register, offset: 0x180 */
  __IO uint32 EWMr;                                /**< PCC EWM Register, offset: 0x184 */
       uint8 RESERVED_14[4];
  __IO uint32 TRGMUXr;                             /**< PCC TRGMUX Register, offset: 0x18C */
  __IO uint32 SCGr;                                /**< PCC SCG Register, offset: 0x190 */
       uint8 RESERVED_15[4];
  __IO uint32 LPI2C0r;                             /**< PCC LPI2C0 Register, offset: 0x198 */
  __IO uint32 LPI2C1r;                             /**< PCC LPI2C1 Register, offset: 0x19C */
       uint8 RESERVED_16[8];
  __IO uint32 LPUART0r;                            /**< PCC LPUART0 Register, offset: 0x1A8 */
  __IO uint32 LPUART1r;                            /**< PCC LPUART1 Register, offset: 0x1AC */
  __IO uint32 LPUART2r;                            /**< PCC LPUART2 Register, offset: 0x1B0 */
  __IO uint32 LPUART3r;                            /**< PCC LPUART3 Register, offset: 0x1B4 */
       uint8 RESERVED_17[20];
  __IO uint32 CMP0r;                               /**< PCC CMP0 Register, offset: 0x1CC */
  __IO uint32 DUMMY116;                            /**< PCC DUMMY116 Register, offset: 0x1D0 */
  __IO uint32 DUMMY117;                            /**< PCC DUMMY117 Register, offset: 0x1D4 */
} PCC_Type, *PCC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PCC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCC_Register_Accessor_Macros PCC - Register accessor macros
 * @{
 */


/* PCC - Register accessors */
#define PCC_DMA0_REG(base)                       ((base)->DMA0)
#define PCC_MPU_REG(base)                        ((base)->MPUr)
#define PCC_FLASH_REG(base)                      ((base)->FLASH)
#define PCC_DMAMUX0_REG(base)                    ((base)->DMAMUX0)
#define PCC_FLEXCAN0_REG(base)                   ((base)->FLEXCAN0)
#define PCC_FLEXCAN1_REG(base)                   ((base)->FLEXCAN1)
#define PCC_FLEXTMR3_REG(base)                   ((base)->FLEXTMR3)
#define PCC_ADC1_REG(base)                       ((base)->ADC1r)
#define PCC_FLEXCAN2_REG(base)                   ((base)->FLEXCAN2)
#define PCC_LPSPI0_REG(base)                     ((base)->LPSPI0r)
#define PCC_LPSPI1_REG(base)                     ((base)->LPSPI1r)
#define PCC_LPSPI2_REG(base)                     ((base)->LPSPI2r)
#define PCC_PDB1_REG(base)                       ((base)->PDB1r)
#define PCC_CRC_REG(base)                        ((base)->CRCr)
#define PCC_DUMMY51_REG(base)                    ((base)->DUMMY51)
#define PCC_PDB0_REG(base)                       ((base)->PDB0r)
#define PCC_LPIT0_REG(base)                      ((base)->LPIT0r)
#define PCC_FLEXTMR0_REG(base)                   ((base)->FLEXTMR0)
#define PCC_FLEXTMR1_REG(base)                   ((base)->FLEXTMR1)
#define PCC_FLEXTMR2_REG(base)                   ((base)->FLEXTMR2)
#define PCC_ADC0_REG(base)                       ((base)->ADC0r)
#define PCC_DUMMY60_REG(base)                    ((base)->DUMMY60)
#define PCC_RTC_REG(base)                        ((base)->RTCr)
#define PCC_DUMMY63_REG(base)                    ((base)->DUMMY63)
#define PCC_LPTMR0_REG(base)                     ((base)->LPTMR0r)
#define PCC_DUMMY69_REG(base)                    ((base)->DUMMY69)
#define PCC_ATX_REG(base)                        ((base)->ATX)
#define PCC_SIM_REG(base)                        ((base)->SIMr)
#define PCC_PORTA_REG(base)                      ((base)->PORTAr)
#define PCC_PORTB_REG(base)                      ((base)->PORTBr)
#define PCC_PORTC_REG(base)                      ((base)->PORTCr)
#define PCC_PORTD_REG(base)                      ((base)->PORTDr)
#define PCC_PORTE_REG(base)                      ((base)->PORTEr)
#define PCC_WDOG_REG(base)                       ((base)->WDOGr)
#define PCC_FLEXIO_REG(base)                     ((base)->FLEXIOr)
#define PCC_DUMMY94_REG(base)                    ((base)->DUMMY94)
#define PCC_RTC_OSC_REG(base)                    ((base)->RTC_OSC)
#define PCC_EWM_REG(base)                        ((base)->EWMr)
#define PCC_TRGMUX_REG(base)                     ((base)->TRGMUXr)
#define PCC_SCG_REG(base)                        ((base)->SCGr)
#define PCC_LPI2C0_REG(base)                     ((base)->LPI2C0r)
#define PCC_LPI2C1_REG(base)                     ((base)->LPI2C1r)
#define PCC_LPUART0_REG(base)                    ((base)->LPUART0r)
#define PCC_LPUART1_REG(base)                    ((base)->LPUART1r)
#define PCC_LPUART2_REG(base)                    ((base)->LPUART2r)
#define PCC_LPUART3_REG(base)                    ((base)->LPUART3r)
#define PCC_CMP0_REG(base)                       ((base)->CMP0r)
#define PCC_DUMMY116_REG(base)                   ((base)->DUMMY116)
#define PCC_DUMMY117_REG(base)                   ((base)->DUMMY117)

/*!
 * @}
 */ /* end of group PCC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PCC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCC_Register_Masks PCC Register Masks
 * @{
 */

/* DMA0 Bit Fields */
#define PCC_DMA0_INUSE_MASK                      0x20000000u
#define PCC_DMA0_INUSE_SHIFT                     29
#define PCC_DMA0_INUSE_WIDTH                     1
#define PCC_DMA0_INUSE(x)                        (((uint32)(((uint32)(x))<<PCC_DMA0_INUSE_SHIFT))&PCC_DMA0_INUSE_MASK)
#define PCC_DMA0_CGC_MASK                        0x40000000u
#define PCC_DMA0_CGC_SHIFT                       30
#define PCC_DMA0_CGC_WIDTH                       1
#define PCC_DMA0_CGC(x)                          (((uint32)(((uint32)(x))<<PCC_DMA0_CGC_SHIFT))&PCC_DMA0_CGC_MASK)
#define PCC_DMA0_PR_MASK                         0x80000000u
#define PCC_DMA0_PR_SHIFT                        31
#define PCC_DMA0_PR_WIDTH                        1
#define PCC_DMA0_PR(x)                           (((uint32)(((uint32)(x))<<PCC_DMA0_PR_SHIFT))&PCC_DMA0_PR_MASK)
/* MPU Bit Fields */
#define PCC_MPU_INUSE_MASK                       0x20000000u
#define PCC_MPU_INUSE_SHIFT                      29
#define PCC_MPU_INUSE_WIDTH                      1
#define PCC_MPU_INUSE(x)                         (((uint32)(((uint32)(x))<<PCC_MPU_INUSE_SHIFT))&PCC_MPU_INUSE_MASK)
#define PCC_MPU_CGC_MASK                         0x40000000u
#define PCC_MPU_CGC_SHIFT                        30
#define PCC_MPU_CGC_WIDTH                        1
#define PCC_MPU_CGC(x)                           (((uint32)(((uint32)(x))<<PCC_MPU_CGC_SHIFT))&PCC_MPU_CGC_MASK)
#define PCC_MPU_PR_MASK                          0x80000000u
#define PCC_MPU_PR_SHIFT                         31
#define PCC_MPU_PR_WIDTH                         1
#define PCC_MPU_PR(x)                            (((uint32)(((uint32)(x))<<PCC_MPU_PR_SHIFT))&PCC_MPU_PR_MASK)
/* FLASH Bit Fields */
#define PCC_FLASH_INUSE_MASK                     0x20000000u
#define PCC_FLASH_INUSE_SHIFT                    29
#define PCC_FLASH_INUSE_WIDTH                    1
#define PCC_FLASH_INUSE(x)                       (((uint32)(((uint32)(x))<<PCC_FLASH_INUSE_SHIFT))&PCC_FLASH_INUSE_MASK)
#define PCC_FLASH_CGC_MASK                       0x40000000u
#define PCC_FLASH_CGC_SHIFT                      30
#define PCC_FLASH_CGC_WIDTH                      1
#define PCC_FLASH_CGC(x)                         (((uint32)(((uint32)(x))<<PCC_FLASH_CGC_SHIFT))&PCC_FLASH_CGC_MASK)
#define PCC_FLASH_PR_MASK                        0x80000000u
#define PCC_FLASH_PR_SHIFT                       31
#define PCC_FLASH_PR_WIDTH                       1
#define PCC_FLASH_PR(x)                          (((uint32)(((uint32)(x))<<PCC_FLASH_PR_SHIFT))&PCC_FLASH_PR_MASK)
/* DMAMUX0 Bit Fields */
#define PCC_DMAMUX0_INUSE_MASK                   0x20000000u
#define PCC_DMAMUX0_INUSE_SHIFT                  29
#define PCC_DMAMUX0_INUSE_WIDTH                  1
#define PCC_DMAMUX0_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_DMAMUX0_INUSE_SHIFT))&PCC_DMAMUX0_INUSE_MASK)
#define PCC_DMAMUX0_CGC_MASK                     0x40000000u
#define PCC_DMAMUX0_CGC_SHIFT                    30
#define PCC_DMAMUX0_CGC_WIDTH                    1
#define PCC_DMAMUX0_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_DMAMUX0_CGC_SHIFT))&PCC_DMAMUX0_CGC_MASK)
#define PCC_DMAMUX0_PR_MASK                      0x80000000u
#define PCC_DMAMUX0_PR_SHIFT                     31
#define PCC_DMAMUX0_PR_WIDTH                     1
#define PCC_DMAMUX0_PR(x)                        (((uint32)(((uint32)(x))<<PCC_DMAMUX0_PR_SHIFT))&PCC_DMAMUX0_PR_MASK)
/* FLEXCAN0 Bit Fields */
#define PCC_FLEXCAN0_INUSE_MASK                  0x20000000u
#define PCC_FLEXCAN0_INUSE_SHIFT                 29
#define PCC_FLEXCAN0_INUSE_WIDTH                 1
#define PCC_FLEXCAN0_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_FLEXCAN0_INUSE_SHIFT))&PCC_FLEXCAN0_INUSE_MASK)
#define PCC_FLEXCAN0_CGC_MASK                    0x40000000u
#define PCC_FLEXCAN0_CGC_SHIFT                   30
#define PCC_FLEXCAN0_CGC_WIDTH                   1
#define PCC_FLEXCAN0_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXCAN0_CGC_SHIFT))&PCC_FLEXCAN0_CGC_MASK)
#define PCC_FLEXCAN0_PR_MASK                     0x80000000u
#define PCC_FLEXCAN0_PR_SHIFT                    31
#define PCC_FLEXCAN0_PR_WIDTH                    1
#define PCC_FLEXCAN0_PR(x)                       (((uint32)(((uint32)(x))<<PCC_FLEXCAN0_PR_SHIFT))&PCC_FLEXCAN0_PR_MASK)
/* FLEXCAN1 Bit Fields */
#define PCC_FLEXCAN1_INUSE_MASK                  0x20000000u
#define PCC_FLEXCAN1_INUSE_SHIFT                 29
#define PCC_FLEXCAN1_INUSE_WIDTH                 1
#define PCC_FLEXCAN1_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_FLEXCAN1_INUSE_SHIFT))&PCC_FLEXCAN1_INUSE_MASK)
#define PCC_FLEXCAN1_CGC_MASK                    0x40000000u
#define PCC_FLEXCAN1_CGC_SHIFT                   30
#define PCC_FLEXCAN1_CGC_WIDTH                   1
#define PCC_FLEXCAN1_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXCAN1_CGC_SHIFT))&PCC_FLEXCAN1_CGC_MASK)
#define PCC_FLEXCAN1_PR_MASK                     0x80000000u
#define PCC_FLEXCAN1_PR_SHIFT                    31
#define PCC_FLEXCAN1_PR_WIDTH                    1
#define PCC_FLEXCAN1_PR(x)                       (((uint32)(((uint32)(x))<<PCC_FLEXCAN1_PR_SHIFT))&PCC_FLEXCAN1_PR_MASK)
/* FLEXTMR3 Bit Fields */
#define PCC_FLEXTMR3_PCS_MASK                    0x7000000u
#define PCC_FLEXTMR3_PCS_SHIFT                   24
#define PCC_FLEXTMR3_PCS_WIDTH                   3
#define PCC_FLEXTMR3_PCS(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR3_PCS_SHIFT))&PCC_FLEXTMR3_PCS_MASK)
#define PCC_FLEXTMR3_INUSE_MASK                  0x20000000u
#define PCC_FLEXTMR3_INUSE_SHIFT                 29
#define PCC_FLEXTMR3_INUSE_WIDTH                 1
#define PCC_FLEXTMR3_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_FLEXTMR3_INUSE_SHIFT))&PCC_FLEXTMR3_INUSE_MASK)
#define PCC_FLEXTMR3_CGC_MASK                    0x40000000u
#define PCC_FLEXTMR3_CGC_SHIFT                   30
#define PCC_FLEXTMR3_CGC_WIDTH                   1
#define PCC_FLEXTMR3_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR3_CGC_SHIFT))&PCC_FLEXTMR3_CGC_MASK)
#define PCC_FLEXTMR3_PR_MASK                     0x80000000u
#define PCC_FLEXTMR3_PR_SHIFT                    31
#define PCC_FLEXTMR3_PR_WIDTH                    1
#define PCC_FLEXTMR3_PR(x)                       (((uint32)(((uint32)(x))<<PCC_FLEXTMR3_PR_SHIFT))&PCC_FLEXTMR3_PR_MASK)
/* ADC1 Bit Fields */
#define PCC_ADC1_PCS_MASK                        0x7000000u
#define PCC_ADC1_PCS_SHIFT                       24
#define PCC_ADC1_PCS_WIDTH                       3
#define PCC_ADC1_PCS(x)                          (((uint32)(((uint32)(x))<<PCC_ADC1_PCS_SHIFT))&PCC_ADC1_PCS_MASK)
#define PCC_ADC1_INUSE_MASK                      0x20000000u
#define PCC_ADC1_INUSE_SHIFT                     29
#define PCC_ADC1_INUSE_WIDTH                     1
#define PCC_ADC1_INUSE(x)                        (((uint32)(((uint32)(x))<<PCC_ADC1_INUSE_SHIFT))&PCC_ADC1_INUSE_MASK)
#define PCC_ADC1_CGC_MASK                        0x40000000u
#define PCC_ADC1_CGC_SHIFT                       30
#define PCC_ADC1_CGC_WIDTH                       1
#define PCC_ADC1_CGC(x)                          (((uint32)(((uint32)(x))<<PCC_ADC1_CGC_SHIFT))&PCC_ADC1_CGC_MASK)
#define PCC_ADC1_PR_MASK                         0x80000000u
#define PCC_ADC1_PR_SHIFT                        31
#define PCC_ADC1_PR_WIDTH                        1
#define PCC_ADC1_PR(x)                           (((uint32)(((uint32)(x))<<PCC_ADC1_PR_SHIFT))&PCC_ADC1_PR_MASK)
/* FLEXCAN2 Bit Fields */
#define PCC_FLEXCAN2_INUSE_MASK                  0x20000000u
#define PCC_FLEXCAN2_INUSE_SHIFT                 29
#define PCC_FLEXCAN2_INUSE_WIDTH                 1
#define PCC_FLEXCAN2_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_FLEXCAN2_INUSE_SHIFT))&PCC_FLEXCAN2_INUSE_MASK)
#define PCC_FLEXCAN2_CGC_MASK                    0x40000000u
#define PCC_FLEXCAN2_CGC_SHIFT                   30
#define PCC_FLEXCAN2_CGC_WIDTH                   1
#define PCC_FLEXCAN2_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXCAN2_CGC_SHIFT))&PCC_FLEXCAN2_CGC_MASK)
#define PCC_FLEXCAN2_PR_MASK                     0x80000000u
#define PCC_FLEXCAN2_PR_SHIFT                    31
#define PCC_FLEXCAN2_PR_WIDTH                    1
#define PCC_FLEXCAN2_PR(x)                       (((uint32)(((uint32)(x))<<PCC_FLEXCAN2_PR_SHIFT))&PCC_FLEXCAN2_PR_MASK)
/* LPSPI0 Bit Fields */
#define PCC_LPSPI0_PCS_MASK                      0x7000000u
#define PCC_LPSPI0_PCS_SHIFT                     24
#define PCC_LPSPI0_PCS_WIDTH                     3
#define PCC_LPSPI0_PCS(x)                        (((uint32)(((uint32)(x))<<PCC_LPSPI0_PCS_SHIFT))&PCC_LPSPI0_PCS_MASK)
#define PCC_LPSPI0_INUSE_MASK                    0x20000000u
#define PCC_LPSPI0_INUSE_SHIFT                   29
#define PCC_LPSPI0_INUSE_WIDTH                   1
#define PCC_LPSPI0_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_LPSPI0_INUSE_SHIFT))&PCC_LPSPI0_INUSE_MASK)
#define PCC_LPSPI0_CGC_MASK                      0x40000000u
#define PCC_LPSPI0_CGC_SHIFT                     30
#define PCC_LPSPI0_CGC_WIDTH                     1
#define PCC_LPSPI0_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_LPSPI0_CGC_SHIFT))&PCC_LPSPI0_CGC_MASK)
#define PCC_LPSPI0_PR_MASK                       0x80000000u
#define PCC_LPSPI0_PR_SHIFT                      31
#define PCC_LPSPI0_PR_WIDTH                      1
#define PCC_LPSPI0_PR(x)                         (((uint32)(((uint32)(x))<<PCC_LPSPI0_PR_SHIFT))&PCC_LPSPI0_PR_MASK)
/* LPSPI1 Bit Fields */
#define PCC_LPSPI1_PCS_MASK                      0x7000000u
#define PCC_LPSPI1_PCS_SHIFT                     24
#define PCC_LPSPI1_PCS_WIDTH                     3
#define PCC_LPSPI1_PCS(x)                        (((uint32)(((uint32)(x))<<PCC_LPSPI1_PCS_SHIFT))&PCC_LPSPI1_PCS_MASK)
#define PCC_LPSPI1_INUSE_MASK                    0x20000000u
#define PCC_LPSPI1_INUSE_SHIFT                   29
#define PCC_LPSPI1_INUSE_WIDTH                   1
#define PCC_LPSPI1_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_LPSPI1_INUSE_SHIFT))&PCC_LPSPI1_INUSE_MASK)
#define PCC_LPSPI1_CGC_MASK                      0x40000000u
#define PCC_LPSPI1_CGC_SHIFT                     30
#define PCC_LPSPI1_CGC_WIDTH                     1
#define PCC_LPSPI1_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_LPSPI1_CGC_SHIFT))&PCC_LPSPI1_CGC_MASK)
#define PCC_LPSPI1_PR_MASK                       0x80000000u
#define PCC_LPSPI1_PR_SHIFT                      31
#define PCC_LPSPI1_PR_WIDTH                      1
#define PCC_LPSPI1_PR(x)                         (((uint32)(((uint32)(x))<<PCC_LPSPI1_PR_SHIFT))&PCC_LPSPI1_PR_MASK)
/* LPSPI2 Bit Fields */
#define PCC_LPSPI2_PCS_MASK                      0x7000000u
#define PCC_LPSPI2_PCS_SHIFT                     24
#define PCC_LPSPI2_PCS_WIDTH                     3
#define PCC_LPSPI2_PCS(x)                        (((uint32)(((uint32)(x))<<PCC_LPSPI2_PCS_SHIFT))&PCC_LPSPI2_PCS_MASK)
#define PCC_LPSPI2_INUSE_MASK                    0x20000000u
#define PCC_LPSPI2_INUSE_SHIFT                   29
#define PCC_LPSPI2_INUSE_WIDTH                   1
#define PCC_LPSPI2_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_LPSPI2_INUSE_SHIFT))&PCC_LPSPI2_INUSE_MASK)
#define PCC_LPSPI2_CGC_MASK                      0x40000000u
#define PCC_LPSPI2_CGC_SHIFT                     30
#define PCC_LPSPI2_CGC_WIDTH                     1
#define PCC_LPSPI2_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_LPSPI2_CGC_SHIFT))&PCC_LPSPI2_CGC_MASK)
#define PCC_LPSPI2_PR_MASK                       0x80000000u
#define PCC_LPSPI2_PR_SHIFT                      31
#define PCC_LPSPI2_PR_WIDTH                      1
#define PCC_LPSPI2_PR(x)                         (((uint32)(((uint32)(x))<<PCC_LPSPI2_PR_SHIFT))&PCC_LPSPI2_PR_MASK)
/* PDB1 Bit Fields */
#define PCC_PDB1_INUSE_MASK                      0x20000000u
#define PCC_PDB1_INUSE_SHIFT                     29
#define PCC_PDB1_INUSE_WIDTH                     1
#define PCC_PDB1_INUSE(x)                        (((uint32)(((uint32)(x))<<PCC_PDB1_INUSE_SHIFT))&PCC_PDB1_INUSE_MASK)
#define PCC_PDB1_CGC_MASK                        0x40000000u
#define PCC_PDB1_CGC_SHIFT                       30
#define PCC_PDB1_CGC_WIDTH                       1
#define PCC_PDB1_CGC(x)                          (((uint32)(((uint32)(x))<<PCC_PDB1_CGC_SHIFT))&PCC_PDB1_CGC_MASK)
#define PCC_PDB1_PR_MASK                         0x80000000u
#define PCC_PDB1_PR_SHIFT                        31
#define PCC_PDB1_PR_WIDTH                        1
#define PCC_PDB1_PR(x)                           (((uint32)(((uint32)(x))<<PCC_PDB1_PR_SHIFT))&PCC_PDB1_PR_MASK)
/* CRC Bit Fields */
#define PCC_CRC_INUSE_MASK                       0x20000000u
#define PCC_CRC_INUSE_SHIFT                      29
#define PCC_CRC_INUSE_WIDTH                      1
#define PCC_CRC_INUSE(x)                         (((uint32)(((uint32)(x))<<PCC_CRC_INUSE_SHIFT))&PCC_CRC_INUSE_MASK)
#define PCC_CRC_CGC_MASK                         0x40000000u
#define PCC_CRC_CGC_SHIFT                        30
#define PCC_CRC_CGC_WIDTH                        1
#define PCC_CRC_CGC(x)                           (((uint32)(((uint32)(x))<<PCC_CRC_CGC_SHIFT))&PCC_CRC_CGC_MASK)
#define PCC_CRC_PR_MASK                          0x80000000u
#define PCC_CRC_PR_SHIFT                         31
#define PCC_CRC_PR_WIDTH                         1
#define PCC_CRC_PR(x)                            (((uint32)(((uint32)(x))<<PCC_CRC_PR_SHIFT))&PCC_CRC_PR_MASK)
/* DUMMY51 Bit Fields */
#define PCC_DUMMY51_INUSE_MASK                   0x20000000u
#define PCC_DUMMY51_INUSE_SHIFT                  29
#define PCC_DUMMY51_INUSE_WIDTH                  1
#define PCC_DUMMY51_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_DUMMY51_INUSE_SHIFT))&PCC_DUMMY51_INUSE_MASK)
#define PCC_DUMMY51_CGC_MASK                     0x40000000u
#define PCC_DUMMY51_CGC_SHIFT                    30
#define PCC_DUMMY51_CGC_WIDTH                    1
#define PCC_DUMMY51_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY51_CGC_SHIFT))&PCC_DUMMY51_CGC_MASK)
#define PCC_DUMMY51_PR_MASK                      0x80000000u
#define PCC_DUMMY51_PR_SHIFT                     31
#define PCC_DUMMY51_PR_WIDTH                     1
#define PCC_DUMMY51_PR(x)                        (((uint32)(((uint32)(x))<<PCC_DUMMY51_PR_SHIFT))&PCC_DUMMY51_PR_MASK)
/* PDB0 Bit Fields */
#define PCC_PDB0_INUSE_MASK                      0x20000000u
#define PCC_PDB0_INUSE_SHIFT                     29
#define PCC_PDB0_INUSE_WIDTH                     1
#define PCC_PDB0_INUSE(x)                        (((uint32)(((uint32)(x))<<PCC_PDB0_INUSE_SHIFT))&PCC_PDB0_INUSE_MASK)
#define PCC_PDB0_CGC_MASK                        0x40000000u
#define PCC_PDB0_CGC_SHIFT                       30
#define PCC_PDB0_CGC_WIDTH                       1
#define PCC_PDB0_CGC(x)                          (((uint32)(((uint32)(x))<<PCC_PDB0_CGC_SHIFT))&PCC_PDB0_CGC_MASK)
#define PCC_PDB0_PR_MASK                         0x80000000u
#define PCC_PDB0_PR_SHIFT                        31
#define PCC_PDB0_PR_WIDTH                        1
#define PCC_PDB0_PR(x)                           (((uint32)(((uint32)(x))<<PCC_PDB0_PR_SHIFT))&PCC_PDB0_PR_MASK)
/* LPIT0 Bit Fields */
#define PCC_LPIT0_PCS_MASK                       0x7000000u
#define PCC_LPIT0_PCS_SHIFT                      24
#define PCC_LPIT0_PCS_WIDTH                      3
#define PCC_LPIT0_PCS(x)                         (((uint32)(((uint32)(x))<<PCC_LPIT0_PCS_SHIFT))&PCC_LPIT0_PCS_MASK)
#define PCC_LPIT0_INUSE_MASK                     0x20000000u
#define PCC_LPIT0_INUSE_SHIFT                    29
#define PCC_LPIT0_INUSE_WIDTH                    1
#define PCC_LPIT0_INUSE(x)                       (((uint32)(((uint32)(x))<<PCC_LPIT0_INUSE_SHIFT))&PCC_LPIT0_INUSE_MASK)
#define PCC_LPIT0_CGC_MASK                       0x40000000u
#define PCC_LPIT0_CGC_SHIFT                      30
#define PCC_LPIT0_CGC_WIDTH                      1
#define PCC_LPIT0_CGC(x)                         (((uint32)(((uint32)(x))<<PCC_LPIT0_CGC_SHIFT))&PCC_LPIT0_CGC_MASK)
#define PCC_LPIT0_PR_MASK                        0x80000000u
#define PCC_LPIT0_PR_SHIFT                       31
#define PCC_LPIT0_PR_WIDTH                       1
#define PCC_LPIT0_PR(x)                          (((uint32)(((uint32)(x))<<PCC_LPIT0_PR_SHIFT))&PCC_LPIT0_PR_MASK)
/* FLEXTMR0 Bit Fields */
#define PCC_FLEXTMR0_PCS_MASK                    0x7000000u
#define PCC_FLEXTMR0_PCS_SHIFT                   24
#define PCC_FLEXTMR0_PCS_WIDTH                   3
#define PCC_FLEXTMR0_PCS(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR0_PCS_SHIFT))&PCC_FLEXTMR0_PCS_MASK)
#define PCC_FLEXTMR0_INUSE_MASK                  0x20000000u
#define PCC_FLEXTMR0_INUSE_SHIFT                 29
#define PCC_FLEXTMR0_INUSE_WIDTH                 1
#define PCC_FLEXTMR0_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_FLEXTMR0_INUSE_SHIFT))&PCC_FLEXTMR0_INUSE_MASK)
#define PCC_FLEXTMR0_CGC_MASK                    0x40000000u
#define PCC_FLEXTMR0_CGC_SHIFT                   30
#define PCC_FLEXTMR0_CGC_WIDTH                   1
#define PCC_FLEXTMR0_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR0_CGC_SHIFT))&PCC_FLEXTMR0_CGC_MASK)
#define PCC_FLEXTMR0_PR_MASK                     0x80000000u
#define PCC_FLEXTMR0_PR_SHIFT                    31
#define PCC_FLEXTMR0_PR_WIDTH                    1
#define PCC_FLEXTMR0_PR(x)                       (((uint32)(((uint32)(x))<<PCC_FLEXTMR0_PR_SHIFT))&PCC_FLEXTMR0_PR_MASK)
/* FLEXTMR1 Bit Fields */
#define PCC_FLEXTMR1_PCS_MASK                    0x7000000u
#define PCC_FLEXTMR1_PCS_SHIFT                   24
#define PCC_FLEXTMR1_PCS_WIDTH                   3
#define PCC_FLEXTMR1_PCS(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR1_PCS_SHIFT))&PCC_FLEXTMR1_PCS_MASK)
#define PCC_FLEXTMR1_INUSE_MASK                  0x20000000u
#define PCC_FLEXTMR1_INUSE_SHIFT                 29
#define PCC_FLEXTMR1_INUSE_WIDTH                 1
#define PCC_FLEXTMR1_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_FLEXTMR1_INUSE_SHIFT))&PCC_FLEXTMR1_INUSE_MASK)
#define PCC_FLEXTMR1_CGC_MASK                    0x40000000u
#define PCC_FLEXTMR1_CGC_SHIFT                   30
#define PCC_FLEXTMR1_CGC_WIDTH                   1
#define PCC_FLEXTMR1_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR1_CGC_SHIFT))&PCC_FLEXTMR1_CGC_MASK)
#define PCC_FLEXTMR1_PR_MASK                     0x80000000u
#define PCC_FLEXTMR1_PR_SHIFT                    31
#define PCC_FLEXTMR1_PR_WIDTH                    1
#define PCC_FLEXTMR1_PR(x)                       (((uint32)(((uint32)(x))<<PCC_FLEXTMR1_PR_SHIFT))&PCC_FLEXTMR1_PR_MASK)
/* FLEXTMR2 Bit Fields */
#define PCC_FLEXTMR2_PCS_MASK                    0x7000000u
#define PCC_FLEXTMR2_PCS_SHIFT                   24
#define PCC_FLEXTMR2_PCS_WIDTH                   3
#define PCC_FLEXTMR2_PCS(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR2_PCS_SHIFT))&PCC_FLEXTMR2_PCS_MASK)
#define PCC_FLEXTMR2_INUSE_MASK                  0x20000000u
#define PCC_FLEXTMR2_INUSE_SHIFT                 29
#define PCC_FLEXTMR2_INUSE_WIDTH                 1
#define PCC_FLEXTMR2_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_FLEXTMR2_INUSE_SHIFT))&PCC_FLEXTMR2_INUSE_MASK)
#define PCC_FLEXTMR2_CGC_MASK                    0x40000000u
#define PCC_FLEXTMR2_CGC_SHIFT                   30
#define PCC_FLEXTMR2_CGC_WIDTH                   1
#define PCC_FLEXTMR2_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXTMR2_CGC_SHIFT))&PCC_FLEXTMR2_CGC_MASK)
#define PCC_FLEXTMR2_PR_MASK                     0x80000000u
#define PCC_FLEXTMR2_PR_SHIFT                    31
#define PCC_FLEXTMR2_PR_WIDTH                    1
#define PCC_FLEXTMR2_PR(x)                       (((uint32)(((uint32)(x))<<PCC_FLEXTMR2_PR_SHIFT))&PCC_FLEXTMR2_PR_MASK)
/* ADC0 Bit Fields */
#define PCC_ADC0_PCS_MASK                        0x7000000u
#define PCC_ADC0_PCS_SHIFT                       24
#define PCC_ADC0_PCS_WIDTH                       3
#define PCC_ADC0_PCS(x)                          (((uint32)(((uint32)(x))<<PCC_ADC0_PCS_SHIFT))&PCC_ADC0_PCS_MASK)
#define PCC_ADC0_INUSE_MASK                      0x20000000u
#define PCC_ADC0_INUSE_SHIFT                     29
#define PCC_ADC0_INUSE_WIDTH                     1
#define PCC_ADC0_INUSE(x)                        (((uint32)(((uint32)(x))<<PCC_ADC0_INUSE_SHIFT))&PCC_ADC0_INUSE_MASK)
#define PCC_ADC0_CGC_MASK                        0x40000000u
#define PCC_ADC0_CGC_SHIFT                       30
#define PCC_ADC0_CGC_WIDTH                       1
#define PCC_ADC0_CGC(x)                          (((uint32)(((uint32)(x))<<PCC_ADC0_CGC_SHIFT))&PCC_ADC0_CGC_MASK)
#define PCC_ADC0_PR_MASK                         0x80000000u
#define PCC_ADC0_PR_SHIFT                        31
#define PCC_ADC0_PR_WIDTH                        1
#define PCC_ADC0_PR(x)                           (((uint32)(((uint32)(x))<<PCC_ADC0_PR_SHIFT))&PCC_ADC0_PR_MASK)
/* DUMMY60 Bit Fields */
#define PCC_DUMMY60_PCS_MASK                     0x7000000u
#define PCC_DUMMY60_PCS_SHIFT                    24
#define PCC_DUMMY60_PCS_WIDTH                    3
#define PCC_DUMMY60_PCS(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY60_PCS_SHIFT))&PCC_DUMMY60_PCS_MASK)
#define PCC_DUMMY60_INUSE_MASK                   0x20000000u
#define PCC_DUMMY60_INUSE_SHIFT                  29
#define PCC_DUMMY60_INUSE_WIDTH                  1
#define PCC_DUMMY60_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_DUMMY60_INUSE_SHIFT))&PCC_DUMMY60_INUSE_MASK)
#define PCC_DUMMY60_CGC_MASK                     0x40000000u
#define PCC_DUMMY60_CGC_SHIFT                    30
#define PCC_DUMMY60_CGC_WIDTH                    1
#define PCC_DUMMY60_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY60_CGC_SHIFT))&PCC_DUMMY60_CGC_MASK)
#define PCC_DUMMY60_PR_MASK                      0x80000000u
#define PCC_DUMMY60_PR_SHIFT                     31
#define PCC_DUMMY60_PR_WIDTH                     1
#define PCC_DUMMY60_PR(x)                        (((uint32)(((uint32)(x))<<PCC_DUMMY60_PR_SHIFT))&PCC_DUMMY60_PR_MASK)
/* RTC Bit Fields */
#define PCC_RTC_PCD_MASK                         0x7u
#define PCC_RTC_PCD_SHIFT                        0
#define PCC_RTC_PCD_WIDTH                        3
#define PCC_RTC_PCD(x)                           (((uint32)(((uint32)(x))<<PCC_RTC_PCD_SHIFT))&PCC_RTC_PCD_MASK)
#define PCC_RTC_FRAC_MASK                        0x8u
#define PCC_RTC_FRAC_SHIFT                       3
#define PCC_RTC_FRAC_WIDTH                       1
#define PCC_RTC_FRAC(x)                          (((uint32)(((uint32)(x))<<PCC_RTC_FRAC_SHIFT))&PCC_RTC_FRAC_MASK)
#define PCC_RTC_INUSE_MASK                       0x20000000u
#define PCC_RTC_INUSE_SHIFT                      29
#define PCC_RTC_INUSE_WIDTH                      1
#define PCC_RTC_INUSE(x)                         (((uint32)(((uint32)(x))<<PCC_RTC_INUSE_SHIFT))&PCC_RTC_INUSE_MASK)
#define PCC_RTC_CGC_MASK                         0x40000000u
#define PCC_RTC_CGC_SHIFT                        30
#define PCC_RTC_CGC_WIDTH                        1
#define PCC_RTC_CGC(x)                           (((uint32)(((uint32)(x))<<PCC_RTC_CGC_SHIFT))&PCC_RTC_CGC_MASK)
#define PCC_RTC_PR_MASK                          0x80000000u
#define PCC_RTC_PR_SHIFT                         31
#define PCC_RTC_PR_WIDTH                         1
#define PCC_RTC_PR(x)                            (((uint32)(((uint32)(x))<<PCC_RTC_PR_SHIFT))&PCC_RTC_PR_MASK)
/* DUMMY63 Bit Fields */
#define PCC_DUMMY63_INUSE_MASK                   0x20000000u
#define PCC_DUMMY63_INUSE_SHIFT                  29
#define PCC_DUMMY63_INUSE_WIDTH                  1
#define PCC_DUMMY63_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_DUMMY63_INUSE_SHIFT))&PCC_DUMMY63_INUSE_MASK)
#define PCC_DUMMY63_CGC_MASK                     0x40000000u
#define PCC_DUMMY63_CGC_SHIFT                    30
#define PCC_DUMMY63_CGC_WIDTH                    1
#define PCC_DUMMY63_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY63_CGC_SHIFT))&PCC_DUMMY63_CGC_MASK)
#define PCC_DUMMY63_PR_MASK                      0x80000000u
#define PCC_DUMMY63_PR_SHIFT                     31
#define PCC_DUMMY63_PR_WIDTH                     1
#define PCC_DUMMY63_PR(x)                        (((uint32)(((uint32)(x))<<PCC_DUMMY63_PR_SHIFT))&PCC_DUMMY63_PR_MASK)
/* LPTMR0 Bit Fields */
#define PCC_LPTMR0_PCD_MASK                      0x7u
#define PCC_LPTMR0_PCD_SHIFT                     0
#define PCC_LPTMR0_PCD_WIDTH                     3
#define PCC_LPTMR0_PCD(x)                        (((uint32)(((uint32)(x))<<PCC_LPTMR0_PCD_SHIFT))&PCC_LPTMR0_PCD_MASK)
#define PCC_LPTMR0_FRAC_MASK                     0x8u
#define PCC_LPTMR0_FRAC_SHIFT                    3
#define PCC_LPTMR0_FRAC_WIDTH                    1
#define PCC_LPTMR0_FRAC(x)                       (((uint32)(((uint32)(x))<<PCC_LPTMR0_FRAC_SHIFT))&PCC_LPTMR0_FRAC_MASK)
#define PCC_LPTMR0_PCS_MASK                      0x7000000u
#define PCC_LPTMR0_PCS_SHIFT                     24
#define PCC_LPTMR0_PCS_WIDTH                     3
#define PCC_LPTMR0_PCS(x)                        (((uint32)(((uint32)(x))<<PCC_LPTMR0_PCS_SHIFT))&PCC_LPTMR0_PCS_MASK)
#define PCC_LPTMR0_INUSE_MASK                    0x20000000u
#define PCC_LPTMR0_INUSE_SHIFT                   29
#define PCC_LPTMR0_INUSE_WIDTH                   1
#define PCC_LPTMR0_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_LPTMR0_INUSE_SHIFT))&PCC_LPTMR0_INUSE_MASK)
#define PCC_LPTMR0_CGC_MASK                      0x40000000u
#define PCC_LPTMR0_CGC_SHIFT                     30
#define PCC_LPTMR0_CGC_WIDTH                     1
#define PCC_LPTMR0_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_LPTMR0_CGC_SHIFT))&PCC_LPTMR0_CGC_MASK)
#define PCC_LPTMR0_PR_MASK                       0x80000000u
#define PCC_LPTMR0_PR_SHIFT                      31
#define PCC_LPTMR0_PR_WIDTH                      1
#define PCC_LPTMR0_PR(x)                         (((uint32)(((uint32)(x))<<PCC_LPTMR0_PR_SHIFT))&PCC_LPTMR0_PR_MASK)
/* DUMMY69 Bit Fields */
#define PCC_DUMMY69_INUSE_MASK                   0x20000000u
#define PCC_DUMMY69_INUSE_SHIFT                  29
#define PCC_DUMMY69_INUSE_WIDTH                  1
#define PCC_DUMMY69_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_DUMMY69_INUSE_SHIFT))&PCC_DUMMY69_INUSE_MASK)
#define PCC_DUMMY69_CGC_MASK                     0x40000000u
#define PCC_DUMMY69_CGC_SHIFT                    30
#define PCC_DUMMY69_CGC_WIDTH                    1
#define PCC_DUMMY69_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY69_CGC_SHIFT))&PCC_DUMMY69_CGC_MASK)
#define PCC_DUMMY69_PR_MASK                      0x80000000u
#define PCC_DUMMY69_PR_SHIFT                     31
#define PCC_DUMMY69_PR_WIDTH                     1
#define PCC_DUMMY69_PR(x)                        (((uint32)(((uint32)(x))<<PCC_DUMMY69_PR_SHIFT))&PCC_DUMMY69_PR_MASK)
/* ATX Bit Fields */
#define PCC_ATX_INUSE_MASK                       0x20000000u
#define PCC_ATX_INUSE_SHIFT                      29
#define PCC_ATX_INUSE_WIDTH                      1
#define PCC_ATX_INUSE(x)                         (((uint32)(((uint32)(x))<<PCC_ATX_INUSE_SHIFT))&PCC_ATX_INUSE_MASK)
#define PCC_ATX_CGC_MASK                         0x40000000u
#define PCC_ATX_CGC_SHIFT                        30
#define PCC_ATX_CGC_WIDTH                        1
#define PCC_ATX_CGC(x)                           (((uint32)(((uint32)(x))<<PCC_ATX_CGC_SHIFT))&PCC_ATX_CGC_MASK)
#define PCC_ATX_PR_MASK                          0x80000000u
#define PCC_ATX_PR_SHIFT                         31
#define PCC_ATX_PR_WIDTH                         1
#define PCC_ATX_PR(x)                            (((uint32)(((uint32)(x))<<PCC_ATX_PR_SHIFT))&PCC_ATX_PR_MASK)
/* SIM Bit Fields */
#define PCC_SIM_INUSE_MASK                       0x20000000u
#define PCC_SIM_INUSE_SHIFT                      29
#define PCC_SIM_INUSE_WIDTH                      1
#define PCC_SIM_INUSE(x)                         (((uint32)(((uint32)(x))<<PCC_SIM_INUSE_SHIFT))&PCC_SIM_INUSE_MASK)
#define PCC_SIM_CGC_MASK                         0x40000000u
#define PCC_SIM_CGC_SHIFT                        30
#define PCC_SIM_CGC_WIDTH                        1
#define PCC_SIM_CGC(x)                           (((uint32)(((uint32)(x))<<PCC_SIM_CGC_SHIFT))&PCC_SIM_CGC_MASK)
#define PCC_SIM_PR_MASK                          0x80000000u
#define PCC_SIM_PR_SHIFT                         31
#define PCC_SIM_PR_WIDTH                         1
#define PCC_SIM_PR(x)                            (((uint32)(((uint32)(x))<<PCC_SIM_PR_SHIFT))&PCC_SIM_PR_MASK)
/* PORTA Bit Fields */
#define PCC_PORTA_INUSE_MASK                     0x20000000u
#define PCC_PORTA_INUSE_SHIFT                    29
#define PCC_PORTA_INUSE_WIDTH                    1
#define PCC_PORTA_INUSE(x)                       (((uint32)(((uint32)(x))<<PCC_PORTA_INUSE_SHIFT))&PCC_PORTA_INUSE_MASK)
#define PCC_PORTA_CGC_MASK                       0x40000000u
#define PCC_PORTA_CGC_SHIFT                      30
#define PCC_PORTA_CGC_WIDTH                      1
#define PCC_PORTA_CGC(x)                         (((uint32)(((uint32)(x))<<PCC_PORTA_CGC_SHIFT))&PCC_PORTA_CGC_MASK)
#define PCC_PORTA_PR_MASK                        0x80000000u
#define PCC_PORTA_PR_SHIFT                       31
#define PCC_PORTA_PR_WIDTH                       1
#define PCC_PORTA_PR(x)                          (((uint32)(((uint32)(x))<<PCC_PORTA_PR_SHIFT))&PCC_PORTA_PR_MASK)
/* PORTB Bit Fields */
#define PCC_PORTB_INUSE_MASK                     0x20000000u
#define PCC_PORTB_INUSE_SHIFT                    29
#define PCC_PORTB_INUSE_WIDTH                    1
#define PCC_PORTB_INUSE(x)                       (((uint32)(((uint32)(x))<<PCC_PORTB_INUSE_SHIFT))&PCC_PORTB_INUSE_MASK)
#define PCC_PORTB_CGC_MASK                       0x40000000u
#define PCC_PORTB_CGC_SHIFT                      30
#define PCC_PORTB_CGC_WIDTH                      1
#define PCC_PORTB_CGC(x)                         (((uint32)(((uint32)(x))<<PCC_PORTB_CGC_SHIFT))&PCC_PORTB_CGC_MASK)
#define PCC_PORTB_PR_MASK                        0x80000000u
#define PCC_PORTB_PR_SHIFT                       31
#define PCC_PORTB_PR_WIDTH                       1
#define PCC_PORTB_PR(x)                          (((uint32)(((uint32)(x))<<PCC_PORTB_PR_SHIFT))&PCC_PORTB_PR_MASK)
/* PORTC Bit Fields */
#define PCC_PORTC_INUSE_MASK                     0x20000000u
#define PCC_PORTC_INUSE_SHIFT                    29
#define PCC_PORTC_INUSE_WIDTH                    1
#define PCC_PORTC_INUSE(x)                       (((uint32)(((uint32)(x))<<PCC_PORTC_INUSE_SHIFT))&PCC_PORTC_INUSE_MASK)
#define PCC_PORTC_CGC_MASK                       0x40000000u
#define PCC_PORTC_CGC_SHIFT                      30
#define PCC_PORTC_CGC_WIDTH                      1
#define PCC_PORTC_CGC(x)                         (((uint32)(((uint32)(x))<<PCC_PORTC_CGC_SHIFT))&PCC_PORTC_CGC_MASK)
#define PCC_PORTC_PR_MASK                        0x80000000u
#define PCC_PORTC_PR_SHIFT                       31
#define PCC_PORTC_PR_WIDTH                       1
#define PCC_PORTC_PR(x)                          (((uint32)(((uint32)(x))<<PCC_PORTC_PR_SHIFT))&PCC_PORTC_PR_MASK)
/* PORTD Bit Fields */
#define PCC_PORTD_INUSE_MASK                     0x20000000u
#define PCC_PORTD_INUSE_SHIFT                    29
#define PCC_PORTD_INUSE_WIDTH                    1
#define PCC_PORTD_INUSE(x)                       (((uint32)(((uint32)(x))<<PCC_PORTD_INUSE_SHIFT))&PCC_PORTD_INUSE_MASK)
#define PCC_PORTD_CGC_MASK                       0x40000000u
#define PCC_PORTD_CGC_SHIFT                      30
#define PCC_PORTD_CGC_WIDTH                      1
#define PCC_PORTD_CGC(x)                         (((uint32)(((uint32)(x))<<PCC_PORTD_CGC_SHIFT))&PCC_PORTD_CGC_MASK)
#define PCC_PORTD_PR_MASK                        0x80000000u
#define PCC_PORTD_PR_SHIFT                       31
#define PCC_PORTD_PR_WIDTH                       1
#define PCC_PORTD_PR(x)                          (((uint32)(((uint32)(x))<<PCC_PORTD_PR_SHIFT))&PCC_PORTD_PR_MASK)
/* PORTE Bit Fields */
#define PCC_PORTE_INUSE_MASK                     0x20000000u
#define PCC_PORTE_INUSE_SHIFT                    29
#define PCC_PORTE_INUSE_WIDTH                    1
#define PCC_PORTE_INUSE(x)                       (((uint32)(((uint32)(x))<<PCC_PORTE_INUSE_SHIFT))&PCC_PORTE_INUSE_MASK)
#define PCC_PORTE_CGC_MASK                       0x40000000u
#define PCC_PORTE_CGC_SHIFT                      30
#define PCC_PORTE_CGC_WIDTH                      1
#define PCC_PORTE_CGC(x)                         (((uint32)(((uint32)(x))<<PCC_PORTE_CGC_SHIFT))&PCC_PORTE_CGC_MASK)
#define PCC_PORTE_PR_MASK                        0x80000000u
#define PCC_PORTE_PR_SHIFT                       31
#define PCC_PORTE_PR_WIDTH                       1
#define PCC_PORTE_PR(x)                          (((uint32)(((uint32)(x))<<PCC_PORTE_PR_SHIFT))&PCC_PORTE_PR_MASK)
/* WDOG Bit Fields */
#define PCC_WDOG_PCD_MASK                        0x7u
#define PCC_WDOG_PCD_SHIFT                       0
#define PCC_WDOG_PCD_WIDTH                       3
#define PCC_WDOG_PCD(x)                          (((uint32)(((uint32)(x))<<PCC_WDOG_PCD_SHIFT))&PCC_WDOG_PCD_MASK)
#define PCC_WDOG_FRAC_MASK                       0x8u
#define PCC_WDOG_FRAC_SHIFT                      3
#define PCC_WDOG_FRAC_WIDTH                      1
#define PCC_WDOG_FRAC(x)                         (((uint32)(((uint32)(x))<<PCC_WDOG_FRAC_SHIFT))&PCC_WDOG_FRAC_MASK)
#define PCC_WDOG_PCS_MASK                        0x7000000u
#define PCC_WDOG_PCS_SHIFT                       24
#define PCC_WDOG_PCS_WIDTH                       3
#define PCC_WDOG_PCS(x)                          (((uint32)(((uint32)(x))<<PCC_WDOG_PCS_SHIFT))&PCC_WDOG_PCS_MASK)
#define PCC_WDOG_INUSE_MASK                      0x20000000u
#define PCC_WDOG_INUSE_SHIFT                     29
#define PCC_WDOG_INUSE_WIDTH                     1
#define PCC_WDOG_INUSE(x)                        (((uint32)(((uint32)(x))<<PCC_WDOG_INUSE_SHIFT))&PCC_WDOG_INUSE_MASK)
#define PCC_WDOG_CGC_MASK                        0x40000000u
#define PCC_WDOG_CGC_SHIFT                       30
#define PCC_WDOG_CGC_WIDTH                       1
#define PCC_WDOG_CGC(x)                          (((uint32)(((uint32)(x))<<PCC_WDOG_CGC_SHIFT))&PCC_WDOG_CGC_MASK)
#define PCC_WDOG_PR_MASK                         0x80000000u
#define PCC_WDOG_PR_SHIFT                        31
#define PCC_WDOG_PR_WIDTH                        1
#define PCC_WDOG_PR(x)                           (((uint32)(((uint32)(x))<<PCC_WDOG_PR_SHIFT))&PCC_WDOG_PR_MASK)
/* FLEXIO Bit Fields */
#define PCC_FLEXIO_PCS_MASK                      0x7000000u
#define PCC_FLEXIO_PCS_SHIFT                     24
#define PCC_FLEXIO_PCS_WIDTH                     3
#define PCC_FLEXIO_PCS(x)                        (((uint32)(((uint32)(x))<<PCC_FLEXIO_PCS_SHIFT))&PCC_FLEXIO_PCS_MASK)
#define PCC_FLEXIO_INUSE_MASK                    0x20000000u
#define PCC_FLEXIO_INUSE_SHIFT                   29
#define PCC_FLEXIO_INUSE_WIDTH                   1
#define PCC_FLEXIO_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_FLEXIO_INUSE_SHIFT))&PCC_FLEXIO_INUSE_MASK)
#define PCC_FLEXIO_CGC_MASK                      0x40000000u
#define PCC_FLEXIO_CGC_SHIFT                     30
#define PCC_FLEXIO_CGC_WIDTH                     1
#define PCC_FLEXIO_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_FLEXIO_CGC_SHIFT))&PCC_FLEXIO_CGC_MASK)
#define PCC_FLEXIO_PR_MASK                       0x80000000u
#define PCC_FLEXIO_PR_SHIFT                      31
#define PCC_FLEXIO_PR_WIDTH                      1
#define PCC_FLEXIO_PR(x)                         (((uint32)(((uint32)(x))<<PCC_FLEXIO_PR_SHIFT))&PCC_FLEXIO_PR_MASK)
/* DUMMY94 Bit Fields */
#define PCC_DUMMY94_PCS_MASK                     0x7000000u
#define PCC_DUMMY94_PCS_SHIFT                    24
#define PCC_DUMMY94_PCS_WIDTH                    3
#define PCC_DUMMY94_PCS(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY94_PCS_SHIFT))&PCC_DUMMY94_PCS_MASK)
#define PCC_DUMMY94_INUSE_MASK                   0x20000000u
#define PCC_DUMMY94_INUSE_SHIFT                  29
#define PCC_DUMMY94_INUSE_WIDTH                  1
#define PCC_DUMMY94_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_DUMMY94_INUSE_SHIFT))&PCC_DUMMY94_INUSE_MASK)
#define PCC_DUMMY94_CGC_MASK                     0x40000000u
#define PCC_DUMMY94_CGC_SHIFT                    30
#define PCC_DUMMY94_CGC_WIDTH                    1
#define PCC_DUMMY94_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY94_CGC_SHIFT))&PCC_DUMMY94_CGC_MASK)
#define PCC_DUMMY94_PR_MASK                      0x80000000u
#define PCC_DUMMY94_PR_SHIFT                     31
#define PCC_DUMMY94_PR_WIDTH                     1
#define PCC_DUMMY94_PR(x)                        (((uint32)(((uint32)(x))<<PCC_DUMMY94_PR_SHIFT))&PCC_DUMMY94_PR_MASK)
/* RTC_OSC Bit Fields */
#define PCC_RTC_OSC_INUSE_MASK                   0x20000000u
#define PCC_RTC_OSC_INUSE_SHIFT                  29
#define PCC_RTC_OSC_INUSE_WIDTH                  1
#define PCC_RTC_OSC_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_RTC_OSC_INUSE_SHIFT))&PCC_RTC_OSC_INUSE_MASK)
#define PCC_RTC_OSC_CGC_MASK                     0x40000000u
#define PCC_RTC_OSC_CGC_SHIFT                    30
#define PCC_RTC_OSC_CGC_WIDTH                    1
#define PCC_RTC_OSC_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_RTC_OSC_CGC_SHIFT))&PCC_RTC_OSC_CGC_MASK)
#define PCC_RTC_OSC_PR_MASK                      0x80000000u
#define PCC_RTC_OSC_PR_SHIFT                     31
#define PCC_RTC_OSC_PR_WIDTH                     1
#define PCC_RTC_OSC_PR(x)                        (((uint32)(((uint32)(x))<<PCC_RTC_OSC_PR_SHIFT))&PCC_RTC_OSC_PR_MASK)
/* EWM Bit Fields */
#define PCC_EWM_PCS_MASK                         0x7000000u
#define PCC_EWM_PCS_SHIFT                        24
#define PCC_EWM_PCS_WIDTH                        3
#define PCC_EWM_PCS(x)                           (((uint32)(((uint32)(x))<<PCC_EWM_PCS_SHIFT))&PCC_EWM_PCS_MASK)
#define PCC_EWM_INUSE_MASK                       0x20000000u
#define PCC_EWM_INUSE_SHIFT                      29
#define PCC_EWM_INUSE_WIDTH                      1
#define PCC_EWM_INUSE(x)                         (((uint32)(((uint32)(x))<<PCC_EWM_INUSE_SHIFT))&PCC_EWM_INUSE_MASK)
#define PCC_EWM_CGC_MASK                         0x40000000u
#define PCC_EWM_CGC_SHIFT                        30
#define PCC_EWM_CGC_WIDTH                        1
#define PCC_EWM_CGC(x)                           (((uint32)(((uint32)(x))<<PCC_EWM_CGC_SHIFT))&PCC_EWM_CGC_MASK)
#define PCC_EWM_PR_MASK                          0x80000000u
#define PCC_EWM_PR_SHIFT                         31
#define PCC_EWM_PR_WIDTH                         1
#define PCC_EWM_PR(x)                            (((uint32)(((uint32)(x))<<PCC_EWM_PR_SHIFT))&PCC_EWM_PR_MASK)
/* TRGMUX Bit Fields */
#define PCC_TRGMUX_INUSE_MASK                    0x20000000u
#define PCC_TRGMUX_INUSE_SHIFT                   29
#define PCC_TRGMUX_INUSE_WIDTH                   1
#define PCC_TRGMUX_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_TRGMUX_INUSE_SHIFT))&PCC_TRGMUX_INUSE_MASK)
#define PCC_TRGMUX_CGC_MASK                      0x40000000u
#define PCC_TRGMUX_CGC_SHIFT                     30
#define PCC_TRGMUX_CGC_WIDTH                     1
#define PCC_TRGMUX_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_TRGMUX_CGC_SHIFT))&PCC_TRGMUX_CGC_MASK)
#define PCC_TRGMUX_PR_MASK                       0x80000000u
#define PCC_TRGMUX_PR_SHIFT                      31
#define PCC_TRGMUX_PR_WIDTH                      1
#define PCC_TRGMUX_PR(x)                         (((uint32)(((uint32)(x))<<PCC_TRGMUX_PR_SHIFT))&PCC_TRGMUX_PR_MASK)
/* SCG Bit Fields */
#define PCC_SCG_INUSE_MASK                       0x20000000u
#define PCC_SCG_INUSE_SHIFT                      29
#define PCC_SCG_INUSE_WIDTH                      1
#define PCC_SCG_INUSE(x)                         (((uint32)(((uint32)(x))<<PCC_SCG_INUSE_SHIFT))&PCC_SCG_INUSE_MASK)
#define PCC_SCG_CGC_MASK                         0x40000000u
#define PCC_SCG_CGC_SHIFT                        30
#define PCC_SCG_CGC_WIDTH                        1
#define PCC_SCG_CGC(x)                           (((uint32)(((uint32)(x))<<PCC_SCG_CGC_SHIFT))&PCC_SCG_CGC_MASK)
#define PCC_SCG_PR_MASK                          0x80000000u
#define PCC_SCG_PR_SHIFT                         31
#define PCC_SCG_PR_WIDTH                         1
#define PCC_SCG_PR(x)                            (((uint32)(((uint32)(x))<<PCC_SCG_PR_SHIFT))&PCC_SCG_PR_MASK)
/* LPI2C0 Bit Fields */
#define PCC_LPI2C0_PCS_MASK                      0x7000000u
#define PCC_LPI2C0_PCS_SHIFT                     24
#define PCC_LPI2C0_PCS_WIDTH                     3
#define PCC_LPI2C0_PCS(x)                        (((uint32)(((uint32)(x))<<PCC_LPI2C0_PCS_SHIFT))&PCC_LPI2C0_PCS_MASK)
#define PCC_LPI2C0_INUSE_MASK                    0x20000000u
#define PCC_LPI2C0_INUSE_SHIFT                   29
#define PCC_LPI2C0_INUSE_WIDTH                   1
#define PCC_LPI2C0_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_LPI2C0_INUSE_SHIFT))&PCC_LPI2C0_INUSE_MASK)
#define PCC_LPI2C0_CGC_MASK                      0x40000000u
#define PCC_LPI2C0_CGC_SHIFT                     30
#define PCC_LPI2C0_CGC_WIDTH                     1
#define PCC_LPI2C0_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_LPI2C0_CGC_SHIFT))&PCC_LPI2C0_CGC_MASK)
#define PCC_LPI2C0_PR_MASK                       0x80000000u
#define PCC_LPI2C0_PR_SHIFT                      31
#define PCC_LPI2C0_PR_WIDTH                      1
#define PCC_LPI2C0_PR(x)                         (((uint32)(((uint32)(x))<<PCC_LPI2C0_PR_SHIFT))&PCC_LPI2C0_PR_MASK)
/* LPI2C1 Bit Fields */
#define PCC_LPI2C1_PCS_MASK                      0x7000000u
#define PCC_LPI2C1_PCS_SHIFT                     24
#define PCC_LPI2C1_PCS_WIDTH                     3
#define PCC_LPI2C1_PCS(x)                        (((uint32)(((uint32)(x))<<PCC_LPI2C1_PCS_SHIFT))&PCC_LPI2C1_PCS_MASK)
#define PCC_LPI2C1_INUSE_MASK                    0x20000000u
#define PCC_LPI2C1_INUSE_SHIFT                   29
#define PCC_LPI2C1_INUSE_WIDTH                   1
#define PCC_LPI2C1_INUSE(x)                      (((uint32)(((uint32)(x))<<PCC_LPI2C1_INUSE_SHIFT))&PCC_LPI2C1_INUSE_MASK)
#define PCC_LPI2C1_CGC_MASK                      0x40000000u
#define PCC_LPI2C1_CGC_SHIFT                     30
#define PCC_LPI2C1_CGC_WIDTH                     1
#define PCC_LPI2C1_CGC(x)                        (((uint32)(((uint32)(x))<<PCC_LPI2C1_CGC_SHIFT))&PCC_LPI2C1_CGC_MASK)
#define PCC_LPI2C1_PR_MASK                       0x80000000u
#define PCC_LPI2C1_PR_SHIFT                      31
#define PCC_LPI2C1_PR_WIDTH                      1
#define PCC_LPI2C1_PR(x)                         (((uint32)(((uint32)(x))<<PCC_LPI2C1_PR_SHIFT))&PCC_LPI2C1_PR_MASK)
/* LPUART0 Bit Fields */
#define PCC_LPUART0_PCS_MASK                     0x7000000u
#define PCC_LPUART0_PCS_SHIFT                    24
#define PCC_LPUART0_PCS_WIDTH                    3
#define PCC_LPUART0_PCS(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART0_PCS_SHIFT))&PCC_LPUART0_PCS_MASK)
#define PCC_LPUART0_INUSE_MASK                   0x20000000u
#define PCC_LPUART0_INUSE_SHIFT                  29
#define PCC_LPUART0_INUSE_WIDTH                  1
#define PCC_LPUART0_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_LPUART0_INUSE_SHIFT))&PCC_LPUART0_INUSE_MASK)
#define PCC_LPUART0_CGC_MASK                     0x40000000u
#define PCC_LPUART0_CGC_SHIFT                    30
#define PCC_LPUART0_CGC_WIDTH                    1
#define PCC_LPUART0_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART0_CGC_SHIFT))&PCC_LPUART0_CGC_MASK)
#define PCC_LPUART0_PR_MASK                      0x80000000u
#define PCC_LPUART0_PR_SHIFT                     31
#define PCC_LPUART0_PR_WIDTH                     1
#define PCC_LPUART0_PR(x)                        (((uint32)(((uint32)(x))<<PCC_LPUART0_PR_SHIFT))&PCC_LPUART0_PR_MASK)
/* LPUART1 Bit Fields */
#define PCC_LPUART1_PCS_MASK                     0x7000000u
#define PCC_LPUART1_PCS_SHIFT                    24
#define PCC_LPUART1_PCS_WIDTH                    3
#define PCC_LPUART1_PCS(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART1_PCS_SHIFT))&PCC_LPUART1_PCS_MASK)
#define PCC_LPUART1_INUSE_MASK                   0x20000000u
#define PCC_LPUART1_INUSE_SHIFT                  29
#define PCC_LPUART1_INUSE_WIDTH                  1
#define PCC_LPUART1_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_LPUART1_INUSE_SHIFT))&PCC_LPUART1_INUSE_MASK)
#define PCC_LPUART1_CGC_MASK                     0x40000000u
#define PCC_LPUART1_CGC_SHIFT                    30
#define PCC_LPUART1_CGC_WIDTH                    1
#define PCC_LPUART1_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART1_CGC_SHIFT))&PCC_LPUART1_CGC_MASK)
#define PCC_LPUART1_PR_MASK                      0x80000000u
#define PCC_LPUART1_PR_SHIFT                     31
#define PCC_LPUART1_PR_WIDTH                     1
#define PCC_LPUART1_PR(x)                        (((uint32)(((uint32)(x))<<PCC_LPUART1_PR_SHIFT))&PCC_LPUART1_PR_MASK)
/* LPUART2 Bit Fields */
#define PCC_LPUART2_PCS_MASK                     0x7000000u
#define PCC_LPUART2_PCS_SHIFT                    24
#define PCC_LPUART2_PCS_WIDTH                    3
#define PCC_LPUART2_PCS(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART2_PCS_SHIFT))&PCC_LPUART2_PCS_MASK)
#define PCC_LPUART2_INUSE_MASK                   0x20000000u
#define PCC_LPUART2_INUSE_SHIFT                  29
#define PCC_LPUART2_INUSE_WIDTH                  1
#define PCC_LPUART2_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_LPUART2_INUSE_SHIFT))&PCC_LPUART2_INUSE_MASK)
#define PCC_LPUART2_CGC_MASK                     0x40000000u
#define PCC_LPUART2_CGC_SHIFT                    30
#define PCC_LPUART2_CGC_WIDTH                    1
#define PCC_LPUART2_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART2_CGC_SHIFT))&PCC_LPUART2_CGC_MASK)
#define PCC_LPUART2_PR_MASK                      0x80000000u
#define PCC_LPUART2_PR_SHIFT                     31
#define PCC_LPUART2_PR_WIDTH                     1
#define PCC_LPUART2_PR(x)                        (((uint32)(((uint32)(x))<<PCC_LPUART2_PR_SHIFT))&PCC_LPUART2_PR_MASK)
/* LPUART3 Bit Fields */
#define PCC_LPUART3_PCS_MASK                     0x7000000u
#define PCC_LPUART3_PCS_SHIFT                    24
#define PCC_LPUART3_PCS_WIDTH                    3
#define PCC_LPUART3_PCS(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART3_PCS_SHIFT))&PCC_LPUART3_PCS_MASK)
#define PCC_LPUART3_INUSE_MASK                   0x20000000u
#define PCC_LPUART3_INUSE_SHIFT                  29
#define PCC_LPUART3_INUSE_WIDTH                  1
#define PCC_LPUART3_INUSE(x)                     (((uint32)(((uint32)(x))<<PCC_LPUART3_INUSE_SHIFT))&PCC_LPUART3_INUSE_MASK)
#define PCC_LPUART3_CGC_MASK                     0x40000000u
#define PCC_LPUART3_CGC_SHIFT                    30
#define PCC_LPUART3_CGC_WIDTH                    1
#define PCC_LPUART3_CGC(x)                       (((uint32)(((uint32)(x))<<PCC_LPUART3_CGC_SHIFT))&PCC_LPUART3_CGC_MASK)
#define PCC_LPUART3_PR_MASK                      0x80000000u
#define PCC_LPUART3_PR_SHIFT                     31
#define PCC_LPUART3_PR_WIDTH                     1
#define PCC_LPUART3_PR(x)                        (((uint32)(((uint32)(x))<<PCC_LPUART3_PR_SHIFT))&PCC_LPUART3_PR_MASK)
/* CMP0 Bit Fields */
#define PCC_CMP0_INUSE_MASK                      0x20000000u
#define PCC_CMP0_INUSE_SHIFT                     29
#define PCC_CMP0_INUSE_WIDTH                     1
#define PCC_CMP0_INUSE(x)                        (((uint32)(((uint32)(x))<<PCC_CMP0_INUSE_SHIFT))&PCC_CMP0_INUSE_MASK)
#define PCC_CMP0_CGC_MASK                        0x40000000u
#define PCC_CMP0_CGC_SHIFT                       30
#define PCC_CMP0_CGC_WIDTH                       1
#define PCC_CMP0_CGC(x)                          (((uint32)(((uint32)(x))<<PCC_CMP0_CGC_SHIFT))&PCC_CMP0_CGC_MASK)
#define PCC_CMP0_PR_MASK                         0x80000000u
#define PCC_CMP0_PR_SHIFT                        31
#define PCC_CMP0_PR_WIDTH                        1
#define PCC_CMP0_PR(x)                           (((uint32)(((uint32)(x))<<PCC_CMP0_PR_SHIFT))&PCC_CMP0_PR_MASK)
/* DUMMY116 Bit Fields */
#define PCC_DUMMY116_INUSE_MASK                  0x20000000u
#define PCC_DUMMY116_INUSE_SHIFT                 29
#define PCC_DUMMY116_INUSE_WIDTH                 1
#define PCC_DUMMY116_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_DUMMY116_INUSE_SHIFT))&PCC_DUMMY116_INUSE_MASK)
#define PCC_DUMMY116_CGC_MASK                    0x40000000u
#define PCC_DUMMY116_CGC_SHIFT                   30
#define PCC_DUMMY116_CGC_WIDTH                   1
#define PCC_DUMMY116_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_DUMMY116_CGC_SHIFT))&PCC_DUMMY116_CGC_MASK)
#define PCC_DUMMY116_PR_MASK                     0x80000000u
#define PCC_DUMMY116_PR_SHIFT                    31
#define PCC_DUMMY116_PR_WIDTH                    1
#define PCC_DUMMY116_PR(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY116_PR_SHIFT))&PCC_DUMMY116_PR_MASK)
/* DUMMY117 Bit Fields */
#define PCC_DUMMY117_INUSE_MASK                  0x20000000u
#define PCC_DUMMY117_INUSE_SHIFT                 29
#define PCC_DUMMY117_INUSE_WIDTH                 1
#define PCC_DUMMY117_INUSE(x)                    (((uint32)(((uint32)(x))<<PCC_DUMMY117_INUSE_SHIFT))&PCC_DUMMY117_INUSE_MASK)
#define PCC_DUMMY117_CGC_MASK                    0x40000000u
#define PCC_DUMMY117_CGC_SHIFT                   30
#define PCC_DUMMY117_CGC_WIDTH                   1
#define PCC_DUMMY117_CGC(x)                      (((uint32)(((uint32)(x))<<PCC_DUMMY117_CGC_SHIFT))&PCC_DUMMY117_CGC_MASK)
#define PCC_DUMMY117_PR_MASK                     0x80000000u
#define PCC_DUMMY117_PR_SHIFT                    31
#define PCC_DUMMY117_PR_WIDTH                    1
#define PCC_DUMMY117_PR(x)                       (((uint32)(((uint32)(x))<<PCC_DUMMY117_PR_SHIFT))&PCC_DUMMY117_PR_MASK)

/*!
 * @}
 */ /* end of group PCC_Register_Masks */


/* PCC - Peripheral instance base addresses */
/** Peripheral PCC base address */
#define PCC_BASE                                 (0x40065000u)
/** Peripheral PCC base pointer */
#define PCC                                      ((PCC_Type *)PCC_BASE)
#define PCC_BASE_PTR                             (PCC)
/** Array initializer of PCC peripheral base addresses */
#define PCC_BASE_ADDRS                           { PCC_BASE }
/** Array initializer of PCC peripheral base pointers */
#define PCC_BASE_PTRS                            { PCC }

/* ----------------------------------------------------------------------------
   -- PCC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCC_Register_Accessor_Macros PCC - Register accessor macros
 * @{
 */


/* PCC - Register instance definitions */
/* PCC */
#define PCC_DMA0                                 PCC_DMA0_REG(PCC)
#define PCC_MPU                                  PCC_MPU_REG(PCC)
#define PCC_FLASH                                PCC_FLASH_REG(PCC)
#define PCC_DMAMUX0                              PCC_DMAMUX0_REG(PCC)
#define PCC_FLEXCAN0                             PCC_FLEXCAN0_REG(PCC)
#define PCC_FLEXCAN1                             PCC_FLEXCAN1_REG(PCC)
#define PCC_FLEXTMR3                             PCC_FLEXTMR3_REG(PCC)
#define PCC_ADC1                                 PCC_ADC1_REG(PCC)
#define PCC_FLEXCAN2                             PCC_FLEXCAN2_REG(PCC)
#define PCC_LPSPI0                               PCC_LPSPI0_REG(PCC)
#define PCC_LPSPI1                               PCC_LPSPI1_REG(PCC)
#define PCC_LPSPI2                               PCC_LPSPI2_REG(PCC)
#define PCC_PDB1                                 PCC_PDB1_REG(PCC)
#define PCC_CRC                                  PCC_CRC_REG(PCC)
#define PCC_DUMMY51                              PCC_DUMMY51_REG(PCC)
#define PCC_PDB0                                 PCC_PDB0_REG(PCC)
#define PCC_LPIT0                                PCC_LPIT0_REG(PCC)
#define PCC_FLEXTMR0                             PCC_FLEXTMR0_REG(PCC)
#define PCC_FLEXTMR1                             PCC_FLEXTMR1_REG(PCC)
#define PCC_FLEXTMR2                             PCC_FLEXTMR2_REG(PCC)
#define PCC_ADC0                                 PCC_ADC0_REG(PCC)
#define PCC_DUMMY60                              PCC_DUMMY60_REG(PCC)
#define PCC_RTC                                  PCC_RTC_REG(PCC)
#define PCC_DUMMY63                              PCC_DUMMY63_REG(PCC)
#define PCC_LPTMR0                               PCC_LPTMR0_REG(PCC)
#define PCC_DUMMY69                              PCC_DUMMY69_REG(PCC)
#define PCC_ATX                                  PCC_ATX_REG(PCC)
#define PCC_SIM                                  PCC_SIM_REG(PCC)
#define PCC_PORTA                                PCC_PORTA_REG(PCC)
#define PCC_PORTB                                PCC_PORTB_REG(PCC)
#define PCC_PORTC                                PCC_PORTC_REG(PCC)
#define PCC_PORTD                                PCC_PORTD_REG(PCC)
#define PCC_PORTE                                PCC_PORTE_REG(PCC)
#define PCC_WDOG                                 PCC_WDOG_REG(PCC)
#define PCC_FLEXIO                               PCC_FLEXIO_REG(PCC)
#define PCC_DUMMY94                              PCC_DUMMY94_REG(PCC)
#define PCC_RTC_OSC                              PCC_RTC_OSC_REG(PCC)
#define PCC_EWM                                  PCC_EWM_REG(PCC)
#define PCC_TRGMUX                               PCC_TRGMUX_REG(PCC)
#define PCC_SCG                                  PCC_SCG_REG(PCC)
#define PCC_LPI2C0                               PCC_LPI2C0_REG(PCC)
#define PCC_LPI2C1                               PCC_LPI2C1_REG(PCC)
#define PCC_LPUART0                              PCC_LPUART0_REG(PCC)
#define PCC_LPUART1                              PCC_LPUART1_REG(PCC)
#define PCC_LPUART2                              PCC_LPUART2_REG(PCC)
#define PCC_LPUART3                              PCC_LPUART3_REG(PCC)
#define PCC_CMP0                                 PCC_CMP0_REG(PCC)
#define PCC_DUMMY116                             PCC_DUMMY116_REG(PCC)
#define PCC_DUMMY117                             PCC_DUMMY117_REG(PCC)

/*!
 * @}
 */ /* end of group PCC_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group PCC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PDB Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PDB_Peripheral_Access_Layer PDB Peripheral Access Layer
 * @{
 */

/** PDB - Register Layout Typedef */
typedef struct {
  __IO uint32 SC;                                  /**< Status and Control register, offset: 0x0 */
  __IO uint32 MOD;                                 /**< Modulus register, offset: 0x4 */
  __I  uint32 CNT;                                 /**< Counter register, offset: 0x8 */
  __IO uint32 IDLY;                                /**< Interrupt Delay register, offset: 0xC */
  __IO uint32 CH0C1;                               /**< Channel n Control register 1, offset: 0x10 */
  __IO uint32 CH0S;                                /**< Channel n Status register, offset: 0x14 */
  __IO uint32 CH0DLY0;                             /**< Channel n Delay 0 register, offset: 0x18 */
  __IO uint32 CH0DLY1;                             /**< Channel n Delay 1 register, offset: 0x1C */
  __IO uint32 CH0DLY2;                             /**< Channel n Delay 2 register, offset: 0x20 */
  __IO uint32 CH0DLY3;                             /**< Channel n Delay 3 register, offset: 0x24 */
  __IO uint32 CH0DLY4;                             /**< Channel n Delay 4 register, offset: 0x28 */
  __IO uint32 CH0DLY5;                             /**< Channel n Delay 5 register, offset: 0x2C */
  __IO uint32 CH0DLY6;                             /**< Channel n Delay 6 register, offset: 0x30 */
  __IO uint32 CH0DLY7;                             /**< Channel n Delay 7 register, offset: 0x34 */
  __IO uint32 CH1C1;                               /**< Channel n Control register 1, offset: 0x38 */
  __IO uint32 CH1S;                                /**< Channel n Status register, offset: 0x3C */
  __IO uint32 CH1DLY0;                             /**< Channel n Delay 0 register, offset: 0x40 */
  __IO uint32 CH1DLY1;                             /**< Channel n Delay 1 register, offset: 0x44 */
  __IO uint32 CH1DLY2;                             /**< Channel n Delay 2 register, offset: 0x48 */
  __IO uint32 CH1DLY3;                             /**< Channel n Delay 3 register, offset: 0x4C */
  __IO uint32 CH1DLY4;                             /**< Channel n Delay 4 register, offset: 0x50 */
  __IO uint32 CH1DLY5;                             /**< Channel n Delay 5 register, offset: 0x54 */
  __IO uint32 CH1DLY6;                             /**< Channel n Delay 6 register, offset: 0x58 */
  __IO uint32 CH1DLY7;                             /**< Channel n Delay 7 register, offset: 0x5C */
       uint8 RESERVED_0[304];
  __IO uint32 POEN;                                /**< Pulse-Out n Enable register, offset: 0x190 */
  __IO uint32 PODLY[1];                            /**< Pulse-Out n Delay register, array offset: 0x194, array step: 0x4 */
} PDB_Type, *PDB_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PDB - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PDB_Register_Accessor_Macros PDB - Register accessor macros
 * @{
 */


/* PDB - Register accessors */
#define PDB_SC_REG(base)                         ((base)->SC)
#define PDB_MOD_REG(base)                        ((base)->MOD)
#define PDB_CNT_REG(base)                        ((base)->CNT)
#define PDB_IDLY_REG(base)                       ((base)->IDLY)
#define PDB_CH0C1_REG(base)                      ((base)->CH0C1)
#define PDB_CH0S_REG(base)                       ((base)->CH0S)
#define PDB_CH0DLY0_REG(base)                    ((base)->CH0DLY0)
#define PDB_CH0DLY1_REG(base)                    ((base)->CH0DLY1)
#define PDB_CH0DLY2_REG(base)                    ((base)->CH0DLY2)
#define PDB_CH0DLY3_REG(base)                    ((base)->CH0DLY3)
#define PDB_CH0DLY4_REG(base)                    ((base)->CH0DLY4)
#define PDB_CH0DLY5_REG(base)                    ((base)->CH0DLY5)
#define PDB_CH0DLY6_REG(base)                    ((base)->CH0DLY6)
#define PDB_CH0DLY7_REG(base)                    ((base)->CH0DLY7)
#define PDB_CH1C1_REG(base)                      ((base)->CH1C1)
#define PDB_CH1S_REG(base)                       ((base)->CH1S)
#define PDB_CH1DLY0_REG(base)                    ((base)->CH1DLY0)
#define PDB_CH1DLY1_REG(base)                    ((base)->CH1DLY1)
#define PDB_CH1DLY2_REG(base)                    ((base)->CH1DLY2)
#define PDB_CH1DLY3_REG(base)                    ((base)->CH1DLY3)
#define PDB_CH1DLY4_REG(base)                    ((base)->CH1DLY4)
#define PDB_CH1DLY5_REG(base)                    ((base)->CH1DLY5)
#define PDB_CH1DLY6_REG(base)                    ((base)->CH1DLY6)
#define PDB_CH1DLY7_REG(base)                    ((base)->CH1DLY7)
#define PDB_POEN_REG(base)                       ((base)->POEN)
#define PDB_PODLY_REG(base,index)                ((base)->PODLY[index])
#define PDB_PODLY_COUNT                          1

/*!
 * @}
 */ /* end of group PDB_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PDB Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PDB_Register_Masks PDB Register Masks
 * @{
 */

/* SC Bit Fields */
#define PDB_SC_LDOK_MASK                         0x1u
#define PDB_SC_LDOK_SHIFT                        0
#define PDB_SC_LDOK_WIDTH                        1
#define PDB_SC_LDOK(x)                           (((uint32)(((uint32)(x))<<PDB_SC_LDOK_SHIFT))&PDB_SC_LDOK_MASK)
#define PDB_SC_CONT_MASK                         0x2u
#define PDB_SC_CONT_SHIFT                        1
#define PDB_SC_CONT_WIDTH                        1
#define PDB_SC_CONT(x)                           (((uint32)(((uint32)(x))<<PDB_SC_CONT_SHIFT))&PDB_SC_CONT_MASK)
#define PDB_SC_MULT_MASK                         0xCu
#define PDB_SC_MULT_SHIFT                        2
#define PDB_SC_MULT_WIDTH                        2
#define PDB_SC_MULT(x)                           (((uint32)(((uint32)(x))<<PDB_SC_MULT_SHIFT))&PDB_SC_MULT_MASK)
#define PDB_SC_PDBIE_MASK                        0x20u
#define PDB_SC_PDBIE_SHIFT                       5
#define PDB_SC_PDBIE_WIDTH                       1
#define PDB_SC_PDBIE(x)                          (((uint32)(((uint32)(x))<<PDB_SC_PDBIE_SHIFT))&PDB_SC_PDBIE_MASK)
#define PDB_SC_PDBIF_MASK                        0x40u
#define PDB_SC_PDBIF_SHIFT                       6
#define PDB_SC_PDBIF_WIDTH                       1
#define PDB_SC_PDBIF(x)                          (((uint32)(((uint32)(x))<<PDB_SC_PDBIF_SHIFT))&PDB_SC_PDBIF_MASK)
#define PDB_SC_PDBEN_MASK                        0x80u
#define PDB_SC_PDBEN_SHIFT                       7
#define PDB_SC_PDBEN_WIDTH                       1
#define PDB_SC_PDBEN(x)                          (((uint32)(((uint32)(x))<<PDB_SC_PDBEN_SHIFT))&PDB_SC_PDBEN_MASK)
#define PDB_SC_TRGSEL_MASK                       0xF00u
#define PDB_SC_TRGSEL_SHIFT                      8
#define PDB_SC_TRGSEL_WIDTH                      4
#define PDB_SC_TRGSEL(x)                         (((uint32)(((uint32)(x))<<PDB_SC_TRGSEL_SHIFT))&PDB_SC_TRGSEL_MASK)
#define PDB_SC_PRESCALER_MASK                    0x7000u
#define PDB_SC_PRESCALER_SHIFT                   12
#define PDB_SC_PRESCALER_WIDTH                   3
#define PDB_SC_PRESCALER(x)                      (((uint32)(((uint32)(x))<<PDB_SC_PRESCALER_SHIFT))&PDB_SC_PRESCALER_MASK)
#define PDB_SC_DMAEN_MASK                        0x8000u
#define PDB_SC_DMAEN_SHIFT                       15
#define PDB_SC_DMAEN_WIDTH                       1
#define PDB_SC_DMAEN(x)                          (((uint32)(((uint32)(x))<<PDB_SC_DMAEN_SHIFT))&PDB_SC_DMAEN_MASK)
#define PDB_SC_SWTRIG_MASK                       0x10000u
#define PDB_SC_SWTRIG_SHIFT                      16
#define PDB_SC_SWTRIG_WIDTH                      1
#define PDB_SC_SWTRIG(x)                         (((uint32)(((uint32)(x))<<PDB_SC_SWTRIG_SHIFT))&PDB_SC_SWTRIG_MASK)
#define PDB_SC_PDBEIE_MASK                       0x20000u
#define PDB_SC_PDBEIE_SHIFT                      17
#define PDB_SC_PDBEIE_WIDTH                      1
#define PDB_SC_PDBEIE(x)                         (((uint32)(((uint32)(x))<<PDB_SC_PDBEIE_SHIFT))&PDB_SC_PDBEIE_MASK)
#define PDB_SC_LDMOD_MASK                        0xC0000u
#define PDB_SC_LDMOD_SHIFT                       18
#define PDB_SC_LDMOD_WIDTH                       2
#define PDB_SC_LDMOD(x)                          (((uint32)(((uint32)(x))<<PDB_SC_LDMOD_SHIFT))&PDB_SC_LDMOD_MASK)
/* MOD Bit Fields */
#define PDB_MOD_MOD_MASK                         0xFFFFu
#define PDB_MOD_MOD_SHIFT                        0
#define PDB_MOD_MOD_WIDTH                        16
#define PDB_MOD_MOD(x)                           (((uint32)(((uint32)(x))<<PDB_MOD_MOD_SHIFT))&PDB_MOD_MOD_MASK)
/* CNT Bit Fields */
#define PDB_CNT_CNT_MASK                         0xFFFFu
#define PDB_CNT_CNT_SHIFT                        0
#define PDB_CNT_CNT_WIDTH                        16
#define PDB_CNT_CNT(x)                           (((uint32)(((uint32)(x))<<PDB_CNT_CNT_SHIFT))&PDB_CNT_CNT_MASK)
/* IDLY Bit Fields */
#define PDB_IDLY_IDLY_MASK                       0xFFFFu
#define PDB_IDLY_IDLY_SHIFT                      0
#define PDB_IDLY_IDLY_WIDTH                      16
#define PDB_IDLY_IDLY(x)                         (((uint32)(((uint32)(x))<<PDB_IDLY_IDLY_SHIFT))&PDB_IDLY_IDLY_MASK)
/* CH0C1 Bit Fields */
#define PDB_CH0C1_EN_MASK                        0xFFu
#define PDB_CH0C1_EN_SHIFT                       0
#define PDB_CH0C1_EN_WIDTH                       8
#define PDB_CH0C1_EN(x)                          (((uint32)(((uint32)(x))<<PDB_CH0C1_EN_SHIFT))&PDB_CH0C1_EN_MASK)
#define PDB_CH0C1_TOS_MASK                       0xFF00u
#define PDB_CH0C1_TOS_SHIFT                      8
#define PDB_CH0C1_TOS_WIDTH                      8
#define PDB_CH0C1_TOS(x)                         (((uint32)(((uint32)(x))<<PDB_CH0C1_TOS_SHIFT))&PDB_CH0C1_TOS_MASK)
#define PDB_CH0C1_BB_MASK                        0xFF0000u
#define PDB_CH0C1_BB_SHIFT                       16
#define PDB_CH0C1_BB_WIDTH                       8
#define PDB_CH0C1_BB(x)                          (((uint32)(((uint32)(x))<<PDB_CH0C1_BB_SHIFT))&PDB_CH0C1_BB_MASK)
/* CH0S Bit Fields */
#define PDB_CH0S_ERR_MASK                        0xFFu
#define PDB_CH0S_ERR_SHIFT                       0
#define PDB_CH0S_ERR_WIDTH                       8
#define PDB_CH0S_ERR(x)                          (((uint32)(((uint32)(x))<<PDB_CH0S_ERR_SHIFT))&PDB_CH0S_ERR_MASK)
#define PDB_CH0S_CF_MASK                         0xFF0000u
#define PDB_CH0S_CF_SHIFT                        16
#define PDB_CH0S_CF_WIDTH                        8
#define PDB_CH0S_CF(x)                           (((uint32)(((uint32)(x))<<PDB_CH0S_CF_SHIFT))&PDB_CH0S_CF_MASK)
/* CH0DLY0 Bit Fields */
#define PDB_CH0DLY0_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY0_DLY_SHIFT                    0
#define PDB_CH0DLY0_DLY_WIDTH                    16
#define PDB_CH0DLY0_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY0_DLY_SHIFT))&PDB_CH0DLY0_DLY_MASK)
/* CH0DLY1 Bit Fields */
#define PDB_CH0DLY1_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY1_DLY_SHIFT                    0
#define PDB_CH0DLY1_DLY_WIDTH                    16
#define PDB_CH0DLY1_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY1_DLY_SHIFT))&PDB_CH0DLY1_DLY_MASK)
/* CH0DLY2 Bit Fields */
#define PDB_CH0DLY2_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY2_DLY_SHIFT                    0
#define PDB_CH0DLY2_DLY_WIDTH                    16
#define PDB_CH0DLY2_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY2_DLY_SHIFT))&PDB_CH0DLY2_DLY_MASK)
/* CH0DLY3 Bit Fields */
#define PDB_CH0DLY3_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY3_DLY_SHIFT                    0
#define PDB_CH0DLY3_DLY_WIDTH                    16
#define PDB_CH0DLY3_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY3_DLY_SHIFT))&PDB_CH0DLY3_DLY_MASK)
/* CH0DLY4 Bit Fields */
#define PDB_CH0DLY4_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY4_DLY_SHIFT                    0
#define PDB_CH0DLY4_DLY_WIDTH                    16
#define PDB_CH0DLY4_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY4_DLY_SHIFT))&PDB_CH0DLY4_DLY_MASK)
/* CH0DLY5 Bit Fields */
#define PDB_CH0DLY5_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY5_DLY_SHIFT                    0
#define PDB_CH0DLY5_DLY_WIDTH                    16
#define PDB_CH0DLY5_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY5_DLY_SHIFT))&PDB_CH0DLY5_DLY_MASK)
/* CH0DLY6 Bit Fields */
#define PDB_CH0DLY6_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY6_DLY_SHIFT                    0
#define PDB_CH0DLY6_DLY_WIDTH                    16
#define PDB_CH0DLY6_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY6_DLY_SHIFT))&PDB_CH0DLY6_DLY_MASK)
/* CH0DLY7 Bit Fields */
#define PDB_CH0DLY7_DLY_MASK                     0xFFFFu
#define PDB_CH0DLY7_DLY_SHIFT                    0
#define PDB_CH0DLY7_DLY_WIDTH                    16
#define PDB_CH0DLY7_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH0DLY7_DLY_SHIFT))&PDB_CH0DLY7_DLY_MASK)
/* CH1C1 Bit Fields */
#define PDB_CH1C1_EN_MASK                        0xFFu
#define PDB_CH1C1_EN_SHIFT                       0
#define PDB_CH1C1_EN_WIDTH                       8
#define PDB_CH1C1_EN(x)                          (((uint32)(((uint32)(x))<<PDB_CH1C1_EN_SHIFT))&PDB_CH1C1_EN_MASK)
#define PDB_CH1C1_TOS_MASK                       0xFF00u
#define PDB_CH1C1_TOS_SHIFT                      8
#define PDB_CH1C1_TOS_WIDTH                      8
#define PDB_CH1C1_TOS(x)                         (((uint32)(((uint32)(x))<<PDB_CH1C1_TOS_SHIFT))&PDB_CH1C1_TOS_MASK)
#define PDB_CH1C1_BB_MASK                        0xFF0000u
#define PDB_CH1C1_BB_SHIFT                       16
#define PDB_CH1C1_BB_WIDTH                       8
#define PDB_CH1C1_BB(x)                          (((uint32)(((uint32)(x))<<PDB_CH1C1_BB_SHIFT))&PDB_CH1C1_BB_MASK)
/* CH1S Bit Fields */
#define PDB_CH1S_ERR_MASK                        0xFFu
#define PDB_CH1S_ERR_SHIFT                       0
#define PDB_CH1S_ERR_WIDTH                       8
#define PDB_CH1S_ERR(x)                          (((uint32)(((uint32)(x))<<PDB_CH1S_ERR_SHIFT))&PDB_CH1S_ERR_MASK)
#define PDB_CH1S_CF_MASK                         0xFF0000u
#define PDB_CH1S_CF_SHIFT                        16
#define PDB_CH1S_CF_WIDTH                        8
#define PDB_CH1S_CF(x)                           (((uint32)(((uint32)(x))<<PDB_CH1S_CF_SHIFT))&PDB_CH1S_CF_MASK)
/* CH1DLY0 Bit Fields */
#define PDB_CH1DLY0_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY0_DLY_SHIFT                    0
#define PDB_CH1DLY0_DLY_WIDTH                    16
#define PDB_CH1DLY0_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY0_DLY_SHIFT))&PDB_CH1DLY0_DLY_MASK)
/* CH1DLY1 Bit Fields */
#define PDB_CH1DLY1_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY1_DLY_SHIFT                    0
#define PDB_CH1DLY1_DLY_WIDTH                    16
#define PDB_CH1DLY1_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY1_DLY_SHIFT))&PDB_CH1DLY1_DLY_MASK)
/* CH1DLY2 Bit Fields */
#define PDB_CH1DLY2_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY2_DLY_SHIFT                    0
#define PDB_CH1DLY2_DLY_WIDTH                    16
#define PDB_CH1DLY2_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY2_DLY_SHIFT))&PDB_CH1DLY2_DLY_MASK)
/* CH1DLY3 Bit Fields */
#define PDB_CH1DLY3_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY3_DLY_SHIFT                    0
#define PDB_CH1DLY3_DLY_WIDTH                    16
#define PDB_CH1DLY3_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY3_DLY_SHIFT))&PDB_CH1DLY3_DLY_MASK)
/* CH1DLY4 Bit Fields */
#define PDB_CH1DLY4_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY4_DLY_SHIFT                    0
#define PDB_CH1DLY4_DLY_WIDTH                    16
#define PDB_CH1DLY4_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY4_DLY_SHIFT))&PDB_CH1DLY4_DLY_MASK)
/* CH1DLY5 Bit Fields */
#define PDB_CH1DLY5_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY5_DLY_SHIFT                    0
#define PDB_CH1DLY5_DLY_WIDTH                    16
#define PDB_CH1DLY5_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY5_DLY_SHIFT))&PDB_CH1DLY5_DLY_MASK)
/* CH1DLY6 Bit Fields */
#define PDB_CH1DLY6_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY6_DLY_SHIFT                    0
#define PDB_CH1DLY6_DLY_WIDTH                    16
#define PDB_CH1DLY6_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY6_DLY_SHIFT))&PDB_CH1DLY6_DLY_MASK)
/* CH1DLY7 Bit Fields */
#define PDB_CH1DLY7_DLY_MASK                     0xFFFFu
#define PDB_CH1DLY7_DLY_SHIFT                    0
#define PDB_CH1DLY7_DLY_WIDTH                    16
#define PDB_CH1DLY7_DLY(x)                       (((uint32)(((uint32)(x))<<PDB_CH1DLY7_DLY_SHIFT))&PDB_CH1DLY7_DLY_MASK)
/* POEN Bit Fields */
#define PDB_POEN_POEN_MASK                       0xFFu
#define PDB_POEN_POEN_SHIFT                      0
#define PDB_POEN_POEN_WIDTH                      8
#define PDB_POEN_POEN(x)                         (((uint32)(((uint32)(x))<<PDB_POEN_POEN_SHIFT))&PDB_POEN_POEN_MASK)
/* PODLY Bit Fields */
#define PDB_PODLY_DLY2_MASK                      0xFFFFu
#define PDB_PODLY_DLY2_SHIFT                     0
#define PDB_PODLY_DLY2_WIDTH                     16
#define PDB_PODLY_DLY2(x)                        (((uint32)(((uint32)(x))<<PDB_PODLY_DLY2_SHIFT))&PDB_PODLY_DLY2_MASK)
#define PDB_PODLY_DLY1_MASK                      0xFFFF0000u
#define PDB_PODLY_DLY1_SHIFT                     16
#define PDB_PODLY_DLY1_WIDTH                     16
#define PDB_PODLY_DLY1(x)                        (((uint32)(((uint32)(x))<<PDB_PODLY_DLY1_SHIFT))&PDB_PODLY_DLY1_MASK)

/*!
 * @}
 */ /* end of group PDB_Register_Masks */


/* PDB - Peripheral instance base addresses */
/** Peripheral PDB0 base address */
#define PDB0_BASE                                (0x40036000u)
/** Peripheral PDB0 base pointer */
#define PDB0                                     ((PDB_Type *)PDB0_BASE)
#define PDB0_BASE_PTR                            (PDB0)
/** Peripheral PDB1 base address */
#define PDB1_BASE                                (0x40031000u)
/** Peripheral PDB1 base pointer */
#define PDB1                                     ((PDB_Type *)PDB1_BASE)
#define PDB1_BASE_PTR                            (PDB1)
/** Array initializer of PDB peripheral base addresses */
#define PDB_BASE_ADDRS                           { PDB0_BASE, PDB1_BASE }
/** Array initializer of PDB peripheral base pointers */
#define PDB_BASE_PTRS                            { PDB0, PDB1 }

/* ----------------------------------------------------------------------------
   -- PDB - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PDB_Register_Accessor_Macros PDB - Register accessor macros
 * @{
 */


/* PDB - Register instance definitions */
/* PDB0 */
#define PDB0_SC                                  PDB_SC_REG(PDB0)
#define PDB0_MOD                                 PDB_MOD_REG(PDB0)
#define PDB0_CNT                                 PDB_CNT_REG(PDB0)
#define PDB0_IDLY                                PDB_IDLY_REG(PDB0)
#define PDB0_CH0C1                               PDB_CH0C1_REG(PDB0)
#define PDB0_CH0S                                PDB_CH0S_REG(PDB0)
#define PDB0_CH0DLY0                             PDB_CH0DLY0_REG(PDB0)
#define PDB0_CH0DLY1                             PDB_CH0DLY1_REG(PDB0)
#define PDB0_CH0DLY2                             PDB_CH0DLY2_REG(PDB0)
#define PDB0_CH0DLY3                             PDB_CH0DLY3_REG(PDB0)
#define PDB0_CH0DLY4                             PDB_CH0DLY4_REG(PDB0)
#define PDB0_CH0DLY5                             PDB_CH0DLY5_REG(PDB0)
#define PDB0_CH0DLY6                             PDB_CH0DLY6_REG(PDB0)
#define PDB0_CH0DLY7                             PDB_CH0DLY7_REG(PDB0)
#define PDB0_CH1C1                               PDB_CH1C1_REG(PDB0)
#define PDB0_CH1S                                PDB_CH1S_REG(PDB0)
#define PDB0_CH1DLY0                             PDB_CH1DLY0_REG(PDB0)
#define PDB0_CH1DLY1                             PDB_CH1DLY1_REG(PDB0)
#define PDB0_CH1DLY2                             PDB_CH1DLY2_REG(PDB0)
#define PDB0_CH1DLY3                             PDB_CH1DLY3_REG(PDB0)
#define PDB0_CH1DLY4                             PDB_CH1DLY4_REG(PDB0)
#define PDB0_CH1DLY5                             PDB_CH1DLY5_REG(PDB0)
#define PDB0_CH1DLY6                             PDB_CH1DLY6_REG(PDB0)
#define PDB0_CH1DLY7                             PDB_CH1DLY7_REG(PDB0)
#define PDB0_POEN                                PDB_POEN_REG(PDB0)
#define PDB0_PO0DLY                              PDB_PODLY_REG(PDB0,0)
/* PDB1 */
#define PDB1_SC                                  PDB_SC_REG(PDB1)
#define PDB1_MOD                                 PDB_MOD_REG(PDB1)
#define PDB1_CNT                                 PDB_CNT_REG(PDB1)
#define PDB1_IDLY                                PDB_IDLY_REG(PDB1)
#define PDB1_CH0C1                               PDB_CH0C1_REG(PDB1)
#define PDB1_CH0S                                PDB_CH0S_REG(PDB1)
#define PDB1_CH0DLY0                             PDB_CH0DLY0_REG(PDB1)
#define PDB1_CH0DLY1                             PDB_CH0DLY1_REG(PDB1)
#define PDB1_CH0DLY2                             PDB_CH0DLY2_REG(PDB1)
#define PDB1_CH0DLY3                             PDB_CH0DLY3_REG(PDB1)
#define PDB1_CH0DLY4                             PDB_CH0DLY4_REG(PDB1)
#define PDB1_CH0DLY5                             PDB_CH0DLY5_REG(PDB1)
#define PDB1_CH0DLY6                             PDB_CH0DLY6_REG(PDB1)
#define PDB1_CH0DLY7                             PDB_CH0DLY7_REG(PDB1)
#define PDB1_CH1C1                               PDB_CH1C1_REG(PDB1)
#define PDB1_CH1S                                PDB_CH1S_REG(PDB1)
#define PDB1_CH1DLY0                             PDB_CH1DLY0_REG(PDB1)
#define PDB1_CH1DLY1                             PDB_CH1DLY1_REG(PDB1)
#define PDB1_CH1DLY2                             PDB_CH1DLY2_REG(PDB1)
#define PDB1_CH1DLY3                             PDB_CH1DLY3_REG(PDB1)
#define PDB1_CH1DLY4                             PDB_CH1DLY4_REG(PDB1)
#define PDB1_CH1DLY5                             PDB_CH1DLY5_REG(PDB1)
#define PDB1_CH1DLY6                             PDB_CH1DLY6_REG(PDB1)
#define PDB1_CH1DLY7                             PDB_CH1DLY7_REG(PDB1)
#define PDB1_POEN                                PDB_POEN_REG(PDB1)
#define PDB1_PO0DLY                              PDB_PODLY_REG(PDB1,0)

/* PDB - Register array accessors */
#define PDB0_PODLY(index)                        PDB_PODLY_REG(PDB0,index)
#define PDB1_PODLY(index)                        PDB_PODLY_REG(PDB1,index)

/*!
 * @}
 */ /* end of group PDB_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group PDB_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Peripheral_Access_Layer PMC Peripheral Access Layer
 * @{
 */

/** PMC - Register Layout Typedef */
typedef struct {
  __IO uint8 LVDSC1;                               /**< Low Voltage Detect Status and Control 1 Register, offset: 0x0 */
  __IO uint8 LVDSC2;                               /**< Low Voltage Detect Status and Control 2 Register, offset: 0x1 */
  __IO uint8 REGSC;                                /**< Regulator Status and Control Register, offset: 0x2 */
       uint8 RESERVED_0[1];
  __IO uint8 LPOTRIM;                              /**< Low Power Oscillator Trim Register, offset: 0x4 */
} PMC_Type, *PMC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PMC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Register_Accessor_Macros PMC - Register accessor macros
 * @{
 */


/* PMC - Register accessors */
#define PMC_LVDSC1_REG(base)                     ((base)->LVDSC1)
#define PMC_LVDSC2_REG(base)                     ((base)->LVDSC2)
#define PMC_REGSC_REG(base)                      ((base)->REGSC)
#define PMC_LPOTRIM_REG(base)                    ((base)->LPOTRIM)

/*!
 * @}
 */ /* end of group PMC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Register_Masks PMC Register Masks
 * @{
 */

/* LVDSC1 Bit Fields */
#define PMC_LVDSC1_LVDRE_MASK                    0x10u
#define PMC_LVDSC1_LVDRE_SHIFT                   4
#define PMC_LVDSC1_LVDRE_WIDTH                   1
#define PMC_LVDSC1_LVDRE(x)                      (((uint8)(((uint8)(x))<<PMC_LVDSC1_LVDRE_SHIFT))&PMC_LVDSC1_LVDRE_MASK)
#define PMC_LVDSC1_LVDIE_MASK                    0x20u
#define PMC_LVDSC1_LVDIE_SHIFT                   5
#define PMC_LVDSC1_LVDIE_WIDTH                   1
#define PMC_LVDSC1_LVDIE(x)                      (((uint8)(((uint8)(x))<<PMC_LVDSC1_LVDIE_SHIFT))&PMC_LVDSC1_LVDIE_MASK)
#define PMC_LVDSC1_LVDACK_MASK                   0x40u
#define PMC_LVDSC1_LVDACK_SHIFT                  6
#define PMC_LVDSC1_LVDACK_WIDTH                  1
#define PMC_LVDSC1_LVDACK(x)                     (((uint8)(((uint8)(x))<<PMC_LVDSC1_LVDACK_SHIFT))&PMC_LVDSC1_LVDACK_MASK)
#define PMC_LVDSC1_LVDF_MASK                     0x80u
#define PMC_LVDSC1_LVDF_SHIFT                    7
#define PMC_LVDSC1_LVDF_WIDTH                    1
#define PMC_LVDSC1_LVDF(x)                       (((uint8)(((uint8)(x))<<PMC_LVDSC1_LVDF_SHIFT))&PMC_LVDSC1_LVDF_MASK)
/* LVDSC2 Bit Fields */
#define PMC_LVDSC2_LVWIE_MASK                    0x20u
#define PMC_LVDSC2_LVWIE_SHIFT                   5
#define PMC_LVDSC2_LVWIE_WIDTH                   1
#define PMC_LVDSC2_LVWIE(x)                      (((uint8)(((uint8)(x))<<PMC_LVDSC2_LVWIE_SHIFT))&PMC_LVDSC2_LVWIE_MASK)
#define PMC_LVDSC2_LVDWCK_MASK                   0x40u
#define PMC_LVDSC2_LVDWCK_SHIFT                  6
#define PMC_LVDSC2_LVDWCK_WIDTH                  1
#define PMC_LVDSC2_LVDWCK(x)                     (((uint8)(((uint8)(x))<<PMC_LVDSC2_LVDWCK_SHIFT))&PMC_LVDSC2_LVDWCK_MASK)
#define PMC_LVDSC2_LVWF_MASK                     0x80u
#define PMC_LVDSC2_LVWF_SHIFT                    7
#define PMC_LVDSC2_LVWF_WIDTH                    1
#define PMC_LVDSC2_LVWF(x)                       (((uint8)(((uint8)(x))<<PMC_LVDSC2_LVWF_SHIFT))&PMC_LVDSC2_LVWF_MASK)
/* REGSC Bit Fields */
#define PMC_REGSC_BIASEN_MASK                    0x1u
#define PMC_REGSC_BIASEN_SHIFT                   0
#define PMC_REGSC_BIASEN_WIDTH                   1
#define PMC_REGSC_BIASEN(x)                      (((uint8)(((uint8)(x))<<PMC_REGSC_BIASEN_SHIFT))&PMC_REGSC_BIASEN_MASK)
#define PMC_REGSC_REGFPM_MASK                    0x4u
#define PMC_REGSC_REGFPM_SHIFT                   2
#define PMC_REGSC_REGFPM_WIDTH                   1
#define PMC_REGSC_REGFPM(x)                      (((uint8)(((uint8)(x))<<PMC_REGSC_REGFPM_SHIFT))&PMC_REGSC_REGFPM_MASK)
#define PMC_REGSC_LPOSTAT_MASK                   0x40u
#define PMC_REGSC_LPOSTAT_SHIFT                  6
#define PMC_REGSC_LPOSTAT_WIDTH                  1
#define PMC_REGSC_LPOSTAT(x)                     (((uint8)(((uint8)(x))<<PMC_REGSC_LPOSTAT_SHIFT))&PMC_REGSC_LPOSTAT_MASK)
#define PMC_REGSC_LPODIS_MASK                    0x80u
#define PMC_REGSC_LPODIS_SHIFT                   7
#define PMC_REGSC_LPODIS_WIDTH                   1
#define PMC_REGSC_LPODIS(x)                      (((uint8)(((uint8)(x))<<PMC_REGSC_LPODIS_SHIFT))&PMC_REGSC_LPODIS_MASK)
/* LPOTRIM Bit Fields */
#define PMC_LPOTRIM_LPOTRIM_MASK                 0x1Fu
#define PMC_LPOTRIM_LPOTRIM_SHIFT                0
#define PMC_LPOTRIM_LPOTRIM_WIDTH                5
#define PMC_LPOTRIM_LPOTRIM(x)                   (((uint8)(((uint8)(x))<<PMC_LPOTRIM_LPOTRIM_SHIFT))&PMC_LPOTRIM_LPOTRIM_MASK)

/*!
 * @}
 */ /* end of group PMC_Register_Masks */


/* PMC - Peripheral instance base addresses */
/** Peripheral PMC base address */
#define PMC_BASE                                 (0x4007D000u)
/** Peripheral PMC base pointer */
#define PMC                                      ((PMC_Type *)PMC_BASE)
#define PMC_BASE_PTR                             (PMC)
/** Array initializer of PMC peripheral base addresses */
#define PMC_BASE_ADDRS                           { PMC_BASE }
/** Array initializer of PMC peripheral base pointers */
#define PMC_BASE_PTRS                            { PMC }

/* ----------------------------------------------------------------------------
   -- PMC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMC_Register_Accessor_Macros PMC - Register accessor macros
 * @{
 */


/* PMC - Register instance definitions */
/* PMC */
#define PMC_LVDSC1                               PMC_LVDSC1_REG(PMC)
#define PMC_LVDSC2                               PMC_LVDSC2_REG(PMC)
#define PMC_REGSC                                PMC_REGSC_REG(PMC)
#define PMC_LPOTRIM                              PMC_LPOTRIM_REG(PMC)

/*!
 * @}
 */ /* end of group PMC_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group PMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PORT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PORT_Peripheral_Access_Layer PORT Peripheral Access Layer
 * @{
 */

/** PORT - Register Layout Typedef */
typedef struct {
  __IO uint32 PCR0;                                /**< Pin Control Register n, offset: 0x0 */
  __IO uint32 PCR1;                                /**< Pin Control Register n, offset: 0x4 */
  __IO uint32 PCR2;                                /**< Pin Control Register n, offset: 0x8 */
  __IO uint32 PCR3;                                /**< Pin Control Register n, offset: 0xC */
  __IO uint32 PCR4;                                /**< Pin Control Register n, offset: 0x10 */
  __IO uint32 PCR5;                                /**< Pin Control Register n, offset: 0x14 */
  __IO uint32 PCR6;                                /**< Pin Control Register n, offset: 0x18 */
  __IO uint32 PCR7;                                /**< Pin Control Register n, offset: 0x1C */
  __IO uint32 PCR8;                                /**< Pin Control Register n, offset: 0x20 */
  __IO uint32 PCR9;                                /**< Pin Control Register n, offset: 0x24 */
  __IO uint32 PCR10;                               /**< Pin Control Register n, offset: 0x28 */
  __IO uint32 PCR11;                               /**< Pin Control Register n, offset: 0x2C */
  __IO uint32 PCR12;                               /**< Pin Control Register n, offset: 0x30 */
  __IO uint32 PCR13;                               /**< Pin Control Register n, offset: 0x34 */
  __IO uint32 PCR14;                               /**< Pin Control Register n, offset: 0x38 */
  __IO uint32 PCR15;                               /**< Pin Control Register n, offset: 0x3C */
  __IO uint32 PCR16;                               /**< Pin Control Register n, offset: 0x40 */
  __IO uint32 PCR17;                               /**< Pin Control Register n, offset: 0x44 */
  __IO uint32 PCR18;                               /**< Pin Control Register n, offset: 0x48 */
  __IO uint32 PCR19;                               /**< Pin Control Register n, offset: 0x4C */
  __IO uint32 PCR20;                               /**< Pin Control Register n, offset: 0x50 */
  __IO uint32 PCR21;                               /**< Pin Control Register n, offset: 0x54 */
  __IO uint32 PCR22;                               /**< Pin Control Register n, offset: 0x58 */
  __IO uint32 PCR23;                               /**< Pin Control Register n, offset: 0x5C */
  __IO uint32 PCR24;                               /**< Pin Control Register n, offset: 0x60 */
  __IO uint32 PCR25;                               /**< Pin Control Register n, offset: 0x64 */
  __IO uint32 PCR26;                               /**< Pin Control Register n, offset: 0x68 */
  __IO uint32 PCR27;                               /**< Pin Control Register n, offset: 0x6C */
  __IO uint32 PCR28;                               /**< Pin Control Register n, offset: 0x70 */
  __IO uint32 PCR29;                               /**< Pin Control Register n, offset: 0x74 */
  __IO uint32 PCR30;                               /**< Pin Control Register n, offset: 0x78 */
  __IO uint32 PCR31;                               /**< Pin Control Register n, offset: 0x7C */
  __O  uint32 GPCLR;                               /**< Global Pin Control Low Register, offset: 0x80 */
  __O  uint32 GPCHR;                               /**< Global Pin Control High Register, offset: 0x84 */
       uint8 RESERVED_0[24];
  __IO uint32 ISFR;                                /**< Interrupt Status Flag Register, offset: 0xA0 */
       uint8 RESERVED_1[28];
  __IO uint32 DFER;                                /**< Digital Filter Enable Register, offset: 0xC0 */
  __IO uint32 DFCR;                                /**< Digital Filter Clock Register, offset: 0xC4 */
  __IO uint32 DFWR;                                /**< Digital Filter Width Register, offset: 0xC8 */
} PORT_Type, *PORT_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PORT - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PORT_Register_Accessor_Macros PORT - Register accessor macros
 * @{
 */


/* PORT - Register accessors */
#define PORT_PCR0_REG(base)                      ((base)->PCR0)
#define PORT_PCR1_REG(base)                      ((base)->PCR1)
#define PORT_PCR2_REG(base)                      ((base)->PCR2)
#define PORT_PCR3_REG(base)                      ((base)->PCR3)
#define PORT_PCR4_REG(base)                      ((base)->PCR4)
#define PORT_PCR5_REG(base)                      ((base)->PCR5)
#define PORT_PCR6_REG(base)                      ((base)->PCR6)
#define PORT_PCR7_REG(base)                      ((base)->PCR7)
#define PORT_PCR8_REG(base)                      ((base)->PCR8)
#define PORT_PCR9_REG(base)                      ((base)->PCR9)
#define PORT_PCR10_REG(base)                     ((base)->PCR10)
#define PORT_PCR11_REG(base)                     ((base)->PCR11)
#define PORT_PCR12_REG(base)                     ((base)->PCR12)
#define PORT_PCR13_REG(base)                     ((base)->PCR13)
#define PORT_PCR14_REG(base)                     ((base)->PCR14)
#define PORT_PCR15_REG(base)                     ((base)->PCR15)
#define PORT_PCR16_REG(base)                     ((base)->PCR16)
#define PORT_PCR17_REG(base)                     ((base)->PCR17)
#define PORT_PCR18_REG(base)                     ((base)->PCR18)
#define PORT_PCR19_REG(base)                     ((base)->PCR19)
#define PORT_PCR20_REG(base)                     ((base)->PCR20)
#define PORT_PCR21_REG(base)                     ((base)->PCR21)
#define PORT_PCR22_REG(base)                     ((base)->PCR22)
#define PORT_PCR23_REG(base)                     ((base)->PCR23)
#define PORT_PCR24_REG(base)                     ((base)->PCR24)
#define PORT_PCR25_REG(base)                     ((base)->PCR25)
#define PORT_PCR26_REG(base)                     ((base)->PCR26)
#define PORT_PCR27_REG(base)                     ((base)->PCR27)
#define PORT_PCR28_REG(base)                     ((base)->PCR28)
#define PORT_PCR29_REG(base)                     ((base)->PCR29)
#define PORT_PCR30_REG(base)                     ((base)->PCR30)
#define PORT_PCR31_REG(base)                     ((base)->PCR31)
#define PORT_GPCLR_REG(base)                     ((base)->GPCLR)
#define PORT_GPCHR_REG(base)                     ((base)->GPCHR)
#define PORT_ISFR_REG(base)                      ((base)->ISFR)
#define PORT_DFER_REG(base)                      ((base)->DFER)
#define PORT_DFCR_REG(base)                      ((base)->DFCR)
#define PORT_DFWR_REG(base)                      ((base)->DFWR)

/*!
 * @}
 */ /* end of group PORT_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PORT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PORT_Register_Masks PORT Register Masks
 * @{
 */

/* PCR0 Bit Fields */
#define PORT_PCR0_PS_MASK                        0x1u
#define PORT_PCR0_PS_SHIFT                       0
#define PORT_PCR0_PS_WIDTH                       1
#define PORT_PCR0_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR0_PS_SHIFT))&PORT_PCR0_PS_MASK)
#define PORT_PCR0_PE_MASK                        0x2u
#define PORT_PCR0_PE_SHIFT                       1
#define PORT_PCR0_PE_WIDTH                       1
#define PORT_PCR0_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR0_PE_SHIFT))&PORT_PCR0_PE_MASK)
#define PORT_PCR0_SRE_MASK                       0x4u
#define PORT_PCR0_SRE_SHIFT                      2
#define PORT_PCR0_SRE_WIDTH                      1
#define PORT_PCR0_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR0_SRE_SHIFT))&PORT_PCR0_SRE_MASK)
#define PORT_PCR0_ODE_MASK                       0x20u
#define PORT_PCR0_ODE_SHIFT                      5
#define PORT_PCR0_ODE_WIDTH                      1
#define PORT_PCR0_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR0_ODE_SHIFT))&PORT_PCR0_ODE_MASK)
#define PORT_PCR0_DSE_MASK                       0x40u
#define PORT_PCR0_DSE_SHIFT                      6
#define PORT_PCR0_DSE_WIDTH                      1
#define PORT_PCR0_DSE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR0_DSE_SHIFT))&PORT_PCR0_DSE_MASK)
#define PORT_PCR0_MUX_MASK                       0x700u
#define PORT_PCR0_MUX_SHIFT                      8
#define PORT_PCR0_MUX_WIDTH                      3
#define PORT_PCR0_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR0_MUX_SHIFT))&PORT_PCR0_MUX_MASK)
#define PORT_PCR0_LK_MASK                        0x8000u
#define PORT_PCR0_LK_SHIFT                       15
#define PORT_PCR0_LK_WIDTH                       1
#define PORT_PCR0_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR0_LK_SHIFT))&PORT_PCR0_LK_MASK)
#define PORT_PCR0_IRQC_MASK                      0xF0000u
#define PORT_PCR0_IRQC_SHIFT                     16
#define PORT_PCR0_IRQC_WIDTH                     4
#define PORT_PCR0_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR0_IRQC_SHIFT))&PORT_PCR0_IRQC_MASK)
#define PORT_PCR0_ISF_MASK                       0x1000000u
#define PORT_PCR0_ISF_SHIFT                      24
#define PORT_PCR0_ISF_WIDTH                      1
#define PORT_PCR0_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR0_ISF_SHIFT))&PORT_PCR0_ISF_MASK)
/* PCR1 Bit Fields */
#define PORT_PCR1_PS_MASK                        0x1u
#define PORT_PCR1_PS_SHIFT                       0
#define PORT_PCR1_PS_WIDTH                       1
#define PORT_PCR1_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR1_PS_SHIFT))&PORT_PCR1_PS_MASK)
#define PORT_PCR1_PE_MASK                        0x2u
#define PORT_PCR1_PE_SHIFT                       1
#define PORT_PCR1_PE_WIDTH                       1
#define PORT_PCR1_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR1_PE_SHIFT))&PORT_PCR1_PE_MASK)
#define PORT_PCR1_SRE_MASK                       0x4u
#define PORT_PCR1_SRE_SHIFT                      2
#define PORT_PCR1_SRE_WIDTH                      1
#define PORT_PCR1_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR1_SRE_SHIFT))&PORT_PCR1_SRE_MASK)
#define PORT_PCR1_ODE_MASK                       0x20u
#define PORT_PCR1_ODE_SHIFT                      5
#define PORT_PCR1_ODE_WIDTH                      1
#define PORT_PCR1_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR1_ODE_SHIFT))&PORT_PCR1_ODE_MASK)
#define PORT_PCR1_DSE_MASK                       0x40u
#define PORT_PCR1_DSE_SHIFT                      6
#define PORT_PCR1_DSE_WIDTH                      1
#define PORT_PCR1_DSE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR1_DSE_SHIFT))&PORT_PCR1_DSE_MASK)
#define PORT_PCR1_MUX_MASK                       0x700u
#define PORT_PCR1_MUX_SHIFT                      8
#define PORT_PCR1_MUX_WIDTH                      3
#define PORT_PCR1_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR1_MUX_SHIFT))&PORT_PCR1_MUX_MASK)
#define PORT_PCR1_LK_MASK                        0x8000u
#define PORT_PCR1_LK_SHIFT                       15
#define PORT_PCR1_LK_WIDTH                       1
#define PORT_PCR1_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR1_LK_SHIFT))&PORT_PCR1_LK_MASK)
#define PORT_PCR1_IRQC_MASK                      0xF0000u
#define PORT_PCR1_IRQC_SHIFT                     16
#define PORT_PCR1_IRQC_WIDTH                     4
#define PORT_PCR1_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR1_IRQC_SHIFT))&PORT_PCR1_IRQC_MASK)
#define PORT_PCR1_ISF_MASK                       0x1000000u
#define PORT_PCR1_ISF_SHIFT                      24
#define PORT_PCR1_ISF_WIDTH                      1
#define PORT_PCR1_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR1_ISF_SHIFT))&PORT_PCR1_ISF_MASK)
/* PCR2 Bit Fields */
#define PORT_PCR2_PS_MASK                        0x1u
#define PORT_PCR2_PS_SHIFT                       0
#define PORT_PCR2_PS_WIDTH                       1
#define PORT_PCR2_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR2_PS_SHIFT))&PORT_PCR2_PS_MASK)
#define PORT_PCR2_PE_MASK                        0x2u
#define PORT_PCR2_PE_SHIFT                       1
#define PORT_PCR2_PE_WIDTH                       1
#define PORT_PCR2_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR2_PE_SHIFT))&PORT_PCR2_PE_MASK)
#define PORT_PCR2_SRE_MASK                       0x4u
#define PORT_PCR2_SRE_SHIFT                      2
#define PORT_PCR2_SRE_WIDTH                      1
#define PORT_PCR2_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR2_SRE_SHIFT))&PORT_PCR2_SRE_MASK)
#define PORT_PCR2_ODE_MASK                       0x20u
#define PORT_PCR2_ODE_SHIFT                      5
#define PORT_PCR2_ODE_WIDTH                      1
#define PORT_PCR2_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR2_ODE_SHIFT))&PORT_PCR2_ODE_MASK)
#define PORT_PCR2_MUX_MASK                       0x700u
#define PORT_PCR2_MUX_SHIFT                      8
#define PORT_PCR2_MUX_WIDTH                      3
#define PORT_PCR2_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR2_MUX_SHIFT))&PORT_PCR2_MUX_MASK)
#define PORT_PCR2_LK_MASK                        0x8000u
#define PORT_PCR2_LK_SHIFT                       15
#define PORT_PCR2_LK_WIDTH                       1
#define PORT_PCR2_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR2_LK_SHIFT))&PORT_PCR2_LK_MASK)
#define PORT_PCR2_IRQC_MASK                      0xF0000u
#define PORT_PCR2_IRQC_SHIFT                     16
#define PORT_PCR2_IRQC_WIDTH                     4
#define PORT_PCR2_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR2_IRQC_SHIFT))&PORT_PCR2_IRQC_MASK)
#define PORT_PCR2_ISF_MASK                       0x1000000u
#define PORT_PCR2_ISF_SHIFT                      24
#define PORT_PCR2_ISF_WIDTH                      1
#define PORT_PCR2_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR2_ISF_SHIFT))&PORT_PCR2_ISF_MASK)
/* PCR3 Bit Fields */
#define PORT_PCR3_PS_MASK                        0x1u
#define PORT_PCR3_PS_SHIFT                       0
#define PORT_PCR3_PS_WIDTH                       1
#define PORT_PCR3_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR3_PS_SHIFT))&PORT_PCR3_PS_MASK)
#define PORT_PCR3_PE_MASK                        0x2u
#define PORT_PCR3_PE_SHIFT                       1
#define PORT_PCR3_PE_WIDTH                       1
#define PORT_PCR3_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR3_PE_SHIFT))&PORT_PCR3_PE_MASK)
#define PORT_PCR3_SRE_MASK                       0x4u
#define PORT_PCR3_SRE_SHIFT                      2
#define PORT_PCR3_SRE_WIDTH                      1
#define PORT_PCR3_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR3_SRE_SHIFT))&PORT_PCR3_SRE_MASK)
#define PORT_PCR3_ODE_MASK                       0x20u
#define PORT_PCR3_ODE_SHIFT                      5
#define PORT_PCR3_ODE_WIDTH                      1
#define PORT_PCR3_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR3_ODE_SHIFT))&PORT_PCR3_ODE_MASK)
#define PORT_PCR3_DSE_MASK                       0x40u
#define PORT_PCR3_DSE_SHIFT                      6
#define PORT_PCR3_DSE_WIDTH                      1
#define PORT_PCR3_DSE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR3_DSE_SHIFT))&PORT_PCR3_DSE_MASK)
#define PORT_PCR3_MUX_MASK                       0x700u
#define PORT_PCR3_MUX_SHIFT                      8
#define PORT_PCR3_MUX_WIDTH                      3
#define PORT_PCR3_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR3_MUX_SHIFT))&PORT_PCR3_MUX_MASK)
#define PORT_PCR3_LK_MASK                        0x8000u
#define PORT_PCR3_LK_SHIFT                       15
#define PORT_PCR3_LK_WIDTH                       1
#define PORT_PCR3_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR3_LK_SHIFT))&PORT_PCR3_LK_MASK)
#define PORT_PCR3_IRQC_MASK                      0xF0000u
#define PORT_PCR3_IRQC_SHIFT                     16
#define PORT_PCR3_IRQC_WIDTH                     4
#define PORT_PCR3_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR3_IRQC_SHIFT))&PORT_PCR3_IRQC_MASK)
#define PORT_PCR3_ISF_MASK                       0x1000000u
#define PORT_PCR3_ISF_SHIFT                      24
#define PORT_PCR3_ISF_WIDTH                      1
#define PORT_PCR3_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR3_ISF_SHIFT))&PORT_PCR3_ISF_MASK)
/* PCR4 Bit Fields */
#define PORT_PCR4_PS_MASK                        0x1u
#define PORT_PCR4_PS_SHIFT                       0
#define PORT_PCR4_PS_WIDTH                       1
#define PORT_PCR4_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR4_PS_SHIFT))&PORT_PCR4_PS_MASK)
#define PORT_PCR4_PE_MASK                        0x2u
#define PORT_PCR4_PE_SHIFT                       1
#define PORT_PCR4_PE_WIDTH                       1
#define PORT_PCR4_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR4_PE_SHIFT))&PORT_PCR4_PE_MASK)
#define PORT_PCR4_SRE_MASK                       0x4u
#define PORT_PCR4_SRE_SHIFT                      2
#define PORT_PCR4_SRE_WIDTH                      1
#define PORT_PCR4_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR4_SRE_SHIFT))&PORT_PCR4_SRE_MASK)
#define PORT_PCR4_PFE_MASK                       0x10u
#define PORT_PCR4_PFE_SHIFT                      4
#define PORT_PCR4_PFE_WIDTH                      1
#define PORT_PCR4_PFE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR4_PFE_SHIFT))&PORT_PCR4_PFE_MASK)
#define PORT_PCR4_ODE_MASK                       0x20u
#define PORT_PCR4_ODE_SHIFT                      5
#define PORT_PCR4_ODE_WIDTH                      1
#define PORT_PCR4_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR4_ODE_SHIFT))&PORT_PCR4_ODE_MASK)
#define PORT_PCR4_DSE_MASK                       0x40u
#define PORT_PCR4_DSE_SHIFT                      6
#define PORT_PCR4_DSE_WIDTH                      1
#define PORT_PCR4_DSE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR4_DSE_SHIFT))&PORT_PCR4_DSE_MASK)
#define PORT_PCR4_MUX_MASK                       0x700u
#define PORT_PCR4_MUX_SHIFT                      8
#define PORT_PCR4_MUX_WIDTH                      3
#define PORT_PCR4_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR4_MUX_SHIFT))&PORT_PCR4_MUX_MASK)
#define PORT_PCR4_LK_MASK                        0x8000u
#define PORT_PCR4_LK_SHIFT                       15
#define PORT_PCR4_LK_WIDTH                       1
#define PORT_PCR4_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR4_LK_SHIFT))&PORT_PCR4_LK_MASK)
#define PORT_PCR4_IRQC_MASK                      0xF0000u
#define PORT_PCR4_IRQC_SHIFT                     16
#define PORT_PCR4_IRQC_WIDTH                     4
#define PORT_PCR4_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR4_IRQC_SHIFT))&PORT_PCR4_IRQC_MASK)
#define PORT_PCR4_ISF_MASK                       0x1000000u
#define PORT_PCR4_ISF_SHIFT                      24
#define PORT_PCR4_ISF_WIDTH                      1
#define PORT_PCR4_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR4_ISF_SHIFT))&PORT_PCR4_ISF_MASK)
/* PCR5 Bit Fields */
#define PORT_PCR5_PS_MASK                        0x1u
#define PORT_PCR5_PS_SHIFT                       0
#define PORT_PCR5_PS_WIDTH                       1
#define PORT_PCR5_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR5_PS_SHIFT))&PORT_PCR5_PS_MASK)
#define PORT_PCR5_PE_MASK                        0x2u
#define PORT_PCR5_PE_SHIFT                       1
#define PORT_PCR5_PE_WIDTH                       1
#define PORT_PCR5_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR5_PE_SHIFT))&PORT_PCR5_PE_MASK)
#define PORT_PCR5_SRE_MASK                       0x4u
#define PORT_PCR5_SRE_SHIFT                      2
#define PORT_PCR5_SRE_WIDTH                      1
#define PORT_PCR5_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR5_SRE_SHIFT))&PORT_PCR5_SRE_MASK)
#define PORT_PCR5_ODE_MASK                       0x20u
#define PORT_PCR5_ODE_SHIFT                      5
#define PORT_PCR5_ODE_WIDTH                      1
#define PORT_PCR5_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR5_ODE_SHIFT))&PORT_PCR5_ODE_MASK)
#define PORT_PCR5_DSE_MASK                       0x40u
#define PORT_PCR5_DSE_SHIFT                      6
#define PORT_PCR5_DSE_WIDTH                      1
#define PORT_PCR5_DSE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR5_DSE_SHIFT))&PORT_PCR5_DSE_MASK)
#define PORT_PCR5_MUX_MASK                       0x700u
#define PORT_PCR5_MUX_SHIFT                      8
#define PORT_PCR5_MUX_WIDTH                      3
#define PORT_PCR5_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR5_MUX_SHIFT))&PORT_PCR5_MUX_MASK)
#define PORT_PCR5_LK_MASK                        0x8000u
#define PORT_PCR5_LK_SHIFT                       15
#define PORT_PCR5_LK_WIDTH                       1
#define PORT_PCR5_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR5_LK_SHIFT))&PORT_PCR5_LK_MASK)
#define PORT_PCR5_IRQC_MASK                      0xF0000u
#define PORT_PCR5_IRQC_SHIFT                     16
#define PORT_PCR5_IRQC_WIDTH                     4
#define PORT_PCR5_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR5_IRQC_SHIFT))&PORT_PCR5_IRQC_MASK)
#define PORT_PCR5_ISF_MASK                       0x1000000u
#define PORT_PCR5_ISF_SHIFT                      24
#define PORT_PCR5_ISF_WIDTH                      1
#define PORT_PCR5_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR5_ISF_SHIFT))&PORT_PCR5_ISF_MASK)
/* PCR6 Bit Fields */
#define PORT_PCR6_PS_MASK                        0x1u
#define PORT_PCR6_PS_SHIFT                       0
#define PORT_PCR6_PS_WIDTH                       1
#define PORT_PCR6_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR6_PS_SHIFT))&PORT_PCR6_PS_MASK)
#define PORT_PCR6_PE_MASK                        0x2u
#define PORT_PCR6_PE_SHIFT                       1
#define PORT_PCR6_PE_WIDTH                       1
#define PORT_PCR6_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR6_PE_SHIFT))&PORT_PCR6_PE_MASK)
#define PORT_PCR6_SRE_MASK                       0x4u
#define PORT_PCR6_SRE_SHIFT                      2
#define PORT_PCR6_SRE_WIDTH                      1
#define PORT_PCR6_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR6_SRE_SHIFT))&PORT_PCR6_SRE_MASK)
#define PORT_PCR6_ODE_MASK                       0x20u
#define PORT_PCR6_ODE_SHIFT                      5
#define PORT_PCR6_ODE_WIDTH                      1
#define PORT_PCR6_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR6_ODE_SHIFT))&PORT_PCR6_ODE_MASK)
#define PORT_PCR6_DSE_MASK                       0x40u
#define PORT_PCR6_DSE_SHIFT                      6
#define PORT_PCR6_DSE_WIDTH                      1
#define PORT_PCR6_DSE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR6_DSE_SHIFT))&PORT_PCR6_DSE_MASK)
#define PORT_PCR6_MUX_MASK                       0x700u
#define PORT_PCR6_MUX_SHIFT                      8
#define PORT_PCR6_MUX_WIDTH                      3
#define PORT_PCR6_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR6_MUX_SHIFT))&PORT_PCR6_MUX_MASK)
#define PORT_PCR6_LK_MASK                        0x8000u
#define PORT_PCR6_LK_SHIFT                       15
#define PORT_PCR6_LK_WIDTH                       1
#define PORT_PCR6_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR6_LK_SHIFT))&PORT_PCR6_LK_MASK)
#define PORT_PCR6_IRQC_MASK                      0xF0000u
#define PORT_PCR6_IRQC_SHIFT                     16
#define PORT_PCR6_IRQC_WIDTH                     4
#define PORT_PCR6_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR6_IRQC_SHIFT))&PORT_PCR6_IRQC_MASK)
#define PORT_PCR6_ISF_MASK                       0x1000000u
#define PORT_PCR6_ISF_SHIFT                      24
#define PORT_PCR6_ISF_WIDTH                      1
#define PORT_PCR6_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR6_ISF_SHIFT))&PORT_PCR6_ISF_MASK)
/* PCR7 Bit Fields */
#define PORT_PCR7_PS_MASK                        0x1u
#define PORT_PCR7_PS_SHIFT                       0
#define PORT_PCR7_PS_WIDTH                       1
#define PORT_PCR7_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR7_PS_SHIFT))&PORT_PCR7_PS_MASK)
#define PORT_PCR7_PE_MASK                        0x2u
#define PORT_PCR7_PE_SHIFT                       1
#define PORT_PCR7_PE_WIDTH                       1
#define PORT_PCR7_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR7_PE_SHIFT))&PORT_PCR7_PE_MASK)
#define PORT_PCR7_SRE_MASK                       0x4u
#define PORT_PCR7_SRE_SHIFT                      2
#define PORT_PCR7_SRE_WIDTH                      1
#define PORT_PCR7_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR7_SRE_SHIFT))&PORT_PCR7_SRE_MASK)
#define PORT_PCR7_ODE_MASK                       0x20u
#define PORT_PCR7_ODE_SHIFT                      5
#define PORT_PCR7_ODE_WIDTH                      1
#define PORT_PCR7_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR7_ODE_SHIFT))&PORT_PCR7_ODE_MASK)
#define PORT_PCR7_DSE_MASK                       0x40u
#define PORT_PCR7_DSE_SHIFT                      6
#define PORT_PCR7_DSE_WIDTH                      1
#define PORT_PCR7_DSE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR7_DSE_SHIFT))&PORT_PCR7_DSE_MASK)
#define PORT_PCR7_MUX_MASK                       0x700u
#define PORT_PCR7_MUX_SHIFT                      8
#define PORT_PCR7_MUX_WIDTH                      3
#define PORT_PCR7_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR7_MUX_SHIFT))&PORT_PCR7_MUX_MASK)
#define PORT_PCR7_LK_MASK                        0x8000u
#define PORT_PCR7_LK_SHIFT                       15
#define PORT_PCR7_LK_WIDTH                       1
#define PORT_PCR7_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR7_LK_SHIFT))&PORT_PCR7_LK_MASK)
#define PORT_PCR7_IRQC_MASK                      0xF0000u
#define PORT_PCR7_IRQC_SHIFT                     16
#define PORT_PCR7_IRQC_WIDTH                     4
#define PORT_PCR7_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR7_IRQC_SHIFT))&PORT_PCR7_IRQC_MASK)
#define PORT_PCR7_ISF_MASK                       0x1000000u
#define PORT_PCR7_ISF_SHIFT                      24
#define PORT_PCR7_ISF_WIDTH                      1
#define PORT_PCR7_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR7_ISF_SHIFT))&PORT_PCR7_ISF_MASK)
/* PCR8 Bit Fields */
#define PORT_PCR8_PS_MASK                        0x1u
#define PORT_PCR8_PS_SHIFT                       0
#define PORT_PCR8_PS_WIDTH                       1
#define PORT_PCR8_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR8_PS_SHIFT))&PORT_PCR8_PS_MASK)
#define PORT_PCR8_PE_MASK                        0x2u
#define PORT_PCR8_PE_SHIFT                       1
#define PORT_PCR8_PE_WIDTH                       1
#define PORT_PCR8_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR8_PE_SHIFT))&PORT_PCR8_PE_MASK)
#define PORT_PCR8_SRE_MASK                       0x4u
#define PORT_PCR8_SRE_SHIFT                      2
#define PORT_PCR8_SRE_WIDTH                      1
#define PORT_PCR8_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR8_SRE_SHIFT))&PORT_PCR8_SRE_MASK)
#define PORT_PCR8_ODE_MASK                       0x20u
#define PORT_PCR8_ODE_SHIFT                      5
#define PORT_PCR8_ODE_WIDTH                      1
#define PORT_PCR8_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR8_ODE_SHIFT))&PORT_PCR8_ODE_MASK)
#define PORT_PCR8_MUX_MASK                       0x700u
#define PORT_PCR8_MUX_SHIFT                      8
#define PORT_PCR8_MUX_WIDTH                      3
#define PORT_PCR8_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR8_MUX_SHIFT))&PORT_PCR8_MUX_MASK)
#define PORT_PCR8_LK_MASK                        0x8000u
#define PORT_PCR8_LK_SHIFT                       15
#define PORT_PCR8_LK_WIDTH                       1
#define PORT_PCR8_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR8_LK_SHIFT))&PORT_PCR8_LK_MASK)
#define PORT_PCR8_IRQC_MASK                      0xF0000u
#define PORT_PCR8_IRQC_SHIFT                     16
#define PORT_PCR8_IRQC_WIDTH                     4
#define PORT_PCR8_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR8_IRQC_SHIFT))&PORT_PCR8_IRQC_MASK)
#define PORT_PCR8_ISF_MASK                       0x1000000u
#define PORT_PCR8_ISF_SHIFT                      24
#define PORT_PCR8_ISF_WIDTH                      1
#define PORT_PCR8_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR8_ISF_SHIFT))&PORT_PCR8_ISF_MASK)
/* PCR9 Bit Fields */
#define PORT_PCR9_PS_MASK                        0x1u
#define PORT_PCR9_PS_SHIFT                       0
#define PORT_PCR9_PS_WIDTH                       1
#define PORT_PCR9_PS(x)                          (((uint32)(((uint32)(x))<<PORT_PCR9_PS_SHIFT))&PORT_PCR9_PS_MASK)
#define PORT_PCR9_PE_MASK                        0x2u
#define PORT_PCR9_PE_SHIFT                       1
#define PORT_PCR9_PE_WIDTH                       1
#define PORT_PCR9_PE(x)                          (((uint32)(((uint32)(x))<<PORT_PCR9_PE_SHIFT))&PORT_PCR9_PE_MASK)
#define PORT_PCR9_SRE_MASK                       0x4u
#define PORT_PCR9_SRE_SHIFT                      2
#define PORT_PCR9_SRE_WIDTH                      1
#define PORT_PCR9_SRE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR9_SRE_SHIFT))&PORT_PCR9_SRE_MASK)
#define PORT_PCR9_ODE_MASK                       0x20u
#define PORT_PCR9_ODE_SHIFT                      5
#define PORT_PCR9_ODE_WIDTH                      1
#define PORT_PCR9_ODE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR9_ODE_SHIFT))&PORT_PCR9_ODE_MASK)
#define PORT_PCR9_MUX_MASK                       0x700u
#define PORT_PCR9_MUX_SHIFT                      8
#define PORT_PCR9_MUX_WIDTH                      3
#define PORT_PCR9_MUX(x)                         (((uint32)(((uint32)(x))<<PORT_PCR9_MUX_SHIFT))&PORT_PCR9_MUX_MASK)
#define PORT_PCR9_LK_MASK                        0x8000u
#define PORT_PCR9_LK_SHIFT                       15
#define PORT_PCR9_LK_WIDTH                       1
#define PORT_PCR9_LK(x)                          (((uint32)(((uint32)(x))<<PORT_PCR9_LK_SHIFT))&PORT_PCR9_LK_MASK)
#define PORT_PCR9_IRQC_MASK                      0xF0000u
#define PORT_PCR9_IRQC_SHIFT                     16
#define PORT_PCR9_IRQC_WIDTH                     4
#define PORT_PCR9_IRQC(x)                        (((uint32)(((uint32)(x))<<PORT_PCR9_IRQC_SHIFT))&PORT_PCR9_IRQC_MASK)
#define PORT_PCR9_ISF_MASK                       0x1000000u
#define PORT_PCR9_ISF_SHIFT                      24
#define PORT_PCR9_ISF_WIDTH                      1
#define PORT_PCR9_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_PCR9_ISF_SHIFT))&PORT_PCR9_ISF_MASK)
/* PCR10 Bit Fields */
#define PORT_PCR10_PS_MASK                       0x1u
#define PORT_PCR10_PS_SHIFT                      0
#define PORT_PCR10_PS_WIDTH                      1
#define PORT_PCR10_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR10_PS_SHIFT))&PORT_PCR10_PS_MASK)
#define PORT_PCR10_PE_MASK                       0x2u
#define PORT_PCR10_PE_SHIFT                      1
#define PORT_PCR10_PE_WIDTH                      1
#define PORT_PCR10_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR10_PE_SHIFT))&PORT_PCR10_PE_MASK)
#define PORT_PCR10_SRE_MASK                      0x4u
#define PORT_PCR10_SRE_SHIFT                     2
#define PORT_PCR10_SRE_WIDTH                     1
#define PORT_PCR10_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR10_SRE_SHIFT))&PORT_PCR10_SRE_MASK)
#define PORT_PCR10_ODE_MASK                      0x20u
#define PORT_PCR10_ODE_SHIFT                     5
#define PORT_PCR10_ODE_WIDTH                     1
#define PORT_PCR10_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR10_ODE_SHIFT))&PORT_PCR10_ODE_MASK)
#define PORT_PCR10_MUX_MASK                      0x700u
#define PORT_PCR10_MUX_SHIFT                     8
#define PORT_PCR10_MUX_WIDTH                     3
#define PORT_PCR10_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR10_MUX_SHIFT))&PORT_PCR10_MUX_MASK)
#define PORT_PCR10_LK_MASK                       0x8000u
#define PORT_PCR10_LK_SHIFT                      15
#define PORT_PCR10_LK_WIDTH                      1
#define PORT_PCR10_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR10_LK_SHIFT))&PORT_PCR10_LK_MASK)
#define PORT_PCR10_IRQC_MASK                     0xF0000u
#define PORT_PCR10_IRQC_SHIFT                    16
#define PORT_PCR10_IRQC_WIDTH                    4
#define PORT_PCR10_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR10_IRQC_SHIFT))&PORT_PCR10_IRQC_MASK)
#define PORT_PCR10_ISF_MASK                      0x1000000u
#define PORT_PCR10_ISF_SHIFT                     24
#define PORT_PCR10_ISF_WIDTH                     1
#define PORT_PCR10_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR10_ISF_SHIFT))&PORT_PCR10_ISF_MASK)
/* PCR11 Bit Fields */
#define PORT_PCR11_PS_MASK                       0x1u
#define PORT_PCR11_PS_SHIFT                      0
#define PORT_PCR11_PS_WIDTH                      1
#define PORT_PCR11_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR11_PS_SHIFT))&PORT_PCR11_PS_MASK)
#define PORT_PCR11_PE_MASK                       0x2u
#define PORT_PCR11_PE_SHIFT                      1
#define PORT_PCR11_PE_WIDTH                      1
#define PORT_PCR11_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR11_PE_SHIFT))&PORT_PCR11_PE_MASK)
#define PORT_PCR11_SRE_MASK                      0x4u
#define PORT_PCR11_SRE_SHIFT                     2
#define PORT_PCR11_SRE_WIDTH                     1
#define PORT_PCR11_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR11_SRE_SHIFT))&PORT_PCR11_SRE_MASK)
#define PORT_PCR11_ODE_MASK                      0x20u
#define PORT_PCR11_ODE_SHIFT                     5
#define PORT_PCR11_ODE_WIDTH                     1
#define PORT_PCR11_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR11_ODE_SHIFT))&PORT_PCR11_ODE_MASK)
#define PORT_PCR11_MUX_MASK                      0x700u
#define PORT_PCR11_MUX_SHIFT                     8
#define PORT_PCR11_MUX_WIDTH                     3
#define PORT_PCR11_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR11_MUX_SHIFT))&PORT_PCR11_MUX_MASK)
#define PORT_PCR11_LK_MASK                       0x8000u
#define PORT_PCR11_LK_SHIFT                      15
#define PORT_PCR11_LK_WIDTH                      1
#define PORT_PCR11_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR11_LK_SHIFT))&PORT_PCR11_LK_MASK)
#define PORT_PCR11_IRQC_MASK                     0xF0000u
#define PORT_PCR11_IRQC_SHIFT                    16
#define PORT_PCR11_IRQC_WIDTH                    4
#define PORT_PCR11_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR11_IRQC_SHIFT))&PORT_PCR11_IRQC_MASK)
#define PORT_PCR11_ISF_MASK                      0x1000000u
#define PORT_PCR11_ISF_SHIFT                     24
#define PORT_PCR11_ISF_WIDTH                     1
#define PORT_PCR11_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR11_ISF_SHIFT))&PORT_PCR11_ISF_MASK)
/* PCR12 Bit Fields */
#define PORT_PCR12_PS_MASK                       0x1u
#define PORT_PCR12_PS_SHIFT                      0
#define PORT_PCR12_PS_WIDTH                      1
#define PORT_PCR12_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR12_PS_SHIFT))&PORT_PCR12_PS_MASK)
#define PORT_PCR12_PE_MASK                       0x2u
#define PORT_PCR12_PE_SHIFT                      1
#define PORT_PCR12_PE_WIDTH                      1
#define PORT_PCR12_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR12_PE_SHIFT))&PORT_PCR12_PE_MASK)
#define PORT_PCR12_SRE_MASK                      0x4u
#define PORT_PCR12_SRE_SHIFT                     2
#define PORT_PCR12_SRE_WIDTH                     1
#define PORT_PCR12_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR12_SRE_SHIFT))&PORT_PCR12_SRE_MASK)
#define PORT_PCR12_ODE_MASK                      0x20u
#define PORT_PCR12_ODE_SHIFT                     5
#define PORT_PCR12_ODE_WIDTH                     1
#define PORT_PCR12_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR12_ODE_SHIFT))&PORT_PCR12_ODE_MASK)
#define PORT_PCR12_MUX_MASK                      0x700u
#define PORT_PCR12_MUX_SHIFT                     8
#define PORT_PCR12_MUX_WIDTH                     3
#define PORT_PCR12_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR12_MUX_SHIFT))&PORT_PCR12_MUX_MASK)
#define PORT_PCR12_LK_MASK                       0x8000u
#define PORT_PCR12_LK_SHIFT                      15
#define PORT_PCR12_LK_WIDTH                      1
#define PORT_PCR12_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR12_LK_SHIFT))&PORT_PCR12_LK_MASK)
#define PORT_PCR12_IRQC_MASK                     0xF0000u
#define PORT_PCR12_IRQC_SHIFT                    16
#define PORT_PCR12_IRQC_WIDTH                    4
#define PORT_PCR12_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR12_IRQC_SHIFT))&PORT_PCR12_IRQC_MASK)
#define PORT_PCR12_ISF_MASK                      0x1000000u
#define PORT_PCR12_ISF_SHIFT                     24
#define PORT_PCR12_ISF_WIDTH                     1
#define PORT_PCR12_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR12_ISF_SHIFT))&PORT_PCR12_ISF_MASK)
/* PCR13 Bit Fields */
#define PORT_PCR13_PS_MASK                       0x1u
#define PORT_PCR13_PS_SHIFT                      0
#define PORT_PCR13_PS_WIDTH                      1
#define PORT_PCR13_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR13_PS_SHIFT))&PORT_PCR13_PS_MASK)
#define PORT_PCR13_PE_MASK                       0x2u
#define PORT_PCR13_PE_SHIFT                      1
#define PORT_PCR13_PE_WIDTH                      1
#define PORT_PCR13_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR13_PE_SHIFT))&PORT_PCR13_PE_MASK)
#define PORT_PCR13_SRE_MASK                      0x4u
#define PORT_PCR13_SRE_SHIFT                     2
#define PORT_PCR13_SRE_WIDTH                     1
#define PORT_PCR13_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR13_SRE_SHIFT))&PORT_PCR13_SRE_MASK)
#define PORT_PCR13_ODE_MASK                      0x20u
#define PORT_PCR13_ODE_SHIFT                     5
#define PORT_PCR13_ODE_WIDTH                     1
#define PORT_PCR13_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR13_ODE_SHIFT))&PORT_PCR13_ODE_MASK)
#define PORT_PCR13_MUX_MASK                      0x700u
#define PORT_PCR13_MUX_SHIFT                     8
#define PORT_PCR13_MUX_WIDTH                     3
#define PORT_PCR13_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR13_MUX_SHIFT))&PORT_PCR13_MUX_MASK)
#define PORT_PCR13_LK_MASK                       0x8000u
#define PORT_PCR13_LK_SHIFT                      15
#define PORT_PCR13_LK_WIDTH                      1
#define PORT_PCR13_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR13_LK_SHIFT))&PORT_PCR13_LK_MASK)
#define PORT_PCR13_IRQC_MASK                     0xF0000u
#define PORT_PCR13_IRQC_SHIFT                    16
#define PORT_PCR13_IRQC_WIDTH                    4
#define PORT_PCR13_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR13_IRQC_SHIFT))&PORT_PCR13_IRQC_MASK)
#define PORT_PCR13_ISF_MASK                      0x1000000u
#define PORT_PCR13_ISF_SHIFT                     24
#define PORT_PCR13_ISF_WIDTH                     1
#define PORT_PCR13_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR13_ISF_SHIFT))&PORT_PCR13_ISF_MASK)
/* PCR14 Bit Fields */
#define PORT_PCR14_PS_MASK                       0x1u
#define PORT_PCR14_PS_SHIFT                      0
#define PORT_PCR14_PS_WIDTH                      1
#define PORT_PCR14_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR14_PS_SHIFT))&PORT_PCR14_PS_MASK)
#define PORT_PCR14_PE_MASK                       0x2u
#define PORT_PCR14_PE_SHIFT                      1
#define PORT_PCR14_PE_WIDTH                      1
#define PORT_PCR14_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR14_PE_SHIFT))&PORT_PCR14_PE_MASK)
#define PORT_PCR14_SRE_MASK                      0x4u
#define PORT_PCR14_SRE_SHIFT                     2
#define PORT_PCR14_SRE_WIDTH                     1
#define PORT_PCR14_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR14_SRE_SHIFT))&PORT_PCR14_SRE_MASK)
#define PORT_PCR14_ODE_MASK                      0x20u
#define PORT_PCR14_ODE_SHIFT                     5
#define PORT_PCR14_ODE_WIDTH                     1
#define PORT_PCR14_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR14_ODE_SHIFT))&PORT_PCR14_ODE_MASK)
#define PORT_PCR14_MUX_MASK                      0x700u
#define PORT_PCR14_MUX_SHIFT                     8
#define PORT_PCR14_MUX_WIDTH                     3
#define PORT_PCR14_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR14_MUX_SHIFT))&PORT_PCR14_MUX_MASK)
#define PORT_PCR14_LK_MASK                       0x8000u
#define PORT_PCR14_LK_SHIFT                      15
#define PORT_PCR14_LK_WIDTH                      1
#define PORT_PCR14_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR14_LK_SHIFT))&PORT_PCR14_LK_MASK)
#define PORT_PCR14_IRQC_MASK                     0xF0000u
#define PORT_PCR14_IRQC_SHIFT                    16
#define PORT_PCR14_IRQC_WIDTH                    4
#define PORT_PCR14_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR14_IRQC_SHIFT))&PORT_PCR14_IRQC_MASK)
#define PORT_PCR14_ISF_MASK                      0x1000000u
#define PORT_PCR14_ISF_SHIFT                     24
#define PORT_PCR14_ISF_WIDTH                     1
#define PORT_PCR14_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR14_ISF_SHIFT))&PORT_PCR14_ISF_MASK)
/* PCR15 Bit Fields */
#define PORT_PCR15_PS_MASK                       0x1u
#define PORT_PCR15_PS_SHIFT                      0
#define PORT_PCR15_PS_WIDTH                      1
#define PORT_PCR15_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR15_PS_SHIFT))&PORT_PCR15_PS_MASK)
#define PORT_PCR15_PE_MASK                       0x2u
#define PORT_PCR15_PE_SHIFT                      1
#define PORT_PCR15_PE_WIDTH                      1
#define PORT_PCR15_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR15_PE_SHIFT))&PORT_PCR15_PE_MASK)
#define PORT_PCR15_SRE_MASK                      0x4u
#define PORT_PCR15_SRE_SHIFT                     2
#define PORT_PCR15_SRE_WIDTH                     1
#define PORT_PCR15_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR15_SRE_SHIFT))&PORT_PCR15_SRE_MASK)
#define PORT_PCR15_ODE_MASK                      0x20u
#define PORT_PCR15_ODE_SHIFT                     5
#define PORT_PCR15_ODE_WIDTH                     1
#define PORT_PCR15_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR15_ODE_SHIFT))&PORT_PCR15_ODE_MASK)
#define PORT_PCR15_MUX_MASK                      0x700u
#define PORT_PCR15_MUX_SHIFT                     8
#define PORT_PCR15_MUX_WIDTH                     3
#define PORT_PCR15_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR15_MUX_SHIFT))&PORT_PCR15_MUX_MASK)
#define PORT_PCR15_LK_MASK                       0x8000u
#define PORT_PCR15_LK_SHIFT                      15
#define PORT_PCR15_LK_WIDTH                      1
#define PORT_PCR15_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR15_LK_SHIFT))&PORT_PCR15_LK_MASK)
#define PORT_PCR15_IRQC_MASK                     0xF0000u
#define PORT_PCR15_IRQC_SHIFT                    16
#define PORT_PCR15_IRQC_WIDTH                    4
#define PORT_PCR15_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR15_IRQC_SHIFT))&PORT_PCR15_IRQC_MASK)
#define PORT_PCR15_ISF_MASK                      0x1000000u
#define PORT_PCR15_ISF_SHIFT                     24
#define PORT_PCR15_ISF_WIDTH                     1
#define PORT_PCR15_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR15_ISF_SHIFT))&PORT_PCR15_ISF_MASK)
/* PCR16 Bit Fields */
#define PORT_PCR16_PS_MASK                       0x1u
#define PORT_PCR16_PS_SHIFT                      0
#define PORT_PCR16_PS_WIDTH                      1
#define PORT_PCR16_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR16_PS_SHIFT))&PORT_PCR16_PS_MASK)
#define PORT_PCR16_PE_MASK                       0x2u
#define PORT_PCR16_PE_SHIFT                      1
#define PORT_PCR16_PE_WIDTH                      1
#define PORT_PCR16_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR16_PE_SHIFT))&PORT_PCR16_PE_MASK)
#define PORT_PCR16_SRE_MASK                      0x4u
#define PORT_PCR16_SRE_SHIFT                     2
#define PORT_PCR16_SRE_WIDTH                     1
#define PORT_PCR16_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR16_SRE_SHIFT))&PORT_PCR16_SRE_MASK)
#define PORT_PCR16_ODE_MASK                      0x20u
#define PORT_PCR16_ODE_SHIFT                     5
#define PORT_PCR16_ODE_WIDTH                     1
#define PORT_PCR16_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR16_ODE_SHIFT))&PORT_PCR16_ODE_MASK)
#define PORT_PCR16_MUX_MASK                      0x700u
#define PORT_PCR16_MUX_SHIFT                     8
#define PORT_PCR16_MUX_WIDTH                     3
#define PORT_PCR16_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR16_MUX_SHIFT))&PORT_PCR16_MUX_MASK)
#define PORT_PCR16_LK_MASK                       0x8000u
#define PORT_PCR16_LK_SHIFT                      15
#define PORT_PCR16_LK_WIDTH                      1
#define PORT_PCR16_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR16_LK_SHIFT))&PORT_PCR16_LK_MASK)
#define PORT_PCR16_IRQC_MASK                     0xF0000u
#define PORT_PCR16_IRQC_SHIFT                    16
#define PORT_PCR16_IRQC_WIDTH                    4
#define PORT_PCR16_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR16_IRQC_SHIFT))&PORT_PCR16_IRQC_MASK)
#define PORT_PCR16_ISF_MASK                      0x1000000u
#define PORT_PCR16_ISF_SHIFT                     24
#define PORT_PCR16_ISF_WIDTH                     1
#define PORT_PCR16_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR16_ISF_SHIFT))&PORT_PCR16_ISF_MASK)
/* PCR17 Bit Fields */
#define PORT_PCR17_PS_MASK                       0x1u
#define PORT_PCR17_PS_SHIFT                      0
#define PORT_PCR17_PS_WIDTH                      1
#define PORT_PCR17_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR17_PS_SHIFT))&PORT_PCR17_PS_MASK)
#define PORT_PCR17_PE_MASK                       0x2u
#define PORT_PCR17_PE_SHIFT                      1
#define PORT_PCR17_PE_WIDTH                      1
#define PORT_PCR17_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR17_PE_SHIFT))&PORT_PCR17_PE_MASK)
#define PORT_PCR17_SRE_MASK                      0x4u
#define PORT_PCR17_SRE_SHIFT                     2
#define PORT_PCR17_SRE_WIDTH                     1
#define PORT_PCR17_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR17_SRE_SHIFT))&PORT_PCR17_SRE_MASK)
#define PORT_PCR17_ODE_MASK                      0x20u
#define PORT_PCR17_ODE_SHIFT                     5
#define PORT_PCR17_ODE_WIDTH                     1
#define PORT_PCR17_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR17_ODE_SHIFT))&PORT_PCR17_ODE_MASK)
#define PORT_PCR17_MUX_MASK                      0x700u
#define PORT_PCR17_MUX_SHIFT                     8
#define PORT_PCR17_MUX_WIDTH                     3
#define PORT_PCR17_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR17_MUX_SHIFT))&PORT_PCR17_MUX_MASK)
#define PORT_PCR17_LK_MASK                       0x8000u
#define PORT_PCR17_LK_SHIFT                      15
#define PORT_PCR17_LK_WIDTH                      1
#define PORT_PCR17_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR17_LK_SHIFT))&PORT_PCR17_LK_MASK)
#define PORT_PCR17_IRQC_MASK                     0xF0000u
#define PORT_PCR17_IRQC_SHIFT                    16
#define PORT_PCR17_IRQC_WIDTH                    4
#define PORT_PCR17_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR17_IRQC_SHIFT))&PORT_PCR17_IRQC_MASK)
#define PORT_PCR17_ISF_MASK                      0x1000000u
#define PORT_PCR17_ISF_SHIFT                     24
#define PORT_PCR17_ISF_WIDTH                     1
#define PORT_PCR17_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR17_ISF_SHIFT))&PORT_PCR17_ISF_MASK)
/* PCR18 Bit Fields */
#define PORT_PCR18_PS_MASK                       0x1u
#define PORT_PCR18_PS_SHIFT                      0
#define PORT_PCR18_PS_WIDTH                      1
#define PORT_PCR18_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR18_PS_SHIFT))&PORT_PCR18_PS_MASK)
#define PORT_PCR18_PE_MASK                       0x2u
#define PORT_PCR18_PE_SHIFT                      1
#define PORT_PCR18_PE_WIDTH                      1
#define PORT_PCR18_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR18_PE_SHIFT))&PORT_PCR18_PE_MASK)
#define PORT_PCR18_SRE_MASK                      0x4u
#define PORT_PCR18_SRE_SHIFT                     2
#define PORT_PCR18_SRE_WIDTH                     1
#define PORT_PCR18_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR18_SRE_SHIFT))&PORT_PCR18_SRE_MASK)
#define PORT_PCR18_ODE_MASK                      0x20u
#define PORT_PCR18_ODE_SHIFT                     5
#define PORT_PCR18_ODE_WIDTH                     1
#define PORT_PCR18_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR18_ODE_SHIFT))&PORT_PCR18_ODE_MASK)
#define PORT_PCR18_MUX_MASK                      0x700u
#define PORT_PCR18_MUX_SHIFT                     8
#define PORT_PCR18_MUX_WIDTH                     3
#define PORT_PCR18_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR18_MUX_SHIFT))&PORT_PCR18_MUX_MASK)
#define PORT_PCR18_LK_MASK                       0x8000u
#define PORT_PCR18_LK_SHIFT                      15
#define PORT_PCR18_LK_WIDTH                      1
#define PORT_PCR18_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR18_LK_SHIFT))&PORT_PCR18_LK_MASK)
#define PORT_PCR18_IRQC_MASK                     0xF0000u
#define PORT_PCR18_IRQC_SHIFT                    16
#define PORT_PCR18_IRQC_WIDTH                    4
#define PORT_PCR18_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR18_IRQC_SHIFT))&PORT_PCR18_IRQC_MASK)
#define PORT_PCR18_ISF_MASK                      0x1000000u
#define PORT_PCR18_ISF_SHIFT                     24
#define PORT_PCR18_ISF_WIDTH                     1
#define PORT_PCR18_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR18_ISF_SHIFT))&PORT_PCR18_ISF_MASK)
/* PCR19 Bit Fields */
#define PORT_PCR19_PS_MASK                       0x1u
#define PORT_PCR19_PS_SHIFT                      0
#define PORT_PCR19_PS_WIDTH                      1
#define PORT_PCR19_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR19_PS_SHIFT))&PORT_PCR19_PS_MASK)
#define PORT_PCR19_PE_MASK                       0x2u
#define PORT_PCR19_PE_SHIFT                      1
#define PORT_PCR19_PE_WIDTH                      1
#define PORT_PCR19_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR19_PE_SHIFT))&PORT_PCR19_PE_MASK)
#define PORT_PCR19_SRE_MASK                      0x4u
#define PORT_PCR19_SRE_SHIFT                     2
#define PORT_PCR19_SRE_WIDTH                     1
#define PORT_PCR19_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR19_SRE_SHIFT))&PORT_PCR19_SRE_MASK)
#define PORT_PCR19_ODE_MASK                      0x20u
#define PORT_PCR19_ODE_SHIFT                     5
#define PORT_PCR19_ODE_WIDTH                     1
#define PORT_PCR19_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR19_ODE_SHIFT))&PORT_PCR19_ODE_MASK)
#define PORT_PCR19_MUX_MASK                      0x700u
#define PORT_PCR19_MUX_SHIFT                     8
#define PORT_PCR19_MUX_WIDTH                     3
#define PORT_PCR19_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR19_MUX_SHIFT))&PORT_PCR19_MUX_MASK)
#define PORT_PCR19_LK_MASK                       0x8000u
#define PORT_PCR19_LK_SHIFT                      15
#define PORT_PCR19_LK_WIDTH                      1
#define PORT_PCR19_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR19_LK_SHIFT))&PORT_PCR19_LK_MASK)
#define PORT_PCR19_IRQC_MASK                     0xF0000u
#define PORT_PCR19_IRQC_SHIFT                    16
#define PORT_PCR19_IRQC_WIDTH                    4
#define PORT_PCR19_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR19_IRQC_SHIFT))&PORT_PCR19_IRQC_MASK)
#define PORT_PCR19_ISF_MASK                      0x1000000u
#define PORT_PCR19_ISF_SHIFT                     24
#define PORT_PCR19_ISF_WIDTH                     1
#define PORT_PCR19_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR19_ISF_SHIFT))&PORT_PCR19_ISF_MASK)
/* PCR20 Bit Fields */
#define PORT_PCR20_PS_MASK                       0x1u
#define PORT_PCR20_PS_SHIFT                      0
#define PORT_PCR20_PS_WIDTH                      1
#define PORT_PCR20_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR20_PS_SHIFT))&PORT_PCR20_PS_MASK)
#define PORT_PCR20_PE_MASK                       0x2u
#define PORT_PCR20_PE_SHIFT                      1
#define PORT_PCR20_PE_WIDTH                      1
#define PORT_PCR20_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR20_PE_SHIFT))&PORT_PCR20_PE_MASK)
#define PORT_PCR20_SRE_MASK                      0x4u
#define PORT_PCR20_SRE_SHIFT                     2
#define PORT_PCR20_SRE_WIDTH                     1
#define PORT_PCR20_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR20_SRE_SHIFT))&PORT_PCR20_SRE_MASK)
#define PORT_PCR20_ODE_MASK                      0x20u
#define PORT_PCR20_ODE_SHIFT                     5
#define PORT_PCR20_ODE_WIDTH                     1
#define PORT_PCR20_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR20_ODE_SHIFT))&PORT_PCR20_ODE_MASK)
#define PORT_PCR20_MUX_MASK                      0x700u
#define PORT_PCR20_MUX_SHIFT                     8
#define PORT_PCR20_MUX_WIDTH                     3
#define PORT_PCR20_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR20_MUX_SHIFT))&PORT_PCR20_MUX_MASK)
#define PORT_PCR20_LK_MASK                       0x8000u
#define PORT_PCR20_LK_SHIFT                      15
#define PORT_PCR20_LK_WIDTH                      1
#define PORT_PCR20_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR20_LK_SHIFT))&PORT_PCR20_LK_MASK)
#define PORT_PCR20_IRQC_MASK                     0xF0000u
#define PORT_PCR20_IRQC_SHIFT                    16
#define PORT_PCR20_IRQC_WIDTH                    4
#define PORT_PCR20_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR20_IRQC_SHIFT))&PORT_PCR20_IRQC_MASK)
#define PORT_PCR20_ISF_MASK                      0x1000000u
#define PORT_PCR20_ISF_SHIFT                     24
#define PORT_PCR20_ISF_WIDTH                     1
#define PORT_PCR20_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR20_ISF_SHIFT))&PORT_PCR20_ISF_MASK)
/* PCR21 Bit Fields */
#define PORT_PCR21_PS_MASK                       0x1u
#define PORT_PCR21_PS_SHIFT                      0
#define PORT_PCR21_PS_WIDTH                      1
#define PORT_PCR21_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR21_PS_SHIFT))&PORT_PCR21_PS_MASK)
#define PORT_PCR21_PE_MASK                       0x2u
#define PORT_PCR21_PE_SHIFT                      1
#define PORT_PCR21_PE_WIDTH                      1
#define PORT_PCR21_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR21_PE_SHIFT))&PORT_PCR21_PE_MASK)
#define PORT_PCR21_SRE_MASK                      0x4u
#define PORT_PCR21_SRE_SHIFT                     2
#define PORT_PCR21_SRE_WIDTH                     1
#define PORT_PCR21_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR21_SRE_SHIFT))&PORT_PCR21_SRE_MASK)
#define PORT_PCR21_ODE_MASK                      0x20u
#define PORT_PCR21_ODE_SHIFT                     5
#define PORT_PCR21_ODE_WIDTH                     1
#define PORT_PCR21_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR21_ODE_SHIFT))&PORT_PCR21_ODE_MASK)
#define PORT_PCR21_MUX_MASK                      0x700u
#define PORT_PCR21_MUX_SHIFT                     8
#define PORT_PCR21_MUX_WIDTH                     3
#define PORT_PCR21_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR21_MUX_SHIFT))&PORT_PCR21_MUX_MASK)
#define PORT_PCR21_LK_MASK                       0x8000u
#define PORT_PCR21_LK_SHIFT                      15
#define PORT_PCR21_LK_WIDTH                      1
#define PORT_PCR21_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR21_LK_SHIFT))&PORT_PCR21_LK_MASK)
#define PORT_PCR21_IRQC_MASK                     0xF0000u
#define PORT_PCR21_IRQC_SHIFT                    16
#define PORT_PCR21_IRQC_WIDTH                    4
#define PORT_PCR21_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR21_IRQC_SHIFT))&PORT_PCR21_IRQC_MASK)
#define PORT_PCR21_ISF_MASK                      0x1000000u
#define PORT_PCR21_ISF_SHIFT                     24
#define PORT_PCR21_ISF_WIDTH                     1
#define PORT_PCR21_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR21_ISF_SHIFT))&PORT_PCR21_ISF_MASK)
/* PCR22 Bit Fields */
#define PORT_PCR22_PS_MASK                       0x1u
#define PORT_PCR22_PS_SHIFT                      0
#define PORT_PCR22_PS_WIDTH                      1
#define PORT_PCR22_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR22_PS_SHIFT))&PORT_PCR22_PS_MASK)
#define PORT_PCR22_PE_MASK                       0x2u
#define PORT_PCR22_PE_SHIFT                      1
#define PORT_PCR22_PE_WIDTH                      1
#define PORT_PCR22_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR22_PE_SHIFT))&PORT_PCR22_PE_MASK)
#define PORT_PCR22_SRE_MASK                      0x4u
#define PORT_PCR22_SRE_SHIFT                     2
#define PORT_PCR22_SRE_WIDTH                     1
#define PORT_PCR22_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR22_SRE_SHIFT))&PORT_PCR22_SRE_MASK)
#define PORT_PCR22_ODE_MASK                      0x20u
#define PORT_PCR22_ODE_SHIFT                     5
#define PORT_PCR22_ODE_WIDTH                     1
#define PORT_PCR22_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR22_ODE_SHIFT))&PORT_PCR22_ODE_MASK)
#define PORT_PCR22_MUX_MASK                      0x700u
#define PORT_PCR22_MUX_SHIFT                     8
#define PORT_PCR22_MUX_WIDTH                     3
#define PORT_PCR22_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR22_MUX_SHIFT))&PORT_PCR22_MUX_MASK)
#define PORT_PCR22_LK_MASK                       0x8000u
#define PORT_PCR22_LK_SHIFT                      15
#define PORT_PCR22_LK_WIDTH                      1
#define PORT_PCR22_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR22_LK_SHIFT))&PORT_PCR22_LK_MASK)
#define PORT_PCR22_IRQC_MASK                     0xF0000u
#define PORT_PCR22_IRQC_SHIFT                    16
#define PORT_PCR22_IRQC_WIDTH                    4
#define PORT_PCR22_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR22_IRQC_SHIFT))&PORT_PCR22_IRQC_MASK)
#define PORT_PCR22_ISF_MASK                      0x1000000u
#define PORT_PCR22_ISF_SHIFT                     24
#define PORT_PCR22_ISF_WIDTH                     1
#define PORT_PCR22_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR22_ISF_SHIFT))&PORT_PCR22_ISF_MASK)
/* PCR23 Bit Fields */
#define PORT_PCR23_PS_MASK                       0x1u
#define PORT_PCR23_PS_SHIFT                      0
#define PORT_PCR23_PS_WIDTH                      1
#define PORT_PCR23_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR23_PS_SHIFT))&PORT_PCR23_PS_MASK)
#define PORT_PCR23_PE_MASK                       0x2u
#define PORT_PCR23_PE_SHIFT                      1
#define PORT_PCR23_PE_WIDTH                      1
#define PORT_PCR23_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR23_PE_SHIFT))&PORT_PCR23_PE_MASK)
#define PORT_PCR23_SRE_MASK                      0x4u
#define PORT_PCR23_SRE_SHIFT                     2
#define PORT_PCR23_SRE_WIDTH                     1
#define PORT_PCR23_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR23_SRE_SHIFT))&PORT_PCR23_SRE_MASK)
#define PORT_PCR23_ODE_MASK                      0x20u
#define PORT_PCR23_ODE_SHIFT                     5
#define PORT_PCR23_ODE_WIDTH                     1
#define PORT_PCR23_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR23_ODE_SHIFT))&PORT_PCR23_ODE_MASK)
#define PORT_PCR23_MUX_MASK                      0x700u
#define PORT_PCR23_MUX_SHIFT                     8
#define PORT_PCR23_MUX_WIDTH                     3
#define PORT_PCR23_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR23_MUX_SHIFT))&PORT_PCR23_MUX_MASK)
#define PORT_PCR23_LK_MASK                       0x8000u
#define PORT_PCR23_LK_SHIFT                      15
#define PORT_PCR23_LK_WIDTH                      1
#define PORT_PCR23_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR23_LK_SHIFT))&PORT_PCR23_LK_MASK)
#define PORT_PCR23_IRQC_MASK                     0xF0000u
#define PORT_PCR23_IRQC_SHIFT                    16
#define PORT_PCR23_IRQC_WIDTH                    4
#define PORT_PCR23_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR23_IRQC_SHIFT))&PORT_PCR23_IRQC_MASK)
#define PORT_PCR23_ISF_MASK                      0x1000000u
#define PORT_PCR23_ISF_SHIFT                     24
#define PORT_PCR23_ISF_WIDTH                     1
#define PORT_PCR23_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR23_ISF_SHIFT))&PORT_PCR23_ISF_MASK)
/* PCR24 Bit Fields */
#define PORT_PCR24_PS_MASK                       0x1u
#define PORT_PCR24_PS_SHIFT                      0
#define PORT_PCR24_PS_WIDTH                      1
#define PORT_PCR24_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR24_PS_SHIFT))&PORT_PCR24_PS_MASK)
#define PORT_PCR24_PE_MASK                       0x2u
#define PORT_PCR24_PE_SHIFT                      1
#define PORT_PCR24_PE_WIDTH                      1
#define PORT_PCR24_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR24_PE_SHIFT))&PORT_PCR24_PE_MASK)
#define PORT_PCR24_SRE_MASK                      0x4u
#define PORT_PCR24_SRE_SHIFT                     2
#define PORT_PCR24_SRE_WIDTH                     1
#define PORT_PCR24_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR24_SRE_SHIFT))&PORT_PCR24_SRE_MASK)
#define PORT_PCR24_ODE_MASK                      0x20u
#define PORT_PCR24_ODE_SHIFT                     5
#define PORT_PCR24_ODE_WIDTH                     1
#define PORT_PCR24_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR24_ODE_SHIFT))&PORT_PCR24_ODE_MASK)
#define PORT_PCR24_MUX_MASK                      0x700u
#define PORT_PCR24_MUX_SHIFT                     8
#define PORT_PCR24_MUX_WIDTH                     3
#define PORT_PCR24_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR24_MUX_SHIFT))&PORT_PCR24_MUX_MASK)
#define PORT_PCR24_LK_MASK                       0x8000u
#define PORT_PCR24_LK_SHIFT                      15
#define PORT_PCR24_LK_WIDTH                      1
#define PORT_PCR24_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR24_LK_SHIFT))&PORT_PCR24_LK_MASK)
#define PORT_PCR24_IRQC_MASK                     0xF0000u
#define PORT_PCR24_IRQC_SHIFT                    16
#define PORT_PCR24_IRQC_WIDTH                    4
#define PORT_PCR24_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR24_IRQC_SHIFT))&PORT_PCR24_IRQC_MASK)
#define PORT_PCR24_ISF_MASK                      0x1000000u
#define PORT_PCR24_ISF_SHIFT                     24
#define PORT_PCR24_ISF_WIDTH                     1
#define PORT_PCR24_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR24_ISF_SHIFT))&PORT_PCR24_ISF_MASK)
/* PCR25 Bit Fields */
#define PORT_PCR25_PS_MASK                       0x1u
#define PORT_PCR25_PS_SHIFT                      0
#define PORT_PCR25_PS_WIDTH                      1
#define PORT_PCR25_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR25_PS_SHIFT))&PORT_PCR25_PS_MASK)
#define PORT_PCR25_PE_MASK                       0x2u
#define PORT_PCR25_PE_SHIFT                      1
#define PORT_PCR25_PE_WIDTH                      1
#define PORT_PCR25_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR25_PE_SHIFT))&PORT_PCR25_PE_MASK)
#define PORT_PCR25_SRE_MASK                      0x4u
#define PORT_PCR25_SRE_SHIFT                     2
#define PORT_PCR25_SRE_WIDTH                     1
#define PORT_PCR25_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR25_SRE_SHIFT))&PORT_PCR25_SRE_MASK)
#define PORT_PCR25_ODE_MASK                      0x20u
#define PORT_PCR25_ODE_SHIFT                     5
#define PORT_PCR25_ODE_WIDTH                     1
#define PORT_PCR25_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR25_ODE_SHIFT))&PORT_PCR25_ODE_MASK)
#define PORT_PCR25_MUX_MASK                      0x700u
#define PORT_PCR25_MUX_SHIFT                     8
#define PORT_PCR25_MUX_WIDTH                     3
#define PORT_PCR25_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR25_MUX_SHIFT))&PORT_PCR25_MUX_MASK)
#define PORT_PCR25_LK_MASK                       0x8000u
#define PORT_PCR25_LK_SHIFT                      15
#define PORT_PCR25_LK_WIDTH                      1
#define PORT_PCR25_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR25_LK_SHIFT))&PORT_PCR25_LK_MASK)
#define PORT_PCR25_IRQC_MASK                     0xF0000u
#define PORT_PCR25_IRQC_SHIFT                    16
#define PORT_PCR25_IRQC_WIDTH                    4
#define PORT_PCR25_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR25_IRQC_SHIFT))&PORT_PCR25_IRQC_MASK)
#define PORT_PCR25_ISF_MASK                      0x1000000u
#define PORT_PCR25_ISF_SHIFT                     24
#define PORT_PCR25_ISF_WIDTH                     1
#define PORT_PCR25_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR25_ISF_SHIFT))&PORT_PCR25_ISF_MASK)
/* PCR26 Bit Fields */
#define PORT_PCR26_PS_MASK                       0x1u
#define PORT_PCR26_PS_SHIFT                      0
#define PORT_PCR26_PS_WIDTH                      1
#define PORT_PCR26_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR26_PS_SHIFT))&PORT_PCR26_PS_MASK)
#define PORT_PCR26_PE_MASK                       0x2u
#define PORT_PCR26_PE_SHIFT                      1
#define PORT_PCR26_PE_WIDTH                      1
#define PORT_PCR26_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR26_PE_SHIFT))&PORT_PCR26_PE_MASK)
#define PORT_PCR26_SRE_MASK                      0x4u
#define PORT_PCR26_SRE_SHIFT                     2
#define PORT_PCR26_SRE_WIDTH                     1
#define PORT_PCR26_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR26_SRE_SHIFT))&PORT_PCR26_SRE_MASK)
#define PORT_PCR26_ODE_MASK                      0x20u
#define PORT_PCR26_ODE_SHIFT                     5
#define PORT_PCR26_ODE_WIDTH                     1
#define PORT_PCR26_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR26_ODE_SHIFT))&PORT_PCR26_ODE_MASK)
#define PORT_PCR26_MUX_MASK                      0x700u
#define PORT_PCR26_MUX_SHIFT                     8
#define PORT_PCR26_MUX_WIDTH                     3
#define PORT_PCR26_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR26_MUX_SHIFT))&PORT_PCR26_MUX_MASK)
#define PORT_PCR26_LK_MASK                       0x8000u
#define PORT_PCR26_LK_SHIFT                      15
#define PORT_PCR26_LK_WIDTH                      1
#define PORT_PCR26_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR26_LK_SHIFT))&PORT_PCR26_LK_MASK)
#define PORT_PCR26_IRQC_MASK                     0xF0000u
#define PORT_PCR26_IRQC_SHIFT                    16
#define PORT_PCR26_IRQC_WIDTH                    4
#define PORT_PCR26_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR26_IRQC_SHIFT))&PORT_PCR26_IRQC_MASK)
#define PORT_PCR26_ISF_MASK                      0x1000000u
#define PORT_PCR26_ISF_SHIFT                     24
#define PORT_PCR26_ISF_WIDTH                     1
#define PORT_PCR26_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR26_ISF_SHIFT))&PORT_PCR26_ISF_MASK)
/* PCR27 Bit Fields */
#define PORT_PCR27_PS_MASK                       0x1u
#define PORT_PCR27_PS_SHIFT                      0
#define PORT_PCR27_PS_WIDTH                      1
#define PORT_PCR27_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR27_PS_SHIFT))&PORT_PCR27_PS_MASK)
#define PORT_PCR27_PE_MASK                       0x2u
#define PORT_PCR27_PE_SHIFT                      1
#define PORT_PCR27_PE_WIDTH                      1
#define PORT_PCR27_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR27_PE_SHIFT))&PORT_PCR27_PE_MASK)
#define PORT_PCR27_SRE_MASK                      0x4u
#define PORT_PCR27_SRE_SHIFT                     2
#define PORT_PCR27_SRE_WIDTH                     1
#define PORT_PCR27_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR27_SRE_SHIFT))&PORT_PCR27_SRE_MASK)
#define PORT_PCR27_ODE_MASK                      0x20u
#define PORT_PCR27_ODE_SHIFT                     5
#define PORT_PCR27_ODE_WIDTH                     1
#define PORT_PCR27_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR27_ODE_SHIFT))&PORT_PCR27_ODE_MASK)
#define PORT_PCR27_MUX_MASK                      0x700u
#define PORT_PCR27_MUX_SHIFT                     8
#define PORT_PCR27_MUX_WIDTH                     3
#define PORT_PCR27_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR27_MUX_SHIFT))&PORT_PCR27_MUX_MASK)
#define PORT_PCR27_LK_MASK                       0x8000u
#define PORT_PCR27_LK_SHIFT                      15
#define PORT_PCR27_LK_WIDTH                      1
#define PORT_PCR27_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR27_LK_SHIFT))&PORT_PCR27_LK_MASK)
#define PORT_PCR27_IRQC_MASK                     0xF0000u
#define PORT_PCR27_IRQC_SHIFT                    16
#define PORT_PCR27_IRQC_WIDTH                    4
#define PORT_PCR27_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR27_IRQC_SHIFT))&PORT_PCR27_IRQC_MASK)
#define PORT_PCR27_ISF_MASK                      0x1000000u
#define PORT_PCR27_ISF_SHIFT                     24
#define PORT_PCR27_ISF_WIDTH                     1
#define PORT_PCR27_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR27_ISF_SHIFT))&PORT_PCR27_ISF_MASK)
/* PCR28 Bit Fields */
#define PORT_PCR28_PS_MASK                       0x1u
#define PORT_PCR28_PS_SHIFT                      0
#define PORT_PCR28_PS_WIDTH                      1
#define PORT_PCR28_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR28_PS_SHIFT))&PORT_PCR28_PS_MASK)
#define PORT_PCR28_PE_MASK                       0x2u
#define PORT_PCR28_PE_SHIFT                      1
#define PORT_PCR28_PE_WIDTH                      1
#define PORT_PCR28_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR28_PE_SHIFT))&PORT_PCR28_PE_MASK)
#define PORT_PCR28_SRE_MASK                      0x4u
#define PORT_PCR28_SRE_SHIFT                     2
#define PORT_PCR28_SRE_WIDTH                     1
#define PORT_PCR28_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR28_SRE_SHIFT))&PORT_PCR28_SRE_MASK)
#define PORT_PCR28_ODE_MASK                      0x20u
#define PORT_PCR28_ODE_SHIFT                     5
#define PORT_PCR28_ODE_WIDTH                     1
#define PORT_PCR28_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR28_ODE_SHIFT))&PORT_PCR28_ODE_MASK)
#define PORT_PCR28_MUX_MASK                      0x700u
#define PORT_PCR28_MUX_SHIFT                     8
#define PORT_PCR28_MUX_WIDTH                     3
#define PORT_PCR28_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR28_MUX_SHIFT))&PORT_PCR28_MUX_MASK)
#define PORT_PCR28_LK_MASK                       0x8000u
#define PORT_PCR28_LK_SHIFT                      15
#define PORT_PCR28_LK_WIDTH                      1
#define PORT_PCR28_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR28_LK_SHIFT))&PORT_PCR28_LK_MASK)
#define PORT_PCR28_IRQC_MASK                     0xF0000u
#define PORT_PCR28_IRQC_SHIFT                    16
#define PORT_PCR28_IRQC_WIDTH                    4
#define PORT_PCR28_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR28_IRQC_SHIFT))&PORT_PCR28_IRQC_MASK)
#define PORT_PCR28_ISF_MASK                      0x1000000u
#define PORT_PCR28_ISF_SHIFT                     24
#define PORT_PCR28_ISF_WIDTH                     1
#define PORT_PCR28_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR28_ISF_SHIFT))&PORT_PCR28_ISF_MASK)
/* PCR29 Bit Fields */
#define PORT_PCR29_PS_MASK                       0x1u
#define PORT_PCR29_PS_SHIFT                      0
#define PORT_PCR29_PS_WIDTH                      1
#define PORT_PCR29_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR29_PS_SHIFT))&PORT_PCR29_PS_MASK)
#define PORT_PCR29_PE_MASK                       0x2u
#define PORT_PCR29_PE_SHIFT                      1
#define PORT_PCR29_PE_WIDTH                      1
#define PORT_PCR29_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR29_PE_SHIFT))&PORT_PCR29_PE_MASK)
#define PORT_PCR29_SRE_MASK                      0x4u
#define PORT_PCR29_SRE_SHIFT                     2
#define PORT_PCR29_SRE_WIDTH                     1
#define PORT_PCR29_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR29_SRE_SHIFT))&PORT_PCR29_SRE_MASK)
#define PORT_PCR29_ODE_MASK                      0x20u
#define PORT_PCR29_ODE_SHIFT                     5
#define PORT_PCR29_ODE_WIDTH                     1
#define PORT_PCR29_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR29_ODE_SHIFT))&PORT_PCR29_ODE_MASK)
#define PORT_PCR29_MUX_MASK                      0x700u
#define PORT_PCR29_MUX_SHIFT                     8
#define PORT_PCR29_MUX_WIDTH                     3
#define PORT_PCR29_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR29_MUX_SHIFT))&PORT_PCR29_MUX_MASK)
#define PORT_PCR29_LK_MASK                       0x8000u
#define PORT_PCR29_LK_SHIFT                      15
#define PORT_PCR29_LK_WIDTH                      1
#define PORT_PCR29_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR29_LK_SHIFT))&PORT_PCR29_LK_MASK)
#define PORT_PCR29_IRQC_MASK                     0xF0000u
#define PORT_PCR29_IRQC_SHIFT                    16
#define PORT_PCR29_IRQC_WIDTH                    4
#define PORT_PCR29_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR29_IRQC_SHIFT))&PORT_PCR29_IRQC_MASK)
#define PORT_PCR29_ISF_MASK                      0x1000000u
#define PORT_PCR29_ISF_SHIFT                     24
#define PORT_PCR29_ISF_WIDTH                     1
#define PORT_PCR29_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR29_ISF_SHIFT))&PORT_PCR29_ISF_MASK)
/* PCR30 Bit Fields */
#define PORT_PCR30_PS_MASK                       0x1u
#define PORT_PCR30_PS_SHIFT                      0
#define PORT_PCR30_PS_WIDTH                      1
#define PORT_PCR30_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR30_PS_SHIFT))&PORT_PCR30_PS_MASK)
#define PORT_PCR30_PE_MASK                       0x2u
#define PORT_PCR30_PE_SHIFT                      1
#define PORT_PCR30_PE_WIDTH                      1
#define PORT_PCR30_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR30_PE_SHIFT))&PORT_PCR30_PE_MASK)
#define PORT_PCR30_SRE_MASK                      0x4u
#define PORT_PCR30_SRE_SHIFT                     2
#define PORT_PCR30_SRE_WIDTH                     1
#define PORT_PCR30_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR30_SRE_SHIFT))&PORT_PCR30_SRE_MASK)
#define PORT_PCR30_ODE_MASK                      0x20u
#define PORT_PCR30_ODE_SHIFT                     5
#define PORT_PCR30_ODE_WIDTH                     1
#define PORT_PCR30_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR30_ODE_SHIFT))&PORT_PCR30_ODE_MASK)
#define PORT_PCR30_MUX_MASK                      0x700u
#define PORT_PCR30_MUX_SHIFT                     8
#define PORT_PCR30_MUX_WIDTH                     3
#define PORT_PCR30_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR30_MUX_SHIFT))&PORT_PCR30_MUX_MASK)
#define PORT_PCR30_LK_MASK                       0x8000u
#define PORT_PCR30_LK_SHIFT                      15
#define PORT_PCR30_LK_WIDTH                      1
#define PORT_PCR30_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR30_LK_SHIFT))&PORT_PCR30_LK_MASK)
#define PORT_PCR30_IRQC_MASK                     0xF0000u
#define PORT_PCR30_IRQC_SHIFT                    16
#define PORT_PCR30_IRQC_WIDTH                    4
#define PORT_PCR30_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR30_IRQC_SHIFT))&PORT_PCR30_IRQC_MASK)
#define PORT_PCR30_ISF_MASK                      0x1000000u
#define PORT_PCR30_ISF_SHIFT                     24
#define PORT_PCR30_ISF_WIDTH                     1
#define PORT_PCR30_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR30_ISF_SHIFT))&PORT_PCR30_ISF_MASK)
/* PCR31 Bit Fields */
#define PORT_PCR31_PS_MASK                       0x1u
#define PORT_PCR31_PS_SHIFT                      0
#define PORT_PCR31_PS_WIDTH                      1
#define PORT_PCR31_PS(x)                         (((uint32)(((uint32)(x))<<PORT_PCR31_PS_SHIFT))&PORT_PCR31_PS_MASK)
#define PORT_PCR31_PE_MASK                       0x2u
#define PORT_PCR31_PE_SHIFT                      1
#define PORT_PCR31_PE_WIDTH                      1
#define PORT_PCR31_PE(x)                         (((uint32)(((uint32)(x))<<PORT_PCR31_PE_SHIFT))&PORT_PCR31_PE_MASK)
#define PORT_PCR31_SRE_MASK                      0x4u
#define PORT_PCR31_SRE_SHIFT                     2
#define PORT_PCR31_SRE_WIDTH                     1
#define PORT_PCR31_SRE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR31_SRE_SHIFT))&PORT_PCR31_SRE_MASK)
#define PORT_PCR31_ODE_MASK                      0x20u
#define PORT_PCR31_ODE_SHIFT                     5
#define PORT_PCR31_ODE_WIDTH                     1
#define PORT_PCR31_ODE(x)                        (((uint32)(((uint32)(x))<<PORT_PCR31_ODE_SHIFT))&PORT_PCR31_ODE_MASK)
#define PORT_PCR31_MUX_MASK                      0x700u
#define PORT_PCR31_MUX_SHIFT                     8
#define PORT_PCR31_MUX_WIDTH                     3
#define PORT_PCR31_MUX(x)                        (((uint32)(((uint32)(x))<<PORT_PCR31_MUX_SHIFT))&PORT_PCR31_MUX_MASK)
#define PORT_PCR31_LK_MASK                       0x8000u
#define PORT_PCR31_LK_SHIFT                      15
#define PORT_PCR31_LK_WIDTH                      1
#define PORT_PCR31_LK(x)                         (((uint32)(((uint32)(x))<<PORT_PCR31_LK_SHIFT))&PORT_PCR31_LK_MASK)
#define PORT_PCR31_IRQC_MASK                     0xF0000u
#define PORT_PCR31_IRQC_SHIFT                    16
#define PORT_PCR31_IRQC_WIDTH                    4
#define PORT_PCR31_IRQC(x)                       (((uint32)(((uint32)(x))<<PORT_PCR31_IRQC_SHIFT))&PORT_PCR31_IRQC_MASK)
#define PORT_PCR31_ISF_MASK                      0x1000000u
#define PORT_PCR31_ISF_SHIFT                     24
#define PORT_PCR31_ISF_WIDTH                     1
#define PORT_PCR31_ISF(x)                        (((uint32)(((uint32)(x))<<PORT_PCR31_ISF_SHIFT))&PORT_PCR31_ISF_MASK)
/* GPCLR Bit Fields */
#define PORT_GPCLR_GPWD_MASK                     0xFFFFu
#define PORT_GPCLR_GPWD_SHIFT                    0
#define PORT_GPCLR_GPWD_WIDTH                    16
#define PORT_GPCLR_GPWD(x)                       (((uint32)(((uint32)(x))<<PORT_GPCLR_GPWD_SHIFT))&PORT_GPCLR_GPWD_MASK)
#define PORT_GPCLR_GPWE_MASK                     0xFFFF0000u
#define PORT_GPCLR_GPWE_SHIFT                    16
#define PORT_GPCLR_GPWE_WIDTH                    16
#define PORT_GPCLR_GPWE(x)                       (((uint32)(((uint32)(x))<<PORT_GPCLR_GPWE_SHIFT))&PORT_GPCLR_GPWE_MASK)
/* GPCHR Bit Fields */
#define PORT_GPCHR_GPWD_MASK                     0xFFFFu
#define PORT_GPCHR_GPWD_SHIFT                    0
#define PORT_GPCHR_GPWD_WIDTH                    16
#define PORT_GPCHR_GPWD(x)                       (((uint32)(((uint32)(x))<<PORT_GPCHR_GPWD_SHIFT))&PORT_GPCHR_GPWD_MASK)
#define PORT_GPCHR_GPWE_MASK                     0xFFFF0000u
#define PORT_GPCHR_GPWE_SHIFT                    16
#define PORT_GPCHR_GPWE_WIDTH                    16
#define PORT_GPCHR_GPWE(x)                       (((uint32)(((uint32)(x))<<PORT_GPCHR_GPWE_SHIFT))&PORT_GPCHR_GPWE_MASK)
/* ISFR Bit Fields */
#define PORT_ISFR_ISF_MASK                       0xFFFFFFFFu
#define PORT_ISFR_ISF_SHIFT                      0
#define PORT_ISFR_ISF_WIDTH                      32
#define PORT_ISFR_ISF(x)                         (((uint32)(((uint32)(x))<<PORT_ISFR_ISF_SHIFT))&PORT_ISFR_ISF_MASK)
/* DFER Bit Fields */
#define PORT_DFER_DFE_MASK                       0xFFFFFFFFu
#define PORT_DFER_DFE_SHIFT                      0
#define PORT_DFER_DFE_WIDTH                      32
#define PORT_DFER_DFE(x)                         (((uint32)(((uint32)(x))<<PORT_DFER_DFE_SHIFT))&PORT_DFER_DFE_MASK)
/* DFCR Bit Fields */
#define PORT_DFCR_CS_MASK                        0x1u
#define PORT_DFCR_CS_SHIFT                       0
#define PORT_DFCR_CS_WIDTH                       1
#define PORT_DFCR_CS(x)                          (((uint32)(((uint32)(x))<<PORT_DFCR_CS_SHIFT))&PORT_DFCR_CS_MASK)
/* DFWR Bit Fields */
#define PORT_DFWR_FILT_MASK                      0x1Fu
#define PORT_DFWR_FILT_SHIFT                     0
#define PORT_DFWR_FILT_WIDTH                     5
#define PORT_DFWR_FILT(x)                        (((uint32)(((uint32)(x))<<PORT_DFWR_FILT_SHIFT))&PORT_DFWR_FILT_MASK)

/*!
 * @}
 */ /* end of group PORT_Register_Masks */


/* PORT - Peripheral instance base addresses */
/** Peripheral PORTA base address */
#define PORTA_BASE                               (0x40049000u)
/** Peripheral PORTA base pointer */
#define PORTA                                    ((PORT_Type *)PORTA_BASE)
#define PORTA_BASE_PTR                           (PORTA)
/** Peripheral PORTB base address */
#define PORTB_BASE                               (0x4004A000u)
/** Peripheral PORTB base pointer */
#define PORTB                                    ((PORT_Type *)PORTB_BASE)
#define PORTB_BASE_PTR                           (PORTB)
/** Peripheral PORTC base address */
#define PORTC_BASE                               (0x4004B000u)
/** Peripheral PORTC base pointer */
#define PORTC                                    ((PORT_Type *)PORTC_BASE)
#define PORTC_BASE_PTR                           (PORTC)
/** Peripheral PORTD base address */
#define PORTD_BASE                               (0x4004C000u)
/** Peripheral PORTD base pointer */
#define PORTD                                    ((PORT_Type *)PORTD_BASE)
#define PORTD_BASE_PTR                           (PORTD)
/** Peripheral PORTE base address */
#define PORTE_BASE                               (0x4004D000u)
/** Peripheral PORTE base pointer */
#define PORTE                                    ((PORT_Type *)PORTE_BASE)
#define PORTE_BASE_PTR                           (PORTE)
/** Array initializer of PORT peripheral base addresses */
#define PORT_BASE_ADDRS                          { PORTA_BASE, PORTB_BASE, PORTC_BASE, PORTD_BASE, PORTE_BASE }
/** Array initializer of PORT peripheral base pointers */
#define PORT_BASE_PTRS                           { PORTA, PORTB, PORTC, PORTD, PORTE }

/* ----------------------------------------------------------------------------
   -- PORT - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PORT_Register_Accessor_Macros PORT - Register accessor macros
 * @{
 */


/* PORT - Register instance definitions */
/* PORTA */
#define PORTA_PCR0                               PORT_PCR0_REG(PORTA)
#define PORTA_PCR1                               PORT_PCR1_REG(PORTA)
#define PORTA_PCR2                               PORT_PCR2_REG(PORTA)
#define PORTA_PCR3                               PORT_PCR3_REG(PORTA)
#define PORTA_PCR4                               PORT_PCR4_REG(PORTA)
#define PORTA_PCR5                               PORT_PCR5_REG(PORTA)
#define PORTA_PCR6                               PORT_PCR6_REG(PORTA)
#define PORTA_PCR7                               PORT_PCR7_REG(PORTA)
#define PORTA_PCR8                               PORT_PCR8_REG(PORTA)
#define PORTA_PCR9                               PORT_PCR9_REG(PORTA)
#define PORTA_PCR10                              PORT_PCR10_REG(PORTA)
#define PORTA_PCR11                              PORT_PCR11_REG(PORTA)
#define PORTA_PCR12                              PORT_PCR12_REG(PORTA)
#define PORTA_PCR13                              PORT_PCR13_REG(PORTA)
#define PORTA_PCR14                              PORT_PCR14_REG(PORTA)
#define PORTA_PCR15                              PORT_PCR15_REG(PORTA)
#define PORTA_PCR16                              PORT_PCR16_REG(PORTA)
#define PORTA_PCR17                              PORT_PCR17_REG(PORTA)
#define PORTA_PCR18                              PORT_PCR18_REG(PORTA)
#define PORTA_PCR19                              PORT_PCR19_REG(PORTA)
#define PORTA_PCR20                              PORT_PCR20_REG(PORTA)
#define PORTA_PCR21                              PORT_PCR21_REG(PORTA)
#define PORTA_PCR22                              PORT_PCR22_REG(PORTA)
#define PORTA_PCR23                              PORT_PCR23_REG(PORTA)
#define PORTA_PCR24                              PORT_PCR24_REG(PORTA)
#define PORTA_PCR25                              PORT_PCR25_REG(PORTA)
#define PORTA_PCR26                              PORT_PCR26_REG(PORTA)
#define PORTA_PCR27                              PORT_PCR27_REG(PORTA)
#define PORTA_PCR28                              PORT_PCR28_REG(PORTA)
#define PORTA_PCR29                              PORT_PCR29_REG(PORTA)
#define PORTA_PCR30                              PORT_PCR30_REG(PORTA)
#define PORTA_PCR31                              PORT_PCR31_REG(PORTA)
#define PORTA_GPCLR                              PORT_GPCLR_REG(PORTA)
#define PORTA_GPCHR                              PORT_GPCHR_REG(PORTA)
#define PORTA_ISFR                               PORT_ISFR_REG(PORTA)
#define PORTA_DFER                               PORT_DFER_REG(PORTA)
#define PORTA_DFCR                               PORT_DFCR_REG(PORTA)
#define PORTA_DFWR                               PORT_DFWR_REG(PORTA)
/* PORTB */
#define PORTB_PCR0                               PORT_PCR0_REG(PORTB)
#define PORTB_PCR1                               PORT_PCR1_REG(PORTB)
#define PORTB_PCR2                               PORT_PCR2_REG(PORTB)
#define PORTB_PCR3                               PORT_PCR3_REG(PORTB)
#define PORTB_PCR4                               PORT_PCR4_REG(PORTB)
#define PORTB_PCR5                               PORT_PCR5_REG(PORTB)
#define PORTB_PCR6                               PORT_PCR6_REG(PORTB)
#define PORTB_PCR7                               PORT_PCR7_REG(PORTB)
#define PORTB_PCR8                               PORT_PCR8_REG(PORTB)
#define PORTB_PCR9                               PORT_PCR9_REG(PORTB)
#define PORTB_PCR10                              PORT_PCR10_REG(PORTB)
#define PORTB_PCR11                              PORT_PCR11_REG(PORTB)
#define PORTB_PCR12                              PORT_PCR12_REG(PORTB)
#define PORTB_PCR13                              PORT_PCR13_REG(PORTB)
#define PORTB_PCR14                              PORT_PCR14_REG(PORTB)
#define PORTB_PCR15                              PORT_PCR15_REG(PORTB)
#define PORTB_PCR16                              PORT_PCR16_REG(PORTB)
#define PORTB_PCR17                              PORT_PCR17_REG(PORTB)
#define PORTB_PCR18                              PORT_PCR18_REG(PORTB)
#define PORTB_PCR19                              PORT_PCR19_REG(PORTB)
#define PORTB_PCR20                              PORT_PCR20_REG(PORTB)
#define PORTB_PCR21                              PORT_PCR21_REG(PORTB)
#define PORTB_PCR22                              PORT_PCR22_REG(PORTB)
#define PORTB_PCR23                              PORT_PCR23_REG(PORTB)
#define PORTB_PCR24                              PORT_PCR24_REG(PORTB)
#define PORTB_PCR25                              PORT_PCR25_REG(PORTB)
#define PORTB_PCR26                              PORT_PCR26_REG(PORTB)
#define PORTB_PCR27                              PORT_PCR27_REG(PORTB)
#define PORTB_PCR28                              PORT_PCR28_REG(PORTB)
#define PORTB_PCR29                              PORT_PCR29_REG(PORTB)
#define PORTB_PCR30                              PORT_PCR30_REG(PORTB)
#define PORTB_PCR31                              PORT_PCR31_REG(PORTB)
#define PORTB_GPCLR                              PORT_GPCLR_REG(PORTB)
#define PORTB_GPCHR                              PORT_GPCHR_REG(PORTB)
#define PORTB_ISFR                               PORT_ISFR_REG(PORTB)
#define PORTB_DFER                               PORT_DFER_REG(PORTB)
#define PORTB_DFCR                               PORT_DFCR_REG(PORTB)
#define PORTB_DFWR                               PORT_DFWR_REG(PORTB)
/* PORTC */
#define PORTC_PCR0                               PORT_PCR0_REG(PORTC)
#define PORTC_PCR1                               PORT_PCR1_REG(PORTC)
#define PORTC_PCR2                               PORT_PCR2_REG(PORTC)
#define PORTC_PCR3                               PORT_PCR3_REG(PORTC)
#define PORTC_PCR4                               PORT_PCR4_REG(PORTC)
#define PORTC_PCR5                               PORT_PCR5_REG(PORTC)
#define PORTC_PCR6                               PORT_PCR6_REG(PORTC)
#define PORTC_PCR7                               PORT_PCR7_REG(PORTC)
#define PORTC_PCR8                               PORT_PCR8_REG(PORTC)
#define PORTC_PCR9                               PORT_PCR9_REG(PORTC)
#define PORTC_PCR10                              PORT_PCR10_REG(PORTC)
#define PORTC_PCR11                              PORT_PCR11_REG(PORTC)
#define PORTC_PCR12                              PORT_PCR12_REG(PORTC)
#define PORTC_PCR13                              PORT_PCR13_REG(PORTC)
#define PORTC_PCR14                              PORT_PCR14_REG(PORTC)
#define PORTC_PCR15                              PORT_PCR15_REG(PORTC)
#define PORTC_PCR16                              PORT_PCR16_REG(PORTC)
#define PORTC_PCR17                              PORT_PCR17_REG(PORTC)
#define PORTC_PCR18                              PORT_PCR18_REG(PORTC)
#define PORTC_PCR19                              PORT_PCR19_REG(PORTC)
#define PORTC_PCR20                              PORT_PCR20_REG(PORTC)
#define PORTC_PCR21                              PORT_PCR21_REG(PORTC)
#define PORTC_PCR22                              PORT_PCR22_REG(PORTC)
#define PORTC_PCR23                              PORT_PCR23_REG(PORTC)
#define PORTC_PCR24                              PORT_PCR24_REG(PORTC)
#define PORTC_PCR25                              PORT_PCR25_REG(PORTC)
#define PORTC_PCR26                              PORT_PCR26_REG(PORTC)
#define PORTC_PCR27                              PORT_PCR27_REG(PORTC)
#define PORTC_PCR28                              PORT_PCR28_REG(PORTC)
#define PORTC_PCR29                              PORT_PCR29_REG(PORTC)
#define PORTC_PCR30                              PORT_PCR30_REG(PORTC)
#define PORTC_PCR31                              PORT_PCR31_REG(PORTC)
#define PORTC_GPCLR                              PORT_GPCLR_REG(PORTC)
#define PORTC_GPCHR                              PORT_GPCHR_REG(PORTC)
#define PORTC_ISFR                               PORT_ISFR_REG(PORTC)
#define PORTC_DFER                               PORT_DFER_REG(PORTC)
#define PORTC_DFCR                               PORT_DFCR_REG(PORTC)
#define PORTC_DFWR                               PORT_DFWR_REG(PORTC)
/* PORTD */
#define PORTD_PCR0                               PORT_PCR0_REG(PORTD)
#define PORTD_PCR1                               PORT_PCR1_REG(PORTD)
#define PORTD_PCR2                               PORT_PCR2_REG(PORTD)
#define PORTD_PCR3                               PORT_PCR3_REG(PORTD)
#define PORTD_PCR4                               PORT_PCR4_REG(PORTD)
#define PORTD_PCR5                               PORT_PCR5_REG(PORTD)
#define PORTD_PCR6                               PORT_PCR6_REG(PORTD)
#define PORTD_PCR7                               PORT_PCR7_REG(PORTD)
#define PORTD_PCR8                               PORT_PCR8_REG(PORTD)
#define PORTD_PCR9                               PORT_PCR9_REG(PORTD)
#define PORTD_PCR10                              PORT_PCR10_REG(PORTD)
#define PORTD_PCR11                              PORT_PCR11_REG(PORTD)
#define PORTD_PCR12                              PORT_PCR12_REG(PORTD)
#define PORTD_PCR13                              PORT_PCR13_REG(PORTD)
#define PORTD_PCR14                              PORT_PCR14_REG(PORTD)
#define PORTD_PCR15                              PORT_PCR15_REG(PORTD)
#define PORTD_PCR16                              PORT_PCR16_REG(PORTD)
#define PORTD_PCR17                              PORT_PCR17_REG(PORTD)
#define PORTD_PCR18                              PORT_PCR18_REG(PORTD)
#define PORTD_PCR19                              PORT_PCR19_REG(PORTD)
#define PORTD_PCR20                              PORT_PCR20_REG(PORTD)
#define PORTD_PCR21                              PORT_PCR21_REG(PORTD)
#define PORTD_PCR22                              PORT_PCR22_REG(PORTD)
#define PORTD_PCR23                              PORT_PCR23_REG(PORTD)
#define PORTD_PCR24                              PORT_PCR24_REG(PORTD)
#define PORTD_PCR25                              PORT_PCR25_REG(PORTD)
#define PORTD_PCR26                              PORT_PCR26_REG(PORTD)
#define PORTD_PCR27                              PORT_PCR27_REG(PORTD)
#define PORTD_PCR28                              PORT_PCR28_REG(PORTD)
#define PORTD_PCR29                              PORT_PCR29_REG(PORTD)
#define PORTD_PCR30                              PORT_PCR30_REG(PORTD)
#define PORTD_PCR31                              PORT_PCR31_REG(PORTD)
#define PORTD_GPCLR                              PORT_GPCLR_REG(PORTD)
#define PORTD_GPCHR                              PORT_GPCHR_REG(PORTD)
#define PORTD_ISFR                               PORT_ISFR_REG(PORTD)
#define PORTD_DFER                               PORT_DFER_REG(PORTD)
#define PORTD_DFCR                               PORT_DFCR_REG(PORTD)
#define PORTD_DFWR                               PORT_DFWR_REG(PORTD)
/* PORTE */
#define PORTE_PCR0                               PORT_PCR0_REG(PORTE)
#define PORTE_PCR1                               PORT_PCR1_REG(PORTE)
#define PORTE_PCR2                               PORT_PCR2_REG(PORTE)
#define PORTE_PCR3                               PORT_PCR3_REG(PORTE)
#define PORTE_PCR4                               PORT_PCR4_REG(PORTE)
#define PORTE_PCR5                               PORT_PCR5_REG(PORTE)
#define PORTE_PCR6                               PORT_PCR6_REG(PORTE)
#define PORTE_PCR7                               PORT_PCR7_REG(PORTE)
#define PORTE_PCR8                               PORT_PCR8_REG(PORTE)
#define PORTE_PCR9                               PORT_PCR9_REG(PORTE)
#define PORTE_PCR10                              PORT_PCR10_REG(PORTE)
#define PORTE_PCR11                              PORT_PCR11_REG(PORTE)
#define PORTE_PCR12                              PORT_PCR12_REG(PORTE)
#define PORTE_PCR13                              PORT_PCR13_REG(PORTE)
#define PORTE_PCR14                              PORT_PCR14_REG(PORTE)
#define PORTE_PCR15                              PORT_PCR15_REG(PORTE)
#define PORTE_PCR16                              PORT_PCR16_REG(PORTE)
#define PORTE_PCR17                              PORT_PCR17_REG(PORTE)
#define PORTE_PCR18                              PORT_PCR18_REG(PORTE)
#define PORTE_PCR19                              PORT_PCR19_REG(PORTE)
#define PORTE_PCR20                              PORT_PCR20_REG(PORTE)
#define PORTE_PCR21                              PORT_PCR21_REG(PORTE)
#define PORTE_PCR22                              PORT_PCR22_REG(PORTE)
#define PORTE_PCR23                              PORT_PCR23_REG(PORTE)
#define PORTE_PCR24                              PORT_PCR24_REG(PORTE)
#define PORTE_PCR25                              PORT_PCR25_REG(PORTE)
#define PORTE_PCR26                              PORT_PCR26_REG(PORTE)
#define PORTE_PCR27                              PORT_PCR27_REG(PORTE)
#define PORTE_PCR28                              PORT_PCR28_REG(PORTE)
#define PORTE_PCR29                              PORT_PCR29_REG(PORTE)
#define PORTE_PCR30                              PORT_PCR30_REG(PORTE)
#define PORTE_PCR31                              PORT_PCR31_REG(PORTE)
#define PORTE_GPCLR                              PORT_GPCLR_REG(PORTE)
#define PORTE_GPCHR                              PORT_GPCHR_REG(PORTE)
#define PORTE_ISFR                               PORT_ISFR_REG(PORTE)
#define PORTE_DFER                               PORT_DFER_REG(PORTE)
#define PORTE_DFCR                               PORT_DFCR_REG(PORTE)
#define PORTE_DFWR                               PORT_DFWR_REG(PORTE)

/*!
 * @}
 */ /* end of group PORT_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group PORT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- RCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RCM_Peripheral_Access_Layer RCM Peripheral Access Layer
 * @{
 */

/** RCM - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< Parameter Register, offset: 0x4 */
  __I  uint32 SRS;                                 /**< System Reset Status Register, offset: 0x8 */
  __IO uint32 RPC;                                 /**< Reset Pin Control register, offset: 0xC */
  __IO uint32 MR;                                  /**< Mode Register, offset: 0x10 */
  __IO uint32 FM;                                  /**< Force Mode Register, offset: 0x14 */
  __IO uint32 SSRS;                                /**< Sticky System Reset Status Register, offset: 0x18 */
  __IO uint32 SRIE;                                /**< System Reset Interrupt Enable Register, offset: 0x1C */
} RCM_Type, *RCM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- RCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RCM_Register_Accessor_Macros RCM - Register accessor macros
 * @{
 */


/* RCM - Register accessors */
#define RCM_VERID_REG(base)                      ((base)->VERID)
#define RCM_PARAM_REG(base)                      ((base)->PARAM)
#define RCM_SRS_REG(base)                        ((base)->SRS)
#define RCM_RPC_REG(base)                        ((base)->RPC)
#define RCM_MR_REG(base)                         ((base)->MR)
#define RCM_FM_REG(base)                         ((base)->FM)
#define RCM_SSRS_REG(base)                       ((base)->SSRS)
#define RCM_SRIE_REG(base)                       ((base)->SRIE)

/*!
 * @}
 */ /* end of group RCM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- RCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RCM_Register_Masks RCM Register Masks
 * @{
 */

/* VERID Bit Fields */
#define RCM_VERID_FEATURE_MASK                   0xFFFFu
#define RCM_VERID_FEATURE_SHIFT                  0
#define RCM_VERID_FEATURE_WIDTH                  16
#define RCM_VERID_FEATURE(x)                     (((uint32)(((uint32)(x))<<RCM_VERID_FEATURE_SHIFT))&RCM_VERID_FEATURE_MASK)
#define RCM_VERID_MINOR_MASK                     0xFF0000u
#define RCM_VERID_MINOR_SHIFT                    16
#define RCM_VERID_MINOR_WIDTH                    8
#define RCM_VERID_MINOR(x)                       (((uint32)(((uint32)(x))<<RCM_VERID_MINOR_SHIFT))&RCM_VERID_MINOR_MASK)
#define RCM_VERID_MAJOR_MASK                     0xFF000000u
#define RCM_VERID_MAJOR_SHIFT                    24
#define RCM_VERID_MAJOR_WIDTH                    8
#define RCM_VERID_MAJOR(x)                       (((uint32)(((uint32)(x))<<RCM_VERID_MAJOR_SHIFT))&RCM_VERID_MAJOR_MASK)
/* PARAM Bit Fields */
#define RCM_PARAM_RSTSRC_MASK                    0xFFFFFFFFu
#define RCM_PARAM_RSTSRC_SHIFT                   0
#define RCM_PARAM_RSTSRC_WIDTH                   32
#define RCM_PARAM_RSTSRC(x)                      (((uint32)(((uint32)(x))<<RCM_PARAM_RSTSRC_SHIFT))&RCM_PARAM_RSTSRC_MASK)
/* SRS Bit Fields */
#define RCM_SRS_LVD_MASK                         0x2u
#define RCM_SRS_LVD_SHIFT                        1
#define RCM_SRS_LVD_WIDTH                        1
#define RCM_SRS_LVD(x)                           (((uint32)(((uint32)(x))<<RCM_SRS_LVD_SHIFT))&RCM_SRS_LVD_MASK)
#define RCM_SRS_LOC_MASK                         0x4u
#define RCM_SRS_LOC_SHIFT                        2
#define RCM_SRS_LOC_WIDTH                        1
#define RCM_SRS_LOC(x)                           (((uint32)(((uint32)(x))<<RCM_SRS_LOC_SHIFT))&RCM_SRS_LOC_MASK)
#define RCM_SRS_LOL_MASK                         0x8u
#define RCM_SRS_LOL_SHIFT                        3
#define RCM_SRS_LOL_WIDTH                        1
#define RCM_SRS_LOL(x)                           (((uint32)(((uint32)(x))<<RCM_SRS_LOL_SHIFT))&RCM_SRS_LOL_MASK)
#define RCM_SRS_WDOG_MASK                        0x20u
#define RCM_SRS_WDOG_SHIFT                       5
#define RCM_SRS_WDOG_WIDTH                       1
#define RCM_SRS_WDOG(x)                          (((uint32)(((uint32)(x))<<RCM_SRS_WDOG_SHIFT))&RCM_SRS_WDOG_MASK)
#define RCM_SRS_PIN_MASK                         0x40u
#define RCM_SRS_PIN_SHIFT                        6
#define RCM_SRS_PIN_WIDTH                        1
#define RCM_SRS_PIN(x)                           (((uint32)(((uint32)(x))<<RCM_SRS_PIN_SHIFT))&RCM_SRS_PIN_MASK)
#define RCM_SRS_POR_MASK                         0x80u
#define RCM_SRS_POR_SHIFT                        7
#define RCM_SRS_POR_WIDTH                        1
#define RCM_SRS_POR(x)                           (((uint32)(((uint32)(x))<<RCM_SRS_POR_SHIFT))&RCM_SRS_POR_MASK)
#define RCM_SRS_LOCKUP_MASK                      0x200u
#define RCM_SRS_LOCKUP_SHIFT                     9
#define RCM_SRS_LOCKUP_WIDTH                     1
#define RCM_SRS_LOCKUP(x)                        (((uint32)(((uint32)(x))<<RCM_SRS_LOCKUP_SHIFT))&RCM_SRS_LOCKUP_MASK)
#define RCM_SRS_SW_MASK                          0x400u
#define RCM_SRS_SW_SHIFT                         10
#define RCM_SRS_SW_WIDTH                         1
#define RCM_SRS_SW(x)                            (((uint32)(((uint32)(x))<<RCM_SRS_SW_SHIFT))&RCM_SRS_SW_MASK)
#define RCM_SRS_SACKERR_MASK                     0x2000u
#define RCM_SRS_SACKERR_SHIFT                    13
#define RCM_SRS_SACKERR_WIDTH                    1
#define RCM_SRS_SACKERR(x)                       (((uint32)(((uint32)(x))<<RCM_SRS_SACKERR_SHIFT))&RCM_SRS_SACKERR_MASK)
/* RPC Bit Fields */
#define RCM_RPC_RSTFLTSRW_MASK                   0x3u
#define RCM_RPC_RSTFLTSRW_SHIFT                  0
#define RCM_RPC_RSTFLTSRW_WIDTH                  2
#define RCM_RPC_RSTFLTSRW(x)                     (((uint32)(((uint32)(x))<<RCM_RPC_RSTFLTSRW_SHIFT))&RCM_RPC_RSTFLTSRW_MASK)
#define RCM_RPC_RSTFLTSS_MASK                    0x4u
#define RCM_RPC_RSTFLTSS_SHIFT                   2
#define RCM_RPC_RSTFLTSS_WIDTH                   1
#define RCM_RPC_RSTFLTSS(x)                      (((uint32)(((uint32)(x))<<RCM_RPC_RSTFLTSS_SHIFT))&RCM_RPC_RSTFLTSS_MASK)
#define RCM_RPC_RSTFLTSEL_MASK                   0x1F00u
#define RCM_RPC_RSTFLTSEL_SHIFT                  8
#define RCM_RPC_RSTFLTSEL_WIDTH                  5
#define RCM_RPC_RSTFLTSEL(x)                     (((uint32)(((uint32)(x))<<RCM_RPC_RSTFLTSEL_SHIFT))&RCM_RPC_RSTFLTSEL_MASK)
/* MR Bit Fields */
#define RCM_MR_BOOTROM_MASK                      0x6u
#define RCM_MR_BOOTROM_SHIFT                     1
#define RCM_MR_BOOTROM_WIDTH                     2
#define RCM_MR_BOOTROM(x)                        (((uint32)(((uint32)(x))<<RCM_MR_BOOTROM_SHIFT))&RCM_MR_BOOTROM_MASK)
/* FM Bit Fields */
#define RCM_FM_FORCEROM_MASK                     0x6u
#define RCM_FM_FORCEROM_SHIFT                    1
#define RCM_FM_FORCEROM_WIDTH                    2
#define RCM_FM_FORCEROM(x)                       (((uint32)(((uint32)(x))<<RCM_FM_FORCEROM_SHIFT))&RCM_FM_FORCEROM_MASK)
/* SSRS Bit Fields */
#define RCM_SSRS_SLVD_MASK                       0x2u
#define RCM_SSRS_SLVD_SHIFT                      1
#define RCM_SSRS_SLVD_WIDTH                      1
#define RCM_SSRS_SLVD(x)                         (((uint32)(((uint32)(x))<<RCM_SSRS_SLVD_SHIFT))&RCM_SSRS_SLVD_MASK)
#define RCM_SSRS_SLOC_MASK                       0x4u
#define RCM_SSRS_SLOC_SHIFT                      2
#define RCM_SSRS_SLOC_WIDTH                      1
#define RCM_SSRS_SLOC(x)                         (((uint32)(((uint32)(x))<<RCM_SSRS_SLOC_SHIFT))&RCM_SSRS_SLOC_MASK)
#define RCM_SSRS_SLOL_MASK                       0x8u
#define RCM_SSRS_SLOL_SHIFT                      3
#define RCM_SSRS_SLOL_WIDTH                      1
#define RCM_SSRS_SLOL(x)                         (((uint32)(((uint32)(x))<<RCM_SSRS_SLOL_SHIFT))&RCM_SSRS_SLOL_MASK)
#define RCM_SSRS_SWDOG_MASK                      0x20u
#define RCM_SSRS_SWDOG_SHIFT                     5
#define RCM_SSRS_SWDOG_WIDTH                     1
#define RCM_SSRS_SWDOG(x)                        (((uint32)(((uint32)(x))<<RCM_SSRS_SWDOG_SHIFT))&RCM_SSRS_SWDOG_MASK)
#define RCM_SSRS_SPIN_MASK                       0x40u
#define RCM_SSRS_SPIN_SHIFT                      6
#define RCM_SSRS_SPIN_WIDTH                      1
#define RCM_SSRS_SPIN(x)                         (((uint32)(((uint32)(x))<<RCM_SSRS_SPIN_SHIFT))&RCM_SSRS_SPIN_MASK)
#define RCM_SSRS_SPOR_MASK                       0x80u
#define RCM_SSRS_SPOR_SHIFT                      7
#define RCM_SSRS_SPOR_WIDTH                      1
#define RCM_SSRS_SPOR(x)                         (((uint32)(((uint32)(x))<<RCM_SSRS_SPOR_SHIFT))&RCM_SSRS_SPOR_MASK)
#define RCM_SSRS_SLOCKUP_MASK                    0x200u
#define RCM_SSRS_SLOCKUP_SHIFT                   9
#define RCM_SSRS_SLOCKUP_WIDTH                   1
#define RCM_SSRS_SLOCKUP(x)                      (((uint32)(((uint32)(x))<<RCM_SSRS_SLOCKUP_SHIFT))&RCM_SSRS_SLOCKUP_MASK)
#define RCM_SSRS_SSW_MASK                        0x400u
#define RCM_SSRS_SSW_SHIFT                       10
#define RCM_SSRS_SSW_WIDTH                       1
#define RCM_SSRS_SSW(x)                          (((uint32)(((uint32)(x))<<RCM_SSRS_SSW_SHIFT))&RCM_SSRS_SSW_MASK)
#define RCM_SSRS_SSACKERR_MASK                   0x2000u
#define RCM_SSRS_SSACKERR_SHIFT                  13
#define RCM_SSRS_SSACKERR_WIDTH                  1
#define RCM_SSRS_SSACKERR(x)                     (((uint32)(((uint32)(x))<<RCM_SSRS_SSACKERR_SHIFT))&RCM_SSRS_SSACKERR_MASK)
/* SRIE Bit Fields */
#define RCM_SRIE_DELAY_MASK                      0x3u
#define RCM_SRIE_DELAY_SHIFT                     0
#define RCM_SRIE_DELAY_WIDTH                     2
#define RCM_SRIE_DELAY(x)                        (((uint32)(((uint32)(x))<<RCM_SRIE_DELAY_SHIFT))&RCM_SRIE_DELAY_MASK)
#define RCM_SRIE_LOC_MASK                        0x4u
#define RCM_SRIE_LOC_SHIFT                       2
#define RCM_SRIE_LOC_WIDTH                       1
#define RCM_SRIE_LOC(x)                          (((uint32)(((uint32)(x))<<RCM_SRIE_LOC_SHIFT))&RCM_SRIE_LOC_MASK)
#define RCM_SRIE_LOL_MASK                        0x8u
#define RCM_SRIE_LOL_SHIFT                       3
#define RCM_SRIE_LOL_WIDTH                       1
#define RCM_SRIE_LOL(x)                          (((uint32)(((uint32)(x))<<RCM_SRIE_LOL_SHIFT))&RCM_SRIE_LOL_MASK)
#define RCM_SRIE_WDOG_MASK                       0x20u
#define RCM_SRIE_WDOG_SHIFT                      5
#define RCM_SRIE_WDOG_WIDTH                      1
#define RCM_SRIE_WDOG(x)                         (((uint32)(((uint32)(x))<<RCM_SRIE_WDOG_SHIFT))&RCM_SRIE_WDOG_MASK)
#define RCM_SRIE_PIN_MASK                        0x40u
#define RCM_SRIE_PIN_SHIFT                       6
#define RCM_SRIE_PIN_WIDTH                       1
#define RCM_SRIE_PIN(x)                          (((uint32)(((uint32)(x))<<RCM_SRIE_PIN_SHIFT))&RCM_SRIE_PIN_MASK)
#define RCM_SRIE_GIE_MASK                        0x80u
#define RCM_SRIE_GIE_SHIFT                       7
#define RCM_SRIE_GIE_WIDTH                       1
#define RCM_SRIE_GIE(x)                          (((uint32)(((uint32)(x))<<RCM_SRIE_GIE_SHIFT))&RCM_SRIE_GIE_MASK)
#define RCM_SRIE_LOCKUP_MASK                     0x200u
#define RCM_SRIE_LOCKUP_SHIFT                    9
#define RCM_SRIE_LOCKUP_WIDTH                    1
#define RCM_SRIE_LOCKUP(x)                       (((uint32)(((uint32)(x))<<RCM_SRIE_LOCKUP_SHIFT))&RCM_SRIE_LOCKUP_MASK)
#define RCM_SRIE_SW_MASK                         0x400u
#define RCM_SRIE_SW_SHIFT                        10
#define RCM_SRIE_SW_WIDTH                        1
#define RCM_SRIE_SW(x)                           (((uint32)(((uint32)(x))<<RCM_SRIE_SW_SHIFT))&RCM_SRIE_SW_MASK)
#define RCM_SRIE_SACKERR_MASK                    0x2000u
#define RCM_SRIE_SACKERR_SHIFT                   13
#define RCM_SRIE_SACKERR_WIDTH                   1
#define RCM_SRIE_SACKERR(x)                      (((uint32)(((uint32)(x))<<RCM_SRIE_SACKERR_SHIFT))&RCM_SRIE_SACKERR_MASK)

/*!
 * @}
 */ /* end of group RCM_Register_Masks */


/* RCM - Peripheral instance base addresses */
/** Peripheral RCM base address */
#define RCM_BASE                                 (0x4007F000u)
/** Peripheral RCM base pointer */
#define RCM                                      ((RCM_Type *)RCM_BASE)
#define RCM_BASE_PTR                             (RCM)
/** Array initializer of RCM peripheral base addresses */
#define RCM_BASE_ADDRS                           { RCM_BASE }
/** Array initializer of RCM peripheral base pointers */
#define RCM_BASE_PTRS                            { RCM }

/* ----------------------------------------------------------------------------
   -- RCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RCM_Register_Accessor_Macros RCM - Register accessor macros
 * @{
 */


/* RCM - Register instance definitions */
/* RCM */
#define RCM_VERID                                RCM_VERID_REG(RCM)
#define RCM_PARAM                                RCM_PARAM_REG(RCM)
#define RCM_SRS                                  RCM_SRS_REG(RCM)
#define RCM_RPC                                  RCM_RPC_REG(RCM)
#define RCM_MR                                   RCM_MR_REG(RCM)
#define RCM_FM                                   RCM_FM_REG(RCM)
#define RCM_SSRS                                 RCM_SSRS_REG(RCM)
#define RCM_SRIE                                 RCM_SRIE_REG(RCM)

/*!
 * @}
 */ /* end of group RCM_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group RCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- RTC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Peripheral_Access_Layer RTC Peripheral Access Layer
 * @{
 */

/** RTC - Register Layout Typedef */
typedef struct {
  __IO uint32 TSR;                                 /**< RTC Time Seconds Register, offset: 0x0 */
  __IO uint32 TPR;                                 /**< RTC Time Prescaler Register, offset: 0x4 */
  __IO uint32 TAR;                                 /**< RTC Time Alarm Register, offset: 0x8 */
  __IO uint32 TCR;                                 /**< RTC Time Compensation Register, offset: 0xC */
  __IO uint32 CR;                                  /**< RTC Control Register, offset: 0x10 */
  __IO uint32 SR;                                  /**< RTC Status Register, offset: 0x14 */
  __IO uint32 LR;                                  /**< RTC Lock Register, offset: 0x18 */
  __IO uint32 IER;                                 /**< RTC Interrupt Enable Register, offset: 0x1C */
       uint8 RESERVED_0[2016];
  __IO uint32 WAR;                                 /**< RTC Write Access Register, offset: 0x800 */
  __IO uint32 RAR;                                 /**< RTC Read Access Register, offset: 0x804 */
} RTC_Type, *RTC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- RTC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Register_Accessor_Macros RTC - Register accessor macros
 * @{
 */


/* RTC - Register accessors */
#define RTC_TSR_REG(base)                        ((base)->TSR)
#define RTC_TPR_REG(base)                        ((base)->TPR)
#define RTC_TAR_REG(base)                        ((base)->TAR)
#define RTC_TCR_REG(base)                        ((base)->TCR)
#define RTC_CR_REG(base)                         ((base)->CR)
#define RTC_SR_REG(base)                         ((base)->SR)
#define RTC_LR_REG(base)                         ((base)->LR)
#define RTC_IER_REG(base)                        ((base)->IER)
#define RTC_WAR_REG(base)                        ((base)->WAR)
#define RTC_RAR_REG(base)                        ((base)->RAR)

/*!
 * @}
 */ /* end of group RTC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- RTC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Register_Masks RTC Register Masks
 * @{
 */

/* TSR Bit Fields */
#define RTC_TSR_TSR_MASK                         0xFFFFFFFFu
#define RTC_TSR_TSR_SHIFT                        0
#define RTC_TSR_TSR_WIDTH                        32
#define RTC_TSR_TSR(x)                           (((uint32)(((uint32)(x))<<RTC_TSR_TSR_SHIFT))&RTC_TSR_TSR_MASK)
/* TPR Bit Fields */
#define RTC_TPR_TPR_MASK                         0xFFFFu
#define RTC_TPR_TPR_SHIFT                        0
#define RTC_TPR_TPR_WIDTH                        16
#define RTC_TPR_TPR(x)                           (((uint32)(((uint32)(x))<<RTC_TPR_TPR_SHIFT))&RTC_TPR_TPR_MASK)
/* TAR Bit Fields */
#define RTC_TAR_TAR_MASK                         0xFFFFFFFFu
#define RTC_TAR_TAR_SHIFT                        0
#define RTC_TAR_TAR_WIDTH                        32
#define RTC_TAR_TAR(x)                           (((uint32)(((uint32)(x))<<RTC_TAR_TAR_SHIFT))&RTC_TAR_TAR_MASK)
/* TCR Bit Fields */
#define RTC_TCR_TCR_MASK                         0xFFu
#define RTC_TCR_TCR_SHIFT                        0
#define RTC_TCR_TCR_WIDTH                        8
#define RTC_TCR_TCR(x)                           (((uint32)(((uint32)(x))<<RTC_TCR_TCR_SHIFT))&RTC_TCR_TCR_MASK)
#define RTC_TCR_CIR_MASK                         0xFF00u
#define RTC_TCR_CIR_SHIFT                        8
#define RTC_TCR_CIR_WIDTH                        8
#define RTC_TCR_CIR(x)                           (((uint32)(((uint32)(x))<<RTC_TCR_CIR_SHIFT))&RTC_TCR_CIR_MASK)
#define RTC_TCR_TCV_MASK                         0xFF0000u
#define RTC_TCR_TCV_SHIFT                        16
#define RTC_TCR_TCV_WIDTH                        8
#define RTC_TCR_TCV(x)                           (((uint32)(((uint32)(x))<<RTC_TCR_TCV_SHIFT))&RTC_TCR_TCV_MASK)
#define RTC_TCR_CIC_MASK                         0xFF000000u
#define RTC_TCR_CIC_SHIFT                        24
#define RTC_TCR_CIC_WIDTH                        8
#define RTC_TCR_CIC(x)                           (((uint32)(((uint32)(x))<<RTC_TCR_CIC_SHIFT))&RTC_TCR_CIC_MASK)
/* CR Bit Fields */
#define RTC_CR_SWR_MASK                          0x1u
#define RTC_CR_SWR_SHIFT                         0
#define RTC_CR_SWR_WIDTH                         1
#define RTC_CR_SWR(x)                            (((uint32)(((uint32)(x))<<RTC_CR_SWR_SHIFT))&RTC_CR_SWR_MASK)
#define RTC_CR_WPE_MASK                          0x2u
#define RTC_CR_WPE_SHIFT                         1
#define RTC_CR_WPE_WIDTH                         1
#define RTC_CR_WPE(x)                            (((uint32)(((uint32)(x))<<RTC_CR_WPE_SHIFT))&RTC_CR_WPE_MASK)
#define RTC_CR_SUP_MASK                          0x4u
#define RTC_CR_SUP_SHIFT                         2
#define RTC_CR_SUP_WIDTH                         1
#define RTC_CR_SUP(x)                            (((uint32)(((uint32)(x))<<RTC_CR_SUP_SHIFT))&RTC_CR_SUP_MASK)
#define RTC_CR_UM_MASK                           0x8u
#define RTC_CR_UM_SHIFT                          3
#define RTC_CR_UM_WIDTH                          1
#define RTC_CR_UM(x)                             (((uint32)(((uint32)(x))<<RTC_CR_UM_SHIFT))&RTC_CR_UM_MASK)
#define RTC_CR_WPS_MASK                          0x10u
#define RTC_CR_WPS_SHIFT                         4
#define RTC_CR_WPS_WIDTH                         1
#define RTC_CR_WPS(x)                            (((uint32)(((uint32)(x))<<RTC_CR_WPS_SHIFT))&RTC_CR_WPS_MASK)
#define RTC_CR_CPS_MASK                          0x20u
#define RTC_CR_CPS_SHIFT                         5
#define RTC_CR_CPS_WIDTH                         1
#define RTC_CR_CPS(x)                            (((uint32)(((uint32)(x))<<RTC_CR_CPS_SHIFT))&RTC_CR_CPS_MASK)
#define RTC_CR_LPOS_MASK                         0x80u
#define RTC_CR_LPOS_SHIFT                        7
#define RTC_CR_LPOS_WIDTH                        1
#define RTC_CR_LPOS(x)                           (((uint32)(((uint32)(x))<<RTC_CR_LPOS_SHIFT))&RTC_CR_LPOS_MASK)
#define RTC_CR_OSCE_MASK                         0x100u
#define RTC_CR_OSCE_SHIFT                        8
#define RTC_CR_OSCE_WIDTH                        1
#define RTC_CR_OSCE(x)                           (((uint32)(((uint32)(x))<<RTC_CR_OSCE_SHIFT))&RTC_CR_OSCE_MASK)
#define RTC_CR_CLKO_MASK                         0x200u
#define RTC_CR_CLKO_SHIFT                        9
#define RTC_CR_CLKO_WIDTH                        1
#define RTC_CR_CLKO(x)                           (((uint32)(((uint32)(x))<<RTC_CR_CLKO_SHIFT))&RTC_CR_CLKO_MASK)
#define RTC_CR_SC16P_MASK                        0x400u
#define RTC_CR_SC16P_SHIFT                       10
#define RTC_CR_SC16P_WIDTH                       1
#define RTC_CR_SC16P(x)                          (((uint32)(((uint32)(x))<<RTC_CR_SC16P_SHIFT))&RTC_CR_SC16P_MASK)
#define RTC_CR_SC8P_MASK                         0x800u
#define RTC_CR_SC8P_SHIFT                        11
#define RTC_CR_SC8P_WIDTH                        1
#define RTC_CR_SC8P(x)                           (((uint32)(((uint32)(x))<<RTC_CR_SC8P_SHIFT))&RTC_CR_SC8P_MASK)
#define RTC_CR_SC4P_MASK                         0x1000u
#define RTC_CR_SC4P_SHIFT                        12
#define RTC_CR_SC4P_WIDTH                        1
#define RTC_CR_SC4P(x)                           (((uint32)(((uint32)(x))<<RTC_CR_SC4P_SHIFT))&RTC_CR_SC4P_MASK)
#define RTC_CR_SC2P_MASK                         0x2000u
#define RTC_CR_SC2P_SHIFT                        13
#define RTC_CR_SC2P_WIDTH                        1
#define RTC_CR_SC2P(x)                           (((uint32)(((uint32)(x))<<RTC_CR_SC2P_SHIFT))&RTC_CR_SC2P_MASK)
#define RTC_CR_CPE_MASK                          0x3000000u
#define RTC_CR_CPE_SHIFT                         24
#define RTC_CR_CPE_WIDTH                         2
#define RTC_CR_CPE(x)                            (((uint32)(((uint32)(x))<<RTC_CR_CPE_SHIFT))&RTC_CR_CPE_MASK)
/* SR Bit Fields */
#define RTC_SR_TIF_MASK                          0x1u
#define RTC_SR_TIF_SHIFT                         0
#define RTC_SR_TIF_WIDTH                         1
#define RTC_SR_TIF(x)                            (((uint32)(((uint32)(x))<<RTC_SR_TIF_SHIFT))&RTC_SR_TIF_MASK)
#define RTC_SR_TOF_MASK                          0x2u
#define RTC_SR_TOF_SHIFT                         1
#define RTC_SR_TOF_WIDTH                         1
#define RTC_SR_TOF(x)                            (((uint32)(((uint32)(x))<<RTC_SR_TOF_SHIFT))&RTC_SR_TOF_MASK)
#define RTC_SR_TAF_MASK                          0x4u
#define RTC_SR_TAF_SHIFT                         2
#define RTC_SR_TAF_WIDTH                         1
#define RTC_SR_TAF(x)                            (((uint32)(((uint32)(x))<<RTC_SR_TAF_SHIFT))&RTC_SR_TAF_MASK)
#define RTC_SR_TCE_MASK                          0x10u
#define RTC_SR_TCE_SHIFT                         4
#define RTC_SR_TCE_WIDTH                         1
#define RTC_SR_TCE(x)                            (((uint32)(((uint32)(x))<<RTC_SR_TCE_SHIFT))&RTC_SR_TCE_MASK)
/* LR Bit Fields */
#define RTC_LR_TCL_MASK                          0x8u
#define RTC_LR_TCL_SHIFT                         3
#define RTC_LR_TCL_WIDTH                         1
#define RTC_LR_TCL(x)                            (((uint32)(((uint32)(x))<<RTC_LR_TCL_SHIFT))&RTC_LR_TCL_MASK)
#define RTC_LR_CRL_MASK                          0x10u
#define RTC_LR_CRL_SHIFT                         4
#define RTC_LR_CRL_WIDTH                         1
#define RTC_LR_CRL(x)                            (((uint32)(((uint32)(x))<<RTC_LR_CRL_SHIFT))&RTC_LR_CRL_MASK)
#define RTC_LR_SRL_MASK                          0x20u
#define RTC_LR_SRL_SHIFT                         5
#define RTC_LR_SRL_WIDTH                         1
#define RTC_LR_SRL(x)                            (((uint32)(((uint32)(x))<<RTC_LR_SRL_SHIFT))&RTC_LR_SRL_MASK)
#define RTC_LR_LRL_MASK                          0x40u
#define RTC_LR_LRL_SHIFT                         6
#define RTC_LR_LRL_WIDTH                         1
#define RTC_LR_LRL(x)                            (((uint32)(((uint32)(x))<<RTC_LR_LRL_SHIFT))&RTC_LR_LRL_MASK)
/* IER Bit Fields */
#define RTC_IER_TIIE_MASK                        0x1u
#define RTC_IER_TIIE_SHIFT                       0
#define RTC_IER_TIIE_WIDTH                       1
#define RTC_IER_TIIE(x)                          (((uint32)(((uint32)(x))<<RTC_IER_TIIE_SHIFT))&RTC_IER_TIIE_MASK)
#define RTC_IER_TOIE_MASK                        0x2u
#define RTC_IER_TOIE_SHIFT                       1
#define RTC_IER_TOIE_WIDTH                       1
#define RTC_IER_TOIE(x)                          (((uint32)(((uint32)(x))<<RTC_IER_TOIE_SHIFT))&RTC_IER_TOIE_MASK)
#define RTC_IER_TAIE_MASK                        0x4u
#define RTC_IER_TAIE_SHIFT                       2
#define RTC_IER_TAIE_WIDTH                       1
#define RTC_IER_TAIE(x)                          (((uint32)(((uint32)(x))<<RTC_IER_TAIE_SHIFT))&RTC_IER_TAIE_MASK)
#define RTC_IER_TSIE_MASK                        0x10u
#define RTC_IER_TSIE_SHIFT                       4
#define RTC_IER_TSIE_WIDTH                       1
#define RTC_IER_TSIE(x)                          (((uint32)(((uint32)(x))<<RTC_IER_TSIE_SHIFT))&RTC_IER_TSIE_MASK)
#define RTC_IER_WPON_MASK                        0x80u
#define RTC_IER_WPON_SHIFT                       7
#define RTC_IER_WPON_WIDTH                       1
#define RTC_IER_WPON(x)                          (((uint32)(((uint32)(x))<<RTC_IER_WPON_SHIFT))&RTC_IER_WPON_MASK)
#define RTC_IER_TSIC_MASK                        0x70000u
#define RTC_IER_TSIC_SHIFT                       16
#define RTC_IER_TSIC_WIDTH                       3
#define RTC_IER_TSIC(x)                          (((uint32)(((uint32)(x))<<RTC_IER_TSIC_SHIFT))&RTC_IER_TSIC_MASK)
/* WAR Bit Fields */
#define RTC_WAR_TSRW_MASK                        0x1u
#define RTC_WAR_TSRW_SHIFT                       0
#define RTC_WAR_TSRW_WIDTH                       1
#define RTC_WAR_TSRW(x)                          (((uint32)(((uint32)(x))<<RTC_WAR_TSRW_SHIFT))&RTC_WAR_TSRW_MASK)
#define RTC_WAR_TPRW_MASK                        0x2u
#define RTC_WAR_TPRW_SHIFT                       1
#define RTC_WAR_TPRW_WIDTH                       1
#define RTC_WAR_TPRW(x)                          (((uint32)(((uint32)(x))<<RTC_WAR_TPRW_SHIFT))&RTC_WAR_TPRW_MASK)
#define RTC_WAR_TARW_MASK                        0x4u
#define RTC_WAR_TARW_SHIFT                       2
#define RTC_WAR_TARW_WIDTH                       1
#define RTC_WAR_TARW(x)                          (((uint32)(((uint32)(x))<<RTC_WAR_TARW_SHIFT))&RTC_WAR_TARW_MASK)
#define RTC_WAR_TCRW_MASK                        0x8u
#define RTC_WAR_TCRW_SHIFT                       3
#define RTC_WAR_TCRW_WIDTH                       1
#define RTC_WAR_TCRW(x)                          (((uint32)(((uint32)(x))<<RTC_WAR_TCRW_SHIFT))&RTC_WAR_TCRW_MASK)
#define RTC_WAR_CRW_MASK                         0x10u
#define RTC_WAR_CRW_SHIFT                        4
#define RTC_WAR_CRW_WIDTH                        1
#define RTC_WAR_CRW(x)                           (((uint32)(((uint32)(x))<<RTC_WAR_CRW_SHIFT))&RTC_WAR_CRW_MASK)
#define RTC_WAR_SRW_MASK                         0x20u
#define RTC_WAR_SRW_SHIFT                        5
#define RTC_WAR_SRW_WIDTH                        1
#define RTC_WAR_SRW(x)                           (((uint32)(((uint32)(x))<<RTC_WAR_SRW_SHIFT))&RTC_WAR_SRW_MASK)
#define RTC_WAR_LRW_MASK                         0x40u
#define RTC_WAR_LRW_SHIFT                        6
#define RTC_WAR_LRW_WIDTH                        1
#define RTC_WAR_LRW(x)                           (((uint32)(((uint32)(x))<<RTC_WAR_LRW_SHIFT))&RTC_WAR_LRW_MASK)
#define RTC_WAR_IERW_MASK                        0x80u
#define RTC_WAR_IERW_SHIFT                       7
#define RTC_WAR_IERW_WIDTH                       1
#define RTC_WAR_IERW(x)                          (((uint32)(((uint32)(x))<<RTC_WAR_IERW_SHIFT))&RTC_WAR_IERW_MASK)
/* RAR Bit Fields */
#define RTC_RAR_TSRR_MASK                        0x1u
#define RTC_RAR_TSRR_SHIFT                       0
#define RTC_RAR_TSRR_WIDTH                       1
#define RTC_RAR_TSRR(x)                          (((uint32)(((uint32)(x))<<RTC_RAR_TSRR_SHIFT))&RTC_RAR_TSRR_MASK)
#define RTC_RAR_TPRR_MASK                        0x2u
#define RTC_RAR_TPRR_SHIFT                       1
#define RTC_RAR_TPRR_WIDTH                       1
#define RTC_RAR_TPRR(x)                          (((uint32)(((uint32)(x))<<RTC_RAR_TPRR_SHIFT))&RTC_RAR_TPRR_MASK)
#define RTC_RAR_TARR_MASK                        0x4u
#define RTC_RAR_TARR_SHIFT                       2
#define RTC_RAR_TARR_WIDTH                       1
#define RTC_RAR_TARR(x)                          (((uint32)(((uint32)(x))<<RTC_RAR_TARR_SHIFT))&RTC_RAR_TARR_MASK)
#define RTC_RAR_TCRR_MASK                        0x8u
#define RTC_RAR_TCRR_SHIFT                       3
#define RTC_RAR_TCRR_WIDTH                       1
#define RTC_RAR_TCRR(x)                          (((uint32)(((uint32)(x))<<RTC_RAR_TCRR_SHIFT))&RTC_RAR_TCRR_MASK)
#define RTC_RAR_CRR_MASK                         0x10u
#define RTC_RAR_CRR_SHIFT                        4
#define RTC_RAR_CRR_WIDTH                        1
#define RTC_RAR_CRR(x)                           (((uint32)(((uint32)(x))<<RTC_RAR_CRR_SHIFT))&RTC_RAR_CRR_MASK)
#define RTC_RAR_SRR_MASK                         0x20u
#define RTC_RAR_SRR_SHIFT                        5
#define RTC_RAR_SRR_WIDTH                        1
#define RTC_RAR_SRR(x)                           (((uint32)(((uint32)(x))<<RTC_RAR_SRR_SHIFT))&RTC_RAR_SRR_MASK)
#define RTC_RAR_LRR_MASK                         0x40u
#define RTC_RAR_LRR_SHIFT                        6
#define RTC_RAR_LRR_WIDTH                        1
#define RTC_RAR_LRR(x)                           (((uint32)(((uint32)(x))<<RTC_RAR_LRR_SHIFT))&RTC_RAR_LRR_MASK)
#define RTC_RAR_IERR_MASK                        0x80u
#define RTC_RAR_IERR_SHIFT                       7
#define RTC_RAR_IERR_WIDTH                       1
#define RTC_RAR_IERR(x)                          (((uint32)(((uint32)(x))<<RTC_RAR_IERR_SHIFT))&RTC_RAR_IERR_MASK)

/*!
 * @}
 */ /* end of group RTC_Register_Masks */


/* RTC - Peripheral instance base addresses */
/** Peripheral RTC base address */
#define RTC_BASE                                 (0x4003D000u)
/** Peripheral RTC base pointer */
#define RTC                                      ((RTC_Type *)RTC_BASE)
#define RTC_BASE_PTR                             (RTC)
/** Array initializer of RTC peripheral base addresses */
#define RTC_BASE_ADDRS                           { RTC_BASE }
/** Array initializer of RTC peripheral base pointers */
#define RTC_BASE_PTRS                            { RTC }

/* ----------------------------------------------------------------------------
   -- RTC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Register_Accessor_Macros RTC - Register accessor macros
 * @{
 */


/* RTC - Register instance definitions */
/* RTC */
#define RTC_TSR                                  RTC_TSR_REG(RTC)
#define RTC_TPR                                  RTC_TPR_REG(RTC)
#define RTC_TAR                                  RTC_TAR_REG(RTC)
#define RTC_TCR                                  RTC_TCR_REG(RTC)
#define RTC_CR                                   RTC_CR_REG(RTC)
#define RTC_SR                                   RTC_SR_REG(RTC)
#define RTC_LR                                   RTC_LR_REG(RTC)
#define RTC_IER                                  RTC_IER_REG(RTC)
#define RTC_WAR                                  RTC_WAR_REG(RTC)
#define RTC_RAR                                  RTC_RAR_REG(RTC)

/*!
 * @}
 */ /* end of group RTC_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group RTC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SCB Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCB_Peripheral_Access_Layer SCB Peripheral Access Layer
 * @{
 */

/** SCB - Register Layout Typedef */
typedef struct {
       uint8 RESERVED_0[8];
  __IO uint32 ACTLR;                               /**< Auxiliary Control Register,, offset: 0x8 */
       uint8 RESERVED_1[3316];
  __I  uint32 CPUID;                               /**< CPUID Base Register, offset: 0xD00 */
  __IO uint32 ICSR;                                /**< Interrupt Control and State Register, offset: 0xD04 */
  __IO uint32 VTOR;                                /**< Vector Table Offset Register, offset: 0xD08 */
  __IO uint32 AIRCR;                               /**< Application Interrupt and Reset Control Register, offset: 0xD0C */
  __IO uint32 SCR;                                 /**< System Control Register, offset: 0xD10 */
  __IO uint32 CCR;                                 /**< Configuration and Control Register, offset: 0xD14 */
  __IO uint32 SHPR1;                               /**< System Handler Priority Register 1, offset: 0xD18 */
  __IO uint32 SHPR2;                               /**< System Handler Priority Register 2, offset: 0xD1C */
  __IO uint32 SHPR3;                               /**< System Handler Priority Register 3, offset: 0xD20 */
  __IO uint32 SHCSR;                               /**< System Handler Control and State Register, offset: 0xD24 */
  __IO uint32 CFSR;                                /**< Configurable Fault Status Registers, offset: 0xD28 */
  __IO uint32 HFSR;                                /**< HardFault Status register, offset: 0xD2C */
  __IO uint32 DFSR;                                /**< Debug Fault Status Register, offset: 0xD30 */
  __IO uint32 MMFAR;                               /**< MemManage Address Register, offset: 0xD34 */
  __IO uint32 BFAR;                                /**< BusFault Address Register, offset: 0xD38 */
  __IO uint32 AFSR;                                /**< Auxiliary Fault Status Register, offset: 0xD3C */
} SCB_Type, *SCB_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SCB - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCB_Register_Accessor_Macros SCB - Register accessor macros
 * @{
 */


/* SCB - Register accessors */
#define SCB_ACTLR_REG(base)                      ((base)->ACTLR)
#define SCB_CPUID_REG(base)                      ((base)->CPUID)
#define SCB_ICSR_REG(base)                       ((base)->ICSR)
#define SCB_VTOR_REG(base)                       ((base)->VTOR)
#define SCB_AIRCR_REG(base)                      ((base)->AIRCR)
#define SCB_SCR_REG(base)                        ((base)->SCR)
#define SCB_CCR_REG(base)                        ((base)->CCR)
#define SCB_SHPR1_REG(base)                      ((base)->SHPR1)
#define SCB_SHPR2_REG(base)                      ((base)->SHPR2)
#define SCB_SHPR3_REG(base)                      ((base)->SHPR3)
#define SCB_SHCSR_REG(base)                      ((base)->SHCSR)
#define SCB_CFSR_REG(base)                       ((base)->CFSR)
#define SCB_HFSR_REG(base)                       ((base)->HFSR)
#define SCB_DFSR_REG(base)                       ((base)->DFSR)
#define SCB_MMFAR_REG(base)                      ((base)->MMFAR)
#define SCB_BFAR_REG(base)                       ((base)->BFAR)
#define SCB_AFSR_REG(base)                       ((base)->AFSR)

/*!
 * @}
 */ /* end of group SCB_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SCB Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCB_Register_Masks SCB Register Masks
 * @{
 */

/* ACTLR Bit Fields */
#define SCB_ACTLR_DISMCYCINT_MASK                0x1u
#define SCB_ACTLR_DISMCYCINT_SHIFT               0
#define SCB_ACTLR_DISMCYCINT_WIDTH               1
#define SCB_ACTLR_DISMCYCINT(x)                  (((uint32)(((uint32)(x))<<SCB_ACTLR_DISMCYCINT_SHIFT))&SCB_ACTLR_DISMCYCINT_MASK)
#define SCB_ACTLR_DISDEFWBUF_MASK                0x2u
#define SCB_ACTLR_DISDEFWBUF_SHIFT               1
#define SCB_ACTLR_DISDEFWBUF_WIDTH               1
#define SCB_ACTLR_DISDEFWBUF(x)                  (((uint32)(((uint32)(x))<<SCB_ACTLR_DISDEFWBUF_SHIFT))&SCB_ACTLR_DISDEFWBUF_MASK)
#define SCB_ACTLR_DISFOLD_MASK                   0x4u
#define SCB_ACTLR_DISFOLD_SHIFT                  2
#define SCB_ACTLR_DISFOLD_WIDTH                  1
#define SCB_ACTLR_DISFOLD(x)                     (((uint32)(((uint32)(x))<<SCB_ACTLR_DISFOLD_SHIFT))&SCB_ACTLR_DISFOLD_MASK)
/* CPUID Bit Fields */
#define SCB_CPUID_REVISION_MASK                  0xFu
#define SCB_CPUID_REVISION_SHIFT                 0
#define SCB_CPUID_REVISION_WIDTH                 4
#define SCB_CPUID_REVISION(x)                    (((uint32)(((uint32)(x))<<SCB_CPUID_REVISION_SHIFT))&SCB_CPUID_REVISION_MASK)
#define SCB_CPUID_PARTNO_MASK                    0xFFF0u
#define SCB_CPUID_PARTNO_SHIFT                   4
#define SCB_CPUID_PARTNO_WIDTH                   12
#define SCB_CPUID_PARTNO(x)                      (((uint32)(((uint32)(x))<<SCB_CPUID_PARTNO_SHIFT))&SCB_CPUID_PARTNO_MASK)
#define SCB_CPUID_VARIANT_MASK                   0xF00000u
#define SCB_CPUID_VARIANT_SHIFT                  20
#define SCB_CPUID_VARIANT_WIDTH                  4
#define SCB_CPUID_VARIANT(x)                     (((uint32)(((uint32)(x))<<SCB_CPUID_VARIANT_SHIFT))&SCB_CPUID_VARIANT_MASK)
#define SCB_CPUID_IMPLEMENTER_MASK               0xFF000000u
#define SCB_CPUID_IMPLEMENTER_SHIFT              24
#define SCB_CPUID_IMPLEMENTER_WIDTH              8
#define SCB_CPUID_IMPLEMENTER(x)                 (((uint32)(((uint32)(x))<<SCB_CPUID_IMPLEMENTER_SHIFT))&SCB_CPUID_IMPLEMENTER_MASK)
/* ICSR Bit Fields */
#define SCB_ICSR_VECTACTIVE_MASK                 0x1FFu
#define SCB_ICSR_VECTACTIVE_SHIFT                0
#define SCB_ICSR_VECTACTIVE_WIDTH                9
#define SCB_ICSR_VECTACTIVE(x)                   (((uint32)(((uint32)(x))<<SCB_ICSR_VECTACTIVE_SHIFT))&SCB_ICSR_VECTACTIVE_MASK)
#define SCB_ICSR_RETTOBASE_MASK                  0x800u
#define SCB_ICSR_RETTOBASE_SHIFT                 11
#define SCB_ICSR_RETTOBASE_WIDTH                 1
#define SCB_ICSR_RETTOBASE(x)                    (((uint32)(((uint32)(x))<<SCB_ICSR_RETTOBASE_SHIFT))&SCB_ICSR_RETTOBASE_MASK)
#define SCB_ICSR_VECTPENDING_MASK                0x3F000u
#define SCB_ICSR_VECTPENDING_SHIFT               12
#define SCB_ICSR_VECTPENDING_WIDTH               6
#define SCB_ICSR_VECTPENDING(x)                  (((uint32)(((uint32)(x))<<SCB_ICSR_VECTPENDING_SHIFT))&SCB_ICSR_VECTPENDING_MASK)
#define SCB_ICSR_ISRPENDING_MASK                 0x400000u
#define SCB_ICSR_ISRPENDING_SHIFT                22
#define SCB_ICSR_ISRPENDING_WIDTH                1
#define SCB_ICSR_ISRPENDING(x)                   (((uint32)(((uint32)(x))<<SCB_ICSR_ISRPENDING_SHIFT))&SCB_ICSR_ISRPENDING_MASK)
#define SCB_ICSR_ISRPREEMPT_MASK                 0x800000u
#define SCB_ICSR_ISRPREEMPT_SHIFT                23
#define SCB_ICSR_ISRPREEMPT_WIDTH                1
#define SCB_ICSR_ISRPREEMPT(x)                   (((uint32)(((uint32)(x))<<SCB_ICSR_ISRPREEMPT_SHIFT))&SCB_ICSR_ISRPREEMPT_MASK)
#define SCB_ICSR_PENDSTCLR_MASK                  0x2000000u
#define SCB_ICSR_PENDSTCLR_SHIFT                 25
#define SCB_ICSR_PENDSTCLR_WIDTH                 1
#define SCB_ICSR_PENDSTCLR(x)                    (((uint32)(((uint32)(x))<<SCB_ICSR_PENDSTCLR_SHIFT))&SCB_ICSR_PENDSTCLR_MASK)
#define SCB_ICSR_PENDSTSET_MASK                  0x4000000u
#define SCB_ICSR_PENDSTSET_SHIFT                 26
#define SCB_ICSR_PENDSTSET_WIDTH                 1
#define SCB_ICSR_PENDSTSET(x)                    (((uint32)(((uint32)(x))<<SCB_ICSR_PENDSTSET_SHIFT))&SCB_ICSR_PENDSTSET_MASK)
#define SCB_ICSR_PENDSVCLR_MASK                  0x8000000u
#define SCB_ICSR_PENDSVCLR_SHIFT                 27
#define SCB_ICSR_PENDSVCLR_WIDTH                 1
#define SCB_ICSR_PENDSVCLR(x)                    (((uint32)(((uint32)(x))<<SCB_ICSR_PENDSVCLR_SHIFT))&SCB_ICSR_PENDSVCLR_MASK)
#define SCB_ICSR_PENDSVSET_MASK                  0x10000000u
#define SCB_ICSR_PENDSVSET_SHIFT                 28
#define SCB_ICSR_PENDSVSET_WIDTH                 1
#define SCB_ICSR_PENDSVSET(x)                    (((uint32)(((uint32)(x))<<SCB_ICSR_PENDSVSET_SHIFT))&SCB_ICSR_PENDSVSET_MASK)
#define SCB_ICSR_NMIPENDSET_MASK                 0x80000000u
#define SCB_ICSR_NMIPENDSET_SHIFT                31
#define SCB_ICSR_NMIPENDSET_WIDTH                1
#define SCB_ICSR_NMIPENDSET(x)                   (((uint32)(((uint32)(x))<<SCB_ICSR_NMIPENDSET_SHIFT))&SCB_ICSR_NMIPENDSET_MASK)
/* VTOR Bit Fields */
#define SCB_VTOR_TBLOFF_MASK                     0xFFFFFF80u
#define SCB_VTOR_TBLOFF_SHIFT                    7
#define SCB_VTOR_TBLOFF_WIDTH                    25
#define SCB_VTOR_TBLOFF(x)                       (((uint32)(((uint32)(x))<<SCB_VTOR_TBLOFF_SHIFT))&SCB_VTOR_TBLOFF_MASK)
/* AIRCR Bit Fields */
#define SCB_AIRCR_VECTRESET_MASK                 0x1u
#define SCB_AIRCR_VECTRESET_SHIFT                0
#define SCB_AIRCR_VECTRESET_WIDTH                1
#define SCB_AIRCR_VECTRESET(x)                   (((uint32)(((uint32)(x))<<SCB_AIRCR_VECTRESET_SHIFT))&SCB_AIRCR_VECTRESET_MASK)
#define SCB_AIRCR_VECTCLRACTIVE_MASK             0x2u
#define SCB_AIRCR_VECTCLRACTIVE_SHIFT            1
#define SCB_AIRCR_VECTCLRACTIVE_WIDTH            1
#define SCB_AIRCR_VECTCLRACTIVE(x)               (((uint32)(((uint32)(x))<<SCB_AIRCR_VECTCLRACTIVE_SHIFT))&SCB_AIRCR_VECTCLRACTIVE_MASK)
#define SCB_AIRCR_SYSRESETREQ_MASK               0x4u
#define SCB_AIRCR_SYSRESETREQ_SHIFT              2
#define SCB_AIRCR_SYSRESETREQ_WIDTH              1
#define SCB_AIRCR_SYSRESETREQ(x)                 (((uint32)(((uint32)(x))<<SCB_AIRCR_SYSRESETREQ_SHIFT))&SCB_AIRCR_SYSRESETREQ_MASK)
#define SCB_AIRCR_PRIGROUP_MASK                  0x700u
#define SCB_AIRCR_PRIGROUP_SHIFT                 8
#define SCB_AIRCR_PRIGROUP_WIDTH                 3
#define SCB_AIRCR_PRIGROUP(x)                    (((uint32)(((uint32)(x))<<SCB_AIRCR_PRIGROUP_SHIFT))&SCB_AIRCR_PRIGROUP_MASK)
#define SCB_AIRCR_ENDIANNESS_MASK                0x8000u
#define SCB_AIRCR_ENDIANNESS_SHIFT               15
#define SCB_AIRCR_ENDIANNESS_WIDTH               1
#define SCB_AIRCR_ENDIANNESS(x)                  (((uint32)(((uint32)(x))<<SCB_AIRCR_ENDIANNESS_SHIFT))&SCB_AIRCR_ENDIANNESS_MASK)
#define SCB_AIRCR_VECTKEY_MASK                   0xFFFF0000u
#define SCB_AIRCR_VECTKEY_SHIFT                  16
#define SCB_AIRCR_VECTKEY_WIDTH                  16
#define SCB_AIRCR_VECTKEY(x)                     (((uint32)(((uint32)(x))<<SCB_AIRCR_VECTKEY_SHIFT))&SCB_AIRCR_VECTKEY_MASK)
/* SCR Bit Fields */
#define SCB_SCR_SLEEPONEXIT_MASK                 0x2u
#define SCB_SCR_SLEEPONEXIT_SHIFT                1
#define SCB_SCR_SLEEPONEXIT_WIDTH                1
#define SCB_SCR_SLEEPONEXIT(x)                   (((uint32)(((uint32)(x))<<SCB_SCR_SLEEPONEXIT_SHIFT))&SCB_SCR_SLEEPONEXIT_MASK)
#define SCB_SCR_SLEEPDEEP_MASK                   0x4u
#define SCB_SCR_SLEEPDEEP_SHIFT                  2
#define SCB_SCR_SLEEPDEEP_WIDTH                  1
#define SCB_SCR_SLEEPDEEP(x)                     (((uint32)(((uint32)(x))<<SCB_SCR_SLEEPDEEP_SHIFT))&SCB_SCR_SLEEPDEEP_MASK)
#define SCB_SCR_SEVONPEND_MASK                   0x10u
#define SCB_SCR_SEVONPEND_SHIFT                  4
#define SCB_SCR_SEVONPEND_WIDTH                  1
#define SCB_SCR_SEVONPEND(x)                     (((uint32)(((uint32)(x))<<SCB_SCR_SEVONPEND_SHIFT))&SCB_SCR_SEVONPEND_MASK)
/* CCR Bit Fields */
#define SCB_CCR_NONBASETHRDENA_MASK              0x1u
#define SCB_CCR_NONBASETHRDENA_SHIFT             0
#define SCB_CCR_NONBASETHRDENA_WIDTH             1
#define SCB_CCR_NONBASETHRDENA(x)                (((uint32)(((uint32)(x))<<SCB_CCR_NONBASETHRDENA_SHIFT))&SCB_CCR_NONBASETHRDENA_MASK)
#define SCB_CCR_USERSETMPEND_MASK                0x2u
#define SCB_CCR_USERSETMPEND_SHIFT               1
#define SCB_CCR_USERSETMPEND_WIDTH               1
#define SCB_CCR_USERSETMPEND(x)                  (((uint32)(((uint32)(x))<<SCB_CCR_USERSETMPEND_SHIFT))&SCB_CCR_USERSETMPEND_MASK)
#define SCB_CCR_UNALIGN_TRP_MASK                 0x8u
#define SCB_CCR_UNALIGN_TRP_SHIFT                3
#define SCB_CCR_UNALIGN_TRP_WIDTH                1
#define SCB_CCR_UNALIGN_TRP(x)                   (((uint32)(((uint32)(x))<<SCB_CCR_UNALIGN_TRP_SHIFT))&SCB_CCR_UNALIGN_TRP_MASK)
#define SCB_CCR_DIV_0_TRP_MASK                   0x10u
#define SCB_CCR_DIV_0_TRP_SHIFT                  4
#define SCB_CCR_DIV_0_TRP_WIDTH                  1
#define SCB_CCR_DIV_0_TRP(x)                     (((uint32)(((uint32)(x))<<SCB_CCR_DIV_0_TRP_SHIFT))&SCB_CCR_DIV_0_TRP_MASK)
#define SCB_CCR_BFHFNMIGN_MASK                   0x100u
#define SCB_CCR_BFHFNMIGN_SHIFT                  8
#define SCB_CCR_BFHFNMIGN_WIDTH                  1
#define SCB_CCR_BFHFNMIGN(x)                     (((uint32)(((uint32)(x))<<SCB_CCR_BFHFNMIGN_SHIFT))&SCB_CCR_BFHFNMIGN_MASK)
#define SCB_CCR_STKALIGN_MASK                    0x200u
#define SCB_CCR_STKALIGN_SHIFT                   9
#define SCB_CCR_STKALIGN_WIDTH                   1
#define SCB_CCR_STKALIGN(x)                      (((uint32)(((uint32)(x))<<SCB_CCR_STKALIGN_SHIFT))&SCB_CCR_STKALIGN_MASK)
/* SHPR1 Bit Fields */
#define SCB_SHPR1_PRI_4_MASK                     0xFFu
#define SCB_SHPR1_PRI_4_SHIFT                    0
#define SCB_SHPR1_PRI_4_WIDTH                    8
#define SCB_SHPR1_PRI_4(x)                       (((uint32)(((uint32)(x))<<SCB_SHPR1_PRI_4_SHIFT))&SCB_SHPR1_PRI_4_MASK)
#define SCB_SHPR1_PRI_5_MASK                     0xFF00u
#define SCB_SHPR1_PRI_5_SHIFT                    8
#define SCB_SHPR1_PRI_5_WIDTH                    8
#define SCB_SHPR1_PRI_5(x)                       (((uint32)(((uint32)(x))<<SCB_SHPR1_PRI_5_SHIFT))&SCB_SHPR1_PRI_5_MASK)
#define SCB_SHPR1_PRI_6_MASK                     0xFF0000u
#define SCB_SHPR1_PRI_6_SHIFT                    16
#define SCB_SHPR1_PRI_6_WIDTH                    8
#define SCB_SHPR1_PRI_6(x)                       (((uint32)(((uint32)(x))<<SCB_SHPR1_PRI_6_SHIFT))&SCB_SHPR1_PRI_6_MASK)
/* SHPR2 Bit Fields */
#define SCB_SHPR2_PRI_11_MASK                    0xFF000000u
#define SCB_SHPR2_PRI_11_SHIFT                   24
#define SCB_SHPR2_PRI_11_WIDTH                   8
#define SCB_SHPR2_PRI_11(x)                      (((uint32)(((uint32)(x))<<SCB_SHPR2_PRI_11_SHIFT))&SCB_SHPR2_PRI_11_MASK)
/* SHPR3 Bit Fields */
#define SCB_SHPR3_PRI_14_MASK                    0xFF0000u
#define SCB_SHPR3_PRI_14_SHIFT                   16
#define SCB_SHPR3_PRI_14_WIDTH                   8
#define SCB_SHPR3_PRI_14(x)                      (((uint32)(((uint32)(x))<<SCB_SHPR3_PRI_14_SHIFT))&SCB_SHPR3_PRI_14_MASK)
#define SCB_SHPR3_PRI_15_MASK                    0xFF000000u
#define SCB_SHPR3_PRI_15_SHIFT                   24
#define SCB_SHPR3_PRI_15_WIDTH                   8
#define SCB_SHPR3_PRI_15(x)                      (((uint32)(((uint32)(x))<<SCB_SHPR3_PRI_15_SHIFT))&SCB_SHPR3_PRI_15_MASK)
/* SHCSR Bit Fields */
#define SCB_SHCSR_MEMFAULTACT_MASK               0x1u
#define SCB_SHCSR_MEMFAULTACT_SHIFT              0
#define SCB_SHCSR_MEMFAULTACT_WIDTH              1
#define SCB_SHCSR_MEMFAULTACT(x)                 (((uint32)(((uint32)(x))<<SCB_SHCSR_MEMFAULTACT_SHIFT))&SCB_SHCSR_MEMFAULTACT_MASK)
#define SCB_SHCSR_BUSFAULTACT_MASK               0x2u
#define SCB_SHCSR_BUSFAULTACT_SHIFT              1
#define SCB_SHCSR_BUSFAULTACT_WIDTH              1
#define SCB_SHCSR_BUSFAULTACT(x)                 (((uint32)(((uint32)(x))<<SCB_SHCSR_BUSFAULTACT_SHIFT))&SCB_SHCSR_BUSFAULTACT_MASK)
#define SCB_SHCSR_USGFAULTACT_MASK               0x8u
#define SCB_SHCSR_USGFAULTACT_SHIFT              3
#define SCB_SHCSR_USGFAULTACT_WIDTH              1
#define SCB_SHCSR_USGFAULTACT(x)                 (((uint32)(((uint32)(x))<<SCB_SHCSR_USGFAULTACT_SHIFT))&SCB_SHCSR_USGFAULTACT_MASK)
#define SCB_SHCSR_SVCALLACT_MASK                 0x80u
#define SCB_SHCSR_SVCALLACT_SHIFT                7
#define SCB_SHCSR_SVCALLACT_WIDTH                1
#define SCB_SHCSR_SVCALLACT(x)                   (((uint32)(((uint32)(x))<<SCB_SHCSR_SVCALLACT_SHIFT))&SCB_SHCSR_SVCALLACT_MASK)
#define SCB_SHCSR_MONITORACT_MASK                0x100u
#define SCB_SHCSR_MONITORACT_SHIFT               8
#define SCB_SHCSR_MONITORACT_WIDTH               1
#define SCB_SHCSR_MONITORACT(x)                  (((uint32)(((uint32)(x))<<SCB_SHCSR_MONITORACT_SHIFT))&SCB_SHCSR_MONITORACT_MASK)
#define SCB_SHCSR_PENDSVACT_MASK                 0x400u
#define SCB_SHCSR_PENDSVACT_SHIFT                10
#define SCB_SHCSR_PENDSVACT_WIDTH                1
#define SCB_SHCSR_PENDSVACT(x)                   (((uint32)(((uint32)(x))<<SCB_SHCSR_PENDSVACT_SHIFT))&SCB_SHCSR_PENDSVACT_MASK)
#define SCB_SHCSR_SYSTICKACT_MASK                0x800u
#define SCB_SHCSR_SYSTICKACT_SHIFT               11
#define SCB_SHCSR_SYSTICKACT_WIDTH               1
#define SCB_SHCSR_SYSTICKACT(x)                  (((uint32)(((uint32)(x))<<SCB_SHCSR_SYSTICKACT_SHIFT))&SCB_SHCSR_SYSTICKACT_MASK)
#define SCB_SHCSR_USGFAULTPENDED_MASK            0x1000u
#define SCB_SHCSR_USGFAULTPENDED_SHIFT           12
#define SCB_SHCSR_USGFAULTPENDED_WIDTH           1
#define SCB_SHCSR_USGFAULTPENDED(x)              (((uint32)(((uint32)(x))<<SCB_SHCSR_USGFAULTPENDED_SHIFT))&SCB_SHCSR_USGFAULTPENDED_MASK)
#define SCB_SHCSR_MEMFAULTPENDED_MASK            0x2000u
#define SCB_SHCSR_MEMFAULTPENDED_SHIFT           13
#define SCB_SHCSR_MEMFAULTPENDED_WIDTH           1
#define SCB_SHCSR_MEMFAULTPENDED(x)              (((uint32)(((uint32)(x))<<SCB_SHCSR_MEMFAULTPENDED_SHIFT))&SCB_SHCSR_MEMFAULTPENDED_MASK)
#define SCB_SHCSR_BUSFAULTPENDED_MASK            0x4000u
#define SCB_SHCSR_BUSFAULTPENDED_SHIFT           14
#define SCB_SHCSR_BUSFAULTPENDED_WIDTH           1
#define SCB_SHCSR_BUSFAULTPENDED(x)              (((uint32)(((uint32)(x))<<SCB_SHCSR_BUSFAULTPENDED_SHIFT))&SCB_SHCSR_BUSFAULTPENDED_MASK)
#define SCB_SHCSR_SVCALLPENDED_MASK              0x8000u
#define SCB_SHCSR_SVCALLPENDED_SHIFT             15
#define SCB_SHCSR_SVCALLPENDED_WIDTH             1
#define SCB_SHCSR_SVCALLPENDED(x)                (((uint32)(((uint32)(x))<<SCB_SHCSR_SVCALLPENDED_SHIFT))&SCB_SHCSR_SVCALLPENDED_MASK)
#define SCB_SHCSR_MEMFAULTENA_MASK               0x10000u
#define SCB_SHCSR_MEMFAULTENA_SHIFT              16
#define SCB_SHCSR_MEMFAULTENA_WIDTH              1
#define SCB_SHCSR_MEMFAULTENA(x)                 (((uint32)(((uint32)(x))<<SCB_SHCSR_MEMFAULTENA_SHIFT))&SCB_SHCSR_MEMFAULTENA_MASK)
#define SCB_SHCSR_BUSFAULTENA_MASK               0x20000u
#define SCB_SHCSR_BUSFAULTENA_SHIFT              17
#define SCB_SHCSR_BUSFAULTENA_WIDTH              1
#define SCB_SHCSR_BUSFAULTENA(x)                 (((uint32)(((uint32)(x))<<SCB_SHCSR_BUSFAULTENA_SHIFT))&SCB_SHCSR_BUSFAULTENA_MASK)
#define SCB_SHCSR_USGFAULTENA_MASK               0x40000u
#define SCB_SHCSR_USGFAULTENA_SHIFT              18
#define SCB_SHCSR_USGFAULTENA_WIDTH              1
#define SCB_SHCSR_USGFAULTENA(x)                 (((uint32)(((uint32)(x))<<SCB_SHCSR_USGFAULTENA_SHIFT))&SCB_SHCSR_USGFAULTENA_MASK)
/* CFSR Bit Fields */
#define SCB_CFSR_IACCVIOL_MASK                   0x1u
#define SCB_CFSR_IACCVIOL_SHIFT                  0
#define SCB_CFSR_IACCVIOL_WIDTH                  1
#define SCB_CFSR_IACCVIOL(x)                     (((uint32)(((uint32)(x))<<SCB_CFSR_IACCVIOL_SHIFT))&SCB_CFSR_IACCVIOL_MASK)
#define SCB_CFSR_DACCVIOL_MASK                   0x2u
#define SCB_CFSR_DACCVIOL_SHIFT                  1
#define SCB_CFSR_DACCVIOL_WIDTH                  1
#define SCB_CFSR_DACCVIOL(x)                     (((uint32)(((uint32)(x))<<SCB_CFSR_DACCVIOL_SHIFT))&SCB_CFSR_DACCVIOL_MASK)
#define SCB_CFSR_MUNSTKERR_MASK                  0x8u
#define SCB_CFSR_MUNSTKERR_SHIFT                 3
#define SCB_CFSR_MUNSTKERR_WIDTH                 1
#define SCB_CFSR_MUNSTKERR(x)                    (((uint32)(((uint32)(x))<<SCB_CFSR_MUNSTKERR_SHIFT))&SCB_CFSR_MUNSTKERR_MASK)
#define SCB_CFSR_MSTKERR_MASK                    0x10u
#define SCB_CFSR_MSTKERR_SHIFT                   4
#define SCB_CFSR_MSTKERR_WIDTH                   1
#define SCB_CFSR_MSTKERR(x)                      (((uint32)(((uint32)(x))<<SCB_CFSR_MSTKERR_SHIFT))&SCB_CFSR_MSTKERR_MASK)
#define SCB_CFSR_MLSPERR_MASK                    0x20u
#define SCB_CFSR_MLSPERR_SHIFT                   5
#define SCB_CFSR_MLSPERR_WIDTH                   1
#define SCB_CFSR_MLSPERR(x)                      (((uint32)(((uint32)(x))<<SCB_CFSR_MLSPERR_SHIFT))&SCB_CFSR_MLSPERR_MASK)
#define SCB_CFSR_MMARVALID_MASK                  0x80u
#define SCB_CFSR_MMARVALID_SHIFT                 7
#define SCB_CFSR_MMARVALID_WIDTH                 1
#define SCB_CFSR_MMARVALID(x)                    (((uint32)(((uint32)(x))<<SCB_CFSR_MMARVALID_SHIFT))&SCB_CFSR_MMARVALID_MASK)
#define SCB_CFSR_IBUSERR_MASK                    0x100u
#define SCB_CFSR_IBUSERR_SHIFT                   8
#define SCB_CFSR_IBUSERR_WIDTH                   1
#define SCB_CFSR_IBUSERR(x)                      (((uint32)(((uint32)(x))<<SCB_CFSR_IBUSERR_SHIFT))&SCB_CFSR_IBUSERR_MASK)
#define SCB_CFSR_PRECISERR_MASK                  0x200u
#define SCB_CFSR_PRECISERR_SHIFT                 9
#define SCB_CFSR_PRECISERR_WIDTH                 1
#define SCB_CFSR_PRECISERR(x)                    (((uint32)(((uint32)(x))<<SCB_CFSR_PRECISERR_SHIFT))&SCB_CFSR_PRECISERR_MASK)
#define SCB_CFSR_IMPRECISERR_MASK                0x400u
#define SCB_CFSR_IMPRECISERR_SHIFT               10
#define SCB_CFSR_IMPRECISERR_WIDTH               1
#define SCB_CFSR_IMPRECISERR(x)                  (((uint32)(((uint32)(x))<<SCB_CFSR_IMPRECISERR_SHIFT))&SCB_CFSR_IMPRECISERR_MASK)
#define SCB_CFSR_UNSTKERR_MASK                   0x800u
#define SCB_CFSR_UNSTKERR_SHIFT                  11
#define SCB_CFSR_UNSTKERR_WIDTH                  1
#define SCB_CFSR_UNSTKERR(x)                     (((uint32)(((uint32)(x))<<SCB_CFSR_UNSTKERR_SHIFT))&SCB_CFSR_UNSTKERR_MASK)
#define SCB_CFSR_STKERR_MASK                     0x1000u
#define SCB_CFSR_STKERR_SHIFT                    12
#define SCB_CFSR_STKERR_WIDTH                    1
#define SCB_CFSR_STKERR(x)                       (((uint32)(((uint32)(x))<<SCB_CFSR_STKERR_SHIFT))&SCB_CFSR_STKERR_MASK)
#define SCB_CFSR_LSPERR_MASK                     0x2000u
#define SCB_CFSR_LSPERR_SHIFT                    13
#define SCB_CFSR_LSPERR_WIDTH                    1
#define SCB_CFSR_LSPERR(x)                       (((uint32)(((uint32)(x))<<SCB_CFSR_LSPERR_SHIFT))&SCB_CFSR_LSPERR_MASK)
#define SCB_CFSR_BFARVALID_MASK                  0x8000u
#define SCB_CFSR_BFARVALID_SHIFT                 15
#define SCB_CFSR_BFARVALID_WIDTH                 1
#define SCB_CFSR_BFARVALID(x)                    (((uint32)(((uint32)(x))<<SCB_CFSR_BFARVALID_SHIFT))&SCB_CFSR_BFARVALID_MASK)
#define SCB_CFSR_UNDEFINSTR_MASK                 0x10000u
#define SCB_CFSR_UNDEFINSTR_SHIFT                16
#define SCB_CFSR_UNDEFINSTR_WIDTH                1
#define SCB_CFSR_UNDEFINSTR(x)                   (((uint32)(((uint32)(x))<<SCB_CFSR_UNDEFINSTR_SHIFT))&SCB_CFSR_UNDEFINSTR_MASK)
#define SCB_CFSR_INVSTATE_MASK                   0x20000u
#define SCB_CFSR_INVSTATE_SHIFT                  17
#define SCB_CFSR_INVSTATE_WIDTH                  1
#define SCB_CFSR_INVSTATE(x)                     (((uint32)(((uint32)(x))<<SCB_CFSR_INVSTATE_SHIFT))&SCB_CFSR_INVSTATE_MASK)
#define SCB_CFSR_INVPC_MASK                      0x40000u
#define SCB_CFSR_INVPC_SHIFT                     18
#define SCB_CFSR_INVPC_WIDTH                     1
#define SCB_CFSR_INVPC(x)                        (((uint32)(((uint32)(x))<<SCB_CFSR_INVPC_SHIFT))&SCB_CFSR_INVPC_MASK)
#define SCB_CFSR_NOCP_MASK                       0x80000u
#define SCB_CFSR_NOCP_SHIFT                      19
#define SCB_CFSR_NOCP_WIDTH                      1
#define SCB_CFSR_NOCP(x)                         (((uint32)(((uint32)(x))<<SCB_CFSR_NOCP_SHIFT))&SCB_CFSR_NOCP_MASK)
#define SCB_CFSR_UNALIGNED_MASK                  0x1000000u
#define SCB_CFSR_UNALIGNED_SHIFT                 24
#define SCB_CFSR_UNALIGNED_WIDTH                 1
#define SCB_CFSR_UNALIGNED(x)                    (((uint32)(((uint32)(x))<<SCB_CFSR_UNALIGNED_SHIFT))&SCB_CFSR_UNALIGNED_MASK)
#define SCB_CFSR_DIVBYZERO_MASK                  0x2000000u
#define SCB_CFSR_DIVBYZERO_SHIFT                 25
#define SCB_CFSR_DIVBYZERO_WIDTH                 1
#define SCB_CFSR_DIVBYZERO(x)                    (((uint32)(((uint32)(x))<<SCB_CFSR_DIVBYZERO_SHIFT))&SCB_CFSR_DIVBYZERO_MASK)
/* HFSR Bit Fields */
#define SCB_HFSR_VECTTBL_MASK                    0x2u
#define SCB_HFSR_VECTTBL_SHIFT                   1
#define SCB_HFSR_VECTTBL_WIDTH                   1
#define SCB_HFSR_VECTTBL(x)                      (((uint32)(((uint32)(x))<<SCB_HFSR_VECTTBL_SHIFT))&SCB_HFSR_VECTTBL_MASK)
#define SCB_HFSR_FORCED_MASK                     0x40000000u
#define SCB_HFSR_FORCED_SHIFT                    30
#define SCB_HFSR_FORCED_WIDTH                    1
#define SCB_HFSR_FORCED(x)                       (((uint32)(((uint32)(x))<<SCB_HFSR_FORCED_SHIFT))&SCB_HFSR_FORCED_MASK)
#define SCB_HFSR_DEBUGEVT_MASK                   0x80000000u
#define SCB_HFSR_DEBUGEVT_SHIFT                  31
#define SCB_HFSR_DEBUGEVT_WIDTH                  1
#define SCB_HFSR_DEBUGEVT(x)                     (((uint32)(((uint32)(x))<<SCB_HFSR_DEBUGEVT_SHIFT))&SCB_HFSR_DEBUGEVT_MASK)
/* DFSR Bit Fields */
#define SCB_DFSR_HALTED_MASK                     0x1u
#define SCB_DFSR_HALTED_SHIFT                    0
#define SCB_DFSR_HALTED_WIDTH                    1
#define SCB_DFSR_HALTED(x)                       (((uint32)(((uint32)(x))<<SCB_DFSR_HALTED_SHIFT))&SCB_DFSR_HALTED_MASK)
#define SCB_DFSR_BKPT_MASK                       0x2u
#define SCB_DFSR_BKPT_SHIFT                      1
#define SCB_DFSR_BKPT_WIDTH                      1
#define SCB_DFSR_BKPT(x)                         (((uint32)(((uint32)(x))<<SCB_DFSR_BKPT_SHIFT))&SCB_DFSR_BKPT_MASK)
#define SCB_DFSR_DWTTRAP_MASK                    0x4u
#define SCB_DFSR_DWTTRAP_SHIFT                   2
#define SCB_DFSR_DWTTRAP_WIDTH                   1
#define SCB_DFSR_DWTTRAP(x)                      (((uint32)(((uint32)(x))<<SCB_DFSR_DWTTRAP_SHIFT))&SCB_DFSR_DWTTRAP_MASK)
#define SCB_DFSR_VCATCH_MASK                     0x8u
#define SCB_DFSR_VCATCH_SHIFT                    3
#define SCB_DFSR_VCATCH_WIDTH                    1
#define SCB_DFSR_VCATCH(x)                       (((uint32)(((uint32)(x))<<SCB_DFSR_VCATCH_SHIFT))&SCB_DFSR_VCATCH_MASK)
#define SCB_DFSR_EXTERNAL_MASK                   0x10u
#define SCB_DFSR_EXTERNAL_SHIFT                  4
#define SCB_DFSR_EXTERNAL_WIDTH                  1
#define SCB_DFSR_EXTERNAL(x)                     (((uint32)(((uint32)(x))<<SCB_DFSR_EXTERNAL_SHIFT))&SCB_DFSR_EXTERNAL_MASK)
/* MMFAR Bit Fields */
#define SCB_MMFAR_ADDRESS_MASK                   0xFFFFFFFFu
#define SCB_MMFAR_ADDRESS_SHIFT                  0
#define SCB_MMFAR_ADDRESS_WIDTH                  32
#define SCB_MMFAR_ADDRESS(x)                     (((uint32)(((uint32)(x))<<SCB_MMFAR_ADDRESS_SHIFT))&SCB_MMFAR_ADDRESS_MASK)
/* BFAR Bit Fields */
#define SCB_BFAR_ADDRESS_MASK                    0xFFFFFFFFu
#define SCB_BFAR_ADDRESS_SHIFT                   0
#define SCB_BFAR_ADDRESS_WIDTH                   32
#define SCB_BFAR_ADDRESS(x)                      (((uint32)(((uint32)(x))<<SCB_BFAR_ADDRESS_SHIFT))&SCB_BFAR_ADDRESS_MASK)
/* AFSR Bit Fields */
#define SCB_AFSR_AUXFAULT_MASK                   0xFFFFFFFFu
#define SCB_AFSR_AUXFAULT_SHIFT                  0
#define SCB_AFSR_AUXFAULT_WIDTH                  32
#define SCB_AFSR_AUXFAULT(x)                     (((uint32)(((uint32)(x))<<SCB_AFSR_AUXFAULT_SHIFT))&SCB_AFSR_AUXFAULT_MASK)

/*!
 * @}
 */ /* end of group SCB_Register_Masks */


/* SCB - Peripheral instance base addresses */
/** Peripheral SystemControl base address */
#define SystemControl_BASE                       (0xE000E000u)
/** Peripheral SystemControl base pointer */
#define SystemControl                            ((SCB_Type *)SystemControl_BASE)
#define SystemControl_BASE_PTR                   (SystemControl)
/** Array initializer of SCB peripheral base addresses */
#define SCB_BASE_ADDRS                           { SystemControl_BASE }
/** Array initializer of SCB peripheral base pointers */
#define SCB_BASE_PTRS                            { SystemControl }

/* ----------------------------------------------------------------------------
   -- SCB - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCB_Register_Accessor_Macros SCB - Register accessor macros
 * @{
 */


/* SCB - Register instance definitions */
/* SystemControl */
#define SCB_ACTLR                                SCB_ACTLR_REG(SystemControl)
#define SCB_CPUID                                SCB_CPUID_REG(SystemControl)
#define SCB_ICSR                                 SCB_ICSR_REG(SystemControl)
#define SCB_VTOR                                 SCB_VTOR_REG(SystemControl)
#define SCB_AIRCR                                SCB_AIRCR_REG(SystemControl)
#define SCB_SCR                                  SCB_SCR_REG(SystemControl)
#define SCB_CCR                                  SCB_CCR_REG(SystemControl)
#define SCB_SHPR1                                SCB_SHPR1_REG(SystemControl)
#define SCB_SHPR2                                SCB_SHPR2_REG(SystemControl)
#define SCB_SHPR3                                SCB_SHPR3_REG(SystemControl)
#define SCB_SHCSR                                SCB_SHCSR_REG(SystemControl)
#define SCB_CFSR                                 SCB_CFSR_REG(SystemControl)
#define SCB_HFSR                                 SCB_HFSR_REG(SystemControl)
#define SCB_DFSR                                 SCB_DFSR_REG(SystemControl)
#define SCB_MMFAR                                SCB_MMFAR_REG(SystemControl)
#define SCB_BFAR                                 SCB_BFAR_REG(SystemControl)
#define SCB_AFSR                                 SCB_AFSR_REG(SystemControl)

/*!
 * @}
 */ /* end of group SCB_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group SCB_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SCG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCG_Peripheral_Access_Layer SCG Peripheral Access Layer
 * @{
 */

/** SCG - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< Parameter Register, offset: 0x4 */
       uint8 RESERVED_0[8];
  __I  uint32 CSR;                                 /**< Clock Status Register, offset: 0x10 */
  __IO uint32 RCCR;                                /**< Run Clock Control Register, offset: 0x14 */
  __IO uint32 VCCR;                                /**< VLPR Clock Control Register, offset: 0x18 */
  __IO uint32 HCCR;                                /**< HSRUN Clock Control Register, offset: 0x1C */
  __IO uint32 CLKOUTCNFG;                          /**< SCG CLKOUT Configuration Register, offset: 0x20 */
       uint8 RESERVED_1[220];
  __IO uint32 SOSCCSR;                             /**< System OSC Control Status Register, offset: 0x100 */
  __IO uint32 SOSCDIV;                             /**< System OSC Divide Register, offset: 0x104 */
  __IO uint32 SOSCCFG;                             /**< System Oscillator Configuration Register, offset: 0x108 */
       uint8 RESERVED_2[244];
  __IO uint32 SIRCCSR;                             /**< Slow IRC Control Status Register, offset: 0x200 */
  __IO uint32 SIRCDIV;                             /**< Slow IRC Divide Register, offset: 0x204 */
  __IO uint32 SIRCCFG;                             /**< Slow IRC Configuration Register, offset: 0x208 */
  __IO uint32 SIRCTRIM;                            /**< Slow IRC Trim Register, offset: 0x20C */
       uint8 RESERVED_3[240];
  __IO uint32 FIRCCSR;                             /**< Fast IRC Control Status Register, offset: 0x300 */
  __IO uint32 FIRCDIV;                             /**< Fast IRC Divide Register, offset: 0x304 */
  __IO uint32 FIRCCFG;                             /**< Fast IRC Configuration Register, offset: 0x308 */
  __IO uint32 FIRCTCFG;                            /**< Fast IRC Trim Configuration Register, offset: 0x30C */
  __IO uint32 FIRCTRIML;                           /**< Fast IRC Trim Low Register, offset: 0x310 */
  __IO uint32 FIRCTRIMH;                           /**< Fast IRC Trim High Register, offset: 0x314 */
  __IO uint32 FIRCSTAT;                            /**< Fast IRC Status Register, offset: 0x318 */
       uint8 RESERVED_4[228];
  __IO uint32 ROSCCSR;                             /**< RTC OSC Control Status Register, offset: 0x400 */
       uint8 RESERVED_5[508];
  __IO uint32 SPLLCSR;                             /**< System PLL Control Status Register, offset: 0x600 */
  __IO uint32 SPLLDIV;                             /**< System PLL Divide Register, offset: 0x604 */
  __IO uint32 SPLLCFG;                             /**< System PLL Configuration Register, offset: 0x608 */
} SCG_Type, *SCG_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SCG - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCG_Register_Accessor_Macros SCG - Register accessor macros
 * @{
 */


/* SCG - Register accessors */
#define SCG_VERID_REG(base)                      ((base)->VERID)
#define SCG_PARAM_REG(base)                      ((base)->PARAM)
#define SCG_CSR_REG(base)                        ((base)->CSR)
#define SCG_RCCR_REG(base)                       ((base)->RCCR)
#define SCG_VCCR_REG(base)                       ((base)->VCCR)
#define SCG_HCCR_REG(base)                       ((base)->HCCR)
#define SCG_CLKOUTCNFG_REG(base)                 ((base)->CLKOUTCNFG)
#define SCG_SOSCCSR_REG(base)                    ((base)->SOSCCSR)
#define SCG_SOSCDIV_REG(base)                    ((base)->SOSCDIV)
#define SCG_SOSCCFG_REG(base)                    ((base)->SOSCCFG)
#define SCG_SIRCCSR_REG(base)                    ((base)->SIRCCSR)
#define SCG_SIRCDIV_REG(base)                    ((base)->SIRCDIV)
#define SCG_SIRCCFG_REG(base)                    ((base)->SIRCCFG)
#define SCG_SIRCTRIM_REG(base)                   ((base)->SIRCTRIM)
#define SCG_FIRCCSR_REG(base)                    ((base)->FIRCCSR)
#define SCG_FIRCDIV_REG(base)                    ((base)->FIRCDIV)
#define SCG_FIRCCFG_REG(base)                    ((base)->FIRCCFG)
#define SCG_FIRCTCFG_REG(base)                   ((base)->FIRCTCFG)
#define SCG_FIRCTRIML_REG(base)                  ((base)->FIRCTRIML)
#define SCG_FIRCTRIMH_REG(base)                  ((base)->FIRCTRIMH)
#define SCG_FIRCSTAT_REG(base)                   ((base)->FIRCSTAT)
#define SCG_ROSCCSR_REG(base)                    ((base)->ROSCCSR)
#define SCG_SPLLCSR_REG(base)                    ((base)->SPLLCSR)
#define SCG_SPLLDIV_REG(base)                    ((base)->SPLLDIV)
#define SCG_SPLLCFG_REG(base)                    ((base)->SPLLCFG)

/*!
 * @}
 */ /* end of group SCG_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SCG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCG_Register_Masks SCG Register Masks
 * @{
 */

/* VERID Bit Fields */
#define SCG_VERID_VERSION_MASK                   0xFFFFFFFFu
#define SCG_VERID_VERSION_SHIFT                  0
#define SCG_VERID_VERSION_WIDTH                  32
#define SCG_VERID_VERSION(x)                     (((uint32)(((uint32)(x))<<SCG_VERID_VERSION_SHIFT))&SCG_VERID_VERSION_MASK)
/* PARAM Bit Fields */
#define SCG_PARAM_CLKPRES_MASK                   0xFFu
#define SCG_PARAM_CLKPRES_SHIFT                  0
#define SCG_PARAM_CLKPRES_WIDTH                  8
#define SCG_PARAM_CLKPRES(x)                     (((uint32)(((uint32)(x))<<SCG_PARAM_CLKPRES_SHIFT))&SCG_PARAM_CLKPRES_MASK)
#define SCG_PARAM_UNDEFINED1_MASK                0xFF00u
#define SCG_PARAM_UNDEFINED1_SHIFT               8
#define SCG_PARAM_UNDEFINED1_WIDTH               8
#define SCG_PARAM_UNDEFINED1(x)                  (((uint32)(((uint32)(x))<<SCG_PARAM_UNDEFINED1_SHIFT))&SCG_PARAM_UNDEFINED1_MASK)
#define SCG_PARAM_UNDEFINED2_MASK                0x7FF0000u
#define SCG_PARAM_UNDEFINED2_SHIFT               16
#define SCG_PARAM_UNDEFINED2_WIDTH               11
#define SCG_PARAM_UNDEFINED2(x)                  (((uint32)(((uint32)(x))<<SCG_PARAM_UNDEFINED2_SHIFT))&SCG_PARAM_UNDEFINED2_MASK)
#define SCG_PARAM_DIVPRES_MASK                   0xF8000000u
#define SCG_PARAM_DIVPRES_SHIFT                  27
#define SCG_PARAM_DIVPRES_WIDTH                  5
#define SCG_PARAM_DIVPRES(x)                     (((uint32)(((uint32)(x))<<SCG_PARAM_DIVPRES_SHIFT))&SCG_PARAM_DIVPRES_MASK)
/* CSR Bit Fields */
#define SCG_CSR_DIVSLOW_MASK                     0xFu
#define SCG_CSR_DIVSLOW_SHIFT                    0
#define SCG_CSR_DIVSLOW_WIDTH                    4
#define SCG_CSR_DIVSLOW(x)                       (((uint32)(((uint32)(x))<<SCG_CSR_DIVSLOW_SHIFT))&SCG_CSR_DIVSLOW_MASK)
#define SCG_CSR_DIVBUS_MASK                      0xF0u
#define SCG_CSR_DIVBUS_SHIFT                     4
#define SCG_CSR_DIVBUS_WIDTH                     4
#define SCG_CSR_DIVBUS(x)                        (((uint32)(((uint32)(x))<<SCG_CSR_DIVBUS_SHIFT))&SCG_CSR_DIVBUS_MASK)
#define SCG_CSR_DIVPLAT_MASK                     0xF000u
#define SCG_CSR_DIVPLAT_SHIFT                    12
#define SCG_CSR_DIVPLAT_WIDTH                    4
#define SCG_CSR_DIVPLAT(x)                       (((uint32)(((uint32)(x))<<SCG_CSR_DIVPLAT_SHIFT))&SCG_CSR_DIVPLAT_MASK)
#define SCG_CSR_DIVCORE_MASK                     0xF0000u
#define SCG_CSR_DIVCORE_SHIFT                    16
#define SCG_CSR_DIVCORE_WIDTH                    4
#define SCG_CSR_DIVCORE(x)                       (((uint32)(((uint32)(x))<<SCG_CSR_DIVCORE_SHIFT))&SCG_CSR_DIVCORE_MASK)
#define SCG_CSR_SCS_MASK                         0xF000000u
#define SCG_CSR_SCS_SHIFT                        24
#define SCG_CSR_SCS_WIDTH                        4
#define SCG_CSR_SCS(x)                           (((uint32)(((uint32)(x))<<SCG_CSR_SCS_SHIFT))&SCG_CSR_SCS_MASK)
/* RCCR Bit Fields */
#define SCG_RCCR_DIVSLOW_MASK                    0xFu
#define SCG_RCCR_DIVSLOW_SHIFT                   0
#define SCG_RCCR_DIVSLOW_WIDTH                   4
#define SCG_RCCR_DIVSLOW(x)                      (((uint32)(((uint32)(x))<<SCG_RCCR_DIVSLOW_SHIFT))&SCG_RCCR_DIVSLOW_MASK)
#define SCG_RCCR_DIVBUS_MASK                     0xF0u
#define SCG_RCCR_DIVBUS_SHIFT                    4
#define SCG_RCCR_DIVBUS_WIDTH                    4
#define SCG_RCCR_DIVBUS(x)                       (((uint32)(((uint32)(x))<<SCG_RCCR_DIVBUS_SHIFT))&SCG_RCCR_DIVBUS_MASK)
#define SCG_RCCR_DIVPLAT_MASK                    0xF000u
#define SCG_RCCR_DIVPLAT_SHIFT                   12
#define SCG_RCCR_DIVPLAT_WIDTH                   4
#define SCG_RCCR_DIVPLAT(x)                      (((uint32)(((uint32)(x))<<SCG_RCCR_DIVPLAT_SHIFT))&SCG_RCCR_DIVPLAT_MASK)
#define SCG_RCCR_DIVCORE_MASK                    0xF0000u
#define SCG_RCCR_DIVCORE_SHIFT                   16
#define SCG_RCCR_DIVCORE_WIDTH                   4
#define SCG_RCCR_DIVCORE(x)                      (((uint32)(((uint32)(x))<<SCG_RCCR_DIVCORE_SHIFT))&SCG_RCCR_DIVCORE_MASK)
#define SCG_RCCR_SCS_MASK                        0xF000000u
#define SCG_RCCR_SCS_SHIFT                       24
#define SCG_RCCR_SCS_WIDTH                       4
#define SCG_RCCR_SCS(x)                          (((uint32)(((uint32)(x))<<SCG_RCCR_SCS_SHIFT))&SCG_RCCR_SCS_MASK)
/* VCCR Bit Fields */
#define SCG_VCCR_DIVSLOW_MASK                    0xFu
#define SCG_VCCR_DIVSLOW_SHIFT                   0
#define SCG_VCCR_DIVSLOW_WIDTH                   4
#define SCG_VCCR_DIVSLOW(x)                      (((uint32)(((uint32)(x))<<SCG_VCCR_DIVSLOW_SHIFT))&SCG_VCCR_DIVSLOW_MASK)
#define SCG_VCCR_DIVBUS_MASK                     0xF0u
#define SCG_VCCR_DIVBUS_SHIFT                    4
#define SCG_VCCR_DIVBUS_WIDTH                    4
#define SCG_VCCR_DIVBUS(x)                       (((uint32)(((uint32)(x))<<SCG_VCCR_DIVBUS_SHIFT))&SCG_VCCR_DIVBUS_MASK)
#define SCG_VCCR_DIVPLAT_MASK                    0xF000u
#define SCG_VCCR_DIVPLAT_SHIFT                   12
#define SCG_VCCR_DIVPLAT_WIDTH                   4
#define SCG_VCCR_DIVPLAT(x)                      (((uint32)(((uint32)(x))<<SCG_VCCR_DIVPLAT_SHIFT))&SCG_VCCR_DIVPLAT_MASK)
#define SCG_VCCR_DIVCORE_MASK                    0xF0000u
#define SCG_VCCR_DIVCORE_SHIFT                   16
#define SCG_VCCR_DIVCORE_WIDTH                   4
#define SCG_VCCR_DIVCORE(x)                      (((uint32)(((uint32)(x))<<SCG_VCCR_DIVCORE_SHIFT))&SCG_VCCR_DIVCORE_MASK)
#define SCG_VCCR_SCS_MASK                        0xF000000u
#define SCG_VCCR_SCS_SHIFT                       24
#define SCG_VCCR_SCS_WIDTH                       4
#define SCG_VCCR_SCS(x)                          (((uint32)(((uint32)(x))<<SCG_VCCR_SCS_SHIFT))&SCG_VCCR_SCS_MASK)
/* HCCR Bit Fields */
#define SCG_HCCR_DIVSLOW_MASK                    0xFu
#define SCG_HCCR_DIVSLOW_SHIFT                   0
#define SCG_HCCR_DIVSLOW_WIDTH                   4
#define SCG_HCCR_DIVSLOW(x)                      (((uint32)(((uint32)(x))<<SCG_HCCR_DIVSLOW_SHIFT))&SCG_HCCR_DIVSLOW_MASK)
#define SCG_HCCR_DIVBUS_MASK                     0xF0u
#define SCG_HCCR_DIVBUS_SHIFT                    4
#define SCG_HCCR_DIVBUS_WIDTH                    4
#define SCG_HCCR_DIVBUS(x)                       (((uint32)(((uint32)(x))<<SCG_HCCR_DIVBUS_SHIFT))&SCG_HCCR_DIVBUS_MASK)
#define SCG_HCCR_DIVPLAT_MASK                    0xF000u
#define SCG_HCCR_DIVPLAT_SHIFT                   12
#define SCG_HCCR_DIVPLAT_WIDTH                   4
#define SCG_HCCR_DIVPLAT(x)                      (((uint32)(((uint32)(x))<<SCG_HCCR_DIVPLAT_SHIFT))&SCG_HCCR_DIVPLAT_MASK)
#define SCG_HCCR_DIVCORE_MASK                    0xF0000u
#define SCG_HCCR_DIVCORE_SHIFT                   16
#define SCG_HCCR_DIVCORE_WIDTH                   4
#define SCG_HCCR_DIVCORE(x)                      (((uint32)(((uint32)(x))<<SCG_HCCR_DIVCORE_SHIFT))&SCG_HCCR_DIVCORE_MASK)
#define SCG_HCCR_SCS_MASK                        0xF000000u
#define SCG_HCCR_SCS_SHIFT                       24
#define SCG_HCCR_SCS_WIDTH                       4
#define SCG_HCCR_SCS(x)                          (((uint32)(((uint32)(x))<<SCG_HCCR_SCS_SHIFT))&SCG_HCCR_SCS_MASK)
/* CLKOUTCNFG Bit Fields */
#define SCG_CLKOUTCNFG_CLKOUTSEL_MASK            0xF000000u
#define SCG_CLKOUTCNFG_CLKOUTSEL_SHIFT           24
#define SCG_CLKOUTCNFG_CLKOUTSEL_WIDTH           4
#define SCG_CLKOUTCNFG_CLKOUTSEL(x)              (((uint32)(((uint32)(x))<<SCG_CLKOUTCNFG_CLKOUTSEL_SHIFT))&SCG_CLKOUTCNFG_CLKOUTSEL_MASK)
/* SOSCCSR Bit Fields */
#define SCG_SOSCCSR_SOSCEN_MASK                  0x1u
#define SCG_SOSCCSR_SOSCEN_SHIFT                 0
#define SCG_SOSCCSR_SOSCEN_WIDTH                 1
#define SCG_SOSCCSR_SOSCEN(x)                    (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCEN_SHIFT))&SCG_SOSCCSR_SOSCEN_MASK)
#define SCG_SOSCCSR_SOSCSTEN_MASK                0x2u
#define SCG_SOSCCSR_SOSCSTEN_SHIFT               1
#define SCG_SOSCCSR_SOSCSTEN_WIDTH               1
#define SCG_SOSCCSR_SOSCSTEN(x)                  (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCSTEN_SHIFT))&SCG_SOSCCSR_SOSCSTEN_MASK)
#define SCG_SOSCCSR_SOSCLPEN_MASK                0x4u
#define SCG_SOSCCSR_SOSCLPEN_SHIFT               2
#define SCG_SOSCCSR_SOSCLPEN_WIDTH               1
#define SCG_SOSCCSR_SOSCLPEN(x)                  (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCLPEN_SHIFT))&SCG_SOSCCSR_SOSCLPEN_MASK)
#define SCG_SOSCCSR_SOSCERCLKEN_MASK             0x8u
#define SCG_SOSCCSR_SOSCERCLKEN_SHIFT            3
#define SCG_SOSCCSR_SOSCERCLKEN_WIDTH            1
#define SCG_SOSCCSR_SOSCERCLKEN(x)               (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCERCLKEN_SHIFT))&SCG_SOSCCSR_SOSCERCLKEN_MASK)
#define SCG_SOSCCSR_SOSCCM_MASK                  0x10000u
#define SCG_SOSCCSR_SOSCCM_SHIFT                 16
#define SCG_SOSCCSR_SOSCCM_WIDTH                 1
#define SCG_SOSCCSR_SOSCCM(x)                    (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCCM_SHIFT))&SCG_SOSCCSR_SOSCCM_MASK)
#define SCG_SOSCCSR_SOSCCMRE_MASK                0x20000u
#define SCG_SOSCCSR_SOSCCMRE_SHIFT               17
#define SCG_SOSCCSR_SOSCCMRE_WIDTH               1
#define SCG_SOSCCSR_SOSCCMRE(x)                  (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCCMRE_SHIFT))&SCG_SOSCCSR_SOSCCMRE_MASK)
#define SCG_SOSCCSR_LK_MASK                      0x800000u
#define SCG_SOSCCSR_LK_SHIFT                     23
#define SCG_SOSCCSR_LK_WIDTH                     1
#define SCG_SOSCCSR_LK(x)                        (((uint32)(((uint32)(x))<<SCG_SOSCCSR_LK_SHIFT))&SCG_SOSCCSR_LK_MASK)
#define SCG_SOSCCSR_SOSCVLD_MASK                 0x1000000u
#define SCG_SOSCCSR_SOSCVLD_SHIFT                24
#define SCG_SOSCCSR_SOSCVLD_WIDTH                1
#define SCG_SOSCCSR_SOSCVLD(x)                   (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCVLD_SHIFT))&SCG_SOSCCSR_SOSCVLD_MASK)
#define SCG_SOSCCSR_SOSCSEL_MASK                 0x2000000u
#define SCG_SOSCCSR_SOSCSEL_SHIFT                25
#define SCG_SOSCCSR_SOSCSEL_WIDTH                1
#define SCG_SOSCCSR_SOSCSEL(x)                   (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCSEL_SHIFT))&SCG_SOSCCSR_SOSCSEL_MASK)
#define SCG_SOSCCSR_SOSCERR_MASK                 0x4000000u
#define SCG_SOSCCSR_SOSCERR_SHIFT                26
#define SCG_SOSCCSR_SOSCERR_WIDTH                1
#define SCG_SOSCCSR_SOSCERR(x)                   (((uint32)(((uint32)(x))<<SCG_SOSCCSR_SOSCERR_SHIFT))&SCG_SOSCCSR_SOSCERR_MASK)
/* SOSCDIV Bit Fields */
#define SCG_SOSCDIV_SOSCDIV1_MASK                0x7u
#define SCG_SOSCDIV_SOSCDIV1_SHIFT               0
#define SCG_SOSCDIV_SOSCDIV1_WIDTH               3
#define SCG_SOSCDIV_SOSCDIV1(x)                  (((uint32)(((uint32)(x))<<SCG_SOSCDIV_SOSCDIV1_SHIFT))&SCG_SOSCDIV_SOSCDIV1_MASK)
#define SCG_SOSCDIV_SOSCDIV2_MASK                0x700u
#define SCG_SOSCDIV_SOSCDIV2_SHIFT               8
#define SCG_SOSCDIV_SOSCDIV2_WIDTH               3
#define SCG_SOSCDIV_SOSCDIV2(x)                  (((uint32)(((uint32)(x))<<SCG_SOSCDIV_SOSCDIV2_SHIFT))&SCG_SOSCDIV_SOSCDIV2_MASK)
#define SCG_SOSCDIV_SOSCDIV3_MASK                0x70000u
#define SCG_SOSCDIV_SOSCDIV3_SHIFT               16
#define SCG_SOSCDIV_SOSCDIV3_WIDTH               3
#define SCG_SOSCDIV_SOSCDIV3(x)                  (((uint32)(((uint32)(x))<<SCG_SOSCDIV_SOSCDIV3_SHIFT))&SCG_SOSCDIV_SOSCDIV3_MASK)
/* SOSCCFG Bit Fields */
#define SCG_SOSCCFG_EREFS_MASK                   0x4u
#define SCG_SOSCCFG_EREFS_SHIFT                  2
#define SCG_SOSCCFG_EREFS_WIDTH                  1
#define SCG_SOSCCFG_EREFS(x)                     (((uint32)(((uint32)(x))<<SCG_SOSCCFG_EREFS_SHIFT))&SCG_SOSCCFG_EREFS_MASK)
#define SCG_SOSCCFG_HGO_MASK                     0x8u
#define SCG_SOSCCFG_HGO_SHIFT                    3
#define SCG_SOSCCFG_HGO_WIDTH                    1
#define SCG_SOSCCFG_HGO(x)                       (((uint32)(((uint32)(x))<<SCG_SOSCCFG_HGO_SHIFT))&SCG_SOSCCFG_HGO_MASK)
#define SCG_SOSCCFG_RANGE_MASK                   0x30u
#define SCG_SOSCCFG_RANGE_SHIFT                  4
#define SCG_SOSCCFG_RANGE_WIDTH                  2
#define SCG_SOSCCFG_RANGE(x)                     (((uint32)(((uint32)(x))<<SCG_SOSCCFG_RANGE_SHIFT))&SCG_SOSCCFG_RANGE_MASK)
#define SCG_SOSCCFG_SC16P_MASK                   0x100u
#define SCG_SOSCCFG_SC16P_SHIFT                  8
#define SCG_SOSCCFG_SC16P_WIDTH                  1
#define SCG_SOSCCFG_SC16P(x)                     (((uint32)(((uint32)(x))<<SCG_SOSCCFG_SC16P_SHIFT))&SCG_SOSCCFG_SC16P_MASK)
#define SCG_SOSCCFG_SC8P_MASK                    0x200u
#define SCG_SOSCCFG_SC8P_SHIFT                   9
#define SCG_SOSCCFG_SC8P_WIDTH                   1
#define SCG_SOSCCFG_SC8P(x)                      (((uint32)(((uint32)(x))<<SCG_SOSCCFG_SC8P_SHIFT))&SCG_SOSCCFG_SC8P_MASK)
#define SCG_SOSCCFG_SC4P_MASK                    0x400u
#define SCG_SOSCCFG_SC4P_SHIFT                   10
#define SCG_SOSCCFG_SC4P_WIDTH                   1
#define SCG_SOSCCFG_SC4P(x)                      (((uint32)(((uint32)(x))<<SCG_SOSCCFG_SC4P_SHIFT))&SCG_SOSCCFG_SC4P_MASK)
#define SCG_SOSCCFG_SC2P_MASK                    0x800u
#define SCG_SOSCCFG_SC2P_SHIFT                   11
#define SCG_SOSCCFG_SC2P_WIDTH                   1
#define SCG_SOSCCFG_SC2P(x)                      (((uint32)(((uint32)(x))<<SCG_SOSCCFG_SC2P_SHIFT))&SCG_SOSCCFG_SC2P_MASK)
/* SIRCCSR Bit Fields */
#define SCG_SIRCCSR_SIRCEN_MASK                  0x1u
#define SCG_SIRCCSR_SIRCEN_SHIFT                 0
#define SCG_SIRCCSR_SIRCEN_WIDTH                 1
#define SCG_SIRCCSR_SIRCEN(x)                    (((uint32)(((uint32)(x))<<SCG_SIRCCSR_SIRCEN_SHIFT))&SCG_SIRCCSR_SIRCEN_MASK)
#define SCG_SIRCCSR_SIRCSTEN_MASK                0x2u
#define SCG_SIRCCSR_SIRCSTEN_SHIFT               1
#define SCG_SIRCCSR_SIRCSTEN_WIDTH               1
#define SCG_SIRCCSR_SIRCSTEN(x)                  (((uint32)(((uint32)(x))<<SCG_SIRCCSR_SIRCSTEN_SHIFT))&SCG_SIRCCSR_SIRCSTEN_MASK)
#define SCG_SIRCCSR_SIRCLPEN_MASK                0x4u
#define SCG_SIRCCSR_SIRCLPEN_SHIFT               2
#define SCG_SIRCCSR_SIRCLPEN_WIDTH               1
#define SCG_SIRCCSR_SIRCLPEN(x)                  (((uint32)(((uint32)(x))<<SCG_SIRCCSR_SIRCLPEN_SHIFT))&SCG_SIRCCSR_SIRCLPEN_MASK)
#define SCG_SIRCCSR_LK_MASK                      0x800000u
#define SCG_SIRCCSR_LK_SHIFT                     23
#define SCG_SIRCCSR_LK_WIDTH                     1
#define SCG_SIRCCSR_LK(x)                        (((uint32)(((uint32)(x))<<SCG_SIRCCSR_LK_SHIFT))&SCG_SIRCCSR_LK_MASK)
#define SCG_SIRCCSR_SIRCVLD_MASK                 0x1000000u
#define SCG_SIRCCSR_SIRCVLD_SHIFT                24
#define SCG_SIRCCSR_SIRCVLD_WIDTH                1
#define SCG_SIRCCSR_SIRCVLD(x)                   (((uint32)(((uint32)(x))<<SCG_SIRCCSR_SIRCVLD_SHIFT))&SCG_SIRCCSR_SIRCVLD_MASK)
#define SCG_SIRCCSR_SIRCSEL_MASK                 0x2000000u
#define SCG_SIRCCSR_SIRCSEL_SHIFT                25
#define SCG_SIRCCSR_SIRCSEL_WIDTH                1
#define SCG_SIRCCSR_SIRCSEL(x)                   (((uint32)(((uint32)(x))<<SCG_SIRCCSR_SIRCSEL_SHIFT))&SCG_SIRCCSR_SIRCSEL_MASK)
/* SIRCDIV Bit Fields */
#define SCG_SIRCDIV_SIRCDIV1_MASK                0x7u
#define SCG_SIRCDIV_SIRCDIV1_SHIFT               0
#define SCG_SIRCDIV_SIRCDIV1_WIDTH               3
#define SCG_SIRCDIV_SIRCDIV1(x)                  (((uint32)(((uint32)(x))<<SCG_SIRCDIV_SIRCDIV1_SHIFT))&SCG_SIRCDIV_SIRCDIV1_MASK)
#define SCG_SIRCDIV_SIRCDIV2_MASK                0x700u
#define SCG_SIRCDIV_SIRCDIV2_SHIFT               8
#define SCG_SIRCDIV_SIRCDIV2_WIDTH               3
#define SCG_SIRCDIV_SIRCDIV2(x)                  (((uint32)(((uint32)(x))<<SCG_SIRCDIV_SIRCDIV2_SHIFT))&SCG_SIRCDIV_SIRCDIV2_MASK)
#define SCG_SIRCDIV_SIRCDIV3_MASK                0x70000u
#define SCG_SIRCDIV_SIRCDIV3_SHIFT               16
#define SCG_SIRCDIV_SIRCDIV3_WIDTH               3
#define SCG_SIRCDIV_SIRCDIV3(x)                  (((uint32)(((uint32)(x))<<SCG_SIRCDIV_SIRCDIV3_SHIFT))&SCG_SIRCDIV_SIRCDIV3_MASK)
/* SIRCCFG Bit Fields */
#define SCG_SIRCCFG_RANGE_MASK                   0x1u
#define SCG_SIRCCFG_RANGE_SHIFT                  0
#define SCG_SIRCCFG_RANGE_WIDTH                  1
#define SCG_SIRCCFG_RANGE(x)                     (((uint32)(((uint32)(x))<<SCG_SIRCCFG_RANGE_SHIFT))&SCG_SIRCCFG_RANGE_MASK)
/* SIRCTRIM Bit Fields */
#define SCG_SIRCTRIM_TRIMLO_MASK                 0x7Fu
#define SCG_SIRCTRIM_TRIMLO_SHIFT                0
#define SCG_SIRCTRIM_TRIMLO_WIDTH                7
#define SCG_SIRCTRIM_TRIMLO(x)                   (((uint32)(((uint32)(x))<<SCG_SIRCTRIM_TRIMLO_SHIFT))&SCG_SIRCTRIM_TRIMLO_MASK)
#define SCG_SIRCTRIM_LOTRIMRNG_MASK              0x300u
#define SCG_SIRCTRIM_LOTRIMRNG_SHIFT             8
#define SCG_SIRCTRIM_LOTRIMRNG_WIDTH             2
#define SCG_SIRCTRIM_LOTRIMRNG(x)                (((uint32)(((uint32)(x))<<SCG_SIRCTRIM_LOTRIMRNG_SHIFT))&SCG_SIRCTRIM_LOTRIMRNG_MASK)
#define SCG_SIRCTRIM_TRIMHI_MASK                 0x7F0000u
#define SCG_SIRCTRIM_TRIMHI_SHIFT                16
#define SCG_SIRCTRIM_TRIMHI_WIDTH                7
#define SCG_SIRCTRIM_TRIMHI(x)                   (((uint32)(((uint32)(x))<<SCG_SIRCTRIM_TRIMHI_SHIFT))&SCG_SIRCTRIM_TRIMHI_MASK)
#define SCG_SIRCTRIM_HTRIMRNG_MASK               0x3000000u
#define SCG_SIRCTRIM_HTRIMRNG_SHIFT              24
#define SCG_SIRCTRIM_HTRIMRNG_WIDTH              2
#define SCG_SIRCTRIM_HTRIMRNG(x)                 (((uint32)(((uint32)(x))<<SCG_SIRCTRIM_HTRIMRNG_SHIFT))&SCG_SIRCTRIM_HTRIMRNG_MASK)
/* FIRCCSR Bit Fields */
#define SCG_FIRCCSR_FIRCEN_MASK                  0x1u
#define SCG_FIRCCSR_FIRCEN_SHIFT                 0
#define SCG_FIRCCSR_FIRCEN_WIDTH                 1
#define SCG_FIRCCSR_FIRCEN(x)                    (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCEN_SHIFT))&SCG_FIRCCSR_FIRCEN_MASK)
#define SCG_FIRCCSR_FIRCSTEN_MASK                0x2u
#define SCG_FIRCCSR_FIRCSTEN_SHIFT               1
#define SCG_FIRCCSR_FIRCSTEN_WIDTH               1
#define SCG_FIRCCSR_FIRCSTEN(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCSTEN_SHIFT))&SCG_FIRCCSR_FIRCSTEN_MASK)
#define SCG_FIRCCSR_FIRCREGOFF_MASK              0x4u
#define SCG_FIRCCSR_FIRCREGOFF_SHIFT             2
#define SCG_FIRCCSR_FIRCREGOFF_WIDTH             1
#define SCG_FIRCCSR_FIRCREGOFF(x)                (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCREGOFF_SHIFT))&SCG_FIRCCSR_FIRCREGOFF_MASK)
#define SCG_FIRCCSR_FIRCLPEN_MASK                0x8u
#define SCG_FIRCCSR_FIRCLPEN_SHIFT               3
#define SCG_FIRCCSR_FIRCLPEN_WIDTH               1
#define SCG_FIRCCSR_FIRCLPEN(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCLPEN_SHIFT))&SCG_FIRCCSR_FIRCLPEN_MASK)
#define SCG_FIRCCSR_FIRCTREN_MASK                0x100u
#define SCG_FIRCCSR_FIRCTREN_SHIFT               8
#define SCG_FIRCCSR_FIRCTREN_WIDTH               1
#define SCG_FIRCCSR_FIRCTREN(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCTREN_SHIFT))&SCG_FIRCCSR_FIRCTREN_MASK)
#define SCG_FIRCCSR_FIRCTRUP_MASK                0x200u
#define SCG_FIRCCSR_FIRCTRUP_SHIFT               9
#define SCG_FIRCCSR_FIRCTRUP_WIDTH               1
#define SCG_FIRCCSR_FIRCTRUP(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCTRUP_SHIFT))&SCG_FIRCCSR_FIRCTRUP_MASK)
#define SCG_FIRCCSR_LK_MASK                      0x800000u
#define SCG_FIRCCSR_LK_SHIFT                     23
#define SCG_FIRCCSR_LK_WIDTH                     1
#define SCG_FIRCCSR_LK(x)                        (((uint32)(((uint32)(x))<<SCG_FIRCCSR_LK_SHIFT))&SCG_FIRCCSR_LK_MASK)
#define SCG_FIRCCSR_FIRCVLD_MASK                 0x1000000u
#define SCG_FIRCCSR_FIRCVLD_SHIFT                24
#define SCG_FIRCCSR_FIRCVLD_WIDTH                1
#define SCG_FIRCCSR_FIRCVLD(x)                   (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCVLD_SHIFT))&SCG_FIRCCSR_FIRCVLD_MASK)
#define SCG_FIRCCSR_FIRCSEL_MASK                 0x2000000u
#define SCG_FIRCCSR_FIRCSEL_SHIFT                25
#define SCG_FIRCCSR_FIRCSEL_WIDTH                1
#define SCG_FIRCCSR_FIRCSEL(x)                   (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCSEL_SHIFT))&SCG_FIRCCSR_FIRCSEL_MASK)
#define SCG_FIRCCSR_FIRCERR_MASK                 0x4000000u
#define SCG_FIRCCSR_FIRCERR_SHIFT                26
#define SCG_FIRCCSR_FIRCERR_WIDTH                1
#define SCG_FIRCCSR_FIRCERR(x)                   (((uint32)(((uint32)(x))<<SCG_FIRCCSR_FIRCERR_SHIFT))&SCG_FIRCCSR_FIRCERR_MASK)
/* FIRCDIV Bit Fields */
#define SCG_FIRCDIV_FIRCDIV1_MASK                0x7u
#define SCG_FIRCDIV_FIRCDIV1_SHIFT               0
#define SCG_FIRCDIV_FIRCDIV1_WIDTH               3
#define SCG_FIRCDIV_FIRCDIV1(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCDIV_FIRCDIV1_SHIFT))&SCG_FIRCDIV_FIRCDIV1_MASK)
#define SCG_FIRCDIV_FIRCDIV2_MASK                0x700u
#define SCG_FIRCDIV_FIRCDIV2_SHIFT               8
#define SCG_FIRCDIV_FIRCDIV2_WIDTH               3
#define SCG_FIRCDIV_FIRCDIV2(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCDIV_FIRCDIV2_SHIFT))&SCG_FIRCDIV_FIRCDIV2_MASK)
#define SCG_FIRCDIV_FIRCDIV3_MASK                0x70000u
#define SCG_FIRCDIV_FIRCDIV3_SHIFT               16
#define SCG_FIRCDIV_FIRCDIV3_WIDTH               3
#define SCG_FIRCDIV_FIRCDIV3(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCDIV_FIRCDIV3_SHIFT))&SCG_FIRCDIV_FIRCDIV3_MASK)
/* FIRCCFG Bit Fields */
#define SCG_FIRCCFG_RANGE_MASK                   0x3u
#define SCG_FIRCCFG_RANGE_SHIFT                  0
#define SCG_FIRCCFG_RANGE_WIDTH                  2
#define SCG_FIRCCFG_RANGE(x)                     (((uint32)(((uint32)(x))<<SCG_FIRCCFG_RANGE_SHIFT))&SCG_FIRCCFG_RANGE_MASK)
/* FIRCTCFG Bit Fields */
#define SCG_FIRCTCFG_TRIMSRC_MASK                0x3u
#define SCG_FIRCTCFG_TRIMSRC_SHIFT               0
#define SCG_FIRCTCFG_TRIMSRC_WIDTH               2
#define SCG_FIRCTCFG_TRIMSRC(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCTCFG_TRIMSRC_SHIFT))&SCG_FIRCTCFG_TRIMSRC_MASK)
#define SCG_FIRCTCFG_TRIMDIV_MASK                0x700u
#define SCG_FIRCTCFG_TRIMDIV_SHIFT               8
#define SCG_FIRCTCFG_TRIMDIV_WIDTH               3
#define SCG_FIRCTCFG_TRIMDIV(x)                  (((uint32)(((uint32)(x))<<SCG_FIRCTCFG_TRIMDIV_SHIFT))&SCG_FIRCTCFG_TRIMDIV_MASK)
/* FIRCTRIML Bit Fields */
#define SCG_FIRCTRIML_TRIMFINE_MASK              0x7Fu
#define SCG_FIRCTRIML_TRIMFINE_SHIFT             0
#define SCG_FIRCTRIML_TRIMFINE_WIDTH             7
#define SCG_FIRCTRIML_TRIMFINE(x)                (((uint32)(((uint32)(x))<<SCG_FIRCTRIML_TRIMFINE_SHIFT))&SCG_FIRCTRIML_TRIMFINE_MASK)
#define SCG_FIRCTRIML_TRIMCOAR_MASK              0x3F00u
#define SCG_FIRCTRIML_TRIMCOAR_SHIFT             8
#define SCG_FIRCTRIML_TRIMCOAR_WIDTH             6
#define SCG_FIRCTRIML_TRIMCOAR(x)                (((uint32)(((uint32)(x))<<SCG_FIRCTRIML_TRIMCOAR_SHIFT))&SCG_FIRCTRIML_TRIMCOAR_MASK)
#define SCG_FIRCTRIML_TRIMTEMP_MASK              0x1F0000u
#define SCG_FIRCTRIML_TRIMTEMP_SHIFT             16
#define SCG_FIRCTRIML_TRIMTEMP_WIDTH             5
#define SCG_FIRCTRIML_TRIMTEMP(x)                (((uint32)(((uint32)(x))<<SCG_FIRCTRIML_TRIMTEMP_SHIFT))&SCG_FIRCTRIML_TRIMTEMP_MASK)
/* FIRCTRIMH Bit Fields */
#define SCG_FIRCTRIMH_TRIMFINE_MASK              0x7Fu
#define SCG_FIRCTRIMH_TRIMFINE_SHIFT             0
#define SCG_FIRCTRIMH_TRIMFINE_WIDTH             7
#define SCG_FIRCTRIMH_TRIMFINE(x)                (((uint32)(((uint32)(x))<<SCG_FIRCTRIMH_TRIMFINE_SHIFT))&SCG_FIRCTRIMH_TRIMFINE_MASK)
#define SCG_FIRCTRIMH_TRIMCOAR_MASK              0x3F00u
#define SCG_FIRCTRIMH_TRIMCOAR_SHIFT             8
#define SCG_FIRCTRIMH_TRIMCOAR_WIDTH             6
#define SCG_FIRCTRIMH_TRIMCOAR(x)                (((uint32)(((uint32)(x))<<SCG_FIRCTRIMH_TRIMCOAR_SHIFT))&SCG_FIRCTRIMH_TRIMCOAR_MASK)
#define SCG_FIRCTRIMH_TRIMTEMP_MASK              0x1F0000u
#define SCG_FIRCTRIMH_TRIMTEMP_SHIFT             16
#define SCG_FIRCTRIMH_TRIMTEMP_WIDTH             5
#define SCG_FIRCTRIMH_TRIMTEMP(x)                (((uint32)(((uint32)(x))<<SCG_FIRCTRIMH_TRIMTEMP_SHIFT))&SCG_FIRCTRIMH_TRIMTEMP_MASK)
/* FIRCSTAT Bit Fields */
#define SCG_FIRCSTAT_TRIMFINE_MASK               0x7Fu
#define SCG_FIRCSTAT_TRIMFINE_SHIFT              0
#define SCG_FIRCSTAT_TRIMFINE_WIDTH              7
#define SCG_FIRCSTAT_TRIMFINE(x)                 (((uint32)(((uint32)(x))<<SCG_FIRCSTAT_TRIMFINE_SHIFT))&SCG_FIRCSTAT_TRIMFINE_MASK)
#define SCG_FIRCSTAT_TRIMCOAR_MASK               0xFF00u
#define SCG_FIRCSTAT_TRIMCOAR_SHIFT              8
#define SCG_FIRCSTAT_TRIMCOAR_WIDTH              8
#define SCG_FIRCSTAT_TRIMCOAR(x)                 (((uint32)(((uint32)(x))<<SCG_FIRCSTAT_TRIMCOAR_SHIFT))&SCG_FIRCSTAT_TRIMCOAR_MASK)
/* ROSCCSR Bit Fields */
#define SCG_ROSCCSR_ROSCCM_MASK                  0x10000u
#define SCG_ROSCCSR_ROSCCM_SHIFT                 16
#define SCG_ROSCCSR_ROSCCM_WIDTH                 1
#define SCG_ROSCCSR_ROSCCM(x)                    (((uint32)(((uint32)(x))<<SCG_ROSCCSR_ROSCCM_SHIFT))&SCG_ROSCCSR_ROSCCM_MASK)
#define SCG_ROSCCSR_ROSCCMRE_MASK                0x20000u
#define SCG_ROSCCSR_ROSCCMRE_SHIFT               17
#define SCG_ROSCCSR_ROSCCMRE_WIDTH               1
#define SCG_ROSCCSR_ROSCCMRE(x)                  (((uint32)(((uint32)(x))<<SCG_ROSCCSR_ROSCCMRE_SHIFT))&SCG_ROSCCSR_ROSCCMRE_MASK)
#define SCG_ROSCCSR_LK_MASK                      0x800000u
#define SCG_ROSCCSR_LK_SHIFT                     23
#define SCG_ROSCCSR_LK_WIDTH                     1
#define SCG_ROSCCSR_LK(x)                        (((uint32)(((uint32)(x))<<SCG_ROSCCSR_LK_SHIFT))&SCG_ROSCCSR_LK_MASK)
#define SCG_ROSCCSR_ROSCVLD_MASK                 0x1000000u
#define SCG_ROSCCSR_ROSCVLD_SHIFT                24
#define SCG_ROSCCSR_ROSCVLD_WIDTH                1
#define SCG_ROSCCSR_ROSCVLD(x)                   (((uint32)(((uint32)(x))<<SCG_ROSCCSR_ROSCVLD_SHIFT))&SCG_ROSCCSR_ROSCVLD_MASK)
#define SCG_ROSCCSR_ROSCSEL_MASK                 0x2000000u
#define SCG_ROSCCSR_ROSCSEL_SHIFT                25
#define SCG_ROSCCSR_ROSCSEL_WIDTH                1
#define SCG_ROSCCSR_ROSCSEL(x)                   (((uint32)(((uint32)(x))<<SCG_ROSCCSR_ROSCSEL_SHIFT))&SCG_ROSCCSR_ROSCSEL_MASK)
#define SCG_ROSCCSR_ROSCERR_MASK                 0x4000000u
#define SCG_ROSCCSR_ROSCERR_SHIFT                26
#define SCG_ROSCCSR_ROSCERR_WIDTH                1
#define SCG_ROSCCSR_ROSCERR(x)                   (((uint32)(((uint32)(x))<<SCG_ROSCCSR_ROSCERR_SHIFT))&SCG_ROSCCSR_ROSCERR_MASK)
/* SPLLCSR Bit Fields */
#define SCG_SPLLCSR_SPLLEN_MASK                  0x1u
#define SCG_SPLLCSR_SPLLEN_SHIFT                 0
#define SCG_SPLLCSR_SPLLEN_WIDTH                 1
#define SCG_SPLLCSR_SPLLEN(x)                    (((uint32)(((uint32)(x))<<SCG_SPLLCSR_SPLLEN_SHIFT))&SCG_SPLLCSR_SPLLEN_MASK)
#define SCG_SPLLCSR_SPLLSTEN_MASK                0x2u
#define SCG_SPLLCSR_SPLLSTEN_SHIFT               1
#define SCG_SPLLCSR_SPLLSTEN_WIDTH               1
#define SCG_SPLLCSR_SPLLSTEN(x)                  (((uint32)(((uint32)(x))<<SCG_SPLLCSR_SPLLSTEN_SHIFT))&SCG_SPLLCSR_SPLLSTEN_MASK)
#define SCG_SPLLCSR_SPLLCM_MASK                  0x10000u
#define SCG_SPLLCSR_SPLLCM_SHIFT                 16
#define SCG_SPLLCSR_SPLLCM_WIDTH                 1
#define SCG_SPLLCSR_SPLLCM(x)                    (((uint32)(((uint32)(x))<<SCG_SPLLCSR_SPLLCM_SHIFT))&SCG_SPLLCSR_SPLLCM_MASK)
#define SCG_SPLLCSR_SPLLCMRE_MASK                0x20000u
#define SCG_SPLLCSR_SPLLCMRE_SHIFT               17
#define SCG_SPLLCSR_SPLLCMRE_WIDTH               1
#define SCG_SPLLCSR_SPLLCMRE(x)                  (((uint32)(((uint32)(x))<<SCG_SPLLCSR_SPLLCMRE_SHIFT))&SCG_SPLLCSR_SPLLCMRE_MASK)
#define SCG_SPLLCSR_LK_MASK                      0x800000u
#define SCG_SPLLCSR_LK_SHIFT                     23
#define SCG_SPLLCSR_LK_WIDTH                     1
#define SCG_SPLLCSR_LK(x)                        (((uint32)(((uint32)(x))<<SCG_SPLLCSR_LK_SHIFT))&SCG_SPLLCSR_LK_MASK)
#define SCG_SPLLCSR_SPLLVLD_MASK                 0x1000000u
#define SCG_SPLLCSR_SPLLVLD_SHIFT                24
#define SCG_SPLLCSR_SPLLVLD_WIDTH                1
#define SCG_SPLLCSR_SPLLVLD(x)                   (((uint32)(((uint32)(x))<<SCG_SPLLCSR_SPLLVLD_SHIFT))&SCG_SPLLCSR_SPLLVLD_MASK)
#define SCG_SPLLCSR_SPLLSEL_MASK                 0x2000000u
#define SCG_SPLLCSR_SPLLSEL_SHIFT                25
#define SCG_SPLLCSR_SPLLSEL_WIDTH                1
#define SCG_SPLLCSR_SPLLSEL(x)                   (((uint32)(((uint32)(x))<<SCG_SPLLCSR_SPLLSEL_SHIFT))&SCG_SPLLCSR_SPLLSEL_MASK)
#define SCG_SPLLCSR_SPLLERR_MASK                 0x4000000u
#define SCG_SPLLCSR_SPLLERR_SHIFT                26
#define SCG_SPLLCSR_SPLLERR_WIDTH                1
#define SCG_SPLLCSR_SPLLERR(x)                   (((uint32)(((uint32)(x))<<SCG_SPLLCSR_SPLLERR_SHIFT))&SCG_SPLLCSR_SPLLERR_MASK)
/* SPLLDIV Bit Fields */
#define SCG_SPLLDIV_SPLLDIV1_MASK                0x7u
#define SCG_SPLLDIV_SPLLDIV1_SHIFT               0
#define SCG_SPLLDIV_SPLLDIV1_WIDTH               3
#define SCG_SPLLDIV_SPLLDIV1(x)                  (((uint32)(((uint32)(x))<<SCG_SPLLDIV_SPLLDIV1_SHIFT))&SCG_SPLLDIV_SPLLDIV1_MASK)
#define SCG_SPLLDIV_SPLLDIV2_MASK                0x700u
#define SCG_SPLLDIV_SPLLDIV2_SHIFT               8
#define SCG_SPLLDIV_SPLLDIV2_WIDTH               3
#define SCG_SPLLDIV_SPLLDIV2(x)                  (((uint32)(((uint32)(x))<<SCG_SPLLDIV_SPLLDIV2_SHIFT))&SCG_SPLLDIV_SPLLDIV2_MASK)
#define SCG_SPLLDIV_SPLLDIV3_MASK                0x70000u
#define SCG_SPLLDIV_SPLLDIV3_SHIFT               16
#define SCG_SPLLDIV_SPLLDIV3_WIDTH               3
#define SCG_SPLLDIV_SPLLDIV3(x)                  (((uint32)(((uint32)(x))<<SCG_SPLLDIV_SPLLDIV3_SHIFT))&SCG_SPLLDIV_SPLLDIV3_MASK)
/* SPLLCFG Bit Fields */
#define SCG_SPLLCFG_SOURCE_MASK                  0x1u
#define SCG_SPLLCFG_SOURCE_SHIFT                 0
#define SCG_SPLLCFG_SOURCE_WIDTH                 1
#define SCG_SPLLCFG_SOURCE(x)                    (((uint32)(((uint32)(x))<<SCG_SPLLCFG_SOURCE_SHIFT))&SCG_SPLLCFG_SOURCE_MASK)
#define SCG_SPLLCFG_PREDIV_MASK                  0x700u
#define SCG_SPLLCFG_PREDIV_SHIFT                 8
#define SCG_SPLLCFG_PREDIV_WIDTH                 3
#define SCG_SPLLCFG_PREDIV(x)                    (((uint32)(((uint32)(x))<<SCG_SPLLCFG_PREDIV_SHIFT))&SCG_SPLLCFG_PREDIV_MASK)
#define SCG_SPLLCFG_MULT_MASK                    0x1F0000u
#define SCG_SPLLCFG_MULT_SHIFT                   16
#define SCG_SPLLCFG_MULT_WIDTH                   5
#define SCG_SPLLCFG_MULT(x)                      (((uint32)(((uint32)(x))<<SCG_SPLLCFG_MULT_SHIFT))&SCG_SPLLCFG_MULT_MASK)

/*!
 * @}
 */ /* end of group SCG_Register_Masks */


/* SCG - Peripheral instance base addresses */
/** Peripheral SCG base address */
#define SCG_BASE                                 (0x40064000u)
/** Peripheral SCG base pointer */
#define SCG                                      ((SCG_Type *)SCG_BASE)
#define SCG_BASE_PTR                             (SCG)
/** Array initializer of SCG peripheral base addresses */
#define SCG_BASE_ADDRS                           { SCG_BASE }
/** Array initializer of SCG peripheral base pointers */
#define SCG_BASE_PTRS                            { SCG }

/* ----------------------------------------------------------------------------
   -- SCG - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SCG_Register_Accessor_Macros SCG - Register accessor macros
 * @{
 */


/* SCG - Register instance definitions */
/* SCG */
#define SCG_VERID                                SCG_VERID_REG(SCG)
#define SCG_PARAM                                SCG_PARAM_REG(SCG)
#define SCG_CSR                                  SCG_CSR_REG(SCG)
#define SCG_RCCR                                 SCG_RCCR_REG(SCG)
#define SCG_VCCR                                 SCG_VCCR_REG(SCG)
#define SCG_HCCR                                 SCG_HCCR_REG(SCG)
#define SCG_CLKOUTCNFG                           SCG_CLKOUTCNFG_REG(SCG)
#define SCG_SOSCCSR                              SCG_SOSCCSR_REG(SCG)
#define SCG_SOSCDIV                              SCG_SOSCDIV_REG(SCG)
#define SCG_SOSCCFG                              SCG_SOSCCFG_REG(SCG)
#define SCG_SIRCCSR                              SCG_SIRCCSR_REG(SCG)
#define SCG_SIRCDIV                              SCG_SIRCDIV_REG(SCG)
#define SCG_SIRCCFG                              SCG_SIRCCFG_REG(SCG)
#define SCG_SIRCTRIM                             SCG_SIRCTRIM_REG(SCG)
#define SCG_FIRCCSR                              SCG_FIRCCSR_REG(SCG)
#define SCG_FIRCDIV                              SCG_FIRCDIV_REG(SCG)
#define SCG_FIRCCFG                              SCG_FIRCCFG_REG(SCG)
#define SCG_FIRCTCFG                             SCG_FIRCTCFG_REG(SCG)
#define SCG_FIRCTRIML                            SCG_FIRCTRIML_REG(SCG)
#define SCG_FIRCTRIMH                            SCG_FIRCTRIMH_REG(SCG)
#define SCG_FIRCSTAT                             SCG_FIRCSTAT_REG(SCG)
#define SCG_ROSCCSR                              SCG_ROSCCSR_REG(SCG)
#define SCG_SPLLCSR                              SCG_SPLLCSR_REG(SCG)
#define SCG_SPLLDIV                              SCG_SPLLDIV_REG(SCG)
#define SCG_SPLLCFG                              SCG_SPLLCFG_REG(SCG)

/*!
 * @}
 */ /* end of group SCG_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group SCG_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SIM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIM_Peripheral_Access_Layer SIM Peripheral Access Layer
 * @{
 */

/** SIM - Register Layout Typedef */
typedef struct {
       uint8 RESERVED_0[4];
  __IO uint32 CHIPCTL;                             /**< Chip Control register, offset: 0x4 */
       uint8 RESERVED_1[4];
  __IO uint32 FTMOPT0;                             /**< FTM Option Register 0, offset: 0xC */
  __IO uint32 LPOCLKS;                             /**< LPO Clock Select Register, offset: 0x10 */
       uint8 RESERVED_2[4];
  __IO uint32 ADCOPT;                              /**< ADC Options Register, offset: 0x18 */
  __IO uint32 FTMOPT1;                             /**< FTM Option Register 1, offset: 0x1C */
       uint8 RESERVED_3[4];
  __I  uint32 SDID;                                /**< System Device Identification Register, offset: 0x24 */
       uint8 RESERVED_4[24];
  __IO uint32 PLATCGC;                             /**< Platform Clock Gating Control Register, offset: 0x40 */
       uint8 RESERVED_5[8];
  __IO uint32 FCFG1;                               /**< Flash Configuration Register 1, offset: 0x4C */
  __I  uint32 FCFG2;                               /**< Flash Configuration Register 2, offset: 0x50 */
  __I  uint32 UIDH;                                /**< Unique Identification Register High, offset: 0x54 */
  __I  uint32 UIDMH;                               /**< Unique Identification Register Mid-High, offset: 0x58 */
  __I  uint32 UIDML;                               /**< Unique Identification Register Mid Low, offset: 0x5C */
  __I  uint32 UIDL;                                /**< Unique Identification Register Low, offset: 0x60 */
       uint8 RESERVED_6[4];
  __IO uint32 CLKDIV4;                             /**< System Clock Divider Register 4, offset: 0x68 */
  __IO uint32 MISCTRL;                             /**< Miscellaneous Control register, offset: 0x6C */
} SIM_Type, *SIM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SIM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIM_Register_Accessor_Macros SIM - Register accessor macros
 * @{
 */


/* SIM - Register accessors */
#define SIM_CHIPCTL_REG(base)                    ((base)->CHIPCTL)
#define SIM_FTMOPT0_REG(base)                    ((base)->FTMOPT0)
#define SIM_LPOCLKS_REG(base)                    ((base)->LPOCLKS)
#define SIM_ADCOPT_REG(base)                     ((base)->ADCOPT)
#define SIM_FTMOPT1_REG(base)                    ((base)->FTMOPT1)
#define SIM_SDID_REG(base)                       ((base)->SDID)
#define SIM_PLATCGC_REG(base)                    ((base)->PLATCGC)
#define SIM_FCFG1_REG(base)                      ((base)->FCFG1)
#define SIM_FCFG2_REG(base)                      ((base)->FCFG2)
#define SIM_UIDH_REG(base)                       ((base)->UIDH)
#define SIM_UIDMH_REG(base)                      ((base)->UIDMH)
#define SIM_UIDML_REG(base)                      ((base)->UIDML)
#define SIM_UIDL_REG(base)                       ((base)->UIDL)
#define SIM_CLKDIV4_REG(base)                    ((base)->CLKDIV4)
#define SIM_MISCTRL_REG(base)                    ((base)->MISCTRL)

/*!
 * @}
 */ /* end of group SIM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SIM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIM_Register_Masks SIM Register Masks
 * @{
 */

/* CHIPCTL Bit Fields */
#define SIM_CHIPCTL_ADC_INTERLEAVE_SEL_MASK      0xFu
#define SIM_CHIPCTL_ADC_INTERLEAVE_SEL_SHIFT     0
#define SIM_CHIPCTL_ADC_INTERLEAVE_SEL_WIDTH     4
#define SIM_CHIPCTL_ADC_INTERLEAVE_SEL(x)        (((uint32)(((uint32)(x))<<SIM_CHIPCTL_ADC_INTERLEAVE_SEL_SHIFT))&SIM_CHIPCTL_ADC_INTERLEAVE_SEL_MASK)
#define SIM_CHIPCTL_CLKOUTSEL_MASK               0xC0u
#define SIM_CHIPCTL_CLKOUTSEL_SHIFT              6
#define SIM_CHIPCTL_CLKOUTSEL_WIDTH              2
#define SIM_CHIPCTL_CLKOUTSEL(x)                 (((uint32)(((uint32)(x))<<SIM_CHIPCTL_CLKOUTSEL_SHIFT))&SIM_CHIPCTL_CLKOUTSEL_MASK)
#define SIM_CHIPCTL_DAC2CMP_SEL_MASK             0x700u
#define SIM_CHIPCTL_DAC2CMP_SEL_SHIFT            8
#define SIM_CHIPCTL_DAC2CMP_SEL_WIDTH            3
#define SIM_CHIPCTL_DAC2CMP_SEL(x)               (((uint32)(((uint32)(x))<<SIM_CHIPCTL_DAC2CMP_SEL_SHIFT))&SIM_CHIPCTL_DAC2CMP_SEL_MASK)
#define SIM_CHIPCTL_TRACECLK_SEL_MASK            0x1000u
#define SIM_CHIPCTL_TRACECLK_SEL_SHIFT           12
#define SIM_CHIPCTL_TRACECLK_SEL_WIDTH           1
#define SIM_CHIPCTL_TRACECLK_SEL(x)              (((uint32)(((uint32)(x))<<SIM_CHIPCTL_TRACECLK_SEL_SHIFT))&SIM_CHIPCTL_TRACECLK_SEL_MASK)
#define SIM_CHIPCTL_PDB_BB_SEL_MASK              0x2000u
#define SIM_CHIPCTL_PDB_BB_SEL_SHIFT             13
#define SIM_CHIPCTL_PDB_BB_SEL_WIDTH             1
#define SIM_CHIPCTL_PDB_BB_SEL(x)                (((uint32)(((uint32)(x))<<SIM_CHIPCTL_PDB_BB_SEL_SHIFT))&SIM_CHIPCTL_PDB_BB_SEL_MASK)
#define SIM_CHIPCTL_COCO_TRG_SEL_MASK            0x4000u
#define SIM_CHIPCTL_COCO_TRG_SEL_SHIFT           14
#define SIM_CHIPCTL_COCO_TRG_SEL_WIDTH           1
#define SIM_CHIPCTL_COCO_TRG_SEL(x)              (((uint32)(((uint32)(x))<<SIM_CHIPCTL_COCO_TRG_SEL_SHIFT))&SIM_CHIPCTL_COCO_TRG_SEL_MASK)
/* FTMOPT0 Bit Fields */
#define SIM_FTMOPT0_FTM0FLTxSEL_MASK             0x7u
#define SIM_FTMOPT0_FTM0FLTxSEL_SHIFT            0
#define SIM_FTMOPT0_FTM0FLTxSEL_WIDTH            3
#define SIM_FTMOPT0_FTM0FLTxSEL(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM0FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM0FLTxSEL_MASK)
#define SIM_FTMOPT0_FTM1FLTxSEL_MASK             0x70u
#define SIM_FTMOPT0_FTM1FLTxSEL_SHIFT            4
#define SIM_FTMOPT0_FTM1FLTxSEL_WIDTH            3
#define SIM_FTMOPT0_FTM1FLTxSEL(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM1FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM1FLTxSEL_MASK)
#define SIM_FTMOPT0_FTM2FLTxSEL_MASK             0x700u
#define SIM_FTMOPT0_FTM2FLTxSEL_SHIFT            8
#define SIM_FTMOPT0_FTM2FLTxSEL_WIDTH            3
#define SIM_FTMOPT0_FTM2FLTxSEL(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM2FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM2FLTxSEL_MASK)
#define SIM_FTMOPT0_FTM3FLTxSEL_MASK             0x7000u
#define SIM_FTMOPT0_FTM3FLTxSEL_SHIFT            12
#define SIM_FTMOPT0_FTM3FLTxSEL_WIDTH            3
#define SIM_FTMOPT0_FTM3FLTxSEL(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM3FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM3FLTxSEL_MASK)
#define SIM_FTMOPT0_FTM0CLKSEL_MASK              0x3000000u
#define SIM_FTMOPT0_FTM0CLKSEL_SHIFT             24
#define SIM_FTMOPT0_FTM0CLKSEL_WIDTH             2
#define SIM_FTMOPT0_FTM0CLKSEL(x)                (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM0CLKSEL_SHIFT))&SIM_FTMOPT0_FTM0CLKSEL_MASK)
#define SIM_FTMOPT0_FTM1CLKSEL_MASK              0xC000000u
#define SIM_FTMOPT0_FTM1CLKSEL_SHIFT             26
#define SIM_FTMOPT0_FTM1CLKSEL_WIDTH             2
#define SIM_FTMOPT0_FTM1CLKSEL(x)                (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM1CLKSEL_SHIFT))&SIM_FTMOPT0_FTM1CLKSEL_MASK)
#define SIM_FTMOPT0_FTM2CLKSEL_MASK              0x30000000u
#define SIM_FTMOPT0_FTM2CLKSEL_SHIFT             28
#define SIM_FTMOPT0_FTM2CLKSEL_WIDTH             2
#define SIM_FTMOPT0_FTM2CLKSEL(x)                (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM2CLKSEL_SHIFT))&SIM_FTMOPT0_FTM2CLKSEL_MASK)
#define SIM_FTMOPT0_FTM3CLKSEL_MASK              0xC0000000u
#define SIM_FTMOPT0_FTM3CLKSEL_SHIFT             30
#define SIM_FTMOPT0_FTM3CLKSEL_WIDTH             2
#define SIM_FTMOPT0_FTM3CLKSEL(x)                (((uint32)(((uint32)(x))<<SIM_FTMOPT0_FTM3CLKSEL_SHIFT))&SIM_FTMOPT0_FTM3CLKSEL_MASK)
/* LPOCLKS Bit Fields */
#define SIM_LPOCLKS_LPO1KCLKEN_MASK              0x1u
#define SIM_LPOCLKS_LPO1KCLKEN_SHIFT             0
#define SIM_LPOCLKS_LPO1KCLKEN_WIDTH             1
#define SIM_LPOCLKS_LPO1KCLKEN(x)                (((uint32)(((uint32)(x))<<SIM_LPOCLKS_LPO1KCLKEN_SHIFT))&SIM_LPOCLKS_LPO1KCLKEN_MASK)
#define SIM_LPOCLKS_LPO32KCLKEN_MASK             0x2u
#define SIM_LPOCLKS_LPO32KCLKEN_SHIFT            1
#define SIM_LPOCLKS_LPO32KCLKEN_WIDTH            1
#define SIM_LPOCLKS_LPO32KCLKEN(x)               (((uint32)(((uint32)(x))<<SIM_LPOCLKS_LPO32KCLKEN_SHIFT))&SIM_LPOCLKS_LPO32KCLKEN_MASK)
#define SIM_LPOCLKS_LPOCLKSEL_MASK               0xCu
#define SIM_LPOCLKS_LPOCLKSEL_SHIFT              2
#define SIM_LPOCLKS_LPOCLKSEL_WIDTH              2
#define SIM_LPOCLKS_LPOCLKSEL(x)                 (((uint32)(((uint32)(x))<<SIM_LPOCLKS_LPOCLKSEL_SHIFT))&SIM_LPOCLKS_LPOCLKSEL_MASK)
#define SIM_LPOCLKS_CLK32KSEL_MASK               0x30u
#define SIM_LPOCLKS_CLK32KSEL_SHIFT              4
#define SIM_LPOCLKS_CLK32KSEL_WIDTH              2
#define SIM_LPOCLKS_CLK32KSEL(x)                 (((uint32)(((uint32)(x))<<SIM_LPOCLKS_CLK32KSEL_SHIFT))&SIM_LPOCLKS_CLK32KSEL_MASK)
/* ADCOPT Bit Fields */
#define SIM_ADCOPT_ADC0TRGSEL_MASK               0x1u
#define SIM_ADCOPT_ADC0TRGSEL_SHIFT              0
#define SIM_ADCOPT_ADC0TRGSEL_WIDTH              1
#define SIM_ADCOPT_ADC0TRGSEL(x)                 (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC0TRGSEL_SHIFT))&SIM_ADCOPT_ADC0TRGSEL_MASK)
#define SIM_ADCOPT_ADC0SWPRETRG_MASK             0xEu
#define SIM_ADCOPT_ADC0SWPRETRG_SHIFT            1
#define SIM_ADCOPT_ADC0SWPRETRG_WIDTH            3
#define SIM_ADCOPT_ADC0SWPRETRG(x)               (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC0SWPRETRG_SHIFT))&SIM_ADCOPT_ADC0SWPRETRG_MASK)
#define SIM_ADCOPT_ADC0PRETRGSEL_MASK            0x30u
#define SIM_ADCOPT_ADC0PRETRGSEL_SHIFT           4
#define SIM_ADCOPT_ADC0PRETRGSEL_WIDTH           2
#define SIM_ADCOPT_ADC0PRETRGSEL(x)              (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC0PRETRGSEL_SHIFT))&SIM_ADCOPT_ADC0PRETRGSEL_MASK)
#define SIM_ADCOPT_ADC1TRGSEL_MASK               0x100u
#define SIM_ADCOPT_ADC1TRGSEL_SHIFT              8
#define SIM_ADCOPT_ADC1TRGSEL_WIDTH              1
#define SIM_ADCOPT_ADC1TRGSEL(x)                 (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC1TRGSEL_SHIFT))&SIM_ADCOPT_ADC1TRGSEL_MASK)
#define SIM_ADCOPT_ADC1SWPRETRG_MASK             0xE00u
#define SIM_ADCOPT_ADC1SWPRETRG_SHIFT            9
#define SIM_ADCOPT_ADC1SWPRETRG_WIDTH            3
#define SIM_ADCOPT_ADC1SWPRETRG(x)               (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC1SWPRETRG_SHIFT))&SIM_ADCOPT_ADC1SWPRETRG_MASK)
#define SIM_ADCOPT_ADC1PRETRGSEL_MASK            0x3000u
#define SIM_ADCOPT_ADC1PRETRGSEL_SHIFT           12
#define SIM_ADCOPT_ADC1PRETRGSEL_WIDTH           2
#define SIM_ADCOPT_ADC1PRETRGSEL(x)              (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC1PRETRGSEL_SHIFT))&SIM_ADCOPT_ADC1PRETRGSEL_MASK)
#define SIM_ADCOPT_ADC2TRGSEL_MASK               0x10000u
#define SIM_ADCOPT_ADC2TRGSEL_SHIFT              16
#define SIM_ADCOPT_ADC2TRGSEL_WIDTH              1
#define SIM_ADCOPT_ADC2TRGSEL(x)                 (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC2TRGSEL_SHIFT))&SIM_ADCOPT_ADC2TRGSEL_MASK)
#define SIM_ADCOPT_ADC2SWPRETRG_MASK             0xE0000u
#define SIM_ADCOPT_ADC2SWPRETRG_SHIFT            17
#define SIM_ADCOPT_ADC2SWPRETRG_WIDTH            3
#define SIM_ADCOPT_ADC2SWPRETRG(x)               (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC2SWPRETRG_SHIFT))&SIM_ADCOPT_ADC2SWPRETRG_MASK)
#define SIM_ADCOPT_ADC2PRETRGSEL_MASK            0x300000u
#define SIM_ADCOPT_ADC2PRETRGSEL_SHIFT           20
#define SIM_ADCOPT_ADC2PRETRGSEL_WIDTH           2
#define SIM_ADCOPT_ADC2PRETRGSEL(x)              (((uint32)(((uint32)(x))<<SIM_ADCOPT_ADC2PRETRGSEL_SHIFT))&SIM_ADCOPT_ADC2PRETRGSEL_MASK)
/* FTMOPT1 Bit Fields */
#define SIM_FTMOPT1_FTM0SYNCBIT_MASK             0x1u
#define SIM_FTMOPT1_FTM0SYNCBIT_SHIFT            0
#define SIM_FTMOPT1_FTM0SYNCBIT_WIDTH            1
#define SIM_FTMOPT1_FTM0SYNCBIT(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM0SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM0SYNCBIT_MASK)
#define SIM_FTMOPT1_FTM1SYNCBIT_MASK             0x2u
#define SIM_FTMOPT1_FTM1SYNCBIT_SHIFT            1
#define SIM_FTMOPT1_FTM1SYNCBIT_WIDTH            1
#define SIM_FTMOPT1_FTM1SYNCBIT(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM1SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM1SYNCBIT_MASK)
#define SIM_FTMOPT1_FTM2SYNCBIT_MASK             0x4u
#define SIM_FTMOPT1_FTM2SYNCBIT_SHIFT            2
#define SIM_FTMOPT1_FTM2SYNCBIT_WIDTH            1
#define SIM_FTMOPT1_FTM2SYNCBIT(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM2SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM2SYNCBIT_MASK)
#define SIM_FTMOPT1_FTM3SYNCBIT_MASK             0x8u
#define SIM_FTMOPT1_FTM3SYNCBIT_SHIFT            3
#define SIM_FTMOPT1_FTM3SYNCBIT_WIDTH            1
#define SIM_FTMOPT1_FTM3SYNCBIT(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM3SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM3SYNCBIT_MASK)
#define SIM_FTMOPT1_FTM1CH0SEL_MASK              0x30u
#define SIM_FTMOPT1_FTM1CH0SEL_SHIFT             4
#define SIM_FTMOPT1_FTM1CH0SEL_WIDTH             2
#define SIM_FTMOPT1_FTM1CH0SEL(x)                (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM1CH0SEL_SHIFT))&SIM_FTMOPT1_FTM1CH0SEL_MASK)
#define SIM_FTMOPT1_FTM2CH0SEL_MASK              0xC0u
#define SIM_FTMOPT1_FTM2CH0SEL_SHIFT             6
#define SIM_FTMOPT1_FTM2CH0SEL_WIDTH             2
#define SIM_FTMOPT1_FTM2CH0SEL(x)                (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM2CH0SEL_SHIFT))&SIM_FTMOPT1_FTM2CH0SEL_MASK)
#define SIM_FTMOPT1_FTM2CH1SEL_MASK              0x100u
#define SIM_FTMOPT1_FTM2CH1SEL_SHIFT             8
#define SIM_FTMOPT1_FTM2CH1SEL_WIDTH             1
#define SIM_FTMOPT1_FTM2CH1SEL(x)                (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM2CH1SEL_SHIFT))&SIM_FTMOPT1_FTM2CH1SEL_MASK)
#define SIM_FTMOPT1_FTM0_OUTSEL_MASK             0xFF0000u
#define SIM_FTMOPT1_FTM0_OUTSEL_SHIFT            16
#define SIM_FTMOPT1_FTM0_OUTSEL_WIDTH            8
#define SIM_FTMOPT1_FTM0_OUTSEL(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM0_OUTSEL_SHIFT))&SIM_FTMOPT1_FTM0_OUTSEL_MASK)
#define SIM_FTMOPT1_FTM3_OUTSEL_MASK             0xFF000000u
#define SIM_FTMOPT1_FTM3_OUTSEL_SHIFT            24
#define SIM_FTMOPT1_FTM3_OUTSEL_WIDTH            8
#define SIM_FTMOPT1_FTM3_OUTSEL(x)               (((uint32)(((uint32)(x))<<SIM_FTMOPT1_FTM3_OUTSEL_SHIFT))&SIM_FTMOPT1_FTM3_OUTSEL_MASK)
/* SDID Bit Fields */
#define SIM_SDID_PINID_MASK                      0x7Fu
#define SIM_SDID_PINID_SHIFT                     0
#define SIM_SDID_PINID_WIDTH                     7
#define SIM_SDID_PINID(x)                        (((uint32)(((uint32)(x))<<SIM_SDID_PINID_SHIFT))&SIM_SDID_PINID_MASK)
#define SIM_SDID_PROJECTID_MASK                  0xF80u
#define SIM_SDID_PROJECTID_SHIFT                 7
#define SIM_SDID_PROJECTID_WIDTH                 5
#define SIM_SDID_PROJECTID(x)                    (((uint32)(((uint32)(x))<<SIM_SDID_PROJECTID_SHIFT))&SIM_SDID_PROJECTID_MASK)
#define SIM_SDID_REVID_MASK                      0xF000u
#define SIM_SDID_REVID_SHIFT                     12
#define SIM_SDID_REVID_WIDTH                     4
#define SIM_SDID_REVID(x)                        (((uint32)(((uint32)(x))<<SIM_SDID_REVID_SHIFT))&SIM_SDID_REVID_MASK)
#define SIM_SDID_RAMSIZE_MASK                    0xF0000u
#define SIM_SDID_RAMSIZE_SHIFT                   16
#define SIM_SDID_RAMSIZE_WIDTH                   4
#define SIM_SDID_RAMSIZE(x)                      (((uint32)(((uint32)(x))<<SIM_SDID_RAMSIZE_SHIFT))&SIM_SDID_RAMSIZE_MASK)
#define SIM_SDID_SERIESID_MASK                   0xF00000u
#define SIM_SDID_SERIESID_SHIFT                  20
#define SIM_SDID_SERIESID_WIDTH                  4
#define SIM_SDID_SERIESID(x)                     (((uint32)(((uint32)(x))<<SIM_SDID_SERIESID_SHIFT))&SIM_SDID_SERIESID_MASK)
#define SIM_SDID_SUBFAMID_MASK                   0xF000000u
#define SIM_SDID_SUBFAMID_SHIFT                  24
#define SIM_SDID_SUBFAMID_WIDTH                  4
#define SIM_SDID_SUBFAMID(x)                     (((uint32)(((uint32)(x))<<SIM_SDID_SUBFAMID_SHIFT))&SIM_SDID_SUBFAMID_MASK)
#define SIM_SDID_FAMILYID_MASK                   0xF0000000u
#define SIM_SDID_FAMILYID_SHIFT                  28
#define SIM_SDID_FAMILYID_WIDTH                  4
#define SIM_SDID_FAMILYID(x)                     (((uint32)(((uint32)(x))<<SIM_SDID_FAMILYID_SHIFT))&SIM_SDID_FAMILYID_MASK)
/* PLATCGC Bit Fields */
#define SIM_PLATCGC_CGCMSCM_MASK                 0x1u
#define SIM_PLATCGC_CGCMSCM_SHIFT                0
#define SIM_PLATCGC_CGCMSCM_WIDTH                1
#define SIM_PLATCGC_CGCMSCM(x)                   (((uint32)(((uint32)(x))<<SIM_PLATCGC_CGCMSCM_SHIFT))&SIM_PLATCGC_CGCMSCM_MASK)
#define SIM_PLATCGC_CGCMPU_MASK                  0x2u
#define SIM_PLATCGC_CGCMPU_SHIFT                 1
#define SIM_PLATCGC_CGCMPU_WIDTH                 1
#define SIM_PLATCGC_CGCMPU(x)                    (((uint32)(((uint32)(x))<<SIM_PLATCGC_CGCMPU_SHIFT))&SIM_PLATCGC_CGCMPU_MASK)
#define SIM_PLATCGC_CGCDMA_MASK                  0x4u
#define SIM_PLATCGC_CGCDMA_SHIFT                 2
#define SIM_PLATCGC_CGCDMA_WIDTH                 1
#define SIM_PLATCGC_CGCDMA(x)                    (((uint32)(((uint32)(x))<<SIM_PLATCGC_CGCDMA_SHIFT))&SIM_PLATCGC_CGCDMA_MASK)
/* FCFG1 Bit Fields */
#define SIM_FCFG1_FLASHDIS_MASK                  0x1u
#define SIM_FCFG1_FLASHDIS_SHIFT                 0
#define SIM_FCFG1_FLASHDIS_WIDTH                 1
#define SIM_FCFG1_FLASHDIS(x)                    (((uint32)(((uint32)(x))<<SIM_FCFG1_FLASHDIS_SHIFT))&SIM_FCFG1_FLASHDIS_MASK)
#define SIM_FCFG1_FLASHDOZE_MASK                 0x2u
#define SIM_FCFG1_FLASHDOZE_SHIFT                1
#define SIM_FCFG1_FLASHDOZE_WIDTH                1
#define SIM_FCFG1_FLASHDOZE(x)                   (((uint32)(((uint32)(x))<<SIM_FCFG1_FLASHDOZE_SHIFT))&SIM_FCFG1_FLASHDOZE_MASK)
#define SIM_FCFG1_DEPART_MASK                    0xF000u
#define SIM_FCFG1_DEPART_SHIFT                   12
#define SIM_FCFG1_DEPART_WIDTH                   4
#define SIM_FCFG1_DEPART(x)                      (((uint32)(((uint32)(x))<<SIM_FCFG1_DEPART_SHIFT))&SIM_FCFG1_DEPART_MASK)
#define SIM_FCFG1_EEERAMSIZE_MASK                0xF0000u
#define SIM_FCFG1_EEERAMSIZE_SHIFT               16
#define SIM_FCFG1_EEERAMSIZE_WIDTH               4
#define SIM_FCFG1_EEERAMSIZE(x)                  (((uint32)(((uint32)(x))<<SIM_FCFG1_EEERAMSIZE_SHIFT))&SIM_FCFG1_EEERAMSIZE_MASK)
#define SIM_FCFG1_PFSIZE_MASK                    0xF000000u
#define SIM_FCFG1_PFSIZE_SHIFT                   24
#define SIM_FCFG1_PFSIZE_WIDTH                   4
#define SIM_FCFG1_PFSIZE(x)                      (((uint32)(((uint32)(x))<<SIM_FCFG1_PFSIZE_SHIFT))&SIM_FCFG1_PFSIZE_MASK)
#define SIM_FCFG1_NVMSIZE_MASK                   0xF0000000u
#define SIM_FCFG1_NVMSIZE_SHIFT                  28
#define SIM_FCFG1_NVMSIZE_WIDTH                  4
#define SIM_FCFG1_NVMSIZE(x)                     (((uint32)(((uint32)(x))<<SIM_FCFG1_NVMSIZE_SHIFT))&SIM_FCFG1_NVMSIZE_MASK)
/* FCFG2 Bit Fields */
#define SIM_FCFG2_MAXADDR1_MASK                  0x7F0000u
#define SIM_FCFG2_MAXADDR1_SHIFT                 16
#define SIM_FCFG2_MAXADDR1_WIDTH                 7
#define SIM_FCFG2_MAXADDR1(x)                    (((uint32)(((uint32)(x))<<SIM_FCFG2_MAXADDR1_SHIFT))&SIM_FCFG2_MAXADDR1_MASK)
#define SIM_FCFG2_PFLSHEN_MASK                   0x800000u
#define SIM_FCFG2_PFLSHEN_SHIFT                  23
#define SIM_FCFG2_PFLSHEN_WIDTH                  1
#define SIM_FCFG2_PFLSHEN(x)                     (((uint32)(((uint32)(x))<<SIM_FCFG2_PFLSHEN_SHIFT))&SIM_FCFG2_PFLSHEN_MASK)
#define SIM_FCFG2_MAXADDR0_MASK                  0x7F000000u
#define SIM_FCFG2_MAXADDR0_SHIFT                 24
#define SIM_FCFG2_MAXADDR0_WIDTH                 7
#define SIM_FCFG2_MAXADDR0(x)                    (((uint32)(((uint32)(x))<<SIM_FCFG2_MAXADDR0_SHIFT))&SIM_FCFG2_MAXADDR0_MASK)
#define SIM_FCFG2_PFLASHSWAP_MASK                0x80000000u
#define SIM_FCFG2_PFLASHSWAP_SHIFT               31
#define SIM_FCFG2_PFLASHSWAP_WIDTH               1
#define SIM_FCFG2_PFLASHSWAP(x)                  (((uint32)(((uint32)(x))<<SIM_FCFG2_PFLASHSWAP_SHIFT))&SIM_FCFG2_PFLASHSWAP_MASK)
/* UIDH Bit Fields */
#define SIM_UIDH_UID127_96_MASK                  0xFFFFFFFFu
#define SIM_UIDH_UID127_96_SHIFT                 0
#define SIM_UIDH_UID127_96_WIDTH                 32
#define SIM_UIDH_UID127_96(x)                    (((uint32)(((uint32)(x))<<SIM_UIDH_UID127_96_SHIFT))&SIM_UIDH_UID127_96_MASK)
/* UIDMH Bit Fields */
#define SIM_UIDMH_UID95_64_MASK                  0xFFFFFFFFu
#define SIM_UIDMH_UID95_64_SHIFT                 0
#define SIM_UIDMH_UID95_64_WIDTH                 32
#define SIM_UIDMH_UID95_64(x)                    (((uint32)(((uint32)(x))<<SIM_UIDMH_UID95_64_SHIFT))&SIM_UIDMH_UID95_64_MASK)
/* UIDML Bit Fields */
#define SIM_UIDML_UID63_32_MASK                  0xFFFFFFFFu
#define SIM_UIDML_UID63_32_SHIFT                 0
#define SIM_UIDML_UID63_32_WIDTH                 32
#define SIM_UIDML_UID63_32(x)                    (((uint32)(((uint32)(x))<<SIM_UIDML_UID63_32_SHIFT))&SIM_UIDML_UID63_32_MASK)
/* UIDL Bit Fields */
#define SIM_UIDL_UID31_0_MASK                    0xFFFFFFFFu
#define SIM_UIDL_UID31_0_SHIFT                   0
#define SIM_UIDL_UID31_0_WIDTH                   32
#define SIM_UIDL_UID31_0(x)                      (((uint32)(((uint32)(x))<<SIM_UIDL_UID31_0_SHIFT))&SIM_UIDL_UID31_0_MASK)
/* CLKDIV4 Bit Fields */
#define SIM_CLKDIV4_TRACEFRAC_MASK               0x1u
#define SIM_CLKDIV4_TRACEFRAC_SHIFT              0
#define SIM_CLKDIV4_TRACEFRAC_WIDTH              1
#define SIM_CLKDIV4_TRACEFRAC(x)                 (((uint32)(((uint32)(x))<<SIM_CLKDIV4_TRACEFRAC_SHIFT))&SIM_CLKDIV4_TRACEFRAC_MASK)
#define SIM_CLKDIV4_TRACEDIV_MASK                0xEu
#define SIM_CLKDIV4_TRACEDIV_SHIFT               1
#define SIM_CLKDIV4_TRACEDIV_WIDTH               3
#define SIM_CLKDIV4_TRACEDIV(x)                  (((uint32)(((uint32)(x))<<SIM_CLKDIV4_TRACEDIV_SHIFT))&SIM_CLKDIV4_TRACEDIV_MASK)
#define SIM_CLKDIV4_TRACEDIVEN_MASK              0x10000000u
#define SIM_CLKDIV4_TRACEDIVEN_SHIFT             28
#define SIM_CLKDIV4_TRACEDIVEN_WIDTH             1
#define SIM_CLKDIV4_TRACEDIVEN(x)                (((uint32)(((uint32)(x))<<SIM_CLKDIV4_TRACEDIVEN_SHIFT))&SIM_CLKDIV4_TRACEDIVEN_MASK)
/* MISCTRL Bit Fields */
#define SIM_MISCTRL_SW_TRG_MASK                  0x1u
#define SIM_MISCTRL_SW_TRG_SHIFT                 0
#define SIM_MISCTRL_SW_TRG_WIDTH                 1
#define SIM_MISCTRL_SW_TRG(x)                    (((uint32)(((uint32)(x))<<SIM_MISCTRL_SW_TRG_SHIFT))&SIM_MISCTRL_SW_TRG_MASK)

/*!
 * @}
 */ /* end of group SIM_Register_Masks */


/* SIM - Peripheral instance base addresses */
/** Peripheral SIM base address */
#define SIM_BASE                                 (0x40048000u)
/** Peripheral SIM base pointer */
#define SIM                                      ((SIM_Type *)SIM_BASE)
#define SIM_BASE_PTR                             (SIM)
/** Array initializer of SIM peripheral base addresses */
#define SIM_BASE_ADDRS                           { SIM_BASE }
/** Array initializer of SIM peripheral base pointers */
#define SIM_BASE_PTRS                            { SIM }

/* ----------------------------------------------------------------------------
   -- SIM - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIM_Register_Accessor_Macros SIM - Register accessor macros
 * @{
 */


/* SIM - Register instance definitions */
/* SIM */
#define SIM_CHIPCTL                              SIM_CHIPCTL_REG(SIM)
#define SIM_FTMOPT0                              SIM_FTMOPT0_REG(SIM)
#define SIM_LPOCLKS                              SIM_LPOCLKS_REG(SIM)
#define SIM_ADCOPT                               SIM_ADCOPT_REG(SIM)
#define SIM_FTMOPT1                              SIM_FTMOPT1_REG(SIM)
#define SIM_SDID                                 SIM_SDID_REG(SIM)
#define SIM_PLATCGC                              SIM_PLATCGC_REG(SIM)
#define SIM_FCFG1                                SIM_FCFG1_REG(SIM)
#define SIM_FCFG2                                SIM_FCFG2_REG(SIM)
#define SIM_UIDH                                 SIM_UIDH_REG(SIM)
#define SIM_UIDMH                                SIM_UIDMH_REG(SIM)
#define SIM_UIDML                                SIM_UIDML_REG(SIM)
#define SIM_UIDL                                 SIM_UIDL_REG(SIM)
#define SIM_CLKDIV4                              SIM_CLKDIV4_REG(SIM)
#define SIM_MISCTRL                              SIM_MISCTRL_REG(SIM)

/*!
 * @}
 */ /* end of group SIM_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group SIM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMC_Peripheral_Access_Layer SMC Peripheral Access Layer
 * @{
 */

/** SMC - Register Layout Typedef */
typedef struct {
  __I  uint32 VERID;                               /**< SMC Version ID Register, offset: 0x0 */
  __I  uint32 PARAM;                               /**< SMC Parameter Register, offset: 0x4 */
  __IO uint32 PMPROT;                              /**< Power Mode Protection register, offset: 0x8 */
  __IO uint32 PMCTRL;                              /**< Power Mode Control register, offset: 0xC */
  __IO uint32 STOPCTRL;                            /**< Stop Control Register, offset: 0x10 */
  __I  uint32 PMSTAT;                              /**< Power Mode Status register, offset: 0x14 */
} SMC_Type, *SMC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SMC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMC_Register_Accessor_Macros SMC - Register accessor macros
 * @{
 */


/* SMC - Register accessors */
#define SMC_VERID_REG(base)                      ((base)->VERID)
#define SMC_PARAM_REG(base)                      ((base)->PARAM)
#define SMC_PMPROT_REG(base)                     ((base)->PMPROT)
#define SMC_PMCTRL_REG(base)                     ((base)->PMCTRL)
#define SMC_STOPCTRL_REG(base)                   ((base)->STOPCTRL)
#define SMC_PMSTAT_REG(base)                     ((base)->PMSTAT)

/*!
 * @}
 */ /* end of group SMC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMC_Register_Masks SMC Register Masks
 * @{
 */

/* VERID Bit Fields */
#define SMC_VERID_FEATURE_MASK                   0xFFFFu
#define SMC_VERID_FEATURE_SHIFT                  0
#define SMC_VERID_FEATURE_WIDTH                  16
#define SMC_VERID_FEATURE(x)                     (((uint32)(((uint32)(x))<<SMC_VERID_FEATURE_SHIFT))&SMC_VERID_FEATURE_MASK)
#define SMC_VERID_MINOR_MASK                     0xFF0000u
#define SMC_VERID_MINOR_SHIFT                    16
#define SMC_VERID_MINOR_WIDTH                    8
#define SMC_VERID_MINOR(x)                       (((uint32)(((uint32)(x))<<SMC_VERID_MINOR_SHIFT))&SMC_VERID_MINOR_MASK)
#define SMC_VERID_MAJOR_MASK                     0xFF000000u
#define SMC_VERID_MAJOR_SHIFT                    24
#define SMC_VERID_MAJOR_WIDTH                    8
#define SMC_VERID_MAJOR(x)                       (((uint32)(((uint32)(x))<<SMC_VERID_MAJOR_SHIFT))&SMC_VERID_MAJOR_MASK)
/* PARAM Bit Fields */
#define SMC_PARAM_EHSRUN_MASK                    0x1u
#define SMC_PARAM_EHSRUN_SHIFT                   0
#define SMC_PARAM_EHSRUN_WIDTH                   1
#define SMC_PARAM_EHSRUN(x)                      (((uint32)(((uint32)(x))<<SMC_PARAM_EHSRUN_SHIFT))&SMC_PARAM_EHSRUN_MASK)
#define SMC_PARAM_ELLS_MASK                      0x8u
#define SMC_PARAM_ELLS_SHIFT                     3
#define SMC_PARAM_ELLS_WIDTH                     1
#define SMC_PARAM_ELLS(x)                        (((uint32)(((uint32)(x))<<SMC_PARAM_ELLS_SHIFT))&SMC_PARAM_ELLS_MASK)
#define SMC_PARAM_ELLS2_MASK                     0x20u
#define SMC_PARAM_ELLS2_SHIFT                    5
#define SMC_PARAM_ELLS2_WIDTH                    1
#define SMC_PARAM_ELLS2(x)                       (((uint32)(((uint32)(x))<<SMC_PARAM_ELLS2_SHIFT))&SMC_PARAM_ELLS2_MASK)
#define SMC_PARAM_EVLLS0_MASK                    0x40u
#define SMC_PARAM_EVLLS0_SHIFT                   6
#define SMC_PARAM_EVLLS0_WIDTH                   1
#define SMC_PARAM_EVLLS0(x)                      (((uint32)(((uint32)(x))<<SMC_PARAM_EVLLS0_SHIFT))&SMC_PARAM_EVLLS0_MASK)
/* PMPROT Bit Fields */
#define SMC_PMPROT_AVLP_MASK                     0x20u
#define SMC_PMPROT_AVLP_SHIFT                    5
#define SMC_PMPROT_AVLP_WIDTH                    1
#define SMC_PMPROT_AVLP(x)                       (((uint32)(((uint32)(x))<<SMC_PMPROT_AVLP_SHIFT))&SMC_PMPROT_AVLP_MASK)
#define SMC_PMPROT_AHSRUN_MASK                   0x80u
#define SMC_PMPROT_AHSRUN_SHIFT                  7
#define SMC_PMPROT_AHSRUN_WIDTH                  1
#define SMC_PMPROT_AHSRUN(x)                     (((uint32)(((uint32)(x))<<SMC_PMPROT_AHSRUN_SHIFT))&SMC_PMPROT_AHSRUN_MASK)
/* PMCTRL Bit Fields */
#define SMC_PMCTRL_STOPM_MASK                    0x7u
#define SMC_PMCTRL_STOPM_SHIFT                   0
#define SMC_PMCTRL_STOPM_WIDTH                   3
#define SMC_PMCTRL_STOPM(x)                      (((uint32)(((uint32)(x))<<SMC_PMCTRL_STOPM_SHIFT))&SMC_PMCTRL_STOPM_MASK)
#define SMC_PMCTRL_STOPA_MASK                    0x8u
#define SMC_PMCTRL_STOPA_SHIFT                   3
#define SMC_PMCTRL_STOPA_WIDTH                   1
#define SMC_PMCTRL_STOPA(x)                      (((uint32)(((uint32)(x))<<SMC_PMCTRL_STOPA_SHIFT))&SMC_PMCTRL_STOPA_MASK)
#define SMC_PMCTRL_RUNM_MASK                     0x60u
#define SMC_PMCTRL_RUNM_SHIFT                    5
#define SMC_PMCTRL_RUNM_WIDTH                    2
#define SMC_PMCTRL_RUNM(x)                       (((uint32)(((uint32)(x))<<SMC_PMCTRL_RUNM_SHIFT))&SMC_PMCTRL_RUNM_MASK)
/* STOPCTRL Bit Fields */
#define SMC_STOPCTRL_PSTOPO_MASK                 0xC0u
#define SMC_STOPCTRL_PSTOPO_SHIFT                6
#define SMC_STOPCTRL_PSTOPO_WIDTH                2
#define SMC_STOPCTRL_PSTOPO(x)                   (((uint32)(((uint32)(x))<<SMC_STOPCTRL_PSTOPO_SHIFT))&SMC_STOPCTRL_PSTOPO_MASK)
/* PMSTAT Bit Fields */
#define SMC_PMSTAT_PMSTAT_MASK                   0xFFu
#define SMC_PMSTAT_PMSTAT_SHIFT                  0
#define SMC_PMSTAT_PMSTAT_WIDTH                  8
#define SMC_PMSTAT_PMSTAT(x)                     (((uint32)(((uint32)(x))<<SMC_PMSTAT_PMSTAT_SHIFT))&SMC_PMSTAT_PMSTAT_MASK)

/*!
 * @}
 */ /* end of group SMC_Register_Masks */


/* SMC - Peripheral instance base addresses */
/** Peripheral SMC base address */
#define SMC_BASE                                 (0x4007E000u)
/** Peripheral SMC base pointer */
#define SMC                                      ((SMC_Type *)SMC_BASE)
#define SMC_BASE_PTR                             (SMC)
/** Array initializer of SMC peripheral base addresses */
#define SMC_BASE_ADDRS                           { SMC_BASE }
/** Array initializer of SMC peripheral base pointers */
#define SMC_BASE_PTRS                            { SMC }

/* ----------------------------------------------------------------------------
   -- SMC - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMC_Register_Accessor_Macros SMC - Register accessor macros
 * @{
 */


/* SMC - Register instance definitions */
/* SMC */
#define SMC_VERID                                SMC_VERID_REG(SMC)
#define SMC_PARAM                                SMC_PARAM_REG(SMC)
#define SMC_PMPROT                               SMC_PMPROT_REG(SMC)
#define SMC_PMCTRL                               SMC_PMCTRL_REG(SMC)
#define SMC_STOPCTRL                             SMC_STOPCTRL_REG(SMC)
#define SMC_PMSTAT                               SMC_PMSTAT_REG(SMC)

/*!
 * @}
 */ /* end of group SMC_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group SMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- TRGMUX Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TRGMUX_Peripheral_Access_Layer TRGMUX Peripheral Access Layer
 * @{
 */

/** TRGMUX - Register Layout Typedef */
typedef struct {
  __IO uint32 DMAMUX_CH0;                          /**< TRGMUX DMAMUX_CH0 Register, offset: 0x0 */
  __IO uint32 XB_OUT0_3;                           /**< TRGMUX XB_OUT0_3 Register, offset: 0x4 */
  __IO uint32 XB_OUT4_7;                           /**< TRGMUX XB_OUT4_7 Register, offset: 0x8 */
  __IO uint32 ADC0r;                               /**< TRGMUX ADC0 Register, offset: 0xC */
  __IO uint32 ADC1r;                               /**< TRGMUX ADC1 Register, offset: 0x10 */
  __IO uint32 DUMMY5;                              /**< TRGMUX DUMMY5 Register, offset: 0x14 */
  __IO uint32 DUMMY6;                              /**< TRGMUX DUMMY6 Register, offset: 0x18 */
  __IO uint32 CMP0r;                               /**< TRGMUX CMP0 Register, offset: 0x1C */
  __IO uint32 DUMMY8;                              /**< TRGMUX DUMMY8 Register, offset: 0x20 */
  __IO uint32 DUMMY9;                              /**< TRGMUX DUMMY9 Register, offset: 0x24 */
  __IO uint32 FTM0r;                               /**< TRGMUX FTM0 Register, offset: 0x28 */
  __IO uint32 FTM1r;                               /**< TRGMUX FTM1 Register, offset: 0x2C */
  __IO uint32 FTM2r;                               /**< TRGMUX FTM2 Register, offset: 0x30 */
  __IO uint32 FTM3r;                               /**< TRGMUX FTM3 Register, offset: 0x34 */
  __IO uint32 PDB0r;                               /**< TRGMUX PDB0 Register, offset: 0x38 */
  __IO uint32 PDB1r;                               /**< TRGMUX PDB1 Register, offset: 0x3C */
  __IO uint32 DUMMY16;                             /**< TRGMUX DUMMY16 Register, offset: 0x40 */
  __IO uint32 FLEXIOr;                             /**< TRGMUX FLEXIO Register, offset: 0x44 */
  __IO uint32 LPIT;                                /**< TRGMUX LPIT Register, offset: 0x48 */
  __IO uint32 LPUART0r;                            /**< TRGMUX LPUART0 Register, offset: 0x4C */
  __IO uint32 LPUART1r;                            /**< TRGMUX LPUART1 Register, offset: 0x50 */
  __IO uint32 LPI2C0r;                             /**< TRGMUX LPI2C0 Register, offset: 0x54 */
  __IO uint32 LPI2C1r;                             /**< TRGMUX LPI2C1 Register, offset: 0x58 */
  __IO uint32 LPSPI0r;                             /**< TRGMUX LPSPI0 Register, offset: 0x5C */
  __IO uint32 LPSPI1r;                             /**< TRGMUX LPSPI1 Register, offset: 0x60 */
  __IO uint32 LPTMR0r;                             /**< TRGMUX LPTMR0 Register, offset: 0x64 */
} TRGMUX_Type, *TRGMUX_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- TRGMUX - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TRGMUX_Register_Accessor_Macros TRGMUX - Register accessor macros
 * @{
 */


/* TRGMUX - Register accessors */
#define TRGMUX_DMAMUX_CH0_REG(base)              ((base)->DMAMUX_CH0)
#define TRGMUX_XB_OUT0_3_REG(base)               ((base)->XB_OUT0_3)
#define TRGMUX_XB_OUT4_7_REG(base)               ((base)->XB_OUT4_7)
#define TRGMUX_ADC0_REG(base)                    ((base)->ADC0r)
#define TRGMUX_ADC1_REG(base)                    ((base)->ADC1r)
#define TRGMUX_DUMMY5_REG(base)                  ((base)->DUMMY5)
#define TRGMUX_DUMMY6_REG(base)                  ((base)->DUMMY6)
#define TRGMUX_CMP0_REG(base)                    ((base)->CMP0r)
#define TRGMUX_DUMMY8_REG(base)                  ((base)->DUMMY8)
#define TRGMUX_DUMMY9_REG(base)                  ((base)->DUMMY9)
#define TRGMUX_FTM0_REG(base)                    ((base)->FTM0r)
#define TRGMUX_FTM1_REG(base)                    ((base)->FTM1r)
#define TRGMUX_FTM2_REG(base)                    ((base)->FTM2r)
#define TRGMUX_FTM3_REG(base)                    ((base)->FTM3r)
#define TRGMUX_PDB0_REG(base)                    ((base)->PDB0r)
#define TRGMUX_PDB1_REG(base)                    ((base)->PDB1r)
#define TRGMUX_DUMMY16_REG(base)                 ((base)->DUMMY16)
#define TRGMUX_FLEXIO_REG(base)                  ((base)->FLEXIOr)
#define TRGMUX_LPIT_REG(base)                    ((base)->LPIT)
#define TRGMUX_LPUART0_REG(base)                 ((base)->LPUART0r)
#define TRGMUX_LPUART1_REG(base)                 ((base)->LPUART1r)
#define TRGMUX_LPI2C0_REG(base)                  ((base)->LPI2C0r)
#define TRGMUX_LPI2C1_REG(base)                  ((base)->LPI2C1r)
#define TRGMUX_LPSPI0_REG(base)                  ((base)->LPSPI0r)
#define TRGMUX_LPSPI1_REG(base)                  ((base)->LPSPI1r)
#define TRGMUX_LPTMR0_REG(base)                  ((base)->LPTMR0r)

/*!
 * @}
 */ /* end of group TRGMUX_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- TRGMUX Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TRGMUX_Register_Masks TRGMUX Register Masks
 * @{
 */

/* DMAMUX_CH0 Bit Fields */
#define TRGMUX_DMAMUX_CH0_SEL0_MASK              0x3Fu
#define TRGMUX_DMAMUX_CH0_SEL0_SHIFT             0
#define TRGMUX_DMAMUX_CH0_SEL0_WIDTH             6
#define TRGMUX_DMAMUX_CH0_SEL0(x)                (((uint32)(((uint32)(x))<<TRGMUX_DMAMUX_CH0_SEL0_SHIFT))&TRGMUX_DMAMUX_CH0_SEL0_MASK)
#define TRGMUX_DMAMUX_CH0_SEL1_MASK              0x3F00u
#define TRGMUX_DMAMUX_CH0_SEL1_SHIFT             8
#define TRGMUX_DMAMUX_CH0_SEL1_WIDTH             6
#define TRGMUX_DMAMUX_CH0_SEL1(x)                (((uint32)(((uint32)(x))<<TRGMUX_DMAMUX_CH0_SEL1_SHIFT))&TRGMUX_DMAMUX_CH0_SEL1_MASK)
#define TRGMUX_DMAMUX_CH0_SEL2_MASK              0x3F0000u
#define TRGMUX_DMAMUX_CH0_SEL2_SHIFT             16
#define TRGMUX_DMAMUX_CH0_SEL2_WIDTH             6
#define TRGMUX_DMAMUX_CH0_SEL2(x)                (((uint32)(((uint32)(x))<<TRGMUX_DMAMUX_CH0_SEL2_SHIFT))&TRGMUX_DMAMUX_CH0_SEL2_MASK)
#define TRGMUX_DMAMUX_CH0_SEL3_MASK              0x3F000000u
#define TRGMUX_DMAMUX_CH0_SEL3_SHIFT             24
#define TRGMUX_DMAMUX_CH0_SEL3_WIDTH             6
#define TRGMUX_DMAMUX_CH0_SEL3(x)                (((uint32)(((uint32)(x))<<TRGMUX_DMAMUX_CH0_SEL3_SHIFT))&TRGMUX_DMAMUX_CH0_SEL3_MASK)
#define TRGMUX_DMAMUX_CH0_LK_MASK                0x80000000u
#define TRGMUX_DMAMUX_CH0_LK_SHIFT               31
#define TRGMUX_DMAMUX_CH0_LK_WIDTH               1
#define TRGMUX_DMAMUX_CH0_LK(x)                  (((uint32)(((uint32)(x))<<TRGMUX_DMAMUX_CH0_LK_SHIFT))&TRGMUX_DMAMUX_CH0_LK_MASK)
/* XB_OUT0_3 Bit Fields */
#define TRGMUX_XB_OUT0_3_SEL0_MASK               0x3Fu
#define TRGMUX_XB_OUT0_3_SEL0_SHIFT              0
#define TRGMUX_XB_OUT0_3_SEL0_WIDTH              6
#define TRGMUX_XB_OUT0_3_SEL0(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT0_3_SEL0_SHIFT))&TRGMUX_XB_OUT0_3_SEL0_MASK)
#define TRGMUX_XB_OUT0_3_SEL1_MASK               0x3F00u
#define TRGMUX_XB_OUT0_3_SEL1_SHIFT              8
#define TRGMUX_XB_OUT0_3_SEL1_WIDTH              6
#define TRGMUX_XB_OUT0_3_SEL1(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT0_3_SEL1_SHIFT))&TRGMUX_XB_OUT0_3_SEL1_MASK)
#define TRGMUX_XB_OUT0_3_SEL2_MASK               0x3F0000u
#define TRGMUX_XB_OUT0_3_SEL2_SHIFT              16
#define TRGMUX_XB_OUT0_3_SEL2_WIDTH              6
#define TRGMUX_XB_OUT0_3_SEL2(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT0_3_SEL2_SHIFT))&TRGMUX_XB_OUT0_3_SEL2_MASK)
#define TRGMUX_XB_OUT0_3_SEL3_MASK               0x3F000000u
#define TRGMUX_XB_OUT0_3_SEL3_SHIFT              24
#define TRGMUX_XB_OUT0_3_SEL3_WIDTH              6
#define TRGMUX_XB_OUT0_3_SEL3(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT0_3_SEL3_SHIFT))&TRGMUX_XB_OUT0_3_SEL3_MASK)
#define TRGMUX_XB_OUT0_3_LK_MASK                 0x80000000u
#define TRGMUX_XB_OUT0_3_LK_SHIFT                31
#define TRGMUX_XB_OUT0_3_LK_WIDTH                1
#define TRGMUX_XB_OUT0_3_LK(x)                   (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT0_3_LK_SHIFT))&TRGMUX_XB_OUT0_3_LK_MASK)
/* XB_OUT4_7 Bit Fields */
#define TRGMUX_XB_OUT4_7_SEL0_MASK               0x3Fu
#define TRGMUX_XB_OUT4_7_SEL0_SHIFT              0
#define TRGMUX_XB_OUT4_7_SEL0_WIDTH              6
#define TRGMUX_XB_OUT4_7_SEL0(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT4_7_SEL0_SHIFT))&TRGMUX_XB_OUT4_7_SEL0_MASK)
#define TRGMUX_XB_OUT4_7_SEL1_MASK               0x3F00u
#define TRGMUX_XB_OUT4_7_SEL1_SHIFT              8
#define TRGMUX_XB_OUT4_7_SEL1_WIDTH              6
#define TRGMUX_XB_OUT4_7_SEL1(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT4_7_SEL1_SHIFT))&TRGMUX_XB_OUT4_7_SEL1_MASK)
#define TRGMUX_XB_OUT4_7_SEL2_MASK               0x3F0000u
#define TRGMUX_XB_OUT4_7_SEL2_SHIFT              16
#define TRGMUX_XB_OUT4_7_SEL2_WIDTH              6
#define TRGMUX_XB_OUT4_7_SEL2(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT4_7_SEL2_SHIFT))&TRGMUX_XB_OUT4_7_SEL2_MASK)
#define TRGMUX_XB_OUT4_7_SEL3_MASK               0x3F000000u
#define TRGMUX_XB_OUT4_7_SEL3_SHIFT              24
#define TRGMUX_XB_OUT4_7_SEL3_WIDTH              6
#define TRGMUX_XB_OUT4_7_SEL3(x)                 (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT4_7_SEL3_SHIFT))&TRGMUX_XB_OUT4_7_SEL3_MASK)
#define TRGMUX_XB_OUT4_7_LK_MASK                 0x80000000u
#define TRGMUX_XB_OUT4_7_LK_SHIFT                31
#define TRGMUX_XB_OUT4_7_LK_WIDTH                1
#define TRGMUX_XB_OUT4_7_LK(x)                   (((uint32)(((uint32)(x))<<TRGMUX_XB_OUT4_7_LK_SHIFT))&TRGMUX_XB_OUT4_7_LK_MASK)
/* ADC0 Bit Fields */
#define TRGMUX_ADC0_SEL0_MASK                    0x3Fu
#define TRGMUX_ADC0_SEL0_SHIFT                   0
#define TRGMUX_ADC0_SEL0_WIDTH                   6
#define TRGMUX_ADC0_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC0_SEL0_SHIFT))&TRGMUX_ADC0_SEL0_MASK)
#define TRGMUX_ADC0_SEL1_MASK                    0x3F00u
#define TRGMUX_ADC0_SEL1_SHIFT                   8
#define TRGMUX_ADC0_SEL1_WIDTH                   6
#define TRGMUX_ADC0_SEL1(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC0_SEL1_SHIFT))&TRGMUX_ADC0_SEL1_MASK)
#define TRGMUX_ADC0_SEL2_MASK                    0x3F0000u
#define TRGMUX_ADC0_SEL2_SHIFT                   16
#define TRGMUX_ADC0_SEL2_WIDTH                   6
#define TRGMUX_ADC0_SEL2(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC0_SEL2_SHIFT))&TRGMUX_ADC0_SEL2_MASK)
#define TRGMUX_ADC0_SEL3_MASK                    0x3F000000u
#define TRGMUX_ADC0_SEL3_SHIFT                   24
#define TRGMUX_ADC0_SEL3_WIDTH                   6
#define TRGMUX_ADC0_SEL3(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC0_SEL3_SHIFT))&TRGMUX_ADC0_SEL3_MASK)
#define TRGMUX_ADC0_LK_MASK                      0x80000000u
#define TRGMUX_ADC0_LK_SHIFT                     31
#define TRGMUX_ADC0_LK_WIDTH                     1
#define TRGMUX_ADC0_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_ADC0_LK_SHIFT))&TRGMUX_ADC0_LK_MASK)
/* ADC1 Bit Fields */
#define TRGMUX_ADC1_SEL0_MASK                    0x3Fu
#define TRGMUX_ADC1_SEL0_SHIFT                   0
#define TRGMUX_ADC1_SEL0_WIDTH                   6
#define TRGMUX_ADC1_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC1_SEL0_SHIFT))&TRGMUX_ADC1_SEL0_MASK)
#define TRGMUX_ADC1_SEL1_MASK                    0x3F00u
#define TRGMUX_ADC1_SEL1_SHIFT                   8
#define TRGMUX_ADC1_SEL1_WIDTH                   6
#define TRGMUX_ADC1_SEL1(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC1_SEL1_SHIFT))&TRGMUX_ADC1_SEL1_MASK)
#define TRGMUX_ADC1_SEL2_MASK                    0x3F0000u
#define TRGMUX_ADC1_SEL2_SHIFT                   16
#define TRGMUX_ADC1_SEL2_WIDTH                   6
#define TRGMUX_ADC1_SEL2(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC1_SEL2_SHIFT))&TRGMUX_ADC1_SEL2_MASK)
#define TRGMUX_ADC1_SEL3_MASK                    0x3F000000u
#define TRGMUX_ADC1_SEL3_SHIFT                   24
#define TRGMUX_ADC1_SEL3_WIDTH                   6
#define TRGMUX_ADC1_SEL3(x)                      (((uint32)(((uint32)(x))<<TRGMUX_ADC1_SEL3_SHIFT))&TRGMUX_ADC1_SEL3_MASK)
#define TRGMUX_ADC1_LK_MASK                      0x80000000u
#define TRGMUX_ADC1_LK_SHIFT                     31
#define TRGMUX_ADC1_LK_WIDTH                     1
#define TRGMUX_ADC1_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_ADC1_LK_SHIFT))&TRGMUX_ADC1_LK_MASK)
/* DUMMY5 Bit Fields */
#define TRGMUX_DUMMY5_SEL0_MASK                  0x3Fu
#define TRGMUX_DUMMY5_SEL0_SHIFT                 0
#define TRGMUX_DUMMY5_SEL0_WIDTH                 6
#define TRGMUX_DUMMY5_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_DUMMY5_SEL0_SHIFT))&TRGMUX_DUMMY5_SEL0_MASK)
#define TRGMUX_DUMMY5_SEL1_MASK                  0x3F00u
#define TRGMUX_DUMMY5_SEL1_SHIFT                 8
#define TRGMUX_DUMMY5_SEL1_WIDTH                 6
#define TRGMUX_DUMMY5_SEL1(x)                    (((uint32)(((uint32)(x))<<TRGMUX_DUMMY5_SEL1_SHIFT))&TRGMUX_DUMMY5_SEL1_MASK)
#define TRGMUX_DUMMY5_SEL2_MASK                  0x3F0000u
#define TRGMUX_DUMMY5_SEL2_SHIFT                 16
#define TRGMUX_DUMMY5_SEL2_WIDTH                 6
#define TRGMUX_DUMMY5_SEL2(x)                    (((uint32)(((uint32)(x))<<TRGMUX_DUMMY5_SEL2_SHIFT))&TRGMUX_DUMMY5_SEL2_MASK)
#define TRGMUX_DUMMY5_SEL3_MASK                  0x3F000000u
#define TRGMUX_DUMMY5_SEL3_SHIFT                 24
#define TRGMUX_DUMMY5_SEL3_WIDTH                 6
#define TRGMUX_DUMMY5_SEL3(x)                    (((uint32)(((uint32)(x))<<TRGMUX_DUMMY5_SEL3_SHIFT))&TRGMUX_DUMMY5_SEL3_MASK)
#define TRGMUX_DUMMY5_LK_MASK                    0x80000000u
#define TRGMUX_DUMMY5_LK_SHIFT                   31
#define TRGMUX_DUMMY5_LK_WIDTH                   1
#define TRGMUX_DUMMY5_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_DUMMY5_LK_SHIFT))&TRGMUX_DUMMY5_LK_MASK)
/* DUMMY6 Bit Fields */
#define TRGMUX_DUMMY6_SEL0_MASK                  0x3Fu
#define TRGMUX_DUMMY6_SEL0_SHIFT                 0
#define TRGMUX_DUMMY6_SEL0_WIDTH                 6
#define TRGMUX_DUMMY6_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_DUMMY6_SEL0_SHIFT))&TRGMUX_DUMMY6_SEL0_MASK)
#define TRGMUX_DUMMY6_LK_MASK                    0x80000000u
#define TRGMUX_DUMMY6_LK_SHIFT                   31
#define TRGMUX_DUMMY6_LK_WIDTH                   1
#define TRGMUX_DUMMY6_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_DUMMY6_LK_SHIFT))&TRGMUX_DUMMY6_LK_MASK)
/* CMP0 Bit Fields */
#define TRGMUX_CMP0_SEL0_MASK                    0x3Fu
#define TRGMUX_CMP0_SEL0_SHIFT                   0
#define TRGMUX_CMP0_SEL0_WIDTH                   6
#define TRGMUX_CMP0_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_CMP0_SEL0_SHIFT))&TRGMUX_CMP0_SEL0_MASK)
#define TRGMUX_CMP0_LK_MASK                      0x80000000u
#define TRGMUX_CMP0_LK_SHIFT                     31
#define TRGMUX_CMP0_LK_WIDTH                     1
#define TRGMUX_CMP0_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_CMP0_LK_SHIFT))&TRGMUX_CMP0_LK_MASK)
/* DUMMY8 Bit Fields */
#define TRGMUX_DUMMY8_SEL0_MASK                  0x3Fu
#define TRGMUX_DUMMY8_SEL0_SHIFT                 0
#define TRGMUX_DUMMY8_SEL0_WIDTH                 6
#define TRGMUX_DUMMY8_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_DUMMY8_SEL0_SHIFT))&TRGMUX_DUMMY8_SEL0_MASK)
#define TRGMUX_DUMMY8_LK_MASK                    0x80000000u
#define TRGMUX_DUMMY8_LK_SHIFT                   31
#define TRGMUX_DUMMY8_LK_WIDTH                   1
#define TRGMUX_DUMMY8_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_DUMMY8_LK_SHIFT))&TRGMUX_DUMMY8_LK_MASK)
/* DUMMY9 Bit Fields */
#define TRGMUX_DUMMY9_SEL0_MASK                  0x3Fu
#define TRGMUX_DUMMY9_SEL0_SHIFT                 0
#define TRGMUX_DUMMY9_SEL0_WIDTH                 6
#define TRGMUX_DUMMY9_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_DUMMY9_SEL0_SHIFT))&TRGMUX_DUMMY9_SEL0_MASK)
#define TRGMUX_DUMMY9_LK_MASK                    0x80000000u
#define TRGMUX_DUMMY9_LK_SHIFT                   31
#define TRGMUX_DUMMY9_LK_WIDTH                   1
#define TRGMUX_DUMMY9_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_DUMMY9_LK_SHIFT))&TRGMUX_DUMMY9_LK_MASK)
/* FTM0 Bit Fields */
#define TRGMUX_FTM0_SEL0_MASK                    0x3Fu
#define TRGMUX_FTM0_SEL0_SHIFT                   0
#define TRGMUX_FTM0_SEL0_WIDTH                   6
#define TRGMUX_FTM0_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM0_SEL0_SHIFT))&TRGMUX_FTM0_SEL0_MASK)
#define TRGMUX_FTM0_SEL1_MASK                    0x3F00u
#define TRGMUX_FTM0_SEL1_SHIFT                   8
#define TRGMUX_FTM0_SEL1_WIDTH                   6
#define TRGMUX_FTM0_SEL1(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM0_SEL1_SHIFT))&TRGMUX_FTM0_SEL1_MASK)
#define TRGMUX_FTM0_SEL2_MASK                    0x3F0000u
#define TRGMUX_FTM0_SEL2_SHIFT                   16
#define TRGMUX_FTM0_SEL2_WIDTH                   6
#define TRGMUX_FTM0_SEL2(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM0_SEL2_SHIFT))&TRGMUX_FTM0_SEL2_MASK)
#define TRGMUX_FTM0_SEL3_MASK                    0x3F000000u
#define TRGMUX_FTM0_SEL3_SHIFT                   24
#define TRGMUX_FTM0_SEL3_WIDTH                   6
#define TRGMUX_FTM0_SEL3(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM0_SEL3_SHIFT))&TRGMUX_FTM0_SEL3_MASK)
#define TRGMUX_FTM0_LK_MASK                      0x80000000u
#define TRGMUX_FTM0_LK_SHIFT                     31
#define TRGMUX_FTM0_LK_WIDTH                     1
#define TRGMUX_FTM0_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_FTM0_LK_SHIFT))&TRGMUX_FTM0_LK_MASK)
/* FTM1 Bit Fields */
#define TRGMUX_FTM1_SEL0_MASK                    0x3Fu
#define TRGMUX_FTM1_SEL0_SHIFT                   0
#define TRGMUX_FTM1_SEL0_WIDTH                   6
#define TRGMUX_FTM1_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM1_SEL0_SHIFT))&TRGMUX_FTM1_SEL0_MASK)
#define TRGMUX_FTM1_SEL1_MASK                    0x3F00u
#define TRGMUX_FTM1_SEL1_SHIFT                   8
#define TRGMUX_FTM1_SEL1_WIDTH                   6
#define TRGMUX_FTM1_SEL1(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM1_SEL1_SHIFT))&TRGMUX_FTM1_SEL1_MASK)
#define TRGMUX_FTM1_SEL2_MASK                    0x3F0000u
#define TRGMUX_FTM1_SEL2_SHIFT                   16
#define TRGMUX_FTM1_SEL2_WIDTH                   6
#define TRGMUX_FTM1_SEL2(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM1_SEL2_SHIFT))&TRGMUX_FTM1_SEL2_MASK)
#define TRGMUX_FTM1_SEL3_MASK                    0x3F000000u
#define TRGMUX_FTM1_SEL3_SHIFT                   24
#define TRGMUX_FTM1_SEL3_WIDTH                   6
#define TRGMUX_FTM1_SEL3(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM1_SEL3_SHIFT))&TRGMUX_FTM1_SEL3_MASK)
#define TRGMUX_FTM1_LK_MASK                      0x80000000u
#define TRGMUX_FTM1_LK_SHIFT                     31
#define TRGMUX_FTM1_LK_WIDTH                     1
#define TRGMUX_FTM1_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_FTM1_LK_SHIFT))&TRGMUX_FTM1_LK_MASK)
/* FTM2 Bit Fields */
#define TRGMUX_FTM2_SEL0_MASK                    0x3Fu
#define TRGMUX_FTM2_SEL0_SHIFT                   0
#define TRGMUX_FTM2_SEL0_WIDTH                   6
#define TRGMUX_FTM2_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM2_SEL0_SHIFT))&TRGMUX_FTM2_SEL0_MASK)
#define TRGMUX_FTM2_SEL1_MASK                    0x3F00u
#define TRGMUX_FTM2_SEL1_SHIFT                   8
#define TRGMUX_FTM2_SEL1_WIDTH                   6
#define TRGMUX_FTM2_SEL1(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM2_SEL1_SHIFT))&TRGMUX_FTM2_SEL1_MASK)
#define TRGMUX_FTM2_SEL2_MASK                    0x3F0000u
#define TRGMUX_FTM2_SEL2_SHIFT                   16
#define TRGMUX_FTM2_SEL2_WIDTH                   6
#define TRGMUX_FTM2_SEL2(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM2_SEL2_SHIFT))&TRGMUX_FTM2_SEL2_MASK)
#define TRGMUX_FTM2_SEL3_MASK                    0x3F000000u
#define TRGMUX_FTM2_SEL3_SHIFT                   24
#define TRGMUX_FTM2_SEL3_WIDTH                   6
#define TRGMUX_FTM2_SEL3(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM2_SEL3_SHIFT))&TRGMUX_FTM2_SEL3_MASK)
#define TRGMUX_FTM2_LK_MASK                      0x80000000u
#define TRGMUX_FTM2_LK_SHIFT                     31
#define TRGMUX_FTM2_LK_WIDTH                     1
#define TRGMUX_FTM2_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_FTM2_LK_SHIFT))&TRGMUX_FTM2_LK_MASK)
/* FTM3 Bit Fields */
#define TRGMUX_FTM3_SEL0_MASK                    0x3Fu
#define TRGMUX_FTM3_SEL0_SHIFT                   0
#define TRGMUX_FTM3_SEL0_WIDTH                   6
#define TRGMUX_FTM3_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM3_SEL0_SHIFT))&TRGMUX_FTM3_SEL0_MASK)
#define TRGMUX_FTM3_SEL1_MASK                    0x3F00u
#define TRGMUX_FTM3_SEL1_SHIFT                   8
#define TRGMUX_FTM3_SEL1_WIDTH                   6
#define TRGMUX_FTM3_SEL1(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM3_SEL1_SHIFT))&TRGMUX_FTM3_SEL1_MASK)
#define TRGMUX_FTM3_SEL2_MASK                    0x3F0000u
#define TRGMUX_FTM3_SEL2_SHIFT                   16
#define TRGMUX_FTM3_SEL2_WIDTH                   6
#define TRGMUX_FTM3_SEL2(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM3_SEL2_SHIFT))&TRGMUX_FTM3_SEL2_MASK)
#define TRGMUX_FTM3_SEL3_MASK                    0x3F000000u
#define TRGMUX_FTM3_SEL3_SHIFT                   24
#define TRGMUX_FTM3_SEL3_WIDTH                   6
#define TRGMUX_FTM3_SEL3(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FTM3_SEL3_SHIFT))&TRGMUX_FTM3_SEL3_MASK)
#define TRGMUX_FTM3_LK_MASK                      0x80000000u
#define TRGMUX_FTM3_LK_SHIFT                     31
#define TRGMUX_FTM3_LK_WIDTH                     1
#define TRGMUX_FTM3_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_FTM3_LK_SHIFT))&TRGMUX_FTM3_LK_MASK)
/* PDB0 Bit Fields */
#define TRGMUX_PDB0_SEL0_MASK                    0x3Fu
#define TRGMUX_PDB0_SEL0_SHIFT                   0
#define TRGMUX_PDB0_SEL0_WIDTH                   6
#define TRGMUX_PDB0_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_PDB0_SEL0_SHIFT))&TRGMUX_PDB0_SEL0_MASK)
#define TRGMUX_PDB0_LK_MASK                      0x80000000u
#define TRGMUX_PDB0_LK_SHIFT                     31
#define TRGMUX_PDB0_LK_WIDTH                     1
#define TRGMUX_PDB0_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_PDB0_LK_SHIFT))&TRGMUX_PDB0_LK_MASK)
/* PDB1 Bit Fields */
#define TRGMUX_PDB1_SEL0_MASK                    0x3Fu
#define TRGMUX_PDB1_SEL0_SHIFT                   0
#define TRGMUX_PDB1_SEL0_WIDTH                   6
#define TRGMUX_PDB1_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_PDB1_SEL0_SHIFT))&TRGMUX_PDB1_SEL0_MASK)
#define TRGMUX_PDB1_LK_MASK                      0x80000000u
#define TRGMUX_PDB1_LK_SHIFT                     31
#define TRGMUX_PDB1_LK_WIDTH                     1
#define TRGMUX_PDB1_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_PDB1_LK_SHIFT))&TRGMUX_PDB1_LK_MASK)
/* DUMMY16 Bit Fields */
#define TRGMUX_DUMMY16_SEL0_MASK                 0x3Fu
#define TRGMUX_DUMMY16_SEL0_SHIFT                0
#define TRGMUX_DUMMY16_SEL0_WIDTH                6
#define TRGMUX_DUMMY16_SEL0(x)                   (((uint32)(((uint32)(x))<<TRGMUX_DUMMY16_SEL0_SHIFT))&TRGMUX_DUMMY16_SEL0_MASK)
#define TRGMUX_DUMMY16_LK_MASK                   0x80000000u
#define TRGMUX_DUMMY16_LK_SHIFT                  31
#define TRGMUX_DUMMY16_LK_WIDTH                  1
#define TRGMUX_DUMMY16_LK(x)                     (((uint32)(((uint32)(x))<<TRGMUX_DUMMY16_LK_SHIFT))&TRGMUX_DUMMY16_LK_MASK)
/* FLEXIO Bit Fields */
#define TRGMUX_FLEXIO_SEL0_MASK                  0x3Fu
#define TRGMUX_FLEXIO_SEL0_SHIFT                 0
#define TRGMUX_FLEXIO_SEL0_WIDTH                 6
#define TRGMUX_FLEXIO_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_FLEXIO_SEL0_SHIFT))&TRGMUX_FLEXIO_SEL0_MASK)
#define TRGMUX_FLEXIO_SEL1_MASK                  0x3F00u
#define TRGMUX_FLEXIO_SEL1_SHIFT                 8
#define TRGMUX_FLEXIO_SEL1_WIDTH                 6
#define TRGMUX_FLEXIO_SEL1(x)                    (((uint32)(((uint32)(x))<<TRGMUX_FLEXIO_SEL1_SHIFT))&TRGMUX_FLEXIO_SEL1_MASK)
#define TRGMUX_FLEXIO_SEL2_MASK                  0x3F0000u
#define TRGMUX_FLEXIO_SEL2_SHIFT                 16
#define TRGMUX_FLEXIO_SEL2_WIDTH                 6
#define TRGMUX_FLEXIO_SEL2(x)                    (((uint32)(((uint32)(x))<<TRGMUX_FLEXIO_SEL2_SHIFT))&TRGMUX_FLEXIO_SEL2_MASK)
#define TRGMUX_FLEXIO_SEL3_MASK                  0x3F000000u
#define TRGMUX_FLEXIO_SEL3_SHIFT                 24
#define TRGMUX_FLEXIO_SEL3_WIDTH                 6
#define TRGMUX_FLEXIO_SEL3(x)                    (((uint32)(((uint32)(x))<<TRGMUX_FLEXIO_SEL3_SHIFT))&TRGMUX_FLEXIO_SEL3_MASK)
#define TRGMUX_FLEXIO_LK_MASK                    0x80000000u
#define TRGMUX_FLEXIO_LK_SHIFT                   31
#define TRGMUX_FLEXIO_LK_WIDTH                   1
#define TRGMUX_FLEXIO_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_FLEXIO_LK_SHIFT))&TRGMUX_FLEXIO_LK_MASK)
/* LPIT Bit Fields */
#define TRGMUX_LPIT_SEL0_MASK                    0x3Fu
#define TRGMUX_LPIT_SEL0_SHIFT                   0
#define TRGMUX_LPIT_SEL0_WIDTH                   6
#define TRGMUX_LPIT_SEL0(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPIT_SEL0_SHIFT))&TRGMUX_LPIT_SEL0_MASK)
#define TRGMUX_LPIT_SEL1_MASK                    0x3F00u
#define TRGMUX_LPIT_SEL1_SHIFT                   8
#define TRGMUX_LPIT_SEL1_WIDTH                   6
#define TRGMUX_LPIT_SEL1(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPIT_SEL1_SHIFT))&TRGMUX_LPIT_SEL1_MASK)
#define TRGMUX_LPIT_SEL2_MASK                    0x3F0000u
#define TRGMUX_LPIT_SEL2_SHIFT                   16
#define TRGMUX_LPIT_SEL2_WIDTH                   6
#define TRGMUX_LPIT_SEL2(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPIT_SEL2_SHIFT))&TRGMUX_LPIT_SEL2_MASK)
#define TRGMUX_LPIT_SEL3_MASK                    0x3F000000u
#define TRGMUX_LPIT_SEL3_SHIFT                   24
#define TRGMUX_LPIT_SEL3_WIDTH                   6
#define TRGMUX_LPIT_SEL3(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPIT_SEL3_SHIFT))&TRGMUX_LPIT_SEL3_MASK)
#define TRGMUX_LPIT_LK_MASK                      0x80000000u
#define TRGMUX_LPIT_LK_SHIFT                     31
#define TRGMUX_LPIT_LK_WIDTH                     1
#define TRGMUX_LPIT_LK(x)                        (((uint32)(((uint32)(x))<<TRGMUX_LPIT_LK_SHIFT))&TRGMUX_LPIT_LK_MASK)
/* LPUART0 Bit Fields */
#define TRGMUX_LPUART0_SEL0_MASK                 0x3Fu
#define TRGMUX_LPUART0_SEL0_SHIFT                0
#define TRGMUX_LPUART0_SEL0_WIDTH                6
#define TRGMUX_LPUART0_SEL0(x)                   (((uint32)(((uint32)(x))<<TRGMUX_LPUART0_SEL0_SHIFT))&TRGMUX_LPUART0_SEL0_MASK)
#define TRGMUX_LPUART0_LK_MASK                   0x80000000u
#define TRGMUX_LPUART0_LK_SHIFT                  31
#define TRGMUX_LPUART0_LK_WIDTH                  1
#define TRGMUX_LPUART0_LK(x)                     (((uint32)(((uint32)(x))<<TRGMUX_LPUART0_LK_SHIFT))&TRGMUX_LPUART0_LK_MASK)
/* LPUART1 Bit Fields */
#define TRGMUX_LPUART1_SEL0_MASK                 0x3Fu
#define TRGMUX_LPUART1_SEL0_SHIFT                0
#define TRGMUX_LPUART1_SEL0_WIDTH                6
#define TRGMUX_LPUART1_SEL0(x)                   (((uint32)(((uint32)(x))<<TRGMUX_LPUART1_SEL0_SHIFT))&TRGMUX_LPUART1_SEL0_MASK)
#define TRGMUX_LPUART1_LK_MASK                   0x80000000u
#define TRGMUX_LPUART1_LK_SHIFT                  31
#define TRGMUX_LPUART1_LK_WIDTH                  1
#define TRGMUX_LPUART1_LK(x)                     (((uint32)(((uint32)(x))<<TRGMUX_LPUART1_LK_SHIFT))&TRGMUX_LPUART1_LK_MASK)
/* LPI2C0 Bit Fields */
#define TRGMUX_LPI2C0_SEL0_MASK                  0x3Fu
#define TRGMUX_LPI2C0_SEL0_SHIFT                 0
#define TRGMUX_LPI2C0_SEL0_WIDTH                 6
#define TRGMUX_LPI2C0_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_LPI2C0_SEL0_SHIFT))&TRGMUX_LPI2C0_SEL0_MASK)
#define TRGMUX_LPI2C0_LK_MASK                    0x80000000u
#define TRGMUX_LPI2C0_LK_SHIFT                   31
#define TRGMUX_LPI2C0_LK_WIDTH                   1
#define TRGMUX_LPI2C0_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPI2C0_LK_SHIFT))&TRGMUX_LPI2C0_LK_MASK)
/* LPI2C1 Bit Fields */
#define TRGMUX_LPI2C1_SEL0_MASK                  0x3Fu
#define TRGMUX_LPI2C1_SEL0_SHIFT                 0
#define TRGMUX_LPI2C1_SEL0_WIDTH                 6
#define TRGMUX_LPI2C1_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_LPI2C1_SEL0_SHIFT))&TRGMUX_LPI2C1_SEL0_MASK)
#define TRGMUX_LPI2C1_LK_MASK                    0x80000000u
#define TRGMUX_LPI2C1_LK_SHIFT                   31
#define TRGMUX_LPI2C1_LK_WIDTH                   1
#define TRGMUX_LPI2C1_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPI2C1_LK_SHIFT))&TRGMUX_LPI2C1_LK_MASK)
/* LPSPI0 Bit Fields */
#define TRGMUX_LPSPI0_SEL0_MASK                  0x3Fu
#define TRGMUX_LPSPI0_SEL0_SHIFT                 0
#define TRGMUX_LPSPI0_SEL0_WIDTH                 6
#define TRGMUX_LPSPI0_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_LPSPI0_SEL0_SHIFT))&TRGMUX_LPSPI0_SEL0_MASK)
#define TRGMUX_LPSPI0_LK_MASK                    0x80000000u
#define TRGMUX_LPSPI0_LK_SHIFT                   31
#define TRGMUX_LPSPI0_LK_WIDTH                   1
#define TRGMUX_LPSPI0_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPSPI0_LK_SHIFT))&TRGMUX_LPSPI0_LK_MASK)
/* LPSPI1 Bit Fields */
#define TRGMUX_LPSPI1_SEL0_MASK                  0x3Fu
#define TRGMUX_LPSPI1_SEL0_SHIFT                 0
#define TRGMUX_LPSPI1_SEL0_WIDTH                 6
#define TRGMUX_LPSPI1_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_LPSPI1_SEL0_SHIFT))&TRGMUX_LPSPI1_SEL0_MASK)
#define TRGMUX_LPSPI1_LK_MASK                    0x80000000u
#define TRGMUX_LPSPI1_LK_SHIFT                   31
#define TRGMUX_LPSPI1_LK_WIDTH                   1
#define TRGMUX_LPSPI1_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPSPI1_LK_SHIFT))&TRGMUX_LPSPI1_LK_MASK)
/* LPTMR0 Bit Fields */
#define TRGMUX_LPTMR0_SEL0_MASK                  0x3Fu
#define TRGMUX_LPTMR0_SEL0_SHIFT                 0
#define TRGMUX_LPTMR0_SEL0_WIDTH                 6
#define TRGMUX_LPTMR0_SEL0(x)                    (((uint32)(((uint32)(x))<<TRGMUX_LPTMR0_SEL0_SHIFT))&TRGMUX_LPTMR0_SEL0_MASK)
#define TRGMUX_LPTMR0_LK_MASK                    0x80000000u
#define TRGMUX_LPTMR0_LK_SHIFT                   31
#define TRGMUX_LPTMR0_LK_WIDTH                   1
#define TRGMUX_LPTMR0_LK(x)                      (((uint32)(((uint32)(x))<<TRGMUX_LPTMR0_LK_SHIFT))&TRGMUX_LPTMR0_LK_MASK)

/*!
 * @}
 */ /* end of group TRGMUX_Register_Masks */


/* TRGMUX - Peripheral instance base addresses */
/** Peripheral TRGMUX base address */
#define TRGMUX_BASE                              (0x40063000u)
/** Peripheral TRGMUX base pointer */
#define TRGMUX                                   ((TRGMUX_Type *)TRGMUX_BASE)
#define TRGMUX_BASE_PTR                          (TRGMUX)
/** Array initializer of TRGMUX peripheral base addresses */
#define TRGMUX_BASE_ADDRS                        { TRGMUX_BASE }
/** Array initializer of TRGMUX peripheral base pointers */
#define TRGMUX_BASE_PTRS                         { TRGMUX }

/* ----------------------------------------------------------------------------
   -- TRGMUX - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TRGMUX_Register_Accessor_Macros TRGMUX - Register accessor macros
 * @{
 */


/* TRGMUX - Register instance definitions */
/* TRGMUX */
#define TRGMUX_DMAMUX_CH0                        TRGMUX_DMAMUX_CH0_REG(TRGMUX)
#define TRGMUX_XB_OUT0_3                         TRGMUX_XB_OUT0_3_REG(TRGMUX)
#define TRGMUX_XB_OUT4_7                         TRGMUX_XB_OUT4_7_REG(TRGMUX)
#define TRGMUX_ADC0                              TRGMUX_ADC0_REG(TRGMUX)
#define TRGMUX_ADC1                              TRGMUX_ADC1_REG(TRGMUX)
#define TRGMUX_DUMMY5                            TRGMUX_DUMMY5_REG(TRGMUX)
#define TRGMUX_DUMMY6                            TRGMUX_DUMMY6_REG(TRGMUX)
#define TRGMUX_CMP0                              TRGMUX_CMP0_REG(TRGMUX)
#define TRGMUX_DUMMY8                            TRGMUX_DUMMY8_REG(TRGMUX)
#define TRGMUX_DUMMY9                            TRGMUX_DUMMY9_REG(TRGMUX)
#define TRGMUX_FTM0                              TRGMUX_FTM0_REG(TRGMUX)
#define TRGMUX_FTM1                              TRGMUX_FTM1_REG(TRGMUX)
#define TRGMUX_FTM2                              TRGMUX_FTM2_REG(TRGMUX)
#define TRGMUX_FTM3                              TRGMUX_FTM3_REG(TRGMUX)
#define TRGMUX_PDB0                              TRGMUX_PDB0_REG(TRGMUX)
#define TRGMUX_PDB1                              TRGMUX_PDB1_REG(TRGMUX)
#define TRGMUX_DUMMY16                           TRGMUX_DUMMY16_REG(TRGMUX)
#define TRGMUX_FLEXIO                            TRGMUX_FLEXIO_REG(TRGMUX)
#define TRGMUX_LPIT                              TRGMUX_LPIT_REG(TRGMUX)
#define TRGMUX_LPUART0                           TRGMUX_LPUART0_REG(TRGMUX)
#define TRGMUX_LPUART1                           TRGMUX_LPUART1_REG(TRGMUX)
#define TRGMUX_LPI2C0                            TRGMUX_LPI2C0_REG(TRGMUX)
#define TRGMUX_LPI2C1                            TRGMUX_LPI2C1_REG(TRGMUX)
#define TRGMUX_LPSPI0                            TRGMUX_LPSPI0_REG(TRGMUX)
#define TRGMUX_LPSPI1                            TRGMUX_LPSPI1_REG(TRGMUX)
#define TRGMUX_LPTMR0                            TRGMUX_LPTMR0_REG(TRGMUX)

/*!
 * @}
 */ /* end of group TRGMUX_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group TRGMUX_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- WDOG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WDOG_Peripheral_Access_Layer WDOG Peripheral Access Layer
 * @{
 */

/** WDOG - Register Layout Typedef */
typedef struct {
  __IO uint32 CS;                                  /**< Watchdog Control and Status Register, offset: 0x0 */
  __IO uint32 CNT;                                 /**< Watchdog Counter Register, offset: 0x4 */
  __IO uint32 TOVAL;                               /**< Watchdog Timeout Value Register, offset: 0x8 */
  __IO uint32 WIN;                                 /**< Watchdog Window Register, offset: 0xC */
} WDOG_Type, *WDOG_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- WDOG - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WDOG_Register_Accessor_Macros WDOG - Register accessor macros
 * @{
 */


/* WDOG - Register accessors */
#define WDOG_CS_REG(base)                        ((base)->CS)
#define WDOG_CNT_REG(base)                       ((base)->CNT)
#define WDOG_TOVAL_REG(base)                     ((base)->TOVAL)
#define WDOG_WIN_REG(base)                       ((base)->WIN)

/*!
 * @}
 */ /* end of group WDOG_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- WDOG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WDOG_Register_Masks WDOG Register Masks
 * @{
 */

/* CS Bit Fields */
#define WDOG_CS_STOP_MASK                        0x1u
#define WDOG_CS_STOP_SHIFT                       0
#define WDOG_CS_STOP_WIDTH                       1
#define WDOG_CS_STOP(x)                          (((uint32)(((uint32)(x))<<WDOG_CS_STOP_SHIFT))&WDOG_CS_STOP_MASK)
#define WDOG_CS_WAIT_MASK                        0x2u
#define WDOG_CS_WAIT_SHIFT                       1
#define WDOG_CS_WAIT_WIDTH                       1
#define WDOG_CS_WAIT(x)                          (((uint32)(((uint32)(x))<<WDOG_CS_WAIT_SHIFT))&WDOG_CS_WAIT_MASK)
#define WDOG_CS_DBG_MASK                         0x4u
#define WDOG_CS_DBG_SHIFT                        2
#define WDOG_CS_DBG_WIDTH                        1
#define WDOG_CS_DBG(x)                           (((uint32)(((uint32)(x))<<WDOG_CS_DBG_SHIFT))&WDOG_CS_DBG_MASK)
#define WDOG_CS_TST_MASK                         0x18u
#define WDOG_CS_TST_SHIFT                        3
#define WDOG_CS_TST_WIDTH                        2
#define WDOG_CS_TST(x)                           (((uint32)(((uint32)(x))<<WDOG_CS_TST_SHIFT))&WDOG_CS_TST_MASK)
#define WDOG_CS_UPDATE_MASK                      0x20u
#define WDOG_CS_UPDATE_SHIFT                     5
#define WDOG_CS_UPDATE_WIDTH                     1
#define WDOG_CS_UPDATE(x)                        (((uint32)(((uint32)(x))<<WDOG_CS_UPDATE_SHIFT))&WDOG_CS_UPDATE_MASK)
#define WDOG_CS_INT_MASK                         0x40u
#define WDOG_CS_INT_SHIFT                        6
#define WDOG_CS_INT_WIDTH                        1
#define WDOG_CS_INT(x)                           (((uint32)(((uint32)(x))<<WDOG_CS_INT_SHIFT))&WDOG_CS_INT_MASK)
#define WDOG_CS_EN_MASK                          0x80u
#define WDOG_CS_EN_SHIFT                         7
#define WDOG_CS_EN_WIDTH                         1
#define WDOG_CS_EN(x)                            (((uint32)(((uint32)(x))<<WDOG_CS_EN_SHIFT))&WDOG_CS_EN_MASK)
#define WDOG_CS_CLK_MASK                         0x300u
#define WDOG_CS_CLK_SHIFT                        8
#define WDOG_CS_CLK_WIDTH                        2
#define WDOG_CS_CLK(x)                           (((uint32)(((uint32)(x))<<WDOG_CS_CLK_SHIFT))&WDOG_CS_CLK_MASK)
#define WDOG_CS_PRES_MASK                        0x1000u
#define WDOG_CS_PRES_SHIFT                       12
#define WDOG_CS_PRES_WIDTH                       1
#define WDOG_CS_PRES(x)                          (((uint32)(((uint32)(x))<<WDOG_CS_PRES_SHIFT))&WDOG_CS_PRES_MASK)
#define WDOG_CS_FLG_MASK                         0x4000u
#define WDOG_CS_FLG_SHIFT                        14
#define WDOG_CS_FLG_WIDTH                        1
#define WDOG_CS_FLG(x)                           (((uint32)(((uint32)(x))<<WDOG_CS_FLG_SHIFT))&WDOG_CS_FLG_MASK)
#define WDOG_CS_WIN_MASK                         0x8000u
#define WDOG_CS_WIN_SHIFT                        15
#define WDOG_CS_WIN_WIDTH                        1
#define WDOG_CS_WIN(x)                           (((uint32)(((uint32)(x))<<WDOG_CS_WIN_SHIFT))&WDOG_CS_WIN_MASK)
/* CNT Bit Fields */
#define WDOG_CNT_CNTLOW_MASK                     0xFFu
#define WDOG_CNT_CNTLOW_SHIFT                    0
#define WDOG_CNT_CNTLOW_WIDTH                    8
#define WDOG_CNT_CNTLOW(x)                       (((uint32)(((uint32)(x))<<WDOG_CNT_CNTLOW_SHIFT))&WDOG_CNT_CNTLOW_MASK)
#define WDOG_CNT_CNTHIGH_MASK                    0xFF00u
#define WDOG_CNT_CNTHIGH_SHIFT                   8
#define WDOG_CNT_CNTHIGH_WIDTH                   8
#define WDOG_CNT_CNTHIGH(x)                      (((uint32)(((uint32)(x))<<WDOG_CNT_CNTHIGH_SHIFT))&WDOG_CNT_CNTHIGH_MASK)
/* TOVAL Bit Fields */
#define WDOG_TOVAL_TOVALLOW_MASK                 0xFFu
#define WDOG_TOVAL_TOVALLOW_SHIFT                0
#define WDOG_TOVAL_TOVALLOW_WIDTH                8
#define WDOG_TOVAL_TOVALLOW(x)                   (((uint32)(((uint32)(x))<<WDOG_TOVAL_TOVALLOW_SHIFT))&WDOG_TOVAL_TOVALLOW_MASK)
#define WDOG_TOVAL_TOVALHIGH_MASK                0xFF00u
#define WDOG_TOVAL_TOVALHIGH_SHIFT               8
#define WDOG_TOVAL_TOVALHIGH_WIDTH               8
#define WDOG_TOVAL_TOVALHIGH(x)                  (((uint32)(((uint32)(x))<<WDOG_TOVAL_TOVALHIGH_SHIFT))&WDOG_TOVAL_TOVALHIGH_MASK)
/* WIN Bit Fields */
#define WDOG_WIN_WINLOW_MASK                     0xFFu
#define WDOG_WIN_WINLOW_SHIFT                    0
#define WDOG_WIN_WINLOW_WIDTH                    8
#define WDOG_WIN_WINLOW(x)                       (((uint32)(((uint32)(x))<<WDOG_WIN_WINLOW_SHIFT))&WDOG_WIN_WINLOW_MASK)
#define WDOG_WIN_WINHIGH_MASK                    0xFF00u
#define WDOG_WIN_WINHIGH_SHIFT                   8
#define WDOG_WIN_WINHIGH_WIDTH                   8
#define WDOG_WIN_WINHIGH(x)                      (((uint32)(((uint32)(x))<<WDOG_WIN_WINHIGH_SHIFT))&WDOG_WIN_WINHIGH_MASK)

/*!
 * @}
 */ /* end of group WDOG_Register_Masks */


/* WDOG - Peripheral instance base addresses */
/** Peripheral WDOG base address */
#define WDOG_BASE                                (0x40052000u)
/** Peripheral WDOG base pointer */
#define WDOG                                     ((WDOG_Type *)WDOG_BASE)
#define WDOG_BASE_PTR                            (WDOG)
/** Array initializer of WDOG peripheral base addresses */
#define WDOG_BASE_ADDRS                          { WDOG_BASE }
/** Array initializer of WDOG peripheral base pointers */
#define WDOG_BASE_PTRS                           { WDOG }

/* ----------------------------------------------------------------------------
   -- WDOG - Register accessor macros
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WDOG_Register_Accessor_Macros WDOG - Register accessor macros
 * @{
 */


/* WDOG - Register instance definitions */
/* WDOG */
#define WDOG_CS                                  WDOG_CS_REG(WDOG)
#define WDOG_CNT                                 WDOG_CNT_REG(WDOG)
#define WDOG_TOVAL                               WDOG_TOVAL_REG(WDOG)
#define WDOG_WIN                                 WDOG_WIN_REG(WDOG)

/*!
 * @}
 */ /* end of group WDOG_Register_Accessor_Macros */


/*!
 * @}
 */ /* end of group WDOG_Peripheral_Access_Layer */


/*!
 * @}
 */ /* end of group Peripheral_access_layer */


/* ----------------------------------------------------------------------------
   -- Backward Compatibility
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Backward_Compatibility_Symbols Backward Compatibility
 * @{
 */

/* No backward compatibility issues. */

/*!
 * @}
 */ /* end of group Backward_Compatibility_Symbols */


#else /* #if !defined(S32K144_H_) */
  /* There is already included the same memory map. Check if it is compatible (has the same major version) */
  #if (MCU_MEM_MAP_VERSION != 0x0100u)
    #if (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING))
      #warning There are included two not compatible versions of memory maps. Please check possible differences.
    #endif /* (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING)) */
  #endif /* (MCU_MEM_MAP_VERSION != 0x0100u) */
#endif  /* #if !defined(S32K144_H_) */

/* S32K144.h, eof. */
